syntax = "proto3";
package Nrmk.IndyFramework;


//////////////////////////EtherCAT/////////////////////////
message MasterStatus {
  uint32 status = 1;
}

message SlaveStatus {
  repeated uint32 status = 1;
}

message EcatDomainStatus {
  uint32 status = 1;
}

message EcatSystemReady {
  repeated bool ready = 1;
}

message EcatServoOn {
  repeated bool servo = 1;
}

message SlaveTypeNum {
  uint32 num_servo = 1;
  uint32 num_ioboard = 2;
  uint32 num_endtool = 3;
  uint32 num_dio = 4;
}

//////////////////////////Servo/////////////////////////
message ServoIndex {
  uint32 servoIndex = 1;
}

message EcatIndex {
  uint32 ecatIndex = 1;
}

message ServoTx {
  uint32 statusWord = 1;
  int32 modeOpDisp = 2;
  int32 actualPosition = 3;
  int32 actualVelocity = 4;
  int32 actualTorque = 5;
}

message ServoRx {
    uint32 controlWord = 1;
    int32 modeOp = 2;
    int64 targetPosition = 3;
    int32 targetVelocity = 4;
    int32 targetTorque = 5;
}

message ServoTxIndex {
    uint32 servoIndex = 1;
    ServoTx tx = 2;
}

message ServoRxIndex {
    uint32 servoIndex = 1;
    ServoRx rx = 2;
}

message ServoTxKeba {
  uint32 statusWord = 1;
  uint32 statusWord2 = 2;
  uint32 statusWord3 = 3;
  int32 actualPosition = 4;
  int32 actualPosition2 = 5;
  int32 actualPosition3 = 6;
  int32 actualVelocity = 7;
  int32 actualVelocity2 = 8;
  int32 actualVelocity3 = 9;
}

message ServoRxKeba {
    uint32 controlWord = 1;
    uint32 controlWord2 = 2;
    uint32 controlWord3 = 3;
    int64 targetPosition = 4;
    int64 targetPosition2 = 5;
    int64 targetPosition3 = 6;
    int32 targetTorque = 7;
    int32 targetTorque2 = 8;
    int32 targetTorque3 = 9;
}

message ServoRxIndexKeba {
    uint32 servoIndex = 1;
    ServoRxKeba rx = 2;
}

message ServoTemp {
  float temperature = 1;
}

message ServoError {
  uint32 errorCode = 1;
}

message ServoBrake {
  uint32 ecatIndex = 1;
  bool onoff = 2;
}

//////////////////////////Endtool/////////////////////////
message FTSensor {
    int32 fx = 1;
    int32 fy = 2;
    int32 fz = 3;
    int32 tx = 4;
    int32 ty = 5;
    int32 tz = 6;
}

message EndtoolTx {
    uint32 status = 1;
    uint32 button = 2;
    FTSensor ft_sensor = 3;
    uint32 ft_state = 4;
    uint32 ft_error = 5;
}

message EndtoolRx {
    uint32 eqc = 1;
    uint32 gripper = 2;
    uint32 ft_param = 3;
    uint32 led_mode = 4;
    uint32 led_g = 5;
    uint32 led_r = 6;
    uint32 led_b = 7;
}

message EndtoolDockingTx {
    uint32 docking_status = 1;
    uint32 docking_button = 2;
    uint32 docking_dist1 = 3;
    uint32 docking_dist2 = 4;
    uint32 docking_dist3 = 5;
    uint32 docking_dist4 = 6;
    uint32 docking_dist5 = 7;
    uint32 docking_dist6 = 8;
    uint32 docking_dist7 = 9;
    uint32 docking_dist8 = 10;
    uint32 direct_status = 11;
    uint32 direct_button = 12;
    uint32 direct_encoder = 13;
    uint32 joystic1x = 14;
    uint32 joystic1y = 15;
    uint32 joystic2x = 16;
    uint32 joystic2y = 17;
}

//////////////////////////IOBoard/////////////////////////
message IOBoardTx {
    uint32 di5v = 1; // 8ch
    uint32 di24v1 = 2; // 8ch
    uint32 di24v2 = 3; // 8ch
    uint32 ai1 = 4;
    uint32 ai2 = 5;
    FTSensor ft_sensor = 6;
}

message IOBoardRx {
    uint32 do5v = 1; // 8ch
    uint32 do24v1 = 2; // 8ch
    uint32 do24v2 = 3; // 8ch
    uint32 ao1 = 4;
    uint32 ao2 = 5;
    uint32 ft_param = 6;
}

//////////////////////////DIO/////////////////////////
message DIOIndex {
  uint32 dioIndex = 1;
}

message DIODigitalInput {
  uint32 dioIndex = 1;
  repeated uint32 di_list = 2;
}

message DIODigitalOutput {
  uint32 dioIndex = 1;
  repeated uint32 do_list = 2;
}
///////////////////////////SERVO SDO/////////////////////////
message ServoParam {
    uint32 slaveIdx = 1;
    int32 val = 2;
}
message SDOIntVal {
    int32 val = 1;
}
message SDOFloatVal {
    float val = 1;
}
message SDOStrVal {
    string val = 1;
}

//////////////////////////DeviceInfo/////////////////////////
message EtherCATInfo {
  //uint32 num_joints = 1;
  //Response response = 100;
}

/////////////// Agri CamRobot Zero Pos /////////////////////
message RobotZeroCount {
  int32 count = 1;
}