// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ethercat_msgs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ethercat_5fmsgs_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ethercat_5fmsgs_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ethercat_5fmsgs_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ethercat_5fmsgs_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ethercat_5fmsgs_2eproto;
namespace Nrmk {
namespace IndyFramework {
class DIODigitalInput;
struct DIODigitalInputDefaultTypeInternal;
extern DIODigitalInputDefaultTypeInternal _DIODigitalInput_default_instance_;
class DIODigitalOutput;
struct DIODigitalOutputDefaultTypeInternal;
extern DIODigitalOutputDefaultTypeInternal _DIODigitalOutput_default_instance_;
class DIOIndex;
struct DIOIndexDefaultTypeInternal;
extern DIOIndexDefaultTypeInternal _DIOIndex_default_instance_;
class EcatDomainStatus;
struct EcatDomainStatusDefaultTypeInternal;
extern EcatDomainStatusDefaultTypeInternal _EcatDomainStatus_default_instance_;
class EcatIndex;
struct EcatIndexDefaultTypeInternal;
extern EcatIndexDefaultTypeInternal _EcatIndex_default_instance_;
class EcatServoOn;
struct EcatServoOnDefaultTypeInternal;
extern EcatServoOnDefaultTypeInternal _EcatServoOn_default_instance_;
class EcatSystemReady;
struct EcatSystemReadyDefaultTypeInternal;
extern EcatSystemReadyDefaultTypeInternal _EcatSystemReady_default_instance_;
class EndtoolDockingTx;
struct EndtoolDockingTxDefaultTypeInternal;
extern EndtoolDockingTxDefaultTypeInternal _EndtoolDockingTx_default_instance_;
class EndtoolRx;
struct EndtoolRxDefaultTypeInternal;
extern EndtoolRxDefaultTypeInternal _EndtoolRx_default_instance_;
class EndtoolTx;
struct EndtoolTxDefaultTypeInternal;
extern EndtoolTxDefaultTypeInternal _EndtoolTx_default_instance_;
class EtherCATInfo;
struct EtherCATInfoDefaultTypeInternal;
extern EtherCATInfoDefaultTypeInternal _EtherCATInfo_default_instance_;
class FTSensor;
struct FTSensorDefaultTypeInternal;
extern FTSensorDefaultTypeInternal _FTSensor_default_instance_;
class IOBoardRx;
struct IOBoardRxDefaultTypeInternal;
extern IOBoardRxDefaultTypeInternal _IOBoardRx_default_instance_;
class IOBoardTx;
struct IOBoardTxDefaultTypeInternal;
extern IOBoardTxDefaultTypeInternal _IOBoardTx_default_instance_;
class LedDim;
struct LedDimDefaultTypeInternal;
extern LedDimDefaultTypeInternal _LedDim_default_instance_;
class MasterStatus;
struct MasterStatusDefaultTypeInternal;
extern MasterStatusDefaultTypeInternal _MasterStatus_default_instance_;
class RobotZeroCount;
struct RobotZeroCountDefaultTypeInternal;
extern RobotZeroCountDefaultTypeInternal _RobotZeroCount_default_instance_;
class SDOFloatVal;
struct SDOFloatValDefaultTypeInternal;
extern SDOFloatValDefaultTypeInternal _SDOFloatVal_default_instance_;
class SDOIntVal;
struct SDOIntValDefaultTypeInternal;
extern SDOIntValDefaultTypeInternal _SDOIntVal_default_instance_;
class SDOStrVal;
struct SDOStrValDefaultTypeInternal;
extern SDOStrValDefaultTypeInternal _SDOStrVal_default_instance_;
class SRKeyEndtoolRx;
struct SRKeyEndtoolRxDefaultTypeInternal;
extern SRKeyEndtoolRxDefaultTypeInternal _SRKeyEndtoolRx_default_instance_;
class SRKeyEndtoolTx;
struct SRKeyEndtoolTxDefaultTypeInternal;
extern SRKeyEndtoolTxDefaultTypeInternal _SRKeyEndtoolTx_default_instance_;
class ServoBrake;
struct ServoBrakeDefaultTypeInternal;
extern ServoBrakeDefaultTypeInternal _ServoBrake_default_instance_;
class ServoError;
struct ServoErrorDefaultTypeInternal;
extern ServoErrorDefaultTypeInternal _ServoError_default_instance_;
class ServoIndex;
struct ServoIndexDefaultTypeInternal;
extern ServoIndexDefaultTypeInternal _ServoIndex_default_instance_;
class ServoParam;
struct ServoParamDefaultTypeInternal;
extern ServoParamDefaultTypeInternal _ServoParam_default_instance_;
class ServoRx;
struct ServoRxDefaultTypeInternal;
extern ServoRxDefaultTypeInternal _ServoRx_default_instance_;
class ServoRxIndex;
struct ServoRxIndexDefaultTypeInternal;
extern ServoRxIndexDefaultTypeInternal _ServoRxIndex_default_instance_;
class ServoRxIndexKeba;
struct ServoRxIndexKebaDefaultTypeInternal;
extern ServoRxIndexKebaDefaultTypeInternal _ServoRxIndexKeba_default_instance_;
class ServoRxKeba;
struct ServoRxKebaDefaultTypeInternal;
extern ServoRxKebaDefaultTypeInternal _ServoRxKeba_default_instance_;
class ServoTemp;
struct ServoTempDefaultTypeInternal;
extern ServoTempDefaultTypeInternal _ServoTemp_default_instance_;
class ServoTx;
struct ServoTxDefaultTypeInternal;
extern ServoTxDefaultTypeInternal _ServoTx_default_instance_;
class ServoTxIndex;
struct ServoTxIndexDefaultTypeInternal;
extern ServoTxIndexDefaultTypeInternal _ServoTxIndex_default_instance_;
class ServoTxKeba;
struct ServoTxKebaDefaultTypeInternal;
extern ServoTxKebaDefaultTypeInternal _ServoTxKeba_default_instance_;
class SlaveStatus;
struct SlaveStatusDefaultTypeInternal;
extern SlaveStatusDefaultTypeInternal _SlaveStatus_default_instance_;
class SlaveTypeNum;
struct SlaveTypeNumDefaultTypeInternal;
extern SlaveTypeNumDefaultTypeInternal _SlaveTypeNum_default_instance_;
}  // namespace IndyFramework
}  // namespace Nrmk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Nrmk {
namespace IndyFramework {

// ===================================================================


// -------------------------------------------------------------------

class MasterStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.MasterStatus) */ {
 public:
  inline MasterStatus() : MasterStatus(nullptr) {}
  ~MasterStatus() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MasterStatus(::google::protobuf::internal::ConstantInitialized);

  MasterStatus(const MasterStatus& from);
  MasterStatus(MasterStatus&& from) noexcept
    : MasterStatus() {
    *this = ::std::move(from);
  }

  inline MasterStatus& operator=(const MasterStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline MasterStatus& operator=(MasterStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MasterStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const MasterStatus* internal_default_instance() {
    return reinterpret_cast<const MasterStatus*>(
               &_MasterStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MasterStatus& a, MasterStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(MasterStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MasterStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MasterStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MasterStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MasterStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MasterStatus& from) {
    MasterStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MasterStatus* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.MasterStatus";
  }
  protected:
  explicit MasterStatus(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // uint32 status = 1;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.MasterStatus)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SlaveStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SlaveStatus) */ {
 public:
  inline SlaveStatus() : SlaveStatus(nullptr) {}
  ~SlaveStatus() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SlaveStatus(::google::protobuf::internal::ConstantInitialized);

  SlaveStatus(const SlaveStatus& from);
  SlaveStatus(SlaveStatus&& from) noexcept
    : SlaveStatus() {
    *this = ::std::move(from);
  }

  inline SlaveStatus& operator=(const SlaveStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlaveStatus& operator=(SlaveStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SlaveStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const SlaveStatus* internal_default_instance() {
    return reinterpret_cast<const SlaveStatus*>(
               &_SlaveStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SlaveStatus& a, SlaveStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(SlaveStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SlaveStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SlaveStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SlaveStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SlaveStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SlaveStatus& from) {
    SlaveStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlaveStatus* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SlaveStatus";
  }
  protected:
  explicit SlaveStatus(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // repeated uint32 status = 1;
  int status_size() const;
  private:
  int _internal_status_size() const;

  public:
  void clear_status() ;
  ::uint32_t status(int index) const;
  void set_status(int index, ::uint32_t value);
  void add_status(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& status() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_status();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_status() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SlaveStatus)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::uint32_t> status_;
    mutable ::google::protobuf::internal::CachedSize _status_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EcatDomainStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EcatDomainStatus) */ {
 public:
  inline EcatDomainStatus() : EcatDomainStatus(nullptr) {}
  ~EcatDomainStatus() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EcatDomainStatus(::google::protobuf::internal::ConstantInitialized);

  EcatDomainStatus(const EcatDomainStatus& from);
  EcatDomainStatus(EcatDomainStatus&& from) noexcept
    : EcatDomainStatus() {
    *this = ::std::move(from);
  }

  inline EcatDomainStatus& operator=(const EcatDomainStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline EcatDomainStatus& operator=(EcatDomainStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EcatDomainStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const EcatDomainStatus* internal_default_instance() {
    return reinterpret_cast<const EcatDomainStatus*>(
               &_EcatDomainStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EcatDomainStatus& a, EcatDomainStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(EcatDomainStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EcatDomainStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EcatDomainStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EcatDomainStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EcatDomainStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EcatDomainStatus& from) {
    EcatDomainStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EcatDomainStatus* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EcatDomainStatus";
  }
  protected:
  explicit EcatDomainStatus(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // uint32 status = 1;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EcatDomainStatus)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EcatSystemReady final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EcatSystemReady) */ {
 public:
  inline EcatSystemReady() : EcatSystemReady(nullptr) {}
  ~EcatSystemReady() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EcatSystemReady(::google::protobuf::internal::ConstantInitialized);

  EcatSystemReady(const EcatSystemReady& from);
  EcatSystemReady(EcatSystemReady&& from) noexcept
    : EcatSystemReady() {
    *this = ::std::move(from);
  }

  inline EcatSystemReady& operator=(const EcatSystemReady& from) {
    CopyFrom(from);
    return *this;
  }
  inline EcatSystemReady& operator=(EcatSystemReady&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EcatSystemReady& default_instance() {
    return *internal_default_instance();
  }
  static inline const EcatSystemReady* internal_default_instance() {
    return reinterpret_cast<const EcatSystemReady*>(
               &_EcatSystemReady_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EcatSystemReady& a, EcatSystemReady& b) {
    a.Swap(&b);
  }
  inline void Swap(EcatSystemReady* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EcatSystemReady* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EcatSystemReady* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EcatSystemReady>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EcatSystemReady& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EcatSystemReady& from) {
    EcatSystemReady::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EcatSystemReady* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EcatSystemReady";
  }
  protected:
  explicit EcatSystemReady(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadyFieldNumber = 1,
  };
  // repeated bool ready = 1;
  int ready_size() const;
  private:
  int _internal_ready_size() const;

  public:
  void clear_ready() ;
  bool ready(int index) const;
  void set_ready(int index, bool value);
  void add_ready(bool value);
  const ::google::protobuf::RepeatedField<bool>& ready() const;
  ::google::protobuf::RepeatedField<bool>* mutable_ready();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_ready() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_ready();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EcatSystemReady)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<bool> ready_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EcatServoOn final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EcatServoOn) */ {
 public:
  inline EcatServoOn() : EcatServoOn(nullptr) {}
  ~EcatServoOn() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EcatServoOn(::google::protobuf::internal::ConstantInitialized);

  EcatServoOn(const EcatServoOn& from);
  EcatServoOn(EcatServoOn&& from) noexcept
    : EcatServoOn() {
    *this = ::std::move(from);
  }

  inline EcatServoOn& operator=(const EcatServoOn& from) {
    CopyFrom(from);
    return *this;
  }
  inline EcatServoOn& operator=(EcatServoOn&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EcatServoOn& default_instance() {
    return *internal_default_instance();
  }
  static inline const EcatServoOn* internal_default_instance() {
    return reinterpret_cast<const EcatServoOn*>(
               &_EcatServoOn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(EcatServoOn& a, EcatServoOn& b) {
    a.Swap(&b);
  }
  inline void Swap(EcatServoOn* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EcatServoOn* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EcatServoOn* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EcatServoOn>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EcatServoOn& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EcatServoOn& from) {
    EcatServoOn::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EcatServoOn* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EcatServoOn";
  }
  protected:
  explicit EcatServoOn(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServoFieldNumber = 1,
  };
  // repeated bool servo = 1;
  int servo_size() const;
  private:
  int _internal_servo_size() const;

  public:
  void clear_servo() ;
  bool servo(int index) const;
  void set_servo(int index, bool value);
  void add_servo(bool value);
  const ::google::protobuf::RepeatedField<bool>& servo() const;
  ::google::protobuf::RepeatedField<bool>* mutable_servo();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_servo() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_servo();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EcatServoOn)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<bool> servo_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SlaveTypeNum final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SlaveTypeNum) */ {
 public:
  inline SlaveTypeNum() : SlaveTypeNum(nullptr) {}
  ~SlaveTypeNum() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SlaveTypeNum(::google::protobuf::internal::ConstantInitialized);

  SlaveTypeNum(const SlaveTypeNum& from);
  SlaveTypeNum(SlaveTypeNum&& from) noexcept
    : SlaveTypeNum() {
    *this = ::std::move(from);
  }

  inline SlaveTypeNum& operator=(const SlaveTypeNum& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlaveTypeNum& operator=(SlaveTypeNum&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SlaveTypeNum& default_instance() {
    return *internal_default_instance();
  }
  static inline const SlaveTypeNum* internal_default_instance() {
    return reinterpret_cast<const SlaveTypeNum*>(
               &_SlaveTypeNum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SlaveTypeNum& a, SlaveTypeNum& b) {
    a.Swap(&b);
  }
  inline void Swap(SlaveTypeNum* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SlaveTypeNum* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SlaveTypeNum* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SlaveTypeNum>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SlaveTypeNum& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SlaveTypeNum& from) {
    SlaveTypeNum::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlaveTypeNum* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SlaveTypeNum";
  }
  protected:
  explicit SlaveTypeNum(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumServoFieldNumber = 1,
    kNumIoboardFieldNumber = 2,
    kNumEndtoolFieldNumber = 3,
    kNumDioFieldNumber = 4,
  };
  // uint32 num_servo = 1;
  void clear_num_servo() ;
  ::uint32_t num_servo() const;
  void set_num_servo(::uint32_t value);

  private:
  ::uint32_t _internal_num_servo() const;
  void _internal_set_num_servo(::uint32_t value);

  public:
  // uint32 num_ioboard = 2;
  void clear_num_ioboard() ;
  ::uint32_t num_ioboard() const;
  void set_num_ioboard(::uint32_t value);

  private:
  ::uint32_t _internal_num_ioboard() const;
  void _internal_set_num_ioboard(::uint32_t value);

  public:
  // uint32 num_endtool = 3;
  void clear_num_endtool() ;
  ::uint32_t num_endtool() const;
  void set_num_endtool(::uint32_t value);

  private:
  ::uint32_t _internal_num_endtool() const;
  void _internal_set_num_endtool(::uint32_t value);

  public:
  // uint32 num_dio = 4;
  void clear_num_dio() ;
  ::uint32_t num_dio() const;
  void set_num_dio(::uint32_t value);

  private:
  ::uint32_t _internal_num_dio() const;
  void _internal_set_num_dio(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SlaveTypeNum)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t num_servo_;
    ::uint32_t num_ioboard_;
    ::uint32_t num_endtool_;
    ::uint32_t num_dio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoIndex final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoIndex) */ {
 public:
  inline ServoIndex() : ServoIndex(nullptr) {}
  ~ServoIndex() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoIndex(::google::protobuf::internal::ConstantInitialized);

  ServoIndex(const ServoIndex& from);
  ServoIndex(ServoIndex&& from) noexcept
    : ServoIndex() {
    *this = ::std::move(from);
  }

  inline ServoIndex& operator=(const ServoIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoIndex& operator=(ServoIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoIndex* internal_default_instance() {
    return reinterpret_cast<const ServoIndex*>(
               &_ServoIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ServoIndex& a, ServoIndex& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoIndex* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoIndex& from) {
    ServoIndex::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoIndex* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoIndex";
  }
  protected:
  explicit ServoIndex(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServoIndexFieldNumber = 1,
  };
  // uint32 servoIndex = 1;
  void clear_servoindex() ;
  ::uint32_t servoindex() const;
  void set_servoindex(::uint32_t value);

  private:
  ::uint32_t _internal_servoindex() const;
  void _internal_set_servoindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoIndex)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t servoindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EcatIndex final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EcatIndex) */ {
 public:
  inline EcatIndex() : EcatIndex(nullptr) {}
  ~EcatIndex() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EcatIndex(::google::protobuf::internal::ConstantInitialized);

  EcatIndex(const EcatIndex& from);
  EcatIndex(EcatIndex&& from) noexcept
    : EcatIndex() {
    *this = ::std::move(from);
  }

  inline EcatIndex& operator=(const EcatIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline EcatIndex& operator=(EcatIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EcatIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const EcatIndex* internal_default_instance() {
    return reinterpret_cast<const EcatIndex*>(
               &_EcatIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(EcatIndex& a, EcatIndex& b) {
    a.Swap(&b);
  }
  inline void Swap(EcatIndex* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EcatIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EcatIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EcatIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EcatIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EcatIndex& from) {
    EcatIndex::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EcatIndex* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EcatIndex";
  }
  protected:
  explicit EcatIndex(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEcatIndexFieldNumber = 1,
  };
  // uint32 ecatIndex = 1;
  void clear_ecatindex() ;
  ::uint32_t ecatindex() const;
  void set_ecatindex(::uint32_t value);

  private:
  ::uint32_t _internal_ecatindex() const;
  void _internal_set_ecatindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EcatIndex)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t ecatindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoTx) */ {
 public:
  inline ServoTx() : ServoTx(nullptr) {}
  ~ServoTx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoTx(::google::protobuf::internal::ConstantInitialized);

  ServoTx(const ServoTx& from);
  ServoTx(ServoTx&& from) noexcept
    : ServoTx() {
    *this = ::std::move(from);
  }

  inline ServoTx& operator=(const ServoTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoTx& operator=(ServoTx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoTx* internal_default_instance() {
    return reinterpret_cast<const ServoTx*>(
               &_ServoTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ServoTx& a, ServoTx& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoTx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoTx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoTx& from) {
    ServoTx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoTx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoTx";
  }
  protected:
  explicit ServoTx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusWordFieldNumber = 1,
    kModeOpDispFieldNumber = 2,
    kActualPositionFieldNumber = 3,
    kActualVelocityFieldNumber = 4,
    kActualTorqueFieldNumber = 5,
  };
  // uint32 statusWord = 1;
  void clear_statusword() ;
  ::uint32_t statusword() const;
  void set_statusword(::uint32_t value);

  private:
  ::uint32_t _internal_statusword() const;
  void _internal_set_statusword(::uint32_t value);

  public:
  // int32 modeOpDisp = 2;
  void clear_modeopdisp() ;
  ::int32_t modeopdisp() const;
  void set_modeopdisp(::int32_t value);

  private:
  ::int32_t _internal_modeopdisp() const;
  void _internal_set_modeopdisp(::int32_t value);

  public:
  // int32 actualPosition = 3;
  void clear_actualposition() ;
  ::int32_t actualposition() const;
  void set_actualposition(::int32_t value);

  private:
  ::int32_t _internal_actualposition() const;
  void _internal_set_actualposition(::int32_t value);

  public:
  // int32 actualVelocity = 4;
  void clear_actualvelocity() ;
  ::int32_t actualvelocity() const;
  void set_actualvelocity(::int32_t value);

  private:
  ::int32_t _internal_actualvelocity() const;
  void _internal_set_actualvelocity(::int32_t value);

  public:
  // int32 actualTorque = 5;
  void clear_actualtorque() ;
  ::int32_t actualtorque() const;
  void set_actualtorque(::int32_t value);

  private:
  ::int32_t _internal_actualtorque() const;
  void _internal_set_actualtorque(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoTx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t statusword_;
    ::int32_t modeopdisp_;
    ::int32_t actualposition_;
    ::int32_t actualvelocity_;
    ::int32_t actualtorque_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoRx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoRx) */ {
 public:
  inline ServoRx() : ServoRx(nullptr) {}
  ~ServoRx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoRx(::google::protobuf::internal::ConstantInitialized);

  ServoRx(const ServoRx& from);
  ServoRx(ServoRx&& from) noexcept
    : ServoRx() {
    *this = ::std::move(from);
  }

  inline ServoRx& operator=(const ServoRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoRx& operator=(ServoRx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoRx& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoRx* internal_default_instance() {
    return reinterpret_cast<const ServoRx*>(
               &_ServoRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ServoRx& a, ServoRx& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoRx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoRx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoRx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoRx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoRx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoRx& from) {
    ServoRx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoRx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoRx";
  }
  protected:
  explicit ServoRx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlWordFieldNumber = 1,
    kModeOpFieldNumber = 2,
    kTargetPositionFieldNumber = 3,
    kTargetVelocityFieldNumber = 4,
    kTargetTorqueFieldNumber = 5,
  };
  // uint32 controlWord = 1;
  void clear_controlword() ;
  ::uint32_t controlword() const;
  void set_controlword(::uint32_t value);

  private:
  ::uint32_t _internal_controlword() const;
  void _internal_set_controlword(::uint32_t value);

  public:
  // int32 modeOp = 2;
  void clear_modeop() ;
  ::int32_t modeop() const;
  void set_modeop(::int32_t value);

  private:
  ::int32_t _internal_modeop() const;
  void _internal_set_modeop(::int32_t value);

  public:
  // int64 targetPosition = 3;
  void clear_targetposition() ;
  ::int64_t targetposition() const;
  void set_targetposition(::int64_t value);

  private:
  ::int64_t _internal_targetposition() const;
  void _internal_set_targetposition(::int64_t value);

  public:
  // int32 targetVelocity = 4;
  void clear_targetvelocity() ;
  ::int32_t targetvelocity() const;
  void set_targetvelocity(::int32_t value);

  private:
  ::int32_t _internal_targetvelocity() const;
  void _internal_set_targetvelocity(::int32_t value);

  public:
  // int32 targetTorque = 5;
  void clear_targettorque() ;
  ::int32_t targettorque() const;
  void set_targettorque(::int32_t value);

  private:
  ::int32_t _internal_targettorque() const;
  void _internal_set_targettorque(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoRx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t controlword_;
    ::int32_t modeop_;
    ::int64_t targetposition_;
    ::int32_t targetvelocity_;
    ::int32_t targettorque_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoTxIndex final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoTxIndex) */ {
 public:
  inline ServoTxIndex() : ServoTxIndex(nullptr) {}
  ~ServoTxIndex() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoTxIndex(::google::protobuf::internal::ConstantInitialized);

  ServoTxIndex(const ServoTxIndex& from);
  ServoTxIndex(ServoTxIndex&& from) noexcept
    : ServoTxIndex() {
    *this = ::std::move(from);
  }

  inline ServoTxIndex& operator=(const ServoTxIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoTxIndex& operator=(ServoTxIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoTxIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoTxIndex* internal_default_instance() {
    return reinterpret_cast<const ServoTxIndex*>(
               &_ServoTxIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ServoTxIndex& a, ServoTxIndex& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoTxIndex* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoTxIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoTxIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoTxIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoTxIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoTxIndex& from) {
    ServoTxIndex::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoTxIndex* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoTxIndex";
  }
  protected:
  explicit ServoTxIndex(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxFieldNumber = 2,
    kServoIndexFieldNumber = 1,
  };
  // .Nrmk.IndyFramework.ServoTx tx = 2;
  bool has_tx() const;
  void clear_tx() ;
  const ::Nrmk::IndyFramework::ServoTx& tx() const;
  PROTOBUF_NODISCARD ::Nrmk::IndyFramework::ServoTx* release_tx();
  ::Nrmk::IndyFramework::ServoTx* mutable_tx();
  void set_allocated_tx(::Nrmk::IndyFramework::ServoTx* value);
  void unsafe_arena_set_allocated_tx(::Nrmk::IndyFramework::ServoTx* value);
  ::Nrmk::IndyFramework::ServoTx* unsafe_arena_release_tx();

  private:
  const ::Nrmk::IndyFramework::ServoTx& _internal_tx() const;
  ::Nrmk::IndyFramework::ServoTx* _internal_mutable_tx();

  public:
  // uint32 servoIndex = 1;
  void clear_servoindex() ;
  ::uint32_t servoindex() const;
  void set_servoindex(::uint32_t value);

  private:
  ::uint32_t _internal_servoindex() const;
  void _internal_set_servoindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoTxIndex)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Nrmk::IndyFramework::ServoTx* tx_;
    ::uint32_t servoindex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoRxIndex final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoRxIndex) */ {
 public:
  inline ServoRxIndex() : ServoRxIndex(nullptr) {}
  ~ServoRxIndex() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoRxIndex(::google::protobuf::internal::ConstantInitialized);

  ServoRxIndex(const ServoRxIndex& from);
  ServoRxIndex(ServoRxIndex&& from) noexcept
    : ServoRxIndex() {
    *this = ::std::move(from);
  }

  inline ServoRxIndex& operator=(const ServoRxIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoRxIndex& operator=(ServoRxIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoRxIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoRxIndex* internal_default_instance() {
    return reinterpret_cast<const ServoRxIndex*>(
               &_ServoRxIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ServoRxIndex& a, ServoRxIndex& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoRxIndex* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoRxIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoRxIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoRxIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoRxIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoRxIndex& from) {
    ServoRxIndex::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoRxIndex* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoRxIndex";
  }
  protected:
  explicit ServoRxIndex(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRxFieldNumber = 2,
    kServoIndexFieldNumber = 1,
  };
  // .Nrmk.IndyFramework.ServoRx rx = 2;
  bool has_rx() const;
  void clear_rx() ;
  const ::Nrmk::IndyFramework::ServoRx& rx() const;
  PROTOBUF_NODISCARD ::Nrmk::IndyFramework::ServoRx* release_rx();
  ::Nrmk::IndyFramework::ServoRx* mutable_rx();
  void set_allocated_rx(::Nrmk::IndyFramework::ServoRx* value);
  void unsafe_arena_set_allocated_rx(::Nrmk::IndyFramework::ServoRx* value);
  ::Nrmk::IndyFramework::ServoRx* unsafe_arena_release_rx();

  private:
  const ::Nrmk::IndyFramework::ServoRx& _internal_rx() const;
  ::Nrmk::IndyFramework::ServoRx* _internal_mutable_rx();

  public:
  // uint32 servoIndex = 1;
  void clear_servoindex() ;
  ::uint32_t servoindex() const;
  void set_servoindex(::uint32_t value);

  private:
  ::uint32_t _internal_servoindex() const;
  void _internal_set_servoindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoRxIndex)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Nrmk::IndyFramework::ServoRx* rx_;
    ::uint32_t servoindex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoTxKeba final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoTxKeba) */ {
 public:
  inline ServoTxKeba() : ServoTxKeba(nullptr) {}
  ~ServoTxKeba() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoTxKeba(::google::protobuf::internal::ConstantInitialized);

  ServoTxKeba(const ServoTxKeba& from);
  ServoTxKeba(ServoTxKeba&& from) noexcept
    : ServoTxKeba() {
    *this = ::std::move(from);
  }

  inline ServoTxKeba& operator=(const ServoTxKeba& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoTxKeba& operator=(ServoTxKeba&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoTxKeba& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoTxKeba* internal_default_instance() {
    return reinterpret_cast<const ServoTxKeba*>(
               &_ServoTxKeba_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ServoTxKeba& a, ServoTxKeba& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoTxKeba* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoTxKeba* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoTxKeba* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoTxKeba>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoTxKeba& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoTxKeba& from) {
    ServoTxKeba::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoTxKeba* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoTxKeba";
  }
  protected:
  explicit ServoTxKeba(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusWordFieldNumber = 1,
    kStatusWord2FieldNumber = 2,
    kStatusWord3FieldNumber = 3,
    kActualPositionFieldNumber = 4,
    kActualPosition2FieldNumber = 5,
    kActualPosition3FieldNumber = 6,
    kActualVelocityFieldNumber = 7,
    kActualVelocity2FieldNumber = 8,
    kActualVelocity3FieldNumber = 9,
  };
  // uint32 statusWord = 1;
  void clear_statusword() ;
  ::uint32_t statusword() const;
  void set_statusword(::uint32_t value);

  private:
  ::uint32_t _internal_statusword() const;
  void _internal_set_statusword(::uint32_t value);

  public:
  // uint32 statusWord2 = 2;
  void clear_statusword2() ;
  ::uint32_t statusword2() const;
  void set_statusword2(::uint32_t value);

  private:
  ::uint32_t _internal_statusword2() const;
  void _internal_set_statusword2(::uint32_t value);

  public:
  // uint32 statusWord3 = 3;
  void clear_statusword3() ;
  ::uint32_t statusword3() const;
  void set_statusword3(::uint32_t value);

  private:
  ::uint32_t _internal_statusword3() const;
  void _internal_set_statusword3(::uint32_t value);

  public:
  // int32 actualPosition = 4;
  void clear_actualposition() ;
  ::int32_t actualposition() const;
  void set_actualposition(::int32_t value);

  private:
  ::int32_t _internal_actualposition() const;
  void _internal_set_actualposition(::int32_t value);

  public:
  // int32 actualPosition2 = 5;
  void clear_actualposition2() ;
  ::int32_t actualposition2() const;
  void set_actualposition2(::int32_t value);

  private:
  ::int32_t _internal_actualposition2() const;
  void _internal_set_actualposition2(::int32_t value);

  public:
  // int32 actualPosition3 = 6;
  void clear_actualposition3() ;
  ::int32_t actualposition3() const;
  void set_actualposition3(::int32_t value);

  private:
  ::int32_t _internal_actualposition3() const;
  void _internal_set_actualposition3(::int32_t value);

  public:
  // int32 actualVelocity = 7;
  void clear_actualvelocity() ;
  ::int32_t actualvelocity() const;
  void set_actualvelocity(::int32_t value);

  private:
  ::int32_t _internal_actualvelocity() const;
  void _internal_set_actualvelocity(::int32_t value);

  public:
  // int32 actualVelocity2 = 8;
  void clear_actualvelocity2() ;
  ::int32_t actualvelocity2() const;
  void set_actualvelocity2(::int32_t value);

  private:
  ::int32_t _internal_actualvelocity2() const;
  void _internal_set_actualvelocity2(::int32_t value);

  public:
  // int32 actualVelocity3 = 9;
  void clear_actualvelocity3() ;
  ::int32_t actualvelocity3() const;
  void set_actualvelocity3(::int32_t value);

  private:
  ::int32_t _internal_actualvelocity3() const;
  void _internal_set_actualvelocity3(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoTxKeba)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t statusword_;
    ::uint32_t statusword2_;
    ::uint32_t statusword3_;
    ::int32_t actualposition_;
    ::int32_t actualposition2_;
    ::int32_t actualposition3_;
    ::int32_t actualvelocity_;
    ::int32_t actualvelocity2_;
    ::int32_t actualvelocity3_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoRxKeba final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoRxKeba) */ {
 public:
  inline ServoRxKeba() : ServoRxKeba(nullptr) {}
  ~ServoRxKeba() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoRxKeba(::google::protobuf::internal::ConstantInitialized);

  ServoRxKeba(const ServoRxKeba& from);
  ServoRxKeba(ServoRxKeba&& from) noexcept
    : ServoRxKeba() {
    *this = ::std::move(from);
  }

  inline ServoRxKeba& operator=(const ServoRxKeba& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoRxKeba& operator=(ServoRxKeba&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoRxKeba& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoRxKeba* internal_default_instance() {
    return reinterpret_cast<const ServoRxKeba*>(
               &_ServoRxKeba_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ServoRxKeba& a, ServoRxKeba& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoRxKeba* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoRxKeba* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoRxKeba* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoRxKeba>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoRxKeba& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoRxKeba& from) {
    ServoRxKeba::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoRxKeba* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoRxKeba";
  }
  protected:
  explicit ServoRxKeba(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlWordFieldNumber = 1,
    kControlWord2FieldNumber = 2,
    kTargetPositionFieldNumber = 4,
    kTargetPosition2FieldNumber = 5,
    kControlWord3FieldNumber = 3,
    kTargetTorqueFieldNumber = 7,
    kTargetPosition3FieldNumber = 6,
    kTargetTorque2FieldNumber = 8,
    kTargetTorque3FieldNumber = 9,
  };
  // uint32 controlWord = 1;
  void clear_controlword() ;
  ::uint32_t controlword() const;
  void set_controlword(::uint32_t value);

  private:
  ::uint32_t _internal_controlword() const;
  void _internal_set_controlword(::uint32_t value);

  public:
  // uint32 controlWord2 = 2;
  void clear_controlword2() ;
  ::uint32_t controlword2() const;
  void set_controlword2(::uint32_t value);

  private:
  ::uint32_t _internal_controlword2() const;
  void _internal_set_controlword2(::uint32_t value);

  public:
  // int64 targetPosition = 4;
  void clear_targetposition() ;
  ::int64_t targetposition() const;
  void set_targetposition(::int64_t value);

  private:
  ::int64_t _internal_targetposition() const;
  void _internal_set_targetposition(::int64_t value);

  public:
  // int64 targetPosition2 = 5;
  void clear_targetposition2() ;
  ::int64_t targetposition2() const;
  void set_targetposition2(::int64_t value);

  private:
  ::int64_t _internal_targetposition2() const;
  void _internal_set_targetposition2(::int64_t value);

  public:
  // uint32 controlWord3 = 3;
  void clear_controlword3() ;
  ::uint32_t controlword3() const;
  void set_controlword3(::uint32_t value);

  private:
  ::uint32_t _internal_controlword3() const;
  void _internal_set_controlword3(::uint32_t value);

  public:
  // int32 targetTorque = 7;
  void clear_targettorque() ;
  ::int32_t targettorque() const;
  void set_targettorque(::int32_t value);

  private:
  ::int32_t _internal_targettorque() const;
  void _internal_set_targettorque(::int32_t value);

  public:
  // int64 targetPosition3 = 6;
  void clear_targetposition3() ;
  ::int64_t targetposition3() const;
  void set_targetposition3(::int64_t value);

  private:
  ::int64_t _internal_targetposition3() const;
  void _internal_set_targetposition3(::int64_t value);

  public:
  // int32 targetTorque2 = 8;
  void clear_targettorque2() ;
  ::int32_t targettorque2() const;
  void set_targettorque2(::int32_t value);

  private:
  ::int32_t _internal_targettorque2() const;
  void _internal_set_targettorque2(::int32_t value);

  public:
  // int32 targetTorque3 = 9;
  void clear_targettorque3() ;
  ::int32_t targettorque3() const;
  void set_targettorque3(::int32_t value);

  private:
  ::int32_t _internal_targettorque3() const;
  void _internal_set_targettorque3(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoRxKeba)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t controlword_;
    ::uint32_t controlword2_;
    ::int64_t targetposition_;
    ::int64_t targetposition2_;
    ::uint32_t controlword3_;
    ::int32_t targettorque_;
    ::int64_t targetposition3_;
    ::int32_t targettorque2_;
    ::int32_t targettorque3_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoRxIndexKeba final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoRxIndexKeba) */ {
 public:
  inline ServoRxIndexKeba() : ServoRxIndexKeba(nullptr) {}
  ~ServoRxIndexKeba() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoRxIndexKeba(::google::protobuf::internal::ConstantInitialized);

  ServoRxIndexKeba(const ServoRxIndexKeba& from);
  ServoRxIndexKeba(ServoRxIndexKeba&& from) noexcept
    : ServoRxIndexKeba() {
    *this = ::std::move(from);
  }

  inline ServoRxIndexKeba& operator=(const ServoRxIndexKeba& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoRxIndexKeba& operator=(ServoRxIndexKeba&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoRxIndexKeba& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoRxIndexKeba* internal_default_instance() {
    return reinterpret_cast<const ServoRxIndexKeba*>(
               &_ServoRxIndexKeba_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ServoRxIndexKeba& a, ServoRxIndexKeba& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoRxIndexKeba* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoRxIndexKeba* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoRxIndexKeba* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoRxIndexKeba>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoRxIndexKeba& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoRxIndexKeba& from) {
    ServoRxIndexKeba::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoRxIndexKeba* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoRxIndexKeba";
  }
  protected:
  explicit ServoRxIndexKeba(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRxFieldNumber = 2,
    kServoIndexFieldNumber = 1,
  };
  // .Nrmk.IndyFramework.ServoRxKeba rx = 2;
  bool has_rx() const;
  void clear_rx() ;
  const ::Nrmk::IndyFramework::ServoRxKeba& rx() const;
  PROTOBUF_NODISCARD ::Nrmk::IndyFramework::ServoRxKeba* release_rx();
  ::Nrmk::IndyFramework::ServoRxKeba* mutable_rx();
  void set_allocated_rx(::Nrmk::IndyFramework::ServoRxKeba* value);
  void unsafe_arena_set_allocated_rx(::Nrmk::IndyFramework::ServoRxKeba* value);
  ::Nrmk::IndyFramework::ServoRxKeba* unsafe_arena_release_rx();

  private:
  const ::Nrmk::IndyFramework::ServoRxKeba& _internal_rx() const;
  ::Nrmk::IndyFramework::ServoRxKeba* _internal_mutable_rx();

  public:
  // uint32 servoIndex = 1;
  void clear_servoindex() ;
  ::uint32_t servoindex() const;
  void set_servoindex(::uint32_t value);

  private:
  ::uint32_t _internal_servoindex() const;
  void _internal_set_servoindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoRxIndexKeba)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Nrmk::IndyFramework::ServoRxKeba* rx_;
    ::uint32_t servoindex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoTemp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoTemp) */ {
 public:
  inline ServoTemp() : ServoTemp(nullptr) {}
  ~ServoTemp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoTemp(::google::protobuf::internal::ConstantInitialized);

  ServoTemp(const ServoTemp& from);
  ServoTemp(ServoTemp&& from) noexcept
    : ServoTemp() {
    *this = ::std::move(from);
  }

  inline ServoTemp& operator=(const ServoTemp& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoTemp& operator=(ServoTemp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoTemp& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoTemp* internal_default_instance() {
    return reinterpret_cast<const ServoTemp*>(
               &_ServoTemp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ServoTemp& a, ServoTemp& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoTemp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoTemp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoTemp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoTemp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoTemp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoTemp& from) {
    ServoTemp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoTemp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoTemp";
  }
  protected:
  explicit ServoTemp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTemperatureFieldNumber = 1,
  };
  // float temperature = 1;
  void clear_temperature() ;
  float temperature() const;
  void set_temperature(float value);

  private:
  float _internal_temperature() const;
  void _internal_set_temperature(float value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoTemp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float temperature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoError final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoError) */ {
 public:
  inline ServoError() : ServoError(nullptr) {}
  ~ServoError() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoError(::google::protobuf::internal::ConstantInitialized);

  ServoError(const ServoError& from);
  ServoError(ServoError&& from) noexcept
    : ServoError() {
    *this = ::std::move(from);
  }

  inline ServoError& operator=(const ServoError& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoError& operator=(ServoError&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoError& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoError* internal_default_instance() {
    return reinterpret_cast<const ServoError*>(
               &_ServoError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ServoError& a, ServoError& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoError* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoError* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoError* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoError>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoError& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoError& from) {
    ServoError::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoError* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoError";
  }
  protected:
  explicit ServoError(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // uint32 errorCode = 1;
  void clear_errorcode() ;
  ::uint32_t errorcode() const;
  void set_errorcode(::uint32_t value);

  private:
  ::uint32_t _internal_errorcode() const;
  void _internal_set_errorcode(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoError)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t errorcode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoBrake final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoBrake) */ {
 public:
  inline ServoBrake() : ServoBrake(nullptr) {}
  ~ServoBrake() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoBrake(::google::protobuf::internal::ConstantInitialized);

  ServoBrake(const ServoBrake& from);
  ServoBrake(ServoBrake&& from) noexcept
    : ServoBrake() {
    *this = ::std::move(from);
  }

  inline ServoBrake& operator=(const ServoBrake& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoBrake& operator=(ServoBrake&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoBrake& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoBrake* internal_default_instance() {
    return reinterpret_cast<const ServoBrake*>(
               &_ServoBrake_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ServoBrake& a, ServoBrake& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoBrake* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoBrake* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoBrake* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoBrake>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoBrake& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoBrake& from) {
    ServoBrake::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoBrake* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoBrake";
  }
  protected:
  explicit ServoBrake(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEcatIndexFieldNumber = 1,
    kOnoffFieldNumber = 2,
  };
  // uint32 ecatIndex = 1;
  void clear_ecatindex() ;
  ::uint32_t ecatindex() const;
  void set_ecatindex(::uint32_t value);

  private:
  ::uint32_t _internal_ecatindex() const;
  void _internal_set_ecatindex(::uint32_t value);

  public:
  // bool onoff = 2;
  void clear_onoff() ;
  bool onoff() const;
  void set_onoff(bool value);

  private:
  bool _internal_onoff() const;
  void _internal_set_onoff(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoBrake)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t ecatindex_;
    bool onoff_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class FTSensor final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.FTSensor) */ {
 public:
  inline FTSensor() : FTSensor(nullptr) {}
  ~FTSensor() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FTSensor(::google::protobuf::internal::ConstantInitialized);

  FTSensor(const FTSensor& from);
  FTSensor(FTSensor&& from) noexcept
    : FTSensor() {
    *this = ::std::move(from);
  }

  inline FTSensor& operator=(const FTSensor& from) {
    CopyFrom(from);
    return *this;
  }
  inline FTSensor& operator=(FTSensor&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FTSensor& default_instance() {
    return *internal_default_instance();
  }
  static inline const FTSensor* internal_default_instance() {
    return reinterpret_cast<const FTSensor*>(
               &_FTSensor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(FTSensor& a, FTSensor& b) {
    a.Swap(&b);
  }
  inline void Swap(FTSensor* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FTSensor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FTSensor* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FTSensor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FTSensor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FTSensor& from) {
    FTSensor::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FTSensor* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.FTSensor";
  }
  protected:
  explicit FTSensor(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFxFieldNumber = 1,
    kFyFieldNumber = 2,
    kFzFieldNumber = 3,
    kTxFieldNumber = 4,
    kTyFieldNumber = 5,
    kTzFieldNumber = 6,
  };
  // int32 fx = 1;
  void clear_fx() ;
  ::int32_t fx() const;
  void set_fx(::int32_t value);

  private:
  ::int32_t _internal_fx() const;
  void _internal_set_fx(::int32_t value);

  public:
  // int32 fy = 2;
  void clear_fy() ;
  ::int32_t fy() const;
  void set_fy(::int32_t value);

  private:
  ::int32_t _internal_fy() const;
  void _internal_set_fy(::int32_t value);

  public:
  // int32 fz = 3;
  void clear_fz() ;
  ::int32_t fz() const;
  void set_fz(::int32_t value);

  private:
  ::int32_t _internal_fz() const;
  void _internal_set_fz(::int32_t value);

  public:
  // int32 tx = 4;
  void clear_tx() ;
  ::int32_t tx() const;
  void set_tx(::int32_t value);

  private:
  ::int32_t _internal_tx() const;
  void _internal_set_tx(::int32_t value);

  public:
  // int32 ty = 5;
  void clear_ty() ;
  ::int32_t ty() const;
  void set_ty(::int32_t value);

  private:
  ::int32_t _internal_ty() const;
  void _internal_set_ty(::int32_t value);

  public:
  // int32 tz = 6;
  void clear_tz() ;
  ::int32_t tz() const;
  void set_tz(::int32_t value);

  private:
  ::int32_t _internal_tz() const;
  void _internal_set_tz(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.FTSensor)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t fx_;
    ::int32_t fy_;
    ::int32_t fz_;
    ::int32_t tx_;
    ::int32_t ty_;
    ::int32_t tz_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EndtoolTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EndtoolTx) */ {
 public:
  inline EndtoolTx() : EndtoolTx(nullptr) {}
  ~EndtoolTx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EndtoolTx(::google::protobuf::internal::ConstantInitialized);

  EndtoolTx(const EndtoolTx& from);
  EndtoolTx(EndtoolTx&& from) noexcept
    : EndtoolTx() {
    *this = ::std::move(from);
  }

  inline EndtoolTx& operator=(const EndtoolTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolTx& operator=(EndtoolTx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EndtoolTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const EndtoolTx* internal_default_instance() {
    return reinterpret_cast<const EndtoolTx*>(
               &_EndtoolTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(EndtoolTx& a, EndtoolTx& b) {
    a.Swap(&b);
  }
  inline void Swap(EndtoolTx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EndtoolTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EndtoolTx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EndtoolTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EndtoolTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EndtoolTx& from) {
    EndtoolTx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolTx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EndtoolTx";
  }
  protected:
  explicit EndtoolTx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFtSensorFieldNumber = 3,
    kStatusFieldNumber = 1,
    kButtonFieldNumber = 2,
    kFtStateFieldNumber = 4,
    kFtErrorFieldNumber = 5,
  };
  // .Nrmk.IndyFramework.FTSensor ft_sensor = 3;
  bool has_ft_sensor() const;
  void clear_ft_sensor() ;
  const ::Nrmk::IndyFramework::FTSensor& ft_sensor() const;
  PROTOBUF_NODISCARD ::Nrmk::IndyFramework::FTSensor* release_ft_sensor();
  ::Nrmk::IndyFramework::FTSensor* mutable_ft_sensor();
  void set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value);
  void unsafe_arena_set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value);
  ::Nrmk::IndyFramework::FTSensor* unsafe_arena_release_ft_sensor();

  private:
  const ::Nrmk::IndyFramework::FTSensor& _internal_ft_sensor() const;
  ::Nrmk::IndyFramework::FTSensor* _internal_mutable_ft_sensor();

  public:
  // uint32 status = 1;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // uint32 button = 2;
  void clear_button() ;
  ::uint32_t button() const;
  void set_button(::uint32_t value);

  private:
  ::uint32_t _internal_button() const;
  void _internal_set_button(::uint32_t value);

  public:
  // uint32 ft_state = 4;
  void clear_ft_state() ;
  ::uint32_t ft_state() const;
  void set_ft_state(::uint32_t value);

  private:
  ::uint32_t _internal_ft_state() const;
  void _internal_set_ft_state(::uint32_t value);

  public:
  // uint32 ft_error = 5;
  void clear_ft_error() ;
  ::uint32_t ft_error() const;
  void set_ft_error(::uint32_t value);

  private:
  ::uint32_t _internal_ft_error() const;
  void _internal_set_ft_error(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EndtoolTx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Nrmk::IndyFramework::FTSensor* ft_sensor_;
    ::uint32_t status_;
    ::uint32_t button_;
    ::uint32_t ft_state_;
    ::uint32_t ft_error_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EndtoolRx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EndtoolRx) */ {
 public:
  inline EndtoolRx() : EndtoolRx(nullptr) {}
  ~EndtoolRx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EndtoolRx(::google::protobuf::internal::ConstantInitialized);

  EndtoolRx(const EndtoolRx& from);
  EndtoolRx(EndtoolRx&& from) noexcept
    : EndtoolRx() {
    *this = ::std::move(from);
  }

  inline EndtoolRx& operator=(const EndtoolRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolRx& operator=(EndtoolRx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EndtoolRx& default_instance() {
    return *internal_default_instance();
  }
  static inline const EndtoolRx* internal_default_instance() {
    return reinterpret_cast<const EndtoolRx*>(
               &_EndtoolRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(EndtoolRx& a, EndtoolRx& b) {
    a.Swap(&b);
  }
  inline void Swap(EndtoolRx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EndtoolRx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EndtoolRx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EndtoolRx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EndtoolRx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EndtoolRx& from) {
    EndtoolRx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolRx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EndtoolRx";
  }
  protected:
  explicit EndtoolRx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEqcFieldNumber = 1,
    kGripperFieldNumber = 2,
    kFtParamFieldNumber = 3,
    kLedModeFieldNumber = 4,
    kLedGFieldNumber = 5,
    kLedRFieldNumber = 6,
    kLedBFieldNumber = 7,
  };
  // uint32 eqc = 1;
  void clear_eqc() ;
  ::uint32_t eqc() const;
  void set_eqc(::uint32_t value);

  private:
  ::uint32_t _internal_eqc() const;
  void _internal_set_eqc(::uint32_t value);

  public:
  // uint32 gripper = 2;
  void clear_gripper() ;
  ::uint32_t gripper() const;
  void set_gripper(::uint32_t value);

  private:
  ::uint32_t _internal_gripper() const;
  void _internal_set_gripper(::uint32_t value);

  public:
  // uint32 ft_param = 3;
  void clear_ft_param() ;
  ::uint32_t ft_param() const;
  void set_ft_param(::uint32_t value);

  private:
  ::uint32_t _internal_ft_param() const;
  void _internal_set_ft_param(::uint32_t value);

  public:
  // uint32 led_mode = 4;
  void clear_led_mode() ;
  ::uint32_t led_mode() const;
  void set_led_mode(::uint32_t value);

  private:
  ::uint32_t _internal_led_mode() const;
  void _internal_set_led_mode(::uint32_t value);

  public:
  // uint32 led_g = 5;
  void clear_led_g() ;
  ::uint32_t led_g() const;
  void set_led_g(::uint32_t value);

  private:
  ::uint32_t _internal_led_g() const;
  void _internal_set_led_g(::uint32_t value);

  public:
  // uint32 led_r = 6;
  void clear_led_r() ;
  ::uint32_t led_r() const;
  void set_led_r(::uint32_t value);

  private:
  ::uint32_t _internal_led_r() const;
  void _internal_set_led_r(::uint32_t value);

  public:
  // uint32 led_b = 7;
  void clear_led_b() ;
  ::uint32_t led_b() const;
  void set_led_b(::uint32_t value);

  private:
  ::uint32_t _internal_led_b() const;
  void _internal_set_led_b(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EndtoolRx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t eqc_;
    ::uint32_t gripper_;
    ::uint32_t ft_param_;
    ::uint32_t led_mode_;
    ::uint32_t led_g_;
    ::uint32_t led_r_;
    ::uint32_t led_b_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EndtoolDockingTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EndtoolDockingTx) */ {
 public:
  inline EndtoolDockingTx() : EndtoolDockingTx(nullptr) {}
  ~EndtoolDockingTx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EndtoolDockingTx(::google::protobuf::internal::ConstantInitialized);

  EndtoolDockingTx(const EndtoolDockingTx& from);
  EndtoolDockingTx(EndtoolDockingTx&& from) noexcept
    : EndtoolDockingTx() {
    *this = ::std::move(from);
  }

  inline EndtoolDockingTx& operator=(const EndtoolDockingTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolDockingTx& operator=(EndtoolDockingTx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EndtoolDockingTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const EndtoolDockingTx* internal_default_instance() {
    return reinterpret_cast<const EndtoolDockingTx*>(
               &_EndtoolDockingTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(EndtoolDockingTx& a, EndtoolDockingTx& b) {
    a.Swap(&b);
  }
  inline void Swap(EndtoolDockingTx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EndtoolDockingTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EndtoolDockingTx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EndtoolDockingTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EndtoolDockingTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EndtoolDockingTx& from) {
    EndtoolDockingTx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolDockingTx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EndtoolDockingTx";
  }
  protected:
  explicit EndtoolDockingTx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDockingStatusFieldNumber = 1,
    kDockingButtonFieldNumber = 2,
    kDockingDist1FieldNumber = 3,
    kDockingDist2FieldNumber = 4,
    kDockingDist3FieldNumber = 5,
    kDockingDist4FieldNumber = 6,
    kDockingDist5FieldNumber = 7,
    kDockingDist6FieldNumber = 8,
    kDockingDist7FieldNumber = 9,
    kDockingDist8FieldNumber = 10,
    kDirectStatusFieldNumber = 11,
    kDirectButtonFieldNumber = 12,
    kDirectEncoderFieldNumber = 13,
    kJoystic1XFieldNumber = 14,
    kJoystic1YFieldNumber = 15,
    kJoystic2XFieldNumber = 16,
    kJoystic2YFieldNumber = 17,
  };
  // uint32 docking_status = 1;
  void clear_docking_status() ;
  ::uint32_t docking_status() const;
  void set_docking_status(::uint32_t value);

  private:
  ::uint32_t _internal_docking_status() const;
  void _internal_set_docking_status(::uint32_t value);

  public:
  // uint32 docking_button = 2;
  void clear_docking_button() ;
  ::uint32_t docking_button() const;
  void set_docking_button(::uint32_t value);

  private:
  ::uint32_t _internal_docking_button() const;
  void _internal_set_docking_button(::uint32_t value);

  public:
  // uint32 docking_dist1 = 3;
  void clear_docking_dist1() ;
  ::uint32_t docking_dist1() const;
  void set_docking_dist1(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist1() const;
  void _internal_set_docking_dist1(::uint32_t value);

  public:
  // uint32 docking_dist2 = 4;
  void clear_docking_dist2() ;
  ::uint32_t docking_dist2() const;
  void set_docking_dist2(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist2() const;
  void _internal_set_docking_dist2(::uint32_t value);

  public:
  // uint32 docking_dist3 = 5;
  void clear_docking_dist3() ;
  ::uint32_t docking_dist3() const;
  void set_docking_dist3(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist3() const;
  void _internal_set_docking_dist3(::uint32_t value);

  public:
  // uint32 docking_dist4 = 6;
  void clear_docking_dist4() ;
  ::uint32_t docking_dist4() const;
  void set_docking_dist4(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist4() const;
  void _internal_set_docking_dist4(::uint32_t value);

  public:
  // uint32 docking_dist5 = 7;
  void clear_docking_dist5() ;
  ::uint32_t docking_dist5() const;
  void set_docking_dist5(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist5() const;
  void _internal_set_docking_dist5(::uint32_t value);

  public:
  // uint32 docking_dist6 = 8;
  void clear_docking_dist6() ;
  ::uint32_t docking_dist6() const;
  void set_docking_dist6(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist6() const;
  void _internal_set_docking_dist6(::uint32_t value);

  public:
  // uint32 docking_dist7 = 9;
  void clear_docking_dist7() ;
  ::uint32_t docking_dist7() const;
  void set_docking_dist7(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist7() const;
  void _internal_set_docking_dist7(::uint32_t value);

  public:
  // uint32 docking_dist8 = 10;
  void clear_docking_dist8() ;
  ::uint32_t docking_dist8() const;
  void set_docking_dist8(::uint32_t value);

  private:
  ::uint32_t _internal_docking_dist8() const;
  void _internal_set_docking_dist8(::uint32_t value);

  public:
  // uint32 direct_status = 11;
  void clear_direct_status() ;
  ::uint32_t direct_status() const;
  void set_direct_status(::uint32_t value);

  private:
  ::uint32_t _internal_direct_status() const;
  void _internal_set_direct_status(::uint32_t value);

  public:
  // uint32 direct_button = 12;
  void clear_direct_button() ;
  ::uint32_t direct_button() const;
  void set_direct_button(::uint32_t value);

  private:
  ::uint32_t _internal_direct_button() const;
  void _internal_set_direct_button(::uint32_t value);

  public:
  // uint32 direct_encoder = 13;
  void clear_direct_encoder() ;
  ::uint32_t direct_encoder() const;
  void set_direct_encoder(::uint32_t value);

  private:
  ::uint32_t _internal_direct_encoder() const;
  void _internal_set_direct_encoder(::uint32_t value);

  public:
  // uint32 joystic1x = 14;
  void clear_joystic1x() ;
  ::uint32_t joystic1x() const;
  void set_joystic1x(::uint32_t value);

  private:
  ::uint32_t _internal_joystic1x() const;
  void _internal_set_joystic1x(::uint32_t value);

  public:
  // uint32 joystic1y = 15;
  void clear_joystic1y() ;
  ::uint32_t joystic1y() const;
  void set_joystic1y(::uint32_t value);

  private:
  ::uint32_t _internal_joystic1y() const;
  void _internal_set_joystic1y(::uint32_t value);

  public:
  // uint32 joystic2x = 16;
  void clear_joystic2x() ;
  ::uint32_t joystic2x() const;
  void set_joystic2x(::uint32_t value);

  private:
  ::uint32_t _internal_joystic2x() const;
  void _internal_set_joystic2x(::uint32_t value);

  public:
  // uint32 joystic2y = 17;
  void clear_joystic2y() ;
  ::uint32_t joystic2y() const;
  void set_joystic2y(::uint32_t value);

  private:
  ::uint32_t _internal_joystic2y() const;
  void _internal_set_joystic2y(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EndtoolDockingTx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 17, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t docking_status_;
    ::uint32_t docking_button_;
    ::uint32_t docking_dist1_;
    ::uint32_t docking_dist2_;
    ::uint32_t docking_dist3_;
    ::uint32_t docking_dist4_;
    ::uint32_t docking_dist5_;
    ::uint32_t docking_dist6_;
    ::uint32_t docking_dist7_;
    ::uint32_t docking_dist8_;
    ::uint32_t direct_status_;
    ::uint32_t direct_button_;
    ::uint32_t direct_encoder_;
    ::uint32_t joystic1x_;
    ::uint32_t joystic1y_;
    ::uint32_t joystic2x_;
    ::uint32_t joystic2y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class LedDim final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.LedDim) */ {
 public:
  inline LedDim() : LedDim(nullptr) {}
  ~LedDim() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LedDim(::google::protobuf::internal::ConstantInitialized);

  LedDim(const LedDim& from);
  LedDim(LedDim&& from) noexcept
    : LedDim() {
    *this = ::std::move(from);
  }

  inline LedDim& operator=(const LedDim& from) {
    CopyFrom(from);
    return *this;
  }
  inline LedDim& operator=(LedDim&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LedDim& default_instance() {
    return *internal_default_instance();
  }
  static inline const LedDim* internal_default_instance() {
    return reinterpret_cast<const LedDim*>(
               &_LedDim_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(LedDim& a, LedDim& b) {
    a.Swap(&b);
  }
  inline void Swap(LedDim* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LedDim* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LedDim* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LedDim>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LedDim& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LedDim& from) {
    LedDim::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LedDim* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.LedDim";
  }
  protected:
  explicit LedDim(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLedDimFieldNumber = 1,
  };
  // uint32 led_dim = 1;
  void clear_led_dim() ;
  ::uint32_t led_dim() const;
  void set_led_dim(::uint32_t value);

  private:
  ::uint32_t _internal_led_dim() const;
  void _internal_set_led_dim(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.LedDim)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t led_dim_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SRKeyEndtoolRx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SRKeyEndtoolRx) */ {
 public:
  inline SRKeyEndtoolRx() : SRKeyEndtoolRx(nullptr) {}
  ~SRKeyEndtoolRx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SRKeyEndtoolRx(::google::protobuf::internal::ConstantInitialized);

  SRKeyEndtoolRx(const SRKeyEndtoolRx& from);
  SRKeyEndtoolRx(SRKeyEndtoolRx&& from) noexcept
    : SRKeyEndtoolRx() {
    *this = ::std::move(from);
  }

  inline SRKeyEndtoolRx& operator=(const SRKeyEndtoolRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRKeyEndtoolRx& operator=(SRKeyEndtoolRx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRKeyEndtoolRx& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRKeyEndtoolRx* internal_default_instance() {
    return reinterpret_cast<const SRKeyEndtoolRx*>(
               &_SRKeyEndtoolRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(SRKeyEndtoolRx& a, SRKeyEndtoolRx& b) {
    a.Swap(&b);
  }
  inline void Swap(SRKeyEndtoolRx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRKeyEndtoolRx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRKeyEndtoolRx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SRKeyEndtoolRx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRKeyEndtoolRx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SRKeyEndtoolRx& from) {
    SRKeyEndtoolRx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRKeyEndtoolRx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SRKeyEndtoolRx";
  }
  protected:
  explicit SRKeyEndtoolRx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoutFieldNumber = 1,
    kToolIdFieldNumber = 2,
    kSetToolFieldNumber = 3,
    kToolClosingForceFieldNumber = 4,
    kToolOpeningForceFieldNumber = 5,
    kToolForceLocationFieldNumber = 6,
  };
  // uint32 dout = 1;
  void clear_dout() ;
  ::uint32_t dout() const;
  void set_dout(::uint32_t value);

  private:
  ::uint32_t _internal_dout() const;
  void _internal_set_dout(::uint32_t value);

  public:
  // uint32 tool_Id = 2;
  void clear_tool_id() ;
  ::uint32_t tool_id() const;
  void set_tool_id(::uint32_t value);

  private:
  ::uint32_t _internal_tool_id() const;
  void _internal_set_tool_id(::uint32_t value);

  public:
  // uint32 set_Tool = 3;
  void clear_set_tool() ;
  ::uint32_t set_tool() const;
  void set_set_tool(::uint32_t value);

  private:
  ::uint32_t _internal_set_tool() const;
  void _internal_set_set_tool(::uint32_t value);

  public:
  // uint32 tool_Closing_Force = 4;
  void clear_tool_closing_force() ;
  ::uint32_t tool_closing_force() const;
  void set_tool_closing_force(::uint32_t value);

  private:
  ::uint32_t _internal_tool_closing_force() const;
  void _internal_set_tool_closing_force(::uint32_t value);

  public:
  // uint32 tool_Opening_Force = 5;
  void clear_tool_opening_force() ;
  ::uint32_t tool_opening_force() const;
  void set_tool_opening_force(::uint32_t value);

  private:
  ::uint32_t _internal_tool_opening_force() const;
  void _internal_set_tool_opening_force(::uint32_t value);

  public:
  // uint32 tool_Force_Location = 6;
  void clear_tool_force_location() ;
  ::uint32_t tool_force_location() const;
  void set_tool_force_location(::uint32_t value);

  private:
  ::uint32_t _internal_tool_force_location() const;
  void _internal_set_tool_force_location(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SRKeyEndtoolRx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t dout_;
    ::uint32_t tool_id_;
    ::uint32_t set_tool_;
    ::uint32_t tool_closing_force_;
    ::uint32_t tool_opening_force_;
    ::uint32_t tool_force_location_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SRKeyEndtoolTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SRKeyEndtoolTx) */ {
 public:
  inline SRKeyEndtoolTx() : SRKeyEndtoolTx(nullptr) {}
  ~SRKeyEndtoolTx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SRKeyEndtoolTx(::google::protobuf::internal::ConstantInitialized);

  SRKeyEndtoolTx(const SRKeyEndtoolTx& from);
  SRKeyEndtoolTx(SRKeyEndtoolTx&& from) noexcept
    : SRKeyEndtoolTx() {
    *this = ::std::move(from);
  }

  inline SRKeyEndtoolTx& operator=(const SRKeyEndtoolTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRKeyEndtoolTx& operator=(SRKeyEndtoolTx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRKeyEndtoolTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRKeyEndtoolTx* internal_default_instance() {
    return reinterpret_cast<const SRKeyEndtoolTx*>(
               &_SRKeyEndtoolTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(SRKeyEndtoolTx& a, SRKeyEndtoolTx& b) {
    a.Swap(&b);
  }
  inline void Swap(SRKeyEndtoolTx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRKeyEndtoolTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRKeyEndtoolTx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SRKeyEndtoolTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRKeyEndtoolTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SRKeyEndtoolTx& from) {
    SRKeyEndtoolTx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRKeyEndtoolTx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SRKeyEndtoolTx";
  }
  protected:
  explicit SRKeyEndtoolTx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDinFieldNumber = 1,
    kToolStatusFieldNumber = 2,
    kToolLocationFieldNumber = 3,
    kAnalog0FieldNumber = 4,
    kAnalog1FieldNumber = 5,
    kVersionFieldNumber = 6,
  };
  // uint32 din = 1;
  void clear_din() ;
  ::uint32_t din() const;
  void set_din(::uint32_t value);

  private:
  ::uint32_t _internal_din() const;
  void _internal_set_din(::uint32_t value);

  public:
  // uint32 tool_Status = 2;
  void clear_tool_status() ;
  ::uint32_t tool_status() const;
  void set_tool_status(::uint32_t value);

  private:
  ::uint32_t _internal_tool_status() const;
  void _internal_set_tool_status(::uint32_t value);

  public:
  // uint32 tool_Location = 3;
  void clear_tool_location() ;
  ::uint32_t tool_location() const;
  void set_tool_location(::uint32_t value);

  private:
  ::uint32_t _internal_tool_location() const;
  void _internal_set_tool_location(::uint32_t value);

  public:
  // uint32 analog0 = 4;
  void clear_analog0() ;
  ::uint32_t analog0() const;
  void set_analog0(::uint32_t value);

  private:
  ::uint32_t _internal_analog0() const;
  void _internal_set_analog0(::uint32_t value);

  public:
  // uint32 analog1 = 5;
  void clear_analog1() ;
  ::uint32_t analog1() const;
  void set_analog1(::uint32_t value);

  private:
  ::uint32_t _internal_analog1() const;
  void _internal_set_analog1(::uint32_t value);

  public:
  // uint32 version = 6;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SRKeyEndtoolTx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t din_;
    ::uint32_t tool_status_;
    ::uint32_t tool_location_;
    ::uint32_t analog0_;
    ::uint32_t analog1_;
    ::uint32_t version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IOBoardTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.IOBoardTx) */ {
 public:
  inline IOBoardTx() : IOBoardTx(nullptr) {}
  ~IOBoardTx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IOBoardTx(::google::protobuf::internal::ConstantInitialized);

  IOBoardTx(const IOBoardTx& from);
  IOBoardTx(IOBoardTx&& from) noexcept
    : IOBoardTx() {
    *this = ::std::move(from);
  }

  inline IOBoardTx& operator=(const IOBoardTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOBoardTx& operator=(IOBoardTx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IOBoardTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const IOBoardTx* internal_default_instance() {
    return reinterpret_cast<const IOBoardTx*>(
               &_IOBoardTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(IOBoardTx& a, IOBoardTx& b) {
    a.Swap(&b);
  }
  inline void Swap(IOBoardTx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IOBoardTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IOBoardTx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IOBoardTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IOBoardTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IOBoardTx& from) {
    IOBoardTx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOBoardTx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.IOBoardTx";
  }
  protected:
  explicit IOBoardTx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFtSensorFieldNumber = 6,
    kDi5VFieldNumber = 1,
    kDi24V1FieldNumber = 2,
    kDi24V2FieldNumber = 3,
    kAi1FieldNumber = 4,
    kAi2FieldNumber = 5,
  };
  // .Nrmk.IndyFramework.FTSensor ft_sensor = 6;
  bool has_ft_sensor() const;
  void clear_ft_sensor() ;
  const ::Nrmk::IndyFramework::FTSensor& ft_sensor() const;
  PROTOBUF_NODISCARD ::Nrmk::IndyFramework::FTSensor* release_ft_sensor();
  ::Nrmk::IndyFramework::FTSensor* mutable_ft_sensor();
  void set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value);
  void unsafe_arena_set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value);
  ::Nrmk::IndyFramework::FTSensor* unsafe_arena_release_ft_sensor();

  private:
  const ::Nrmk::IndyFramework::FTSensor& _internal_ft_sensor() const;
  ::Nrmk::IndyFramework::FTSensor* _internal_mutable_ft_sensor();

  public:
  // uint32 di5v = 1;
  void clear_di5v() ;
  ::uint32_t di5v() const;
  void set_di5v(::uint32_t value);

  private:
  ::uint32_t _internal_di5v() const;
  void _internal_set_di5v(::uint32_t value);

  public:
  // uint32 di24v1 = 2;
  void clear_di24v1() ;
  ::uint32_t di24v1() const;
  void set_di24v1(::uint32_t value);

  private:
  ::uint32_t _internal_di24v1() const;
  void _internal_set_di24v1(::uint32_t value);

  public:
  // uint32 di24v2 = 3;
  void clear_di24v2() ;
  ::uint32_t di24v2() const;
  void set_di24v2(::uint32_t value);

  private:
  ::uint32_t _internal_di24v2() const;
  void _internal_set_di24v2(::uint32_t value);

  public:
  // uint32 ai1 = 4;
  void clear_ai1() ;
  ::uint32_t ai1() const;
  void set_ai1(::uint32_t value);

  private:
  ::uint32_t _internal_ai1() const;
  void _internal_set_ai1(::uint32_t value);

  public:
  // uint32 ai2 = 5;
  void clear_ai2() ;
  ::uint32_t ai2() const;
  void set_ai2(::uint32_t value);

  private:
  ::uint32_t _internal_ai2() const;
  void _internal_set_ai2(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.IOBoardTx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Nrmk::IndyFramework::FTSensor* ft_sensor_;
    ::uint32_t di5v_;
    ::uint32_t di24v1_;
    ::uint32_t di24v2_;
    ::uint32_t ai1_;
    ::uint32_t ai2_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IOBoardRx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.IOBoardRx) */ {
 public:
  inline IOBoardRx() : IOBoardRx(nullptr) {}
  ~IOBoardRx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IOBoardRx(::google::protobuf::internal::ConstantInitialized);

  IOBoardRx(const IOBoardRx& from);
  IOBoardRx(IOBoardRx&& from) noexcept
    : IOBoardRx() {
    *this = ::std::move(from);
  }

  inline IOBoardRx& operator=(const IOBoardRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOBoardRx& operator=(IOBoardRx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IOBoardRx& default_instance() {
    return *internal_default_instance();
  }
  static inline const IOBoardRx* internal_default_instance() {
    return reinterpret_cast<const IOBoardRx*>(
               &_IOBoardRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(IOBoardRx& a, IOBoardRx& b) {
    a.Swap(&b);
  }
  inline void Swap(IOBoardRx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IOBoardRx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IOBoardRx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IOBoardRx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IOBoardRx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IOBoardRx& from) {
    IOBoardRx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOBoardRx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.IOBoardRx";
  }
  protected:
  explicit IOBoardRx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDo5VFieldNumber = 1,
    kDo24V1FieldNumber = 2,
    kDo24V2FieldNumber = 3,
    kAo1FieldNumber = 4,
    kAo2FieldNumber = 5,
    kFtParamFieldNumber = 6,
  };
  // uint32 do5v = 1;
  void clear_do5v() ;
  ::uint32_t do5v() const;
  void set_do5v(::uint32_t value);

  private:
  ::uint32_t _internal_do5v() const;
  void _internal_set_do5v(::uint32_t value);

  public:
  // uint32 do24v1 = 2;
  void clear_do24v1() ;
  ::uint32_t do24v1() const;
  void set_do24v1(::uint32_t value);

  private:
  ::uint32_t _internal_do24v1() const;
  void _internal_set_do24v1(::uint32_t value);

  public:
  // uint32 do24v2 = 3;
  void clear_do24v2() ;
  ::uint32_t do24v2() const;
  void set_do24v2(::uint32_t value);

  private:
  ::uint32_t _internal_do24v2() const;
  void _internal_set_do24v2(::uint32_t value);

  public:
  // uint32 ao1 = 4;
  void clear_ao1() ;
  ::uint32_t ao1() const;
  void set_ao1(::uint32_t value);

  private:
  ::uint32_t _internal_ao1() const;
  void _internal_set_ao1(::uint32_t value);

  public:
  // uint32 ao2 = 5;
  void clear_ao2() ;
  ::uint32_t ao2() const;
  void set_ao2(::uint32_t value);

  private:
  ::uint32_t _internal_ao2() const;
  void _internal_set_ao2(::uint32_t value);

  public:
  // uint32 ft_param = 6;
  void clear_ft_param() ;
  ::uint32_t ft_param() const;
  void set_ft_param(::uint32_t value);

  private:
  ::uint32_t _internal_ft_param() const;
  void _internal_set_ft_param(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.IOBoardRx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t do5v_;
    ::uint32_t do24v1_;
    ::uint32_t do24v2_;
    ::uint32_t ao1_;
    ::uint32_t ao2_;
    ::uint32_t ft_param_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DIOIndex final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.DIOIndex) */ {
 public:
  inline DIOIndex() : DIOIndex(nullptr) {}
  ~DIOIndex() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DIOIndex(::google::protobuf::internal::ConstantInitialized);

  DIOIndex(const DIOIndex& from);
  DIOIndex(DIOIndex&& from) noexcept
    : DIOIndex() {
    *this = ::std::move(from);
  }

  inline DIOIndex& operator=(const DIOIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline DIOIndex& operator=(DIOIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DIOIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const DIOIndex* internal_default_instance() {
    return reinterpret_cast<const DIOIndex*>(
               &_DIOIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(DIOIndex& a, DIOIndex& b) {
    a.Swap(&b);
  }
  inline void Swap(DIOIndex* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DIOIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DIOIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DIOIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DIOIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DIOIndex& from) {
    DIOIndex::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DIOIndex* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.DIOIndex";
  }
  protected:
  explicit DIOIndex(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDioIndexFieldNumber = 1,
  };
  // uint32 dioIndex = 1;
  void clear_dioindex() ;
  ::uint32_t dioindex() const;
  void set_dioindex(::uint32_t value);

  private:
  ::uint32_t _internal_dioindex() const;
  void _internal_set_dioindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.DIOIndex)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t dioindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DIODigitalInput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.DIODigitalInput) */ {
 public:
  inline DIODigitalInput() : DIODigitalInput(nullptr) {}
  ~DIODigitalInput() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DIODigitalInput(::google::protobuf::internal::ConstantInitialized);

  DIODigitalInput(const DIODigitalInput& from);
  DIODigitalInput(DIODigitalInput&& from) noexcept
    : DIODigitalInput() {
    *this = ::std::move(from);
  }

  inline DIODigitalInput& operator=(const DIODigitalInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline DIODigitalInput& operator=(DIODigitalInput&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DIODigitalInput& default_instance() {
    return *internal_default_instance();
  }
  static inline const DIODigitalInput* internal_default_instance() {
    return reinterpret_cast<const DIODigitalInput*>(
               &_DIODigitalInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(DIODigitalInput& a, DIODigitalInput& b) {
    a.Swap(&b);
  }
  inline void Swap(DIODigitalInput* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DIODigitalInput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DIODigitalInput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DIODigitalInput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DIODigitalInput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DIODigitalInput& from) {
    DIODigitalInput::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DIODigitalInput* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.DIODigitalInput";
  }
  protected:
  explicit DIODigitalInput(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDiListFieldNumber = 2,
    kDioIndexFieldNumber = 1,
  };
  // repeated uint32 di_list = 2;
  int di_list_size() const;
  private:
  int _internal_di_list_size() const;

  public:
  void clear_di_list() ;
  ::uint32_t di_list(int index) const;
  void set_di_list(int index, ::uint32_t value);
  void add_di_list(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& di_list() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_di_list();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_di_list() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_di_list();

  public:
  // uint32 dioIndex = 1;
  void clear_dioindex() ;
  ::uint32_t dioindex() const;
  void set_dioindex(::uint32_t value);

  private:
  ::uint32_t _internal_dioindex() const;
  void _internal_set_dioindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.DIODigitalInput)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::uint32_t> di_list_;
    mutable ::google::protobuf::internal::CachedSize _di_list_cached_byte_size_;
    ::uint32_t dioindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DIODigitalOutput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.DIODigitalOutput) */ {
 public:
  inline DIODigitalOutput() : DIODigitalOutput(nullptr) {}
  ~DIODigitalOutput() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DIODigitalOutput(::google::protobuf::internal::ConstantInitialized);

  DIODigitalOutput(const DIODigitalOutput& from);
  DIODigitalOutput(DIODigitalOutput&& from) noexcept
    : DIODigitalOutput() {
    *this = ::std::move(from);
  }

  inline DIODigitalOutput& operator=(const DIODigitalOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline DIODigitalOutput& operator=(DIODigitalOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DIODigitalOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const DIODigitalOutput* internal_default_instance() {
    return reinterpret_cast<const DIODigitalOutput*>(
               &_DIODigitalOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(DIODigitalOutput& a, DIODigitalOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(DIODigitalOutput* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DIODigitalOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DIODigitalOutput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DIODigitalOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DIODigitalOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DIODigitalOutput& from) {
    DIODigitalOutput::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DIODigitalOutput* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.DIODigitalOutput";
  }
  protected:
  explicit DIODigitalOutput(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoListFieldNumber = 2,
    kDioIndexFieldNumber = 1,
  };
  // repeated uint32 do_list = 2;
  int do_list_size() const;
  private:
  int _internal_do_list_size() const;

  public:
  void clear_do_list() ;
  ::uint32_t do_list(int index) const;
  void set_do_list(int index, ::uint32_t value);
  void add_do_list(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& do_list() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_do_list();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_do_list() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_do_list();

  public:
  // uint32 dioIndex = 1;
  void clear_dioindex() ;
  ::uint32_t dioindex() const;
  void set_dioindex(::uint32_t value);

  private:
  ::uint32_t _internal_dioindex() const;
  void _internal_set_dioindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.DIODigitalOutput)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::uint32_t> do_list_;
    mutable ::google::protobuf::internal::CachedSize _do_list_cached_byte_size_;
    ::uint32_t dioindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ServoParam final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ServoParam) */ {
 public:
  inline ServoParam() : ServoParam(nullptr) {}
  ~ServoParam() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServoParam(::google::protobuf::internal::ConstantInitialized);

  ServoParam(const ServoParam& from);
  ServoParam(ServoParam&& from) noexcept
    : ServoParam() {
    *this = ::std::move(from);
  }

  inline ServoParam& operator=(const ServoParam& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoParam& operator=(ServoParam&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoParam& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServoParam* internal_default_instance() {
    return reinterpret_cast<const ServoParam*>(
               &_ServoParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(ServoParam& a, ServoParam& b) {
    a.Swap(&b);
  }
  inline void Swap(ServoParam* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoParam* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoParam* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServoParam>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoParam& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServoParam& from) {
    ServoParam::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoParam* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ServoParam";
  }
  protected:
  explicit ServoParam(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlaveIdxFieldNumber = 1,
    kValFieldNumber = 2,
  };
  // uint32 slaveIdx = 1;
  void clear_slaveidx() ;
  ::uint32_t slaveidx() const;
  void set_slaveidx(::uint32_t value);

  private:
  ::uint32_t _internal_slaveidx() const;
  void _internal_set_slaveidx(::uint32_t value);

  public:
  // int32 val = 2;
  void clear_val() ;
  ::int32_t val() const;
  void set_val(::int32_t value);

  private:
  ::int32_t _internal_val() const;
  void _internal_set_val(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ServoParam)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t slaveidx_;
    ::int32_t val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SDOIntVal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SDOIntVal) */ {
 public:
  inline SDOIntVal() : SDOIntVal(nullptr) {}
  ~SDOIntVal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SDOIntVal(::google::protobuf::internal::ConstantInitialized);

  SDOIntVal(const SDOIntVal& from);
  SDOIntVal(SDOIntVal&& from) noexcept
    : SDOIntVal() {
    *this = ::std::move(from);
  }

  inline SDOIntVal& operator=(const SDOIntVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline SDOIntVal& operator=(SDOIntVal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SDOIntVal& default_instance() {
    return *internal_default_instance();
  }
  static inline const SDOIntVal* internal_default_instance() {
    return reinterpret_cast<const SDOIntVal*>(
               &_SDOIntVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(SDOIntVal& a, SDOIntVal& b) {
    a.Swap(&b);
  }
  inline void Swap(SDOIntVal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SDOIntVal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SDOIntVal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SDOIntVal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SDOIntVal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SDOIntVal& from) {
    SDOIntVal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SDOIntVal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SDOIntVal";
  }
  protected:
  explicit SDOIntVal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // int32 val = 1;
  void clear_val() ;
  ::int32_t val() const;
  void set_val(::int32_t value);

  private:
  ::int32_t _internal_val() const;
  void _internal_set_val(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SDOIntVal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SDOFloatVal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SDOFloatVal) */ {
 public:
  inline SDOFloatVal() : SDOFloatVal(nullptr) {}
  ~SDOFloatVal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SDOFloatVal(::google::protobuf::internal::ConstantInitialized);

  SDOFloatVal(const SDOFloatVal& from);
  SDOFloatVal(SDOFloatVal&& from) noexcept
    : SDOFloatVal() {
    *this = ::std::move(from);
  }

  inline SDOFloatVal& operator=(const SDOFloatVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline SDOFloatVal& operator=(SDOFloatVal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SDOFloatVal& default_instance() {
    return *internal_default_instance();
  }
  static inline const SDOFloatVal* internal_default_instance() {
    return reinterpret_cast<const SDOFloatVal*>(
               &_SDOFloatVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(SDOFloatVal& a, SDOFloatVal& b) {
    a.Swap(&b);
  }
  inline void Swap(SDOFloatVal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SDOFloatVal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SDOFloatVal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SDOFloatVal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SDOFloatVal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SDOFloatVal& from) {
    SDOFloatVal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SDOFloatVal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SDOFloatVal";
  }
  protected:
  explicit SDOFloatVal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // float val = 1;
  void clear_val() ;
  float val() const;
  void set_val(float value);

  private:
  float _internal_val() const;
  void _internal_set_val(float value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SDOFloatVal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SDOStrVal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SDOStrVal) */ {
 public:
  inline SDOStrVal() : SDOStrVal(nullptr) {}
  ~SDOStrVal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SDOStrVal(::google::protobuf::internal::ConstantInitialized);

  SDOStrVal(const SDOStrVal& from);
  SDOStrVal(SDOStrVal&& from) noexcept
    : SDOStrVal() {
    *this = ::std::move(from);
  }

  inline SDOStrVal& operator=(const SDOStrVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline SDOStrVal& operator=(SDOStrVal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SDOStrVal& default_instance() {
    return *internal_default_instance();
  }
  static inline const SDOStrVal* internal_default_instance() {
    return reinterpret_cast<const SDOStrVal*>(
               &_SDOStrVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(SDOStrVal& a, SDOStrVal& b) {
    a.Swap(&b);
  }
  inline void Swap(SDOStrVal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SDOStrVal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SDOStrVal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SDOStrVal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SDOStrVal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SDOStrVal& from) {
    SDOStrVal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SDOStrVal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SDOStrVal";
  }
  protected:
  explicit SDOStrVal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // string val = 1;
  void clear_val() ;
  const std::string& val() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_val(Arg_&& arg, Args_... args);
  std::string* mutable_val();
  PROTOBUF_NODISCARD std::string* release_val();
  void set_allocated_val(std::string* ptr);

  private:
  const std::string& _internal_val() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_val(
      const std::string& value);
  std::string* _internal_mutable_val();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SDOStrVal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 40, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EtherCATInfo final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.EtherCATInfo) */ {
 public:
  inline EtherCATInfo() : EtherCATInfo(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EtherCATInfo(::google::protobuf::internal::ConstantInitialized);

  EtherCATInfo(const EtherCATInfo& from);
  EtherCATInfo(EtherCATInfo&& from) noexcept
    : EtherCATInfo() {
    *this = ::std::move(from);
  }

  inline EtherCATInfo& operator=(const EtherCATInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline EtherCATInfo& operator=(EtherCATInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EtherCATInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const EtherCATInfo* internal_default_instance() {
    return reinterpret_cast<const EtherCATInfo*>(
               &_EtherCATInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(EtherCATInfo& a, EtherCATInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(EtherCATInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EtherCATInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EtherCATInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EtherCATInfo>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EtherCATInfo& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EtherCATInfo& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.EtherCATInfo";
  }
  protected:
  explicit EtherCATInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.EtherCATInfo)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RobotZeroCount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.RobotZeroCount) */ {
 public:
  inline RobotZeroCount() : RobotZeroCount(nullptr) {}
  ~RobotZeroCount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RobotZeroCount(::google::protobuf::internal::ConstantInitialized);

  RobotZeroCount(const RobotZeroCount& from);
  RobotZeroCount(RobotZeroCount&& from) noexcept
    : RobotZeroCount() {
    *this = ::std::move(from);
  }

  inline RobotZeroCount& operator=(const RobotZeroCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline RobotZeroCount& operator=(RobotZeroCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RobotZeroCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const RobotZeroCount* internal_default_instance() {
    return reinterpret_cast<const RobotZeroCount*>(
               &_RobotZeroCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(RobotZeroCount& a, RobotZeroCount& b) {
    a.Swap(&b);
  }
  inline void Swap(RobotZeroCount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RobotZeroCount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RobotZeroCount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RobotZeroCount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RobotZeroCount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RobotZeroCount& from) {
    RobotZeroCount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotZeroCount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.RobotZeroCount";
  }
  protected:
  explicit RobotZeroCount(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 1,
  };
  // int32 count = 1;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.RobotZeroCount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ethercat_5fmsgs_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MasterStatus

// uint32 status = 1;
inline void MasterStatus::clear_status() {
  _impl_.status_ = 0u;
}
inline ::uint32_t MasterStatus::status() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MasterStatus.status)
  return _internal_status();
}
inline void MasterStatus::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MasterStatus.status)
}
inline ::uint32_t MasterStatus::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void MasterStatus::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SlaveStatus

// repeated uint32 status = 1;
inline int SlaveStatus::_internal_status_size() const {
  return _internal_status().size();
}
inline int SlaveStatus::status_size() const {
  return _internal_status_size();
}
inline void SlaveStatus::clear_status() {
  _internal_mutable_status()->Clear();
}
inline ::uint32_t SlaveStatus::status(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SlaveStatus.status)
  return _internal_status().Get(index);
}
inline void SlaveStatus::set_status(int index, ::uint32_t value) {
  _internal_mutable_status()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SlaveStatus.status)
}
inline void SlaveStatus::add_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_status()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.SlaveStatus.status)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SlaveStatus::status() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.SlaveStatus.status)
  return _internal_status();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SlaveStatus::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.SlaveStatus.status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_status();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& SlaveStatus::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SlaveStatus::_internal_mutable_status() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.status_;
}

// -------------------------------------------------------------------

// EcatDomainStatus

// uint32 status = 1;
inline void EcatDomainStatus::clear_status() {
  _impl_.status_ = 0u;
}
inline ::uint32_t EcatDomainStatus::status() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EcatDomainStatus.status)
  return _internal_status();
}
inline void EcatDomainStatus::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EcatDomainStatus.status)
}
inline ::uint32_t EcatDomainStatus::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void EcatDomainStatus::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// EcatSystemReady

// repeated bool ready = 1;
inline int EcatSystemReady::_internal_ready_size() const {
  return _internal_ready().size();
}
inline int EcatSystemReady::ready_size() const {
  return _internal_ready_size();
}
inline void EcatSystemReady::clear_ready() {
  _internal_mutable_ready()->Clear();
}
inline bool EcatSystemReady::ready(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EcatSystemReady.ready)
  return _internal_ready().Get(index);
}
inline void EcatSystemReady::set_ready(int index, bool value) {
  _internal_mutable_ready()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EcatSystemReady.ready)
}
inline void EcatSystemReady::add_ready(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ready()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.EcatSystemReady.ready)
}
inline const ::google::protobuf::RepeatedField<bool>& EcatSystemReady::ready() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.EcatSystemReady.ready)
  return _internal_ready();
}
inline ::google::protobuf::RepeatedField<bool>* EcatSystemReady::mutable_ready() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.EcatSystemReady.ready)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ready();
}

inline const ::google::protobuf::RepeatedField<bool>& EcatSystemReady::_internal_ready() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ready_;
}
inline ::google::protobuf::RepeatedField<bool>* EcatSystemReady::_internal_mutable_ready() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ready_;
}

// -------------------------------------------------------------------

// EcatServoOn

// repeated bool servo = 1;
inline int EcatServoOn::_internal_servo_size() const {
  return _internal_servo().size();
}
inline int EcatServoOn::servo_size() const {
  return _internal_servo_size();
}
inline void EcatServoOn::clear_servo() {
  _internal_mutable_servo()->Clear();
}
inline bool EcatServoOn::servo(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EcatServoOn.servo)
  return _internal_servo().Get(index);
}
inline void EcatServoOn::set_servo(int index, bool value) {
  _internal_mutable_servo()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EcatServoOn.servo)
}
inline void EcatServoOn::add_servo(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_servo()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.EcatServoOn.servo)
}
inline const ::google::protobuf::RepeatedField<bool>& EcatServoOn::servo() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.EcatServoOn.servo)
  return _internal_servo();
}
inline ::google::protobuf::RepeatedField<bool>* EcatServoOn::mutable_servo() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.EcatServoOn.servo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_servo();
}

inline const ::google::protobuf::RepeatedField<bool>& EcatServoOn::_internal_servo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.servo_;
}
inline ::google::protobuf::RepeatedField<bool>* EcatServoOn::_internal_mutable_servo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.servo_;
}

// -------------------------------------------------------------------

// SlaveTypeNum

// uint32 num_servo = 1;
inline void SlaveTypeNum::clear_num_servo() {
  _impl_.num_servo_ = 0u;
}
inline ::uint32_t SlaveTypeNum::num_servo() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SlaveTypeNum.num_servo)
  return _internal_num_servo();
}
inline void SlaveTypeNum::set_num_servo(::uint32_t value) {
  _internal_set_num_servo(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SlaveTypeNum.num_servo)
}
inline ::uint32_t SlaveTypeNum::_internal_num_servo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_servo_;
}
inline void SlaveTypeNum::_internal_set_num_servo(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_servo_ = value;
}

// uint32 num_ioboard = 2;
inline void SlaveTypeNum::clear_num_ioboard() {
  _impl_.num_ioboard_ = 0u;
}
inline ::uint32_t SlaveTypeNum::num_ioboard() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SlaveTypeNum.num_ioboard)
  return _internal_num_ioboard();
}
inline void SlaveTypeNum::set_num_ioboard(::uint32_t value) {
  _internal_set_num_ioboard(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SlaveTypeNum.num_ioboard)
}
inline ::uint32_t SlaveTypeNum::_internal_num_ioboard() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_ioboard_;
}
inline void SlaveTypeNum::_internal_set_num_ioboard(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_ioboard_ = value;
}

// uint32 num_endtool = 3;
inline void SlaveTypeNum::clear_num_endtool() {
  _impl_.num_endtool_ = 0u;
}
inline ::uint32_t SlaveTypeNum::num_endtool() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SlaveTypeNum.num_endtool)
  return _internal_num_endtool();
}
inline void SlaveTypeNum::set_num_endtool(::uint32_t value) {
  _internal_set_num_endtool(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SlaveTypeNum.num_endtool)
}
inline ::uint32_t SlaveTypeNum::_internal_num_endtool() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_endtool_;
}
inline void SlaveTypeNum::_internal_set_num_endtool(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_endtool_ = value;
}

// uint32 num_dio = 4;
inline void SlaveTypeNum::clear_num_dio() {
  _impl_.num_dio_ = 0u;
}
inline ::uint32_t SlaveTypeNum::num_dio() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SlaveTypeNum.num_dio)
  return _internal_num_dio();
}
inline void SlaveTypeNum::set_num_dio(::uint32_t value) {
  _internal_set_num_dio(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SlaveTypeNum.num_dio)
}
inline ::uint32_t SlaveTypeNum::_internal_num_dio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_dio_;
}
inline void SlaveTypeNum::_internal_set_num_dio(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_dio_ = value;
}

// -------------------------------------------------------------------

// ServoIndex

// uint32 servoIndex = 1;
inline void ServoIndex::clear_servoindex() {
  _impl_.servoindex_ = 0u;
}
inline ::uint32_t ServoIndex::servoindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoIndex.servoIndex)
  return _internal_servoindex();
}
inline void ServoIndex::set_servoindex(::uint32_t value) {
  _internal_set_servoindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoIndex.servoIndex)
}
inline ::uint32_t ServoIndex::_internal_servoindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.servoindex_;
}
inline void ServoIndex::_internal_set_servoindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.servoindex_ = value;
}

// -------------------------------------------------------------------

// EcatIndex

// uint32 ecatIndex = 1;
inline void EcatIndex::clear_ecatindex() {
  _impl_.ecatindex_ = 0u;
}
inline ::uint32_t EcatIndex::ecatindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EcatIndex.ecatIndex)
  return _internal_ecatindex();
}
inline void EcatIndex::set_ecatindex(::uint32_t value) {
  _internal_set_ecatindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EcatIndex.ecatIndex)
}
inline ::uint32_t EcatIndex::_internal_ecatindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ecatindex_;
}
inline void EcatIndex::_internal_set_ecatindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ecatindex_ = value;
}

// -------------------------------------------------------------------

// ServoTx

// uint32 statusWord = 1;
inline void ServoTx::clear_statusword() {
  _impl_.statusword_ = 0u;
}
inline ::uint32_t ServoTx::statusword() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTx.statusWord)
  return _internal_statusword();
}
inline void ServoTx::set_statusword(::uint32_t value) {
  _internal_set_statusword(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTx.statusWord)
}
inline ::uint32_t ServoTx::_internal_statusword() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.statusword_;
}
inline void ServoTx::_internal_set_statusword(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.statusword_ = value;
}

// int32 modeOpDisp = 2;
inline void ServoTx::clear_modeopdisp() {
  _impl_.modeopdisp_ = 0;
}
inline ::int32_t ServoTx::modeopdisp() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTx.modeOpDisp)
  return _internal_modeopdisp();
}
inline void ServoTx::set_modeopdisp(::int32_t value) {
  _internal_set_modeopdisp(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTx.modeOpDisp)
}
inline ::int32_t ServoTx::_internal_modeopdisp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modeopdisp_;
}
inline void ServoTx::_internal_set_modeopdisp(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.modeopdisp_ = value;
}

// int32 actualPosition = 3;
inline void ServoTx::clear_actualposition() {
  _impl_.actualposition_ = 0;
}
inline ::int32_t ServoTx::actualposition() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTx.actualPosition)
  return _internal_actualposition();
}
inline void ServoTx::set_actualposition(::int32_t value) {
  _internal_set_actualposition(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTx.actualPosition)
}
inline ::int32_t ServoTx::_internal_actualposition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualposition_;
}
inline void ServoTx::_internal_set_actualposition(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualposition_ = value;
}

// int32 actualVelocity = 4;
inline void ServoTx::clear_actualvelocity() {
  _impl_.actualvelocity_ = 0;
}
inline ::int32_t ServoTx::actualvelocity() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTx.actualVelocity)
  return _internal_actualvelocity();
}
inline void ServoTx::set_actualvelocity(::int32_t value) {
  _internal_set_actualvelocity(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTx.actualVelocity)
}
inline ::int32_t ServoTx::_internal_actualvelocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualvelocity_;
}
inline void ServoTx::_internal_set_actualvelocity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualvelocity_ = value;
}

// int32 actualTorque = 5;
inline void ServoTx::clear_actualtorque() {
  _impl_.actualtorque_ = 0;
}
inline ::int32_t ServoTx::actualtorque() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTx.actualTorque)
  return _internal_actualtorque();
}
inline void ServoTx::set_actualtorque(::int32_t value) {
  _internal_set_actualtorque(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTx.actualTorque)
}
inline ::int32_t ServoTx::_internal_actualtorque() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualtorque_;
}
inline void ServoTx::_internal_set_actualtorque(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualtorque_ = value;
}

// -------------------------------------------------------------------

// ServoRx

// uint32 controlWord = 1;
inline void ServoRx::clear_controlword() {
  _impl_.controlword_ = 0u;
}
inline ::uint32_t ServoRx::controlword() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRx.controlWord)
  return _internal_controlword();
}
inline void ServoRx::set_controlword(::uint32_t value) {
  _internal_set_controlword(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRx.controlWord)
}
inline ::uint32_t ServoRx::_internal_controlword() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controlword_;
}
inline void ServoRx::_internal_set_controlword(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controlword_ = value;
}

// int32 modeOp = 2;
inline void ServoRx::clear_modeop() {
  _impl_.modeop_ = 0;
}
inline ::int32_t ServoRx::modeop() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRx.modeOp)
  return _internal_modeop();
}
inline void ServoRx::set_modeop(::int32_t value) {
  _internal_set_modeop(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRx.modeOp)
}
inline ::int32_t ServoRx::_internal_modeop() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modeop_;
}
inline void ServoRx::_internal_set_modeop(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.modeop_ = value;
}

// int64 targetPosition = 3;
inline void ServoRx::clear_targetposition() {
  _impl_.targetposition_ = ::int64_t{0};
}
inline ::int64_t ServoRx::targetposition() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRx.targetPosition)
  return _internal_targetposition();
}
inline void ServoRx::set_targetposition(::int64_t value) {
  _internal_set_targetposition(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRx.targetPosition)
}
inline ::int64_t ServoRx::_internal_targetposition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetposition_;
}
inline void ServoRx::_internal_set_targetposition(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetposition_ = value;
}

// int32 targetVelocity = 4;
inline void ServoRx::clear_targetvelocity() {
  _impl_.targetvelocity_ = 0;
}
inline ::int32_t ServoRx::targetvelocity() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRx.targetVelocity)
  return _internal_targetvelocity();
}
inline void ServoRx::set_targetvelocity(::int32_t value) {
  _internal_set_targetvelocity(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRx.targetVelocity)
}
inline ::int32_t ServoRx::_internal_targetvelocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetvelocity_;
}
inline void ServoRx::_internal_set_targetvelocity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetvelocity_ = value;
}

// int32 targetTorque = 5;
inline void ServoRx::clear_targettorque() {
  _impl_.targettorque_ = 0;
}
inline ::int32_t ServoRx::targettorque() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRx.targetTorque)
  return _internal_targettorque();
}
inline void ServoRx::set_targettorque(::int32_t value) {
  _internal_set_targettorque(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRx.targetTorque)
}
inline ::int32_t ServoRx::_internal_targettorque() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targettorque_;
}
inline void ServoRx::_internal_set_targettorque(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targettorque_ = value;
}

// -------------------------------------------------------------------

// ServoTxIndex

// uint32 servoIndex = 1;
inline void ServoTxIndex::clear_servoindex() {
  _impl_.servoindex_ = 0u;
}
inline ::uint32_t ServoTxIndex::servoindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxIndex.servoIndex)
  return _internal_servoindex();
}
inline void ServoTxIndex::set_servoindex(::uint32_t value) {
  _internal_set_servoindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxIndex.servoIndex)
}
inline ::uint32_t ServoTxIndex::_internal_servoindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.servoindex_;
}
inline void ServoTxIndex::_internal_set_servoindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.servoindex_ = value;
}

// .Nrmk.IndyFramework.ServoTx tx = 2;
inline bool ServoTxIndex::has_tx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_ != nullptr);
  return value;
}
inline void ServoTxIndex::clear_tx() {
  if (_impl_.tx_ != nullptr) _impl_.tx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Nrmk::IndyFramework::ServoTx& ServoTxIndex::_internal_tx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Nrmk::IndyFramework::ServoTx* p = _impl_.tx_;
  return p != nullptr ? *p : reinterpret_cast<const ::Nrmk::IndyFramework::ServoTx&>(::Nrmk::IndyFramework::_ServoTx_default_instance_);
}
inline const ::Nrmk::IndyFramework::ServoTx& ServoTxIndex::tx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxIndex.tx)
  return _internal_tx();
}
inline void ServoTxIndex::unsafe_arena_set_allocated_tx(::Nrmk::IndyFramework::ServoTx* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }
  _impl_.tx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoTx*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Nrmk.IndyFramework.ServoTxIndex.tx)
}
inline ::Nrmk::IndyFramework::ServoTx* ServoTxIndex::release_tx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::ServoTx* released = _impl_.tx_;
  _impl_.tx_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Nrmk::IndyFramework::ServoTx* ServoTxIndex::unsafe_arena_release_tx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Nrmk.IndyFramework.ServoTxIndex.tx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::ServoTx* temp = _impl_.tx_;
  _impl_.tx_ = nullptr;
  return temp;
}
inline ::Nrmk::IndyFramework::ServoTx* ServoTxIndex::_internal_mutable_tx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.tx_ == nullptr) {
    auto* p = CreateMaybeMessage<::Nrmk::IndyFramework::ServoTx>(GetArenaForAllocation());
    _impl_.tx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoTx*>(p);
  }
  return _impl_.tx_;
}
inline ::Nrmk::IndyFramework::ServoTx* ServoTxIndex::mutable_tx() {
  ::Nrmk::IndyFramework::ServoTx* _msg = _internal_mutable_tx();
  // @@protoc_insertion_point(field_mutable:Nrmk.IndyFramework.ServoTxIndex.tx)
  return _msg;
}
inline void ServoTxIndex::set_allocated_tx(::Nrmk::IndyFramework::ServoTx* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Nrmk::IndyFramework::ServoTx*>(_impl_.tx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Nrmk::IndyFramework::ServoTx*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoTx*>(value);
  // @@protoc_insertion_point(field_set_allocated:Nrmk.IndyFramework.ServoTxIndex.tx)
}

// -------------------------------------------------------------------

// ServoRxIndex

// uint32 servoIndex = 1;
inline void ServoRxIndex::clear_servoindex() {
  _impl_.servoindex_ = 0u;
}
inline ::uint32_t ServoRxIndex::servoindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxIndex.servoIndex)
  return _internal_servoindex();
}
inline void ServoRxIndex::set_servoindex(::uint32_t value) {
  _internal_set_servoindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxIndex.servoIndex)
}
inline ::uint32_t ServoRxIndex::_internal_servoindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.servoindex_;
}
inline void ServoRxIndex::_internal_set_servoindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.servoindex_ = value;
}

// .Nrmk.IndyFramework.ServoRx rx = 2;
inline bool ServoRxIndex::has_rx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rx_ != nullptr);
  return value;
}
inline void ServoRxIndex::clear_rx() {
  if (_impl_.rx_ != nullptr) _impl_.rx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Nrmk::IndyFramework::ServoRx& ServoRxIndex::_internal_rx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Nrmk::IndyFramework::ServoRx* p = _impl_.rx_;
  return p != nullptr ? *p : reinterpret_cast<const ::Nrmk::IndyFramework::ServoRx&>(::Nrmk::IndyFramework::_ServoRx_default_instance_);
}
inline const ::Nrmk::IndyFramework::ServoRx& ServoRxIndex::rx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxIndex.rx)
  return _internal_rx();
}
inline void ServoRxIndex::unsafe_arena_set_allocated_rx(::Nrmk::IndyFramework::ServoRx* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rx_);
  }
  _impl_.rx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoRx*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Nrmk.IndyFramework.ServoRxIndex.rx)
}
inline ::Nrmk::IndyFramework::ServoRx* ServoRxIndex::release_rx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::ServoRx* released = _impl_.rx_;
  _impl_.rx_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Nrmk::IndyFramework::ServoRx* ServoRxIndex::unsafe_arena_release_rx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Nrmk.IndyFramework.ServoRxIndex.rx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::ServoRx* temp = _impl_.rx_;
  _impl_.rx_ = nullptr;
  return temp;
}
inline ::Nrmk::IndyFramework::ServoRx* ServoRxIndex::_internal_mutable_rx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.rx_ == nullptr) {
    auto* p = CreateMaybeMessage<::Nrmk::IndyFramework::ServoRx>(GetArenaForAllocation());
    _impl_.rx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoRx*>(p);
  }
  return _impl_.rx_;
}
inline ::Nrmk::IndyFramework::ServoRx* ServoRxIndex::mutable_rx() {
  ::Nrmk::IndyFramework::ServoRx* _msg = _internal_mutable_rx();
  // @@protoc_insertion_point(field_mutable:Nrmk.IndyFramework.ServoRxIndex.rx)
  return _msg;
}
inline void ServoRxIndex::set_allocated_rx(::Nrmk::IndyFramework::ServoRx* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Nrmk::IndyFramework::ServoRx*>(_impl_.rx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Nrmk::IndyFramework::ServoRx*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoRx*>(value);
  // @@protoc_insertion_point(field_set_allocated:Nrmk.IndyFramework.ServoRxIndex.rx)
}

// -------------------------------------------------------------------

// ServoTxKeba

// uint32 statusWord = 1;
inline void ServoTxKeba::clear_statusword() {
  _impl_.statusword_ = 0u;
}
inline ::uint32_t ServoTxKeba::statusword() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.statusWord)
  return _internal_statusword();
}
inline void ServoTxKeba::set_statusword(::uint32_t value) {
  _internal_set_statusword(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.statusWord)
}
inline ::uint32_t ServoTxKeba::_internal_statusword() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.statusword_;
}
inline void ServoTxKeba::_internal_set_statusword(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.statusword_ = value;
}

// uint32 statusWord2 = 2;
inline void ServoTxKeba::clear_statusword2() {
  _impl_.statusword2_ = 0u;
}
inline ::uint32_t ServoTxKeba::statusword2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.statusWord2)
  return _internal_statusword2();
}
inline void ServoTxKeba::set_statusword2(::uint32_t value) {
  _internal_set_statusword2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.statusWord2)
}
inline ::uint32_t ServoTxKeba::_internal_statusword2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.statusword2_;
}
inline void ServoTxKeba::_internal_set_statusword2(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.statusword2_ = value;
}

// uint32 statusWord3 = 3;
inline void ServoTxKeba::clear_statusword3() {
  _impl_.statusword3_ = 0u;
}
inline ::uint32_t ServoTxKeba::statusword3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.statusWord3)
  return _internal_statusword3();
}
inline void ServoTxKeba::set_statusword3(::uint32_t value) {
  _internal_set_statusword3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.statusWord3)
}
inline ::uint32_t ServoTxKeba::_internal_statusword3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.statusword3_;
}
inline void ServoTxKeba::_internal_set_statusword3(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.statusword3_ = value;
}

// int32 actualPosition = 4;
inline void ServoTxKeba::clear_actualposition() {
  _impl_.actualposition_ = 0;
}
inline ::int32_t ServoTxKeba::actualposition() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.actualPosition)
  return _internal_actualposition();
}
inline void ServoTxKeba::set_actualposition(::int32_t value) {
  _internal_set_actualposition(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.actualPosition)
}
inline ::int32_t ServoTxKeba::_internal_actualposition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualposition_;
}
inline void ServoTxKeba::_internal_set_actualposition(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualposition_ = value;
}

// int32 actualPosition2 = 5;
inline void ServoTxKeba::clear_actualposition2() {
  _impl_.actualposition2_ = 0;
}
inline ::int32_t ServoTxKeba::actualposition2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.actualPosition2)
  return _internal_actualposition2();
}
inline void ServoTxKeba::set_actualposition2(::int32_t value) {
  _internal_set_actualposition2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.actualPosition2)
}
inline ::int32_t ServoTxKeba::_internal_actualposition2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualposition2_;
}
inline void ServoTxKeba::_internal_set_actualposition2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualposition2_ = value;
}

// int32 actualPosition3 = 6;
inline void ServoTxKeba::clear_actualposition3() {
  _impl_.actualposition3_ = 0;
}
inline ::int32_t ServoTxKeba::actualposition3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.actualPosition3)
  return _internal_actualposition3();
}
inline void ServoTxKeba::set_actualposition3(::int32_t value) {
  _internal_set_actualposition3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.actualPosition3)
}
inline ::int32_t ServoTxKeba::_internal_actualposition3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualposition3_;
}
inline void ServoTxKeba::_internal_set_actualposition3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualposition3_ = value;
}

// int32 actualVelocity = 7;
inline void ServoTxKeba::clear_actualvelocity() {
  _impl_.actualvelocity_ = 0;
}
inline ::int32_t ServoTxKeba::actualvelocity() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.actualVelocity)
  return _internal_actualvelocity();
}
inline void ServoTxKeba::set_actualvelocity(::int32_t value) {
  _internal_set_actualvelocity(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.actualVelocity)
}
inline ::int32_t ServoTxKeba::_internal_actualvelocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualvelocity_;
}
inline void ServoTxKeba::_internal_set_actualvelocity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualvelocity_ = value;
}

// int32 actualVelocity2 = 8;
inline void ServoTxKeba::clear_actualvelocity2() {
  _impl_.actualvelocity2_ = 0;
}
inline ::int32_t ServoTxKeba::actualvelocity2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.actualVelocity2)
  return _internal_actualvelocity2();
}
inline void ServoTxKeba::set_actualvelocity2(::int32_t value) {
  _internal_set_actualvelocity2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.actualVelocity2)
}
inline ::int32_t ServoTxKeba::_internal_actualvelocity2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualvelocity2_;
}
inline void ServoTxKeba::_internal_set_actualvelocity2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualvelocity2_ = value;
}

// int32 actualVelocity3 = 9;
inline void ServoTxKeba::clear_actualvelocity3() {
  _impl_.actualvelocity3_ = 0;
}
inline ::int32_t ServoTxKeba::actualvelocity3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTxKeba.actualVelocity3)
  return _internal_actualvelocity3();
}
inline void ServoTxKeba::set_actualvelocity3(::int32_t value) {
  _internal_set_actualvelocity3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTxKeba.actualVelocity3)
}
inline ::int32_t ServoTxKeba::_internal_actualvelocity3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualvelocity3_;
}
inline void ServoTxKeba::_internal_set_actualvelocity3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualvelocity3_ = value;
}

// -------------------------------------------------------------------

// ServoRxKeba

// uint32 controlWord = 1;
inline void ServoRxKeba::clear_controlword() {
  _impl_.controlword_ = 0u;
}
inline ::uint32_t ServoRxKeba::controlword() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.controlWord)
  return _internal_controlword();
}
inline void ServoRxKeba::set_controlword(::uint32_t value) {
  _internal_set_controlword(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.controlWord)
}
inline ::uint32_t ServoRxKeba::_internal_controlword() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controlword_;
}
inline void ServoRxKeba::_internal_set_controlword(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controlword_ = value;
}

// uint32 controlWord2 = 2;
inline void ServoRxKeba::clear_controlword2() {
  _impl_.controlword2_ = 0u;
}
inline ::uint32_t ServoRxKeba::controlword2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.controlWord2)
  return _internal_controlword2();
}
inline void ServoRxKeba::set_controlword2(::uint32_t value) {
  _internal_set_controlword2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.controlWord2)
}
inline ::uint32_t ServoRxKeba::_internal_controlword2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controlword2_;
}
inline void ServoRxKeba::_internal_set_controlword2(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controlword2_ = value;
}

// uint32 controlWord3 = 3;
inline void ServoRxKeba::clear_controlword3() {
  _impl_.controlword3_ = 0u;
}
inline ::uint32_t ServoRxKeba::controlword3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.controlWord3)
  return _internal_controlword3();
}
inline void ServoRxKeba::set_controlword3(::uint32_t value) {
  _internal_set_controlword3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.controlWord3)
}
inline ::uint32_t ServoRxKeba::_internal_controlword3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controlword3_;
}
inline void ServoRxKeba::_internal_set_controlword3(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controlword3_ = value;
}

// int64 targetPosition = 4;
inline void ServoRxKeba::clear_targetposition() {
  _impl_.targetposition_ = ::int64_t{0};
}
inline ::int64_t ServoRxKeba::targetposition() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.targetPosition)
  return _internal_targetposition();
}
inline void ServoRxKeba::set_targetposition(::int64_t value) {
  _internal_set_targetposition(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.targetPosition)
}
inline ::int64_t ServoRxKeba::_internal_targetposition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetposition_;
}
inline void ServoRxKeba::_internal_set_targetposition(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetposition_ = value;
}

// int64 targetPosition2 = 5;
inline void ServoRxKeba::clear_targetposition2() {
  _impl_.targetposition2_ = ::int64_t{0};
}
inline ::int64_t ServoRxKeba::targetposition2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.targetPosition2)
  return _internal_targetposition2();
}
inline void ServoRxKeba::set_targetposition2(::int64_t value) {
  _internal_set_targetposition2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.targetPosition2)
}
inline ::int64_t ServoRxKeba::_internal_targetposition2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetposition2_;
}
inline void ServoRxKeba::_internal_set_targetposition2(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetposition2_ = value;
}

// int64 targetPosition3 = 6;
inline void ServoRxKeba::clear_targetposition3() {
  _impl_.targetposition3_ = ::int64_t{0};
}
inline ::int64_t ServoRxKeba::targetposition3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.targetPosition3)
  return _internal_targetposition3();
}
inline void ServoRxKeba::set_targetposition3(::int64_t value) {
  _internal_set_targetposition3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.targetPosition3)
}
inline ::int64_t ServoRxKeba::_internal_targetposition3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetposition3_;
}
inline void ServoRxKeba::_internal_set_targetposition3(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetposition3_ = value;
}

// int32 targetTorque = 7;
inline void ServoRxKeba::clear_targettorque() {
  _impl_.targettorque_ = 0;
}
inline ::int32_t ServoRxKeba::targettorque() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.targetTorque)
  return _internal_targettorque();
}
inline void ServoRxKeba::set_targettorque(::int32_t value) {
  _internal_set_targettorque(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.targetTorque)
}
inline ::int32_t ServoRxKeba::_internal_targettorque() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targettorque_;
}
inline void ServoRxKeba::_internal_set_targettorque(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targettorque_ = value;
}

// int32 targetTorque2 = 8;
inline void ServoRxKeba::clear_targettorque2() {
  _impl_.targettorque2_ = 0;
}
inline ::int32_t ServoRxKeba::targettorque2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.targetTorque2)
  return _internal_targettorque2();
}
inline void ServoRxKeba::set_targettorque2(::int32_t value) {
  _internal_set_targettorque2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.targetTorque2)
}
inline ::int32_t ServoRxKeba::_internal_targettorque2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targettorque2_;
}
inline void ServoRxKeba::_internal_set_targettorque2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targettorque2_ = value;
}

// int32 targetTorque3 = 9;
inline void ServoRxKeba::clear_targettorque3() {
  _impl_.targettorque3_ = 0;
}
inline ::int32_t ServoRxKeba::targettorque3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxKeba.targetTorque3)
  return _internal_targettorque3();
}
inline void ServoRxKeba::set_targettorque3(::int32_t value) {
  _internal_set_targettorque3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxKeba.targetTorque3)
}
inline ::int32_t ServoRxKeba::_internal_targettorque3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targettorque3_;
}
inline void ServoRxKeba::_internal_set_targettorque3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targettorque3_ = value;
}

// -------------------------------------------------------------------

// ServoRxIndexKeba

// uint32 servoIndex = 1;
inline void ServoRxIndexKeba::clear_servoindex() {
  _impl_.servoindex_ = 0u;
}
inline ::uint32_t ServoRxIndexKeba::servoindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxIndexKeba.servoIndex)
  return _internal_servoindex();
}
inline void ServoRxIndexKeba::set_servoindex(::uint32_t value) {
  _internal_set_servoindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoRxIndexKeba.servoIndex)
}
inline ::uint32_t ServoRxIndexKeba::_internal_servoindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.servoindex_;
}
inline void ServoRxIndexKeba::_internal_set_servoindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.servoindex_ = value;
}

// .Nrmk.IndyFramework.ServoRxKeba rx = 2;
inline bool ServoRxIndexKeba::has_rx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rx_ != nullptr);
  return value;
}
inline void ServoRxIndexKeba::clear_rx() {
  if (_impl_.rx_ != nullptr) _impl_.rx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Nrmk::IndyFramework::ServoRxKeba& ServoRxIndexKeba::_internal_rx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Nrmk::IndyFramework::ServoRxKeba* p = _impl_.rx_;
  return p != nullptr ? *p : reinterpret_cast<const ::Nrmk::IndyFramework::ServoRxKeba&>(::Nrmk::IndyFramework::_ServoRxKeba_default_instance_);
}
inline const ::Nrmk::IndyFramework::ServoRxKeba& ServoRxIndexKeba::rx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoRxIndexKeba.rx)
  return _internal_rx();
}
inline void ServoRxIndexKeba::unsafe_arena_set_allocated_rx(::Nrmk::IndyFramework::ServoRxKeba* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rx_);
  }
  _impl_.rx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoRxKeba*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Nrmk.IndyFramework.ServoRxIndexKeba.rx)
}
inline ::Nrmk::IndyFramework::ServoRxKeba* ServoRxIndexKeba::release_rx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::ServoRxKeba* released = _impl_.rx_;
  _impl_.rx_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Nrmk::IndyFramework::ServoRxKeba* ServoRxIndexKeba::unsafe_arena_release_rx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Nrmk.IndyFramework.ServoRxIndexKeba.rx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::ServoRxKeba* temp = _impl_.rx_;
  _impl_.rx_ = nullptr;
  return temp;
}
inline ::Nrmk::IndyFramework::ServoRxKeba* ServoRxIndexKeba::_internal_mutable_rx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.rx_ == nullptr) {
    auto* p = CreateMaybeMessage<::Nrmk::IndyFramework::ServoRxKeba>(GetArenaForAllocation());
    _impl_.rx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoRxKeba*>(p);
  }
  return _impl_.rx_;
}
inline ::Nrmk::IndyFramework::ServoRxKeba* ServoRxIndexKeba::mutable_rx() {
  ::Nrmk::IndyFramework::ServoRxKeba* _msg = _internal_mutable_rx();
  // @@protoc_insertion_point(field_mutable:Nrmk.IndyFramework.ServoRxIndexKeba.rx)
  return _msg;
}
inline void ServoRxIndexKeba::set_allocated_rx(::Nrmk::IndyFramework::ServoRxKeba* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Nrmk::IndyFramework::ServoRxKeba*>(_impl_.rx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Nrmk::IndyFramework::ServoRxKeba*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rx_ = reinterpret_cast<::Nrmk::IndyFramework::ServoRxKeba*>(value);
  // @@protoc_insertion_point(field_set_allocated:Nrmk.IndyFramework.ServoRxIndexKeba.rx)
}

// -------------------------------------------------------------------

// ServoTemp

// float temperature = 1;
inline void ServoTemp::clear_temperature() {
  _impl_.temperature_ = 0;
}
inline float ServoTemp::temperature() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoTemp.temperature)
  return _internal_temperature();
}
inline void ServoTemp::set_temperature(float value) {
  _internal_set_temperature(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoTemp.temperature)
}
inline float ServoTemp::_internal_temperature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.temperature_;
}
inline void ServoTemp::_internal_set_temperature(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.temperature_ = value;
}

// -------------------------------------------------------------------

// ServoError

// uint32 errorCode = 1;
inline void ServoError::clear_errorcode() {
  _impl_.errorcode_ = 0u;
}
inline ::uint32_t ServoError::errorcode() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoError.errorCode)
  return _internal_errorcode();
}
inline void ServoError::set_errorcode(::uint32_t value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoError.errorCode)
}
inline ::uint32_t ServoError::_internal_errorcode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.errorcode_;
}
inline void ServoError::_internal_set_errorcode(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.errorcode_ = value;
}

// -------------------------------------------------------------------

// ServoBrake

// uint32 ecatIndex = 1;
inline void ServoBrake::clear_ecatindex() {
  _impl_.ecatindex_ = 0u;
}
inline ::uint32_t ServoBrake::ecatindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoBrake.ecatIndex)
  return _internal_ecatindex();
}
inline void ServoBrake::set_ecatindex(::uint32_t value) {
  _internal_set_ecatindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoBrake.ecatIndex)
}
inline ::uint32_t ServoBrake::_internal_ecatindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ecatindex_;
}
inline void ServoBrake::_internal_set_ecatindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ecatindex_ = value;
}

// bool onoff = 2;
inline void ServoBrake::clear_onoff() {
  _impl_.onoff_ = false;
}
inline bool ServoBrake::onoff() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoBrake.onoff)
  return _internal_onoff();
}
inline void ServoBrake::set_onoff(bool value) {
  _internal_set_onoff(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoBrake.onoff)
}
inline bool ServoBrake::_internal_onoff() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.onoff_;
}
inline void ServoBrake::_internal_set_onoff(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.onoff_ = value;
}

// -------------------------------------------------------------------

// FTSensor

// int32 fx = 1;
inline void FTSensor::clear_fx() {
  _impl_.fx_ = 0;
}
inline ::int32_t FTSensor::fx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FTSensor.fx)
  return _internal_fx();
}
inline void FTSensor::set_fx(::int32_t value) {
  _internal_set_fx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FTSensor.fx)
}
inline ::int32_t FTSensor::_internal_fx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fx_;
}
inline void FTSensor::_internal_set_fx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fx_ = value;
}

// int32 fy = 2;
inline void FTSensor::clear_fy() {
  _impl_.fy_ = 0;
}
inline ::int32_t FTSensor::fy() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FTSensor.fy)
  return _internal_fy();
}
inline void FTSensor::set_fy(::int32_t value) {
  _internal_set_fy(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FTSensor.fy)
}
inline ::int32_t FTSensor::_internal_fy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fy_;
}
inline void FTSensor::_internal_set_fy(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fy_ = value;
}

// int32 fz = 3;
inline void FTSensor::clear_fz() {
  _impl_.fz_ = 0;
}
inline ::int32_t FTSensor::fz() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FTSensor.fz)
  return _internal_fz();
}
inline void FTSensor::set_fz(::int32_t value) {
  _internal_set_fz(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FTSensor.fz)
}
inline ::int32_t FTSensor::_internal_fz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fz_;
}
inline void FTSensor::_internal_set_fz(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fz_ = value;
}

// int32 tx = 4;
inline void FTSensor::clear_tx() {
  _impl_.tx_ = 0;
}
inline ::int32_t FTSensor::tx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FTSensor.tx)
  return _internal_tx();
}
inline void FTSensor::set_tx(::int32_t value) {
  _internal_set_tx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FTSensor.tx)
}
inline ::int32_t FTSensor::_internal_tx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tx_;
}
inline void FTSensor::_internal_set_tx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tx_ = value;
}

// int32 ty = 5;
inline void FTSensor::clear_ty() {
  _impl_.ty_ = 0;
}
inline ::int32_t FTSensor::ty() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FTSensor.ty)
  return _internal_ty();
}
inline void FTSensor::set_ty(::int32_t value) {
  _internal_set_ty(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FTSensor.ty)
}
inline ::int32_t FTSensor::_internal_ty() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ty_;
}
inline void FTSensor::_internal_set_ty(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ty_ = value;
}

// int32 tz = 6;
inline void FTSensor::clear_tz() {
  _impl_.tz_ = 0;
}
inline ::int32_t FTSensor::tz() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FTSensor.tz)
  return _internal_tz();
}
inline void FTSensor::set_tz(::int32_t value) {
  _internal_set_tz(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FTSensor.tz)
}
inline ::int32_t FTSensor::_internal_tz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tz_;
}
inline void FTSensor::_internal_set_tz(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tz_ = value;
}

// -------------------------------------------------------------------

// EndtoolTx

// uint32 status = 1;
inline void EndtoolTx::clear_status() {
  _impl_.status_ = 0u;
}
inline ::uint32_t EndtoolTx::status() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolTx.status)
  return _internal_status();
}
inline void EndtoolTx::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolTx.status)
}
inline ::uint32_t EndtoolTx::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void EndtoolTx::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// uint32 button = 2;
inline void EndtoolTx::clear_button() {
  _impl_.button_ = 0u;
}
inline ::uint32_t EndtoolTx::button() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolTx.button)
  return _internal_button();
}
inline void EndtoolTx::set_button(::uint32_t value) {
  _internal_set_button(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolTx.button)
}
inline ::uint32_t EndtoolTx::_internal_button() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.button_;
}
inline void EndtoolTx::_internal_set_button(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.button_ = value;
}

// .Nrmk.IndyFramework.FTSensor ft_sensor = 3;
inline bool EndtoolTx::has_ft_sensor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ft_sensor_ != nullptr);
  return value;
}
inline void EndtoolTx::clear_ft_sensor() {
  if (_impl_.ft_sensor_ != nullptr) _impl_.ft_sensor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Nrmk::IndyFramework::FTSensor& EndtoolTx::_internal_ft_sensor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Nrmk::IndyFramework::FTSensor* p = _impl_.ft_sensor_;
  return p != nullptr ? *p : reinterpret_cast<const ::Nrmk::IndyFramework::FTSensor&>(::Nrmk::IndyFramework::_FTSensor_default_instance_);
}
inline const ::Nrmk::IndyFramework::FTSensor& EndtoolTx::ft_sensor() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolTx.ft_sensor)
  return _internal_ft_sensor();
}
inline void EndtoolTx::unsafe_arena_set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ft_sensor_);
  }
  _impl_.ft_sensor_ = reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Nrmk.IndyFramework.EndtoolTx.ft_sensor)
}
inline ::Nrmk::IndyFramework::FTSensor* EndtoolTx::release_ft_sensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::FTSensor* released = _impl_.ft_sensor_;
  _impl_.ft_sensor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Nrmk::IndyFramework::FTSensor* EndtoolTx::unsafe_arena_release_ft_sensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Nrmk.IndyFramework.EndtoolTx.ft_sensor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::FTSensor* temp = _impl_.ft_sensor_;
  _impl_.ft_sensor_ = nullptr;
  return temp;
}
inline ::Nrmk::IndyFramework::FTSensor* EndtoolTx::_internal_mutable_ft_sensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ft_sensor_ == nullptr) {
    auto* p = CreateMaybeMessage<::Nrmk::IndyFramework::FTSensor>(GetArenaForAllocation());
    _impl_.ft_sensor_ = reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(p);
  }
  return _impl_.ft_sensor_;
}
inline ::Nrmk::IndyFramework::FTSensor* EndtoolTx::mutable_ft_sensor() {
  ::Nrmk::IndyFramework::FTSensor* _msg = _internal_mutable_ft_sensor();
  // @@protoc_insertion_point(field_mutable:Nrmk.IndyFramework.EndtoolTx.ft_sensor)
  return _msg;
}
inline void EndtoolTx::set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(_impl_.ft_sensor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ft_sensor_ = reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(value);
  // @@protoc_insertion_point(field_set_allocated:Nrmk.IndyFramework.EndtoolTx.ft_sensor)
}

// uint32 ft_state = 4;
inline void EndtoolTx::clear_ft_state() {
  _impl_.ft_state_ = 0u;
}
inline ::uint32_t EndtoolTx::ft_state() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolTx.ft_state)
  return _internal_ft_state();
}
inline void EndtoolTx::set_ft_state(::uint32_t value) {
  _internal_set_ft_state(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolTx.ft_state)
}
inline ::uint32_t EndtoolTx::_internal_ft_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_state_;
}
inline void EndtoolTx::_internal_set_ft_state(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_state_ = value;
}

// uint32 ft_error = 5;
inline void EndtoolTx::clear_ft_error() {
  _impl_.ft_error_ = 0u;
}
inline ::uint32_t EndtoolTx::ft_error() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolTx.ft_error)
  return _internal_ft_error();
}
inline void EndtoolTx::set_ft_error(::uint32_t value) {
  _internal_set_ft_error(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolTx.ft_error)
}
inline ::uint32_t EndtoolTx::_internal_ft_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_error_;
}
inline void EndtoolTx::_internal_set_ft_error(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_error_ = value;
}

// -------------------------------------------------------------------

// EndtoolRx

// uint32 eqc = 1;
inline void EndtoolRx::clear_eqc() {
  _impl_.eqc_ = 0u;
}
inline ::uint32_t EndtoolRx::eqc() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolRx.eqc)
  return _internal_eqc();
}
inline void EndtoolRx::set_eqc(::uint32_t value) {
  _internal_set_eqc(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolRx.eqc)
}
inline ::uint32_t EndtoolRx::_internal_eqc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eqc_;
}
inline void EndtoolRx::_internal_set_eqc(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.eqc_ = value;
}

// uint32 gripper = 2;
inline void EndtoolRx::clear_gripper() {
  _impl_.gripper_ = 0u;
}
inline ::uint32_t EndtoolRx::gripper() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolRx.gripper)
  return _internal_gripper();
}
inline void EndtoolRx::set_gripper(::uint32_t value) {
  _internal_set_gripper(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolRx.gripper)
}
inline ::uint32_t EndtoolRx::_internal_gripper() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gripper_;
}
inline void EndtoolRx::_internal_set_gripper(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gripper_ = value;
}

// uint32 ft_param = 3;
inline void EndtoolRx::clear_ft_param() {
  _impl_.ft_param_ = 0u;
}
inline ::uint32_t EndtoolRx::ft_param() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolRx.ft_param)
  return _internal_ft_param();
}
inline void EndtoolRx::set_ft_param(::uint32_t value) {
  _internal_set_ft_param(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolRx.ft_param)
}
inline ::uint32_t EndtoolRx::_internal_ft_param() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_param_;
}
inline void EndtoolRx::_internal_set_ft_param(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_param_ = value;
}

// uint32 led_mode = 4;
inline void EndtoolRx::clear_led_mode() {
  _impl_.led_mode_ = 0u;
}
inline ::uint32_t EndtoolRx::led_mode() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolRx.led_mode)
  return _internal_led_mode();
}
inline void EndtoolRx::set_led_mode(::uint32_t value) {
  _internal_set_led_mode(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolRx.led_mode)
}
inline ::uint32_t EndtoolRx::_internal_led_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.led_mode_;
}
inline void EndtoolRx::_internal_set_led_mode(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.led_mode_ = value;
}

// uint32 led_g = 5;
inline void EndtoolRx::clear_led_g() {
  _impl_.led_g_ = 0u;
}
inline ::uint32_t EndtoolRx::led_g() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolRx.led_g)
  return _internal_led_g();
}
inline void EndtoolRx::set_led_g(::uint32_t value) {
  _internal_set_led_g(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolRx.led_g)
}
inline ::uint32_t EndtoolRx::_internal_led_g() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.led_g_;
}
inline void EndtoolRx::_internal_set_led_g(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.led_g_ = value;
}

// uint32 led_r = 6;
inline void EndtoolRx::clear_led_r() {
  _impl_.led_r_ = 0u;
}
inline ::uint32_t EndtoolRx::led_r() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolRx.led_r)
  return _internal_led_r();
}
inline void EndtoolRx::set_led_r(::uint32_t value) {
  _internal_set_led_r(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolRx.led_r)
}
inline ::uint32_t EndtoolRx::_internal_led_r() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.led_r_;
}
inline void EndtoolRx::_internal_set_led_r(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.led_r_ = value;
}

// uint32 led_b = 7;
inline void EndtoolRx::clear_led_b() {
  _impl_.led_b_ = 0u;
}
inline ::uint32_t EndtoolRx::led_b() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolRx.led_b)
  return _internal_led_b();
}
inline void EndtoolRx::set_led_b(::uint32_t value) {
  _internal_set_led_b(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolRx.led_b)
}
inline ::uint32_t EndtoolRx::_internal_led_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.led_b_;
}
inline void EndtoolRx::_internal_set_led_b(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.led_b_ = value;
}

// -------------------------------------------------------------------

// EndtoolDockingTx

// uint32 docking_status = 1;
inline void EndtoolDockingTx::clear_docking_status() {
  _impl_.docking_status_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_status() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_status)
  return _internal_docking_status();
}
inline void EndtoolDockingTx::set_docking_status(::uint32_t value) {
  _internal_set_docking_status(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_status)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_status_;
}
inline void EndtoolDockingTx::_internal_set_docking_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_status_ = value;
}

// uint32 docking_button = 2;
inline void EndtoolDockingTx::clear_docking_button() {
  _impl_.docking_button_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_button() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_button)
  return _internal_docking_button();
}
inline void EndtoolDockingTx::set_docking_button(::uint32_t value) {
  _internal_set_docking_button(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_button)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_button() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_button_;
}
inline void EndtoolDockingTx::_internal_set_docking_button(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_button_ = value;
}

// uint32 docking_dist1 = 3;
inline void EndtoolDockingTx::clear_docking_dist1() {
  _impl_.docking_dist1_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist1)
  return _internal_docking_dist1();
}
inline void EndtoolDockingTx::set_docking_dist1(::uint32_t value) {
  _internal_set_docking_dist1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist1)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist1_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist1(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist1_ = value;
}

// uint32 docking_dist2 = 4;
inline void EndtoolDockingTx::clear_docking_dist2() {
  _impl_.docking_dist2_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist2)
  return _internal_docking_dist2();
}
inline void EndtoolDockingTx::set_docking_dist2(::uint32_t value) {
  _internal_set_docking_dist2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist2)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist2_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist2(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist2_ = value;
}

// uint32 docking_dist3 = 5;
inline void EndtoolDockingTx::clear_docking_dist3() {
  _impl_.docking_dist3_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist3)
  return _internal_docking_dist3();
}
inline void EndtoolDockingTx::set_docking_dist3(::uint32_t value) {
  _internal_set_docking_dist3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist3)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist3_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist3(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist3_ = value;
}

// uint32 docking_dist4 = 6;
inline void EndtoolDockingTx::clear_docking_dist4() {
  _impl_.docking_dist4_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist4() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist4)
  return _internal_docking_dist4();
}
inline void EndtoolDockingTx::set_docking_dist4(::uint32_t value) {
  _internal_set_docking_dist4(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist4)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist4() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist4_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist4(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist4_ = value;
}

// uint32 docking_dist5 = 7;
inline void EndtoolDockingTx::clear_docking_dist5() {
  _impl_.docking_dist5_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist5() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist5)
  return _internal_docking_dist5();
}
inline void EndtoolDockingTx::set_docking_dist5(::uint32_t value) {
  _internal_set_docking_dist5(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist5)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist5() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist5_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist5(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist5_ = value;
}

// uint32 docking_dist6 = 8;
inline void EndtoolDockingTx::clear_docking_dist6() {
  _impl_.docking_dist6_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist6() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist6)
  return _internal_docking_dist6();
}
inline void EndtoolDockingTx::set_docking_dist6(::uint32_t value) {
  _internal_set_docking_dist6(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist6)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist6() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist6_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist6(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist6_ = value;
}

// uint32 docking_dist7 = 9;
inline void EndtoolDockingTx::clear_docking_dist7() {
  _impl_.docking_dist7_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist7() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist7)
  return _internal_docking_dist7();
}
inline void EndtoolDockingTx::set_docking_dist7(::uint32_t value) {
  _internal_set_docking_dist7(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist7)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist7() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist7_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist7(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist7_ = value;
}

// uint32 docking_dist8 = 10;
inline void EndtoolDockingTx::clear_docking_dist8() {
  _impl_.docking_dist8_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::docking_dist8() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist8)
  return _internal_docking_dist8();
}
inline void EndtoolDockingTx::set_docking_dist8(::uint32_t value) {
  _internal_set_docking_dist8(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.docking_dist8)
}
inline ::uint32_t EndtoolDockingTx::_internal_docking_dist8() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.docking_dist8_;
}
inline void EndtoolDockingTx::_internal_set_docking_dist8(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.docking_dist8_ = value;
}

// uint32 direct_status = 11;
inline void EndtoolDockingTx::clear_direct_status() {
  _impl_.direct_status_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::direct_status() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.direct_status)
  return _internal_direct_status();
}
inline void EndtoolDockingTx::set_direct_status(::uint32_t value) {
  _internal_set_direct_status(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.direct_status)
}
inline ::uint32_t EndtoolDockingTx::_internal_direct_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.direct_status_;
}
inline void EndtoolDockingTx::_internal_set_direct_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.direct_status_ = value;
}

// uint32 direct_button = 12;
inline void EndtoolDockingTx::clear_direct_button() {
  _impl_.direct_button_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::direct_button() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.direct_button)
  return _internal_direct_button();
}
inline void EndtoolDockingTx::set_direct_button(::uint32_t value) {
  _internal_set_direct_button(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.direct_button)
}
inline ::uint32_t EndtoolDockingTx::_internal_direct_button() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.direct_button_;
}
inline void EndtoolDockingTx::_internal_set_direct_button(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.direct_button_ = value;
}

// uint32 direct_encoder = 13;
inline void EndtoolDockingTx::clear_direct_encoder() {
  _impl_.direct_encoder_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::direct_encoder() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.direct_encoder)
  return _internal_direct_encoder();
}
inline void EndtoolDockingTx::set_direct_encoder(::uint32_t value) {
  _internal_set_direct_encoder(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.direct_encoder)
}
inline ::uint32_t EndtoolDockingTx::_internal_direct_encoder() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.direct_encoder_;
}
inline void EndtoolDockingTx::_internal_set_direct_encoder(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.direct_encoder_ = value;
}

// uint32 joystic1x = 14;
inline void EndtoolDockingTx::clear_joystic1x() {
  _impl_.joystic1x_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::joystic1x() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.joystic1x)
  return _internal_joystic1x();
}
inline void EndtoolDockingTx::set_joystic1x(::uint32_t value) {
  _internal_set_joystic1x(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.joystic1x)
}
inline ::uint32_t EndtoolDockingTx::_internal_joystic1x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joystic1x_;
}
inline void EndtoolDockingTx::_internal_set_joystic1x(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joystic1x_ = value;
}

// uint32 joystic1y = 15;
inline void EndtoolDockingTx::clear_joystic1y() {
  _impl_.joystic1y_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::joystic1y() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.joystic1y)
  return _internal_joystic1y();
}
inline void EndtoolDockingTx::set_joystic1y(::uint32_t value) {
  _internal_set_joystic1y(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.joystic1y)
}
inline ::uint32_t EndtoolDockingTx::_internal_joystic1y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joystic1y_;
}
inline void EndtoolDockingTx::_internal_set_joystic1y(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joystic1y_ = value;
}

// uint32 joystic2x = 16;
inline void EndtoolDockingTx::clear_joystic2x() {
  _impl_.joystic2x_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::joystic2x() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.joystic2x)
  return _internal_joystic2x();
}
inline void EndtoolDockingTx::set_joystic2x(::uint32_t value) {
  _internal_set_joystic2x(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.joystic2x)
}
inline ::uint32_t EndtoolDockingTx::_internal_joystic2x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joystic2x_;
}
inline void EndtoolDockingTx::_internal_set_joystic2x(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joystic2x_ = value;
}

// uint32 joystic2y = 17;
inline void EndtoolDockingTx::clear_joystic2y() {
  _impl_.joystic2y_ = 0u;
}
inline ::uint32_t EndtoolDockingTx::joystic2y() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.EndtoolDockingTx.joystic2y)
  return _internal_joystic2y();
}
inline void EndtoolDockingTx::set_joystic2y(::uint32_t value) {
  _internal_set_joystic2y(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.EndtoolDockingTx.joystic2y)
}
inline ::uint32_t EndtoolDockingTx::_internal_joystic2y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joystic2y_;
}
inline void EndtoolDockingTx::_internal_set_joystic2y(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joystic2y_ = value;
}

// -------------------------------------------------------------------

// LedDim

// uint32 led_dim = 1;
inline void LedDim::clear_led_dim() {
  _impl_.led_dim_ = 0u;
}
inline ::uint32_t LedDim::led_dim() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.LedDim.led_dim)
  return _internal_led_dim();
}
inline void LedDim::set_led_dim(::uint32_t value) {
  _internal_set_led_dim(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.LedDim.led_dim)
}
inline ::uint32_t LedDim::_internal_led_dim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.led_dim_;
}
inline void LedDim::_internal_set_led_dim(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.led_dim_ = value;
}

// -------------------------------------------------------------------

// SRKeyEndtoolRx

// uint32 dout = 1;
inline void SRKeyEndtoolRx::clear_dout() {
  _impl_.dout_ = 0u;
}
inline ::uint32_t SRKeyEndtoolRx::dout() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolRx.dout)
  return _internal_dout();
}
inline void SRKeyEndtoolRx::set_dout(::uint32_t value) {
  _internal_set_dout(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolRx.dout)
}
inline ::uint32_t SRKeyEndtoolRx::_internal_dout() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dout_;
}
inline void SRKeyEndtoolRx::_internal_set_dout(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dout_ = value;
}

// uint32 tool_Id = 2;
inline void SRKeyEndtoolRx::clear_tool_id() {
  _impl_.tool_id_ = 0u;
}
inline ::uint32_t SRKeyEndtoolRx::tool_id() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Id)
  return _internal_tool_id();
}
inline void SRKeyEndtoolRx::set_tool_id(::uint32_t value) {
  _internal_set_tool_id(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Id)
}
inline ::uint32_t SRKeyEndtoolRx::_internal_tool_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_id_;
}
inline void SRKeyEndtoolRx::_internal_set_tool_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_id_ = value;
}

// uint32 set_Tool = 3;
inline void SRKeyEndtoolRx::clear_set_tool() {
  _impl_.set_tool_ = 0u;
}
inline ::uint32_t SRKeyEndtoolRx::set_tool() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolRx.set_Tool)
  return _internal_set_tool();
}
inline void SRKeyEndtoolRx::set_set_tool(::uint32_t value) {
  _internal_set_set_tool(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolRx.set_Tool)
}
inline ::uint32_t SRKeyEndtoolRx::_internal_set_tool() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.set_tool_;
}
inline void SRKeyEndtoolRx::_internal_set_set_tool(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.set_tool_ = value;
}

// uint32 tool_Closing_Force = 4;
inline void SRKeyEndtoolRx::clear_tool_closing_force() {
  _impl_.tool_closing_force_ = 0u;
}
inline ::uint32_t SRKeyEndtoolRx::tool_closing_force() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Closing_Force)
  return _internal_tool_closing_force();
}
inline void SRKeyEndtoolRx::set_tool_closing_force(::uint32_t value) {
  _internal_set_tool_closing_force(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Closing_Force)
}
inline ::uint32_t SRKeyEndtoolRx::_internal_tool_closing_force() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_closing_force_;
}
inline void SRKeyEndtoolRx::_internal_set_tool_closing_force(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_closing_force_ = value;
}

// uint32 tool_Opening_Force = 5;
inline void SRKeyEndtoolRx::clear_tool_opening_force() {
  _impl_.tool_opening_force_ = 0u;
}
inline ::uint32_t SRKeyEndtoolRx::tool_opening_force() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Opening_Force)
  return _internal_tool_opening_force();
}
inline void SRKeyEndtoolRx::set_tool_opening_force(::uint32_t value) {
  _internal_set_tool_opening_force(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Opening_Force)
}
inline ::uint32_t SRKeyEndtoolRx::_internal_tool_opening_force() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_opening_force_;
}
inline void SRKeyEndtoolRx::_internal_set_tool_opening_force(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_opening_force_ = value;
}

// uint32 tool_Force_Location = 6;
inline void SRKeyEndtoolRx::clear_tool_force_location() {
  _impl_.tool_force_location_ = 0u;
}
inline ::uint32_t SRKeyEndtoolRx::tool_force_location() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Force_Location)
  return _internal_tool_force_location();
}
inline void SRKeyEndtoolRx::set_tool_force_location(::uint32_t value) {
  _internal_set_tool_force_location(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolRx.tool_Force_Location)
}
inline ::uint32_t SRKeyEndtoolRx::_internal_tool_force_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_force_location_;
}
inline void SRKeyEndtoolRx::_internal_set_tool_force_location(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_force_location_ = value;
}

// -------------------------------------------------------------------

// SRKeyEndtoolTx

// uint32 din = 1;
inline void SRKeyEndtoolTx::clear_din() {
  _impl_.din_ = 0u;
}
inline ::uint32_t SRKeyEndtoolTx::din() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolTx.din)
  return _internal_din();
}
inline void SRKeyEndtoolTx::set_din(::uint32_t value) {
  _internal_set_din(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolTx.din)
}
inline ::uint32_t SRKeyEndtoolTx::_internal_din() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.din_;
}
inline void SRKeyEndtoolTx::_internal_set_din(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.din_ = value;
}

// uint32 tool_Status = 2;
inline void SRKeyEndtoolTx::clear_tool_status() {
  _impl_.tool_status_ = 0u;
}
inline ::uint32_t SRKeyEndtoolTx::tool_status() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolTx.tool_Status)
  return _internal_tool_status();
}
inline void SRKeyEndtoolTx::set_tool_status(::uint32_t value) {
  _internal_set_tool_status(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolTx.tool_Status)
}
inline ::uint32_t SRKeyEndtoolTx::_internal_tool_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_status_;
}
inline void SRKeyEndtoolTx::_internal_set_tool_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_status_ = value;
}

// uint32 tool_Location = 3;
inline void SRKeyEndtoolTx::clear_tool_location() {
  _impl_.tool_location_ = 0u;
}
inline ::uint32_t SRKeyEndtoolTx::tool_location() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolTx.tool_Location)
  return _internal_tool_location();
}
inline void SRKeyEndtoolTx::set_tool_location(::uint32_t value) {
  _internal_set_tool_location(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolTx.tool_Location)
}
inline ::uint32_t SRKeyEndtoolTx::_internal_tool_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_location_;
}
inline void SRKeyEndtoolTx::_internal_set_tool_location(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_location_ = value;
}

// uint32 analog0 = 4;
inline void SRKeyEndtoolTx::clear_analog0() {
  _impl_.analog0_ = 0u;
}
inline ::uint32_t SRKeyEndtoolTx::analog0() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolTx.analog0)
  return _internal_analog0();
}
inline void SRKeyEndtoolTx::set_analog0(::uint32_t value) {
  _internal_set_analog0(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolTx.analog0)
}
inline ::uint32_t SRKeyEndtoolTx::_internal_analog0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.analog0_;
}
inline void SRKeyEndtoolTx::_internal_set_analog0(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.analog0_ = value;
}

// uint32 analog1 = 5;
inline void SRKeyEndtoolTx::clear_analog1() {
  _impl_.analog1_ = 0u;
}
inline ::uint32_t SRKeyEndtoolTx::analog1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolTx.analog1)
  return _internal_analog1();
}
inline void SRKeyEndtoolTx::set_analog1(::uint32_t value) {
  _internal_set_analog1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolTx.analog1)
}
inline ::uint32_t SRKeyEndtoolTx::_internal_analog1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.analog1_;
}
inline void SRKeyEndtoolTx::_internal_set_analog1(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.analog1_ = value;
}

// uint32 version = 6;
inline void SRKeyEndtoolTx::clear_version() {
  _impl_.version_ = 0u;
}
inline ::uint32_t SRKeyEndtoolTx::version() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SRKeyEndtoolTx.version)
  return _internal_version();
}
inline void SRKeyEndtoolTx::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SRKeyEndtoolTx.version)
}
inline ::uint32_t SRKeyEndtoolTx::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void SRKeyEndtoolTx::_internal_set_version(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_ = value;
}

// -------------------------------------------------------------------

// IOBoardTx

// uint32 di5v = 1;
inline void IOBoardTx::clear_di5v() {
  _impl_.di5v_ = 0u;
}
inline ::uint32_t IOBoardTx::di5v() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardTx.di5v)
  return _internal_di5v();
}
inline void IOBoardTx::set_di5v(::uint32_t value) {
  _internal_set_di5v(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardTx.di5v)
}
inline ::uint32_t IOBoardTx::_internal_di5v() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.di5v_;
}
inline void IOBoardTx::_internal_set_di5v(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.di5v_ = value;
}

// uint32 di24v1 = 2;
inline void IOBoardTx::clear_di24v1() {
  _impl_.di24v1_ = 0u;
}
inline ::uint32_t IOBoardTx::di24v1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardTx.di24v1)
  return _internal_di24v1();
}
inline void IOBoardTx::set_di24v1(::uint32_t value) {
  _internal_set_di24v1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardTx.di24v1)
}
inline ::uint32_t IOBoardTx::_internal_di24v1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.di24v1_;
}
inline void IOBoardTx::_internal_set_di24v1(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.di24v1_ = value;
}

// uint32 di24v2 = 3;
inline void IOBoardTx::clear_di24v2() {
  _impl_.di24v2_ = 0u;
}
inline ::uint32_t IOBoardTx::di24v2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardTx.di24v2)
  return _internal_di24v2();
}
inline void IOBoardTx::set_di24v2(::uint32_t value) {
  _internal_set_di24v2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardTx.di24v2)
}
inline ::uint32_t IOBoardTx::_internal_di24v2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.di24v2_;
}
inline void IOBoardTx::_internal_set_di24v2(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.di24v2_ = value;
}

// uint32 ai1 = 4;
inline void IOBoardTx::clear_ai1() {
  _impl_.ai1_ = 0u;
}
inline ::uint32_t IOBoardTx::ai1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardTx.ai1)
  return _internal_ai1();
}
inline void IOBoardTx::set_ai1(::uint32_t value) {
  _internal_set_ai1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardTx.ai1)
}
inline ::uint32_t IOBoardTx::_internal_ai1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ai1_;
}
inline void IOBoardTx::_internal_set_ai1(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ai1_ = value;
}

// uint32 ai2 = 5;
inline void IOBoardTx::clear_ai2() {
  _impl_.ai2_ = 0u;
}
inline ::uint32_t IOBoardTx::ai2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardTx.ai2)
  return _internal_ai2();
}
inline void IOBoardTx::set_ai2(::uint32_t value) {
  _internal_set_ai2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardTx.ai2)
}
inline ::uint32_t IOBoardTx::_internal_ai2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ai2_;
}
inline void IOBoardTx::_internal_set_ai2(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ai2_ = value;
}

// .Nrmk.IndyFramework.FTSensor ft_sensor = 6;
inline bool IOBoardTx::has_ft_sensor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ft_sensor_ != nullptr);
  return value;
}
inline void IOBoardTx::clear_ft_sensor() {
  if (_impl_.ft_sensor_ != nullptr) _impl_.ft_sensor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Nrmk::IndyFramework::FTSensor& IOBoardTx::_internal_ft_sensor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Nrmk::IndyFramework::FTSensor* p = _impl_.ft_sensor_;
  return p != nullptr ? *p : reinterpret_cast<const ::Nrmk::IndyFramework::FTSensor&>(::Nrmk::IndyFramework::_FTSensor_default_instance_);
}
inline const ::Nrmk::IndyFramework::FTSensor& IOBoardTx::ft_sensor() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardTx.ft_sensor)
  return _internal_ft_sensor();
}
inline void IOBoardTx::unsafe_arena_set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ft_sensor_);
  }
  _impl_.ft_sensor_ = reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Nrmk.IndyFramework.IOBoardTx.ft_sensor)
}
inline ::Nrmk::IndyFramework::FTSensor* IOBoardTx::release_ft_sensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::FTSensor* released = _impl_.ft_sensor_;
  _impl_.ft_sensor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Nrmk::IndyFramework::FTSensor* IOBoardTx::unsafe_arena_release_ft_sensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Nrmk.IndyFramework.IOBoardTx.ft_sensor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Nrmk::IndyFramework::FTSensor* temp = _impl_.ft_sensor_;
  _impl_.ft_sensor_ = nullptr;
  return temp;
}
inline ::Nrmk::IndyFramework::FTSensor* IOBoardTx::_internal_mutable_ft_sensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ft_sensor_ == nullptr) {
    auto* p = CreateMaybeMessage<::Nrmk::IndyFramework::FTSensor>(GetArenaForAllocation());
    _impl_.ft_sensor_ = reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(p);
  }
  return _impl_.ft_sensor_;
}
inline ::Nrmk::IndyFramework::FTSensor* IOBoardTx::mutable_ft_sensor() {
  ::Nrmk::IndyFramework::FTSensor* _msg = _internal_mutable_ft_sensor();
  // @@protoc_insertion_point(field_mutable:Nrmk.IndyFramework.IOBoardTx.ft_sensor)
  return _msg;
}
inline void IOBoardTx::set_allocated_ft_sensor(::Nrmk::IndyFramework::FTSensor* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(_impl_.ft_sensor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ft_sensor_ = reinterpret_cast<::Nrmk::IndyFramework::FTSensor*>(value);
  // @@protoc_insertion_point(field_set_allocated:Nrmk.IndyFramework.IOBoardTx.ft_sensor)
}

// -------------------------------------------------------------------

// IOBoardRx

// uint32 do5v = 1;
inline void IOBoardRx::clear_do5v() {
  _impl_.do5v_ = 0u;
}
inline ::uint32_t IOBoardRx::do5v() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardRx.do5v)
  return _internal_do5v();
}
inline void IOBoardRx::set_do5v(::uint32_t value) {
  _internal_set_do5v(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardRx.do5v)
}
inline ::uint32_t IOBoardRx::_internal_do5v() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.do5v_;
}
inline void IOBoardRx::_internal_set_do5v(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.do5v_ = value;
}

// uint32 do24v1 = 2;
inline void IOBoardRx::clear_do24v1() {
  _impl_.do24v1_ = 0u;
}
inline ::uint32_t IOBoardRx::do24v1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardRx.do24v1)
  return _internal_do24v1();
}
inline void IOBoardRx::set_do24v1(::uint32_t value) {
  _internal_set_do24v1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardRx.do24v1)
}
inline ::uint32_t IOBoardRx::_internal_do24v1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.do24v1_;
}
inline void IOBoardRx::_internal_set_do24v1(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.do24v1_ = value;
}

// uint32 do24v2 = 3;
inline void IOBoardRx::clear_do24v2() {
  _impl_.do24v2_ = 0u;
}
inline ::uint32_t IOBoardRx::do24v2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardRx.do24v2)
  return _internal_do24v2();
}
inline void IOBoardRx::set_do24v2(::uint32_t value) {
  _internal_set_do24v2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardRx.do24v2)
}
inline ::uint32_t IOBoardRx::_internal_do24v2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.do24v2_;
}
inline void IOBoardRx::_internal_set_do24v2(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.do24v2_ = value;
}

// uint32 ao1 = 4;
inline void IOBoardRx::clear_ao1() {
  _impl_.ao1_ = 0u;
}
inline ::uint32_t IOBoardRx::ao1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardRx.ao1)
  return _internal_ao1();
}
inline void IOBoardRx::set_ao1(::uint32_t value) {
  _internal_set_ao1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardRx.ao1)
}
inline ::uint32_t IOBoardRx::_internal_ao1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ao1_;
}
inline void IOBoardRx::_internal_set_ao1(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ao1_ = value;
}

// uint32 ao2 = 5;
inline void IOBoardRx::clear_ao2() {
  _impl_.ao2_ = 0u;
}
inline ::uint32_t IOBoardRx::ao2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardRx.ao2)
  return _internal_ao2();
}
inline void IOBoardRx::set_ao2(::uint32_t value) {
  _internal_set_ao2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardRx.ao2)
}
inline ::uint32_t IOBoardRx::_internal_ao2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ao2_;
}
inline void IOBoardRx::_internal_set_ao2(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ao2_ = value;
}

// uint32 ft_param = 6;
inline void IOBoardRx::clear_ft_param() {
  _impl_.ft_param_ = 0u;
}
inline ::uint32_t IOBoardRx::ft_param() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IOBoardRx.ft_param)
  return _internal_ft_param();
}
inline void IOBoardRx::set_ft_param(::uint32_t value) {
  _internal_set_ft_param(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IOBoardRx.ft_param)
}
inline ::uint32_t IOBoardRx::_internal_ft_param() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_param_;
}
inline void IOBoardRx::_internal_set_ft_param(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_param_ = value;
}

// -------------------------------------------------------------------

// DIOIndex

// uint32 dioIndex = 1;
inline void DIOIndex::clear_dioindex() {
  _impl_.dioindex_ = 0u;
}
inline ::uint32_t DIOIndex::dioindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DIOIndex.dioIndex)
  return _internal_dioindex();
}
inline void DIOIndex::set_dioindex(::uint32_t value) {
  _internal_set_dioindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DIOIndex.dioIndex)
}
inline ::uint32_t DIOIndex::_internal_dioindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dioindex_;
}
inline void DIOIndex::_internal_set_dioindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dioindex_ = value;
}

// -------------------------------------------------------------------

// DIODigitalInput

// uint32 dioIndex = 1;
inline void DIODigitalInput::clear_dioindex() {
  _impl_.dioindex_ = 0u;
}
inline ::uint32_t DIODigitalInput::dioindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DIODigitalInput.dioIndex)
  return _internal_dioindex();
}
inline void DIODigitalInput::set_dioindex(::uint32_t value) {
  _internal_set_dioindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DIODigitalInput.dioIndex)
}
inline ::uint32_t DIODigitalInput::_internal_dioindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dioindex_;
}
inline void DIODigitalInput::_internal_set_dioindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dioindex_ = value;
}

// repeated uint32 di_list = 2;
inline int DIODigitalInput::_internal_di_list_size() const {
  return _internal_di_list().size();
}
inline int DIODigitalInput::di_list_size() const {
  return _internal_di_list_size();
}
inline void DIODigitalInput::clear_di_list() {
  _internal_mutable_di_list()->Clear();
}
inline ::uint32_t DIODigitalInput::di_list(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DIODigitalInput.di_list)
  return _internal_di_list().Get(index);
}
inline void DIODigitalInput::set_di_list(int index, ::uint32_t value) {
  _internal_mutable_di_list()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DIODigitalInput.di_list)
}
inline void DIODigitalInput::add_di_list(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_di_list()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.DIODigitalInput.di_list)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& DIODigitalInput::di_list() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.DIODigitalInput.di_list)
  return _internal_di_list();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DIODigitalInput::mutable_di_list() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.DIODigitalInput.di_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_di_list();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& DIODigitalInput::_internal_di_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.di_list_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DIODigitalInput::_internal_mutable_di_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.di_list_;
}

// -------------------------------------------------------------------

// DIODigitalOutput

// uint32 dioIndex = 1;
inline void DIODigitalOutput::clear_dioindex() {
  _impl_.dioindex_ = 0u;
}
inline ::uint32_t DIODigitalOutput::dioindex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DIODigitalOutput.dioIndex)
  return _internal_dioindex();
}
inline void DIODigitalOutput::set_dioindex(::uint32_t value) {
  _internal_set_dioindex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DIODigitalOutput.dioIndex)
}
inline ::uint32_t DIODigitalOutput::_internal_dioindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dioindex_;
}
inline void DIODigitalOutput::_internal_set_dioindex(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dioindex_ = value;
}

// repeated uint32 do_list = 2;
inline int DIODigitalOutput::_internal_do_list_size() const {
  return _internal_do_list().size();
}
inline int DIODigitalOutput::do_list_size() const {
  return _internal_do_list_size();
}
inline void DIODigitalOutput::clear_do_list() {
  _internal_mutable_do_list()->Clear();
}
inline ::uint32_t DIODigitalOutput::do_list(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DIODigitalOutput.do_list)
  return _internal_do_list().Get(index);
}
inline void DIODigitalOutput::set_do_list(int index, ::uint32_t value) {
  _internal_mutable_do_list()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DIODigitalOutput.do_list)
}
inline void DIODigitalOutput::add_do_list(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_do_list()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.DIODigitalOutput.do_list)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& DIODigitalOutput::do_list() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.DIODigitalOutput.do_list)
  return _internal_do_list();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DIODigitalOutput::mutable_do_list() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.DIODigitalOutput.do_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_do_list();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& DIODigitalOutput::_internal_do_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.do_list_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DIODigitalOutput::_internal_mutable_do_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.do_list_;
}

// -------------------------------------------------------------------

// ServoParam

// uint32 slaveIdx = 1;
inline void ServoParam::clear_slaveidx() {
  _impl_.slaveidx_ = 0u;
}
inline ::uint32_t ServoParam::slaveidx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoParam.slaveIdx)
  return _internal_slaveidx();
}
inline void ServoParam::set_slaveidx(::uint32_t value) {
  _internal_set_slaveidx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoParam.slaveIdx)
}
inline ::uint32_t ServoParam::_internal_slaveidx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.slaveidx_;
}
inline void ServoParam::_internal_set_slaveidx(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.slaveidx_ = value;
}

// int32 val = 2;
inline void ServoParam::clear_val() {
  _impl_.val_ = 0;
}
inline ::int32_t ServoParam::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ServoParam.val)
  return _internal_val();
}
inline void ServoParam::set_val(::int32_t value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ServoParam.val)
}
inline ::int32_t ServoParam::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void ServoParam::_internal_set_val(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// SDOIntVal

// int32 val = 1;
inline void SDOIntVal::clear_val() {
  _impl_.val_ = 0;
}
inline ::int32_t SDOIntVal::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SDOIntVal.val)
  return _internal_val();
}
inline void SDOIntVal::set_val(::int32_t value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SDOIntVal.val)
}
inline ::int32_t SDOIntVal::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void SDOIntVal::_internal_set_val(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// SDOFloatVal

// float val = 1;
inline void SDOFloatVal::clear_val() {
  _impl_.val_ = 0;
}
inline float SDOFloatVal::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SDOFloatVal.val)
  return _internal_val();
}
inline void SDOFloatVal::set_val(float value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SDOFloatVal.val)
}
inline float SDOFloatVal::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void SDOFloatVal::_internal_set_val(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// SDOStrVal

// string val = 1;
inline void SDOStrVal::clear_val() {
  _impl_.val_.ClearToEmpty();
}
inline const std::string& SDOStrVal::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SDOStrVal.val)
  return _internal_val();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SDOStrVal::set_val(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SDOStrVal.val)
}
inline std::string* SDOStrVal::mutable_val() {
  std::string* _s = _internal_mutable_val();
  // @@protoc_insertion_point(field_mutable:Nrmk.IndyFramework.SDOStrVal.val)
  return _s;
}
inline const std::string& SDOStrVal::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_.Get();
}
inline void SDOStrVal::_internal_set_val(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_.Set(value, GetArenaForAllocation());
}
inline std::string* SDOStrVal::_internal_mutable_val() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.val_.Mutable( GetArenaForAllocation());
}
inline std::string* SDOStrVal::release_val() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Nrmk.IndyFramework.SDOStrVal.val)
  return _impl_.val_.Release();
}
inline void SDOStrVal::set_allocated_val(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.val_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.val_.IsDefault()) {
          _impl_.val_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Nrmk.IndyFramework.SDOStrVal.val)
}

// -------------------------------------------------------------------

// EtherCATInfo

// -------------------------------------------------------------------

// RobotZeroCount

// int32 count = 1;
inline void RobotZeroCount::clear_count() {
  _impl_.count_ = 0;
}
inline ::int32_t RobotZeroCount::count() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.RobotZeroCount.count)
  return _internal_count();
}
inline void RobotZeroCount::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.RobotZeroCount.count)
}
inline ::int32_t RobotZeroCount::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void RobotZeroCount::_internal_set_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.count_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace IndyFramework
}  // namespace Nrmk


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ethercat_5fmsgs_2eproto_2epb_2eh
