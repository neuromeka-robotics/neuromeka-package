// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_msgs.proto

#include "common_msgs.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Nrmk {
namespace IndyFramework {
      template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Name::Name(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct NameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NameDefaultTypeInternal() {}
  union {
    Name _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NameDefaultTypeInternal _Name_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR State::State(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.enable_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct StateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateDefaultTypeInternal() {}
  union {
    State _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateDefaultTypeInternal _State_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Float::Float(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct FloatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatDefaultTypeInternal() {}
  union {
    Float _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatDefaultTypeInternal _Float_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR IntMode::IntMode(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.mode_)*/ ::uint64_t{0u},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct IntModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntModeDefaultTypeInternal() {}
  union {
    IntMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntModeDefaultTypeInternal _IntMode_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR StopCat::StopCat(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.category_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct StopCatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopCatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopCatDefaultTypeInternal() {}
  union {
    StopCat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopCatDefaultTypeInternal _StopCat_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PauseCat::PauseCat(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.category_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PauseCatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PauseCatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PauseCatDefaultTypeInternal() {}
  union {
    PauseCat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PauseCatDefaultTypeInternal _PauseCat_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.msg_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.code_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.content_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Vector::Vector(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.values_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct VectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorDefaultTypeInternal() {}
  union {
    Vector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorDefaultTypeInternal _Vector_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PosePair::PosePair(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.q_)*/ {},
      /*decltype(_impl_.p_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PosePairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PosePairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PosePairDefaultTypeInternal() {}
  union {
    PosePair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PosePairDefaultTypeInternal _PosePair_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EndtoolRS485Tx::EndtoolRS485Tx(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.word1_)*/ 0u,
      /*decltype(_impl_.word2_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EndtoolRS485TxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndtoolRS485TxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndtoolRS485TxDefaultTypeInternal() {}
  union {
    EndtoolRS485Tx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndtoolRS485TxDefaultTypeInternal _EndtoolRS485Tx_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EndtoolRS485Rx::EndtoolRS485Rx(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.word1_)*/ 0u,
      /*decltype(_impl_.word2_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EndtoolRS485RxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndtoolRS485RxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndtoolRS485RxDefaultTypeInternal() {}
  union {
    EndtoolRS485Rx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndtoolRS485RxDefaultTypeInternal _EndtoolRS485Rx_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TactTime::TactTime(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.tact_time_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TactTimeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TactTimeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TactTimeDefaultTypeInternal() {}
  union {
    TactTime _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TactTimeDefaultTypeInternal _TactTime_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DateTime::DateTime(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.year_)*/ 0u,
      /*decltype(_impl_.month_)*/ 0u,
      /*decltype(_impl_.day_)*/ 0u,
      /*decltype(_impl_.hour_)*/ 0u,
      /*decltype(_impl_.minute_)*/ 0u,
      /*decltype(_impl_.second_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DateTimeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DateTimeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DateTimeDefaultTypeInternal() {}
  union {
    DateTime _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DateTimeDefaultTypeInternal _DateTime_default_instance_;
}  // namespace IndyFramework
}  // namespace Nrmk
static ::_pb::Metadata file_level_metadata_common_5fmsgs_2eproto[15];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_5fmsgs_2eproto[9];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_5fmsgs_2eproto = nullptr;
const ::uint32_t TableStruct_common_5fmsgs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Empty, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Name, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Name, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::State, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::State, _impl_.enable_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Float, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Float, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::IntMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::IntMode, _impl_.mode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::StopCat, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::StopCat, _impl_.category_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::PauseCat, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::PauseCat, _impl_.category_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Response, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Response, _impl_.msg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Message, _impl_.content_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Vector, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::Vector, _impl_.values_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::PosePair, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::PosePair, _impl_.q_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::PosePair, _impl_.p_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::EndtoolRS485Tx, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::EndtoolRS485Tx, _impl_.word1_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::EndtoolRS485Tx, _impl_.word2_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::EndtoolRS485Rx, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::EndtoolRS485Rx, _impl_.word1_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::EndtoolRS485Rx, _impl_.word2_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::TactTime, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::TactTime, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::TactTime, _impl_.tact_time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::DateTime, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::DateTime, _impl_.year_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::DateTime, _impl_.month_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::DateTime, _impl_.day_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::DateTime, _impl_.hour_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::DateTime, _impl_.minute_),
    PROTOBUF_FIELD_OFFSET(::Nrmk::IndyFramework::DateTime, _impl_.second_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Nrmk::IndyFramework::Empty)},
        {8, -1, -1, sizeof(::Nrmk::IndyFramework::Name)},
        {17, -1, -1, sizeof(::Nrmk::IndyFramework::State)},
        {26, -1, -1, sizeof(::Nrmk::IndyFramework::Float)},
        {35, -1, -1, sizeof(::Nrmk::IndyFramework::IntMode)},
        {44, -1, -1, sizeof(::Nrmk::IndyFramework::StopCat)},
        {53, -1, -1, sizeof(::Nrmk::IndyFramework::PauseCat)},
        {62, -1, -1, sizeof(::Nrmk::IndyFramework::Response)},
        {72, -1, -1, sizeof(::Nrmk::IndyFramework::Message)},
        {81, -1, -1, sizeof(::Nrmk::IndyFramework::Vector)},
        {90, -1, -1, sizeof(::Nrmk::IndyFramework::PosePair)},
        {100, -1, -1, sizeof(::Nrmk::IndyFramework::EndtoolRS485Tx)},
        {110, -1, -1, sizeof(::Nrmk::IndyFramework::EndtoolRS485Rx)},
        {120, -1, -1, sizeof(::Nrmk::IndyFramework::TactTime)},
        {130, -1, -1, sizeof(::Nrmk::IndyFramework::DateTime)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::Nrmk::IndyFramework::_Empty_default_instance_._instance,
    &::Nrmk::IndyFramework::_Name_default_instance_._instance,
    &::Nrmk::IndyFramework::_State_default_instance_._instance,
    &::Nrmk::IndyFramework::_Float_default_instance_._instance,
    &::Nrmk::IndyFramework::_IntMode_default_instance_._instance,
    &::Nrmk::IndyFramework::_StopCat_default_instance_._instance,
    &::Nrmk::IndyFramework::_PauseCat_default_instance_._instance,
    &::Nrmk::IndyFramework::_Response_default_instance_._instance,
    &::Nrmk::IndyFramework::_Message_default_instance_._instance,
    &::Nrmk::IndyFramework::_Vector_default_instance_._instance,
    &::Nrmk::IndyFramework::_PosePair_default_instance_._instance,
    &::Nrmk::IndyFramework::_EndtoolRS485Tx_default_instance_._instance,
    &::Nrmk::IndyFramework::_EndtoolRS485Rx_default_instance_._instance,
    &::Nrmk::IndyFramework::_TactTime_default_instance_._instance,
    &::Nrmk::IndyFramework::_DateTime_default_instance_._instance,
};
const char descriptor_table_protodef_common_5fmsgs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021common_msgs.proto\022\022Nrmk.IndyFramework\""
    "\007\n\005Empty\"\024\n\004Name\022\014\n\004name\030\001 \001(\t\"\027\n\005State\022"
    "\016\n\006enable\030\001 \001(\010\"\026\n\005Float\022\r\n\005value\030\001 \001(\002\""
    "\027\n\007IntMode\022\014\n\004mode\030\001 \001(\004\"=\n\007StopCat\0222\n\010c"
    "ategory\030\001 \001(\0162 .Nrmk.IndyFramework.StopC"
    "ategory\"\?\n\010PauseCat\0223\n\010category\030\001 \001(\0162!."
    "Nrmk.IndyFramework.PauseCategory\"%\n\010Resp"
    "onse\022\014\n\004code\030\001 \001(\003\022\013\n\003msg\030\002 \001(\t\"\032\n\007Messa"
    "ge\022\017\n\007content\030\001 \001(\t\"\030\n\006Vector\022\016\n\006values\030"
    "\001 \003(\001\" \n\010PosePair\022\t\n\001q\030\001 \003(\002\022\t\n\001p\030\002 \003(\002\""
    ".\n\016EndtoolRS485Tx\022\r\n\005word1\030\001 \001(\r\022\r\n\005word"
    "2\030\002 \001(\r\".\n\016EndtoolRS485Rx\022\r\n\005word1\030\001 \001(\r"
    "\022\r\n\005word2\030\002 \001(\r\"+\n\010TactTime\022\014\n\004type\030\001 \001("
    "\t\022\021\n\ttact_time\030\002 \001(\002\"b\n\010DateTime\022\014\n\004year"
    "\030\001 \001(\r\022\r\n\005month\030\002 \001(\r\022\013\n\003day\030\003 \001(\r\022\014\n\004ho"
    "ur\030\004 \001(\r\022\016\n\006minute\030\005 \001(\r\022\016\n\006second\030\006 \001(\r"
    "*\332\002\n\007OpState\022\021\n\rOP_SYSTEM_OFF\020\000\022\020\n\014OP_SY"
    "STEM_ON\020\001\022\016\n\nOP_VIOLATE\020\002\022\023\n\017OP_RECOVER_"
    "HARD\020\003\022\023\n\017OP_RECOVER_SOFT\020\004\022\013\n\007OP_IDLE\020\005"
    "\022\r\n\tOP_MOVING\020\006\022\017\n\013OP_TEACHING\020\007\022\020\n\014OP_C"
    "OLLISION\020\010\022\023\n\017OP_STOP_AND_OFF\020\t\022\021\n\rOP_CO"
    "MPLIANCE\020\n\022\024\n\020OP_BRAKE_CONTROL\020\013\022\023\n\017OP_S"
    "YSTEM_RESET\020\014\022\024\n\020OP_SYSTEM_SWITCH\020\r\022\023\n\017O"
    "P_VIOLATE_HARD\020\017\022\025\n\021OP_MANUAL_RECOVER\020\020\022"
    "\013\n\007TELE_OP\020\021\022\017\n\013TRAJ_MOVING\020\022*\260\001\n\tTrajSt"
    "ate\022\r\n\tTRAJ_NONE\020\000\022\r\n\tTRAJ_INIT\020\001\022\r\n\tTRA"
    "J_CALC\020\002\022\021\n\rTRAJ_STAND_BY\020\003\022\014\n\010TRAJ_ACC\020"
    "\004\022\017\n\013TRAJ_CRUISE\020\005\022\014\n\010TRAJ_DEC\020\006\022\023\n\017TRAJ"
    "_CANCELLING\020\007\022\021\n\rTRAJ_FINISHED\020\010\022\016\n\nTRAJ"
    "_ERROR\020\t*Z\n\rTrajCondition\022\020\n\014TRAJ_STARTE"
    "D\020\000\022\021\n\rTRAJ_ACC_DONE\020\001\022\021\n\rTRAJ_CRZ_DONE\020"
    "\002\022\021\n\rTRAJ_DEC_DONE\020\003*F\n\014StopCategory\022\023\n\017"
    "IMMEDIATE_BRAKE\020\000\022\020\n\014SMOOTH_BRAKE\020\001\022\017\n\013S"
    "MOOTH_ONLY\020\002*6\n\rPauseCategory\022\020\n\014SMOOTH_"
    "PAUSE\020\000\022\023\n\017IMMEDIATE_PAUSE\020\001*T\n\014ProgramS"
    "tate\022\r\n\tPROG_IDLE\020\000\022\020\n\014PROG_RUNNING\020\001\022\020\n"
    "\014PROG_PAUSING\020\002\022\021\n\rPROG_STOPPING\020\003*e\n\023Co"
    "llisionPolicyType\022\022\n\016COLL_NO_DETECT\020\000\022\016\n"
    "\nCOLL_PAUSE\020\001\022\033\n\027COLL_RESUME_AFTER_SLEEP"
    "\020\002\022\r\n\tCOLL_STOP\020\003*:\n\013TuningSpace\022\014\n\010TUNE"
    "_ALL\020\000\022\016\n\nTUNE_JOINT\020\001\022\r\n\tTUNE_TASK\020\002*N\n"
    "\017TuningPrecision\022\021\n\rLOW_PRECISION\020\000\022\024\n\020M"
    "IDDLE_PRECISION\020\001\022\022\n\016HIGH_PRECISION\020\002b\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_common_5fmsgs_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_5fmsgs_2eproto = {
    false,
    false,
    1725,
    descriptor_table_protodef_common_5fmsgs_2eproto,
    "common_msgs.proto",
    &descriptor_table_common_5fmsgs_2eproto_once,
    nullptr,
    0,
    15,
    schemas,
    file_default_instances,
    TableStruct_common_5fmsgs_2eproto::offsets,
    file_level_metadata_common_5fmsgs_2eproto,
    file_level_enum_descriptors_common_5fmsgs_2eproto,
    file_level_service_descriptors_common_5fmsgs_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_5fmsgs_2eproto_getter() {
  return &descriptor_table_common_5fmsgs_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_5fmsgs_2eproto(&descriptor_table_common_5fmsgs_2eproto);
namespace Nrmk {
namespace IndyFramework {
const ::google::protobuf::EnumDescriptor* OpState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[0];
}
bool OpState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TrajState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[1];
}
bool TrajState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TrajCondition_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[2];
}
bool TrajCondition_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* StopCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[3];
}
bool StopCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* PauseCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[4];
}
bool PauseCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ProgramState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[5];
}
bool ProgramState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* CollisionPolicyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[6];
}
bool CollisionPolicyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TuningSpace_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[7];
}
bool TuningSpace_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TuningPrecision_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2eproto[8];
}
bool TuningPrecision_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.Empty)
}
Empty::Empty(const Empty& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.Empty)
}




const ::google::protobuf::Message::ClassData Empty::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*Empty::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[0]);
}
// ===================================================================

class Name::_Internal {
 public:
};

Name::Name(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.Name)
}
Name::Name(const Name& from) : ::google::protobuf::Message() {
  Name* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.Name)
}
inline void Name::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Name::~Name() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.Name)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Name::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}
void Name::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Name::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.Name)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Name::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> Name::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Name_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Name, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Name, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\4\0\0\0\0\0\0"
    "Nrmk.IndyFramework.Name"
    "name"
  }},
};

::uint8_t* Name::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.Name)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Nrmk.IndyFramework.Name.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.Name)
  return target;
}

::size_t Name::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.Name)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Name::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Name::MergeImpl
};
const ::google::protobuf::Message::ClassData*Name::GetClassData() const { return &_class_data_; }


void Name::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Name*>(&to_msg);
  auto& from = static_cast<const Name&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.Name)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Name::CopyFrom(const Name& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.Name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Name::IsInitialized() const {
  return true;
}

void Name::InternalSwap(Name* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata Name::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[1]);
}
// ===================================================================

class State::_Internal {
 public:
};

State::State(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.State)
}
State::State(const State& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.State)
}
inline void State::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.enable_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
State::~State() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.State)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void State::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void State::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void State::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.State)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enable_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* State::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> State::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_State_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool enable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(State, _impl_.enable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(State, _impl_.enable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enable = 1;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.enable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* State::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.State)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.State)
  return target;
}

::size_t State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.State)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData State::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    State::MergeImpl
};
const ::google::protobuf::Message::ClassData*State::GetClassData() const { return &_class_data_; }


void State::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<State*>(&to_msg);
  auto& from = static_cast<const State&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.State)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool State::IsInitialized() const {
  return true;
}

void State::InternalSwap(State* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.enable_, other->_impl_.enable_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[2]);
}
// ===================================================================

class Float::_Internal {
 public:
};

Float::Float(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.Float)
}
Float::Float(const Float& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.Float)
}
inline void Float::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
Float::~Float() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.Float)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Float::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Float::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Float::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.Float)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Float::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Float::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Float_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Float, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(Float, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Float::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.Float)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.Float)
  return target;
}

::size_t Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.Float)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Float::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Float::MergeImpl
};
const ::google::protobuf::Message::ClassData*Float::GetClassData() const { return &_class_data_; }


void Float::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Float*>(&to_msg);
  auto& from = static_cast<const Float&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.Float)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Float::CopyFrom(const Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Float::IsInitialized() const {
  return true;
}

void Float::InternalSwap(Float* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Float::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[3]);
}
// ===================================================================

class IntMode::_Internal {
 public:
};

IntMode::IntMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.IntMode)
}
IntMode::IntMode(const IntMode& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.IntMode)
}
inline void IntMode::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.mode_){::uint64_t{0u}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
IntMode::~IntMode() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.IntMode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IntMode::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void IntMode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void IntMode::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.IntMode)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IntMode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> IntMode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IntMode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(IntMode, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IntMode, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 mode = 1;
    {PROTOBUF_FIELD_OFFSET(IntMode, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* IntMode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.IntMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.IntMode)
  return target;
}

::size_t IntMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.IntMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IntMode::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    IntMode::MergeImpl
};
const ::google::protobuf::Message::ClassData*IntMode::GetClassData() const { return &_class_data_; }


void IntMode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IntMode*>(&to_msg);
  auto& from = static_cast<const IntMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.IntMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IntMode::CopyFrom(const IntMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.IntMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IntMode::IsInitialized() const {
  return true;
}

void IntMode::InternalSwap(IntMode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata IntMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[4]);
}
// ===================================================================

class StopCat::_Internal {
 public:
};

StopCat::StopCat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.StopCat)
}
StopCat::StopCat(const StopCat& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.StopCat)
}
inline void StopCat::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.category_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
StopCat::~StopCat() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.StopCat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopCat::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void StopCat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StopCat::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.StopCat)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopCat::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StopCat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StopCat_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Nrmk.IndyFramework.StopCategory category = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopCat, _impl_.category_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StopCat, _impl_.category_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Nrmk.IndyFramework.StopCategory category = 1;
    {PROTOBUF_FIELD_OFFSET(StopCat, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StopCat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.StopCat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Nrmk.IndyFramework.StopCategory category = 1;
  if (this->_internal_category() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_category(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.StopCat)
  return target;
}

::size_t StopCat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.StopCat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Nrmk.IndyFramework.StopCategory category = 1;
  if (this->_internal_category() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_category());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopCat::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    StopCat::MergeImpl
};
const ::google::protobuf::Message::ClassData*StopCat::GetClassData() const { return &_class_data_; }


void StopCat::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopCat*>(&to_msg);
  auto& from = static_cast<const StopCat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.StopCat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_category() != 0) {
    _this->_internal_set_category(from._internal_category());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopCat::CopyFrom(const StopCat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.StopCat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopCat::IsInitialized() const {
  return true;
}

void StopCat::InternalSwap(StopCat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.category_, other->_impl_.category_);
}

::google::protobuf::Metadata StopCat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[5]);
}
// ===================================================================

class PauseCat::_Internal {
 public:
};

PauseCat::PauseCat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.PauseCat)
}
PauseCat::PauseCat(const PauseCat& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.PauseCat)
}
inline void PauseCat::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.category_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
PauseCat::~PauseCat() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.PauseCat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PauseCat::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void PauseCat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PauseCat::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.PauseCat)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PauseCat::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PauseCat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PauseCat_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Nrmk.IndyFramework.PauseCategory category = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PauseCat, _impl_.category_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PauseCat, _impl_.category_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Nrmk.IndyFramework.PauseCategory category = 1;
    {PROTOBUF_FIELD_OFFSET(PauseCat, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PauseCat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.PauseCat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Nrmk.IndyFramework.PauseCategory category = 1;
  if (this->_internal_category() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_category(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.PauseCat)
  return target;
}

::size_t PauseCat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.PauseCat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Nrmk.IndyFramework.PauseCategory category = 1;
  if (this->_internal_category() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_category());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PauseCat::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PauseCat::MergeImpl
};
const ::google::protobuf::Message::ClassData*PauseCat::GetClassData() const { return &_class_data_; }


void PauseCat::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PauseCat*>(&to_msg);
  auto& from = static_cast<const PauseCat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.PauseCat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_category() != 0) {
    _this->_internal_set_category(from._internal_category());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PauseCat::CopyFrom(const PauseCat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.PauseCat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PauseCat::IsInitialized() const {
  return true;
}

void PauseCat::InternalSwap(PauseCat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.category_, other->_impl_.category_);
}

::google::protobuf::Metadata PauseCat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[6]);
}
// ===================================================================

class Response::_Internal {
 public:
};

Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.Response)
}
Response::Response(const Response& from) : ::google::protobuf::Message() {
  Response* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){},
      decltype(_impl_.code_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), _this->GetArenaForAllocation());
  }
  _this->_impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.Response)
}
inline void Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){},
      decltype(_impl_.code_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}
void Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.code_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string msg = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.msg_)}},
    // int64 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Response, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 code = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string msg = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\3\0\0\0\0\0"
    "Nrmk.IndyFramework.Response"
    "msg"
  }},
};

::uint8_t* Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 code = 1;
  if (this->_internal_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_code(), target);
  }

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Nrmk.IndyFramework.Response.msg");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.Response)
  return target;
}

::size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  // int64 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*Response::GetClassData() const { return &_class_data_; }


void Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, lhs_arena,
                                       &other->_impl_.msg_, rhs_arena);
        swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[7]);
}
// ===================================================================

class Message::_Internal {
 public:
};

Message::Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.Message)
}
Message::Message(const Message& from) : ::google::protobuf::Message() {
  Message* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.Message)
}
inline void Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}
void Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string content = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string content = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\7\0\0\0\0\0\0"
    "Nrmk.IndyFramework.Message"
    "content"
  }},
};

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Nrmk.IndyFramework.Message.content");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Message::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Message::MergeImpl
};
const ::google::protobuf::Message::ClassData*Message::GetClassData() const { return &_class_data_; }


void Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, lhs_arena,
                                       &other->_impl_.content_, rhs_arena);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[8]);
}
// ===================================================================

class Vector::_Internal {
 public:
};

Vector::Vector(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.Vector)
}
Vector::Vector(const Vector& from) : ::google::protobuf::Message() {
  Vector* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){from._impl_.values_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.Vector)
}
inline void Vector::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
Vector::~Vector() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.Vector)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedField();
}
void Vector::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.Vector)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_values()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vector::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Vector::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vector_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated double values = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double values = 1;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Vector::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.Vector)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.Vector)
  return target;
}

::size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.Vector)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double values = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vector::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Vector::MergeImpl
};
const ::google::protobuf::Message::ClassData*Vector::GetClassData() const { return &_class_data_; }


void Vector::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vector*>(&to_msg);
  auto& from = static_cast<const Vector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.Vector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vector::IsInitialized() const {
  return true;
}

void Vector::InternalSwap(Vector* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[9]);
}
// ===================================================================

class PosePair::_Internal {
 public:
};

PosePair::PosePair(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.PosePair)
}
PosePair::PosePair(const PosePair& from) : ::google::protobuf::Message() {
  PosePair* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.q_){from._impl_.q_},
      decltype(_impl_.p_){from._impl_.p_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.PosePair)
}
inline void PosePair::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.q_){arena},
      decltype(_impl_.p_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
PosePair::~PosePair() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.PosePair)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PosePair::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.q_.~RepeatedField();
  _impl_.p_.~RepeatedField();
}
void PosePair::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PosePair::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.PosePair)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_q()->Clear();
  _internal_mutable_p()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PosePair::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PosePair::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PosePair_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float p = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PosePair, _impl_.p_)}},
    // repeated float q = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PosePair, _impl_.q_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float q = 1;
    {PROTOBUF_FIELD_OFFSET(PosePair, _impl_.q_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float p = 2;
    {PROTOBUF_FIELD_OFFSET(PosePair, _impl_.p_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PosePair::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.PosePair)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float q = 1;
  if (this->_internal_q_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_q(), target);
  }

  // repeated float p = 2;
  if (this->_internal_p_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_p(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.PosePair)
  return target;
}

::size_t PosePair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.PosePair)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float q = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_q_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float p = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_p_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PosePair::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PosePair::MergeImpl
};
const ::google::protobuf::Message::ClassData*PosePair::GetClassData() const { return &_class_data_; }


void PosePair::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PosePair*>(&to_msg);
  auto& from = static_cast<const PosePair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.PosePair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_q()->MergeFrom(from._internal_q());
  _this->_internal_mutable_p()->MergeFrom(from._internal_p());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PosePair::CopyFrom(const PosePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.PosePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PosePair::IsInitialized() const {
  return true;
}

void PosePair::InternalSwap(PosePair* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.q_.InternalSwap(&other->_impl_.q_);
  _impl_.p_.InternalSwap(&other->_impl_.p_);
}

::google::protobuf::Metadata PosePair::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[10]);
}
// ===================================================================

class EndtoolRS485Tx::_Internal {
 public:
};

EndtoolRS485Tx::EndtoolRS485Tx(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.EndtoolRS485Tx)
}
EndtoolRS485Tx::EndtoolRS485Tx(const EndtoolRS485Tx& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.EndtoolRS485Tx)
}
inline void EndtoolRS485Tx::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.word1_){0u},
      decltype(_impl_.word2_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
EndtoolRS485Tx::~EndtoolRS485Tx() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.EndtoolRS485Tx)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EndtoolRS485Tx::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void EndtoolRS485Tx::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EndtoolRS485Tx::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.EndtoolRS485Tx)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.word1_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.word2_) -
      reinterpret_cast<char*>(&_impl_.word1_)) + sizeof(_impl_.word2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EndtoolRS485Tx::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EndtoolRS485Tx::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EndtoolRS485Tx_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 word2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EndtoolRS485Tx, _impl_.word2_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EndtoolRS485Tx, _impl_.word2_)}},
    // uint32 word1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EndtoolRS485Tx, _impl_.word1_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EndtoolRS485Tx, _impl_.word1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 word1 = 1;
    {PROTOBUF_FIELD_OFFSET(EndtoolRS485Tx, _impl_.word1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 word2 = 2;
    {PROTOBUF_FIELD_OFFSET(EndtoolRS485Tx, _impl_.word2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EndtoolRS485Tx::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.EndtoolRS485Tx)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 word1 = 1;
  if (this->_internal_word1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_word1(), target);
  }

  // uint32 word2 = 2;
  if (this->_internal_word2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_word2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.EndtoolRS485Tx)
  return target;
}

::size_t EndtoolRS485Tx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.EndtoolRS485Tx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 word1 = 1;
  if (this->_internal_word1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_word1());
  }

  // uint32 word2 = 2;
  if (this->_internal_word2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_word2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EndtoolRS485Tx::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EndtoolRS485Tx::MergeImpl
};
const ::google::protobuf::Message::ClassData*EndtoolRS485Tx::GetClassData() const { return &_class_data_; }


void EndtoolRS485Tx::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EndtoolRS485Tx*>(&to_msg);
  auto& from = static_cast<const EndtoolRS485Tx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.EndtoolRS485Tx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_word1() != 0) {
    _this->_internal_set_word1(from._internal_word1());
  }
  if (from._internal_word2() != 0) {
    _this->_internal_set_word2(from._internal_word2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EndtoolRS485Tx::CopyFrom(const EndtoolRS485Tx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.EndtoolRS485Tx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EndtoolRS485Tx::IsInitialized() const {
  return true;
}

void EndtoolRS485Tx::InternalSwap(EndtoolRS485Tx* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EndtoolRS485Tx, _impl_.word2_)
      + sizeof(EndtoolRS485Tx::_impl_.word2_)
      - PROTOBUF_FIELD_OFFSET(EndtoolRS485Tx, _impl_.word1_)>(
          reinterpret_cast<char*>(&_impl_.word1_),
          reinterpret_cast<char*>(&other->_impl_.word1_));
}

::google::protobuf::Metadata EndtoolRS485Tx::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[11]);
}
// ===================================================================

class EndtoolRS485Rx::_Internal {
 public:
};

EndtoolRS485Rx::EndtoolRS485Rx(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.EndtoolRS485Rx)
}
EndtoolRS485Rx::EndtoolRS485Rx(const EndtoolRS485Rx& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.EndtoolRS485Rx)
}
inline void EndtoolRS485Rx::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.word1_){0u},
      decltype(_impl_.word2_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
EndtoolRS485Rx::~EndtoolRS485Rx() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.EndtoolRS485Rx)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EndtoolRS485Rx::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void EndtoolRS485Rx::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EndtoolRS485Rx::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.EndtoolRS485Rx)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.word1_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.word2_) -
      reinterpret_cast<char*>(&_impl_.word1_)) + sizeof(_impl_.word2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EndtoolRS485Rx::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EndtoolRS485Rx::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EndtoolRS485Rx_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 word2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EndtoolRS485Rx, _impl_.word2_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EndtoolRS485Rx, _impl_.word2_)}},
    // uint32 word1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EndtoolRS485Rx, _impl_.word1_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EndtoolRS485Rx, _impl_.word1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 word1 = 1;
    {PROTOBUF_FIELD_OFFSET(EndtoolRS485Rx, _impl_.word1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 word2 = 2;
    {PROTOBUF_FIELD_OFFSET(EndtoolRS485Rx, _impl_.word2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EndtoolRS485Rx::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.EndtoolRS485Rx)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 word1 = 1;
  if (this->_internal_word1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_word1(), target);
  }

  // uint32 word2 = 2;
  if (this->_internal_word2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_word2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.EndtoolRS485Rx)
  return target;
}

::size_t EndtoolRS485Rx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.EndtoolRS485Rx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 word1 = 1;
  if (this->_internal_word1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_word1());
  }

  // uint32 word2 = 2;
  if (this->_internal_word2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_word2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EndtoolRS485Rx::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EndtoolRS485Rx::MergeImpl
};
const ::google::protobuf::Message::ClassData*EndtoolRS485Rx::GetClassData() const { return &_class_data_; }


void EndtoolRS485Rx::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EndtoolRS485Rx*>(&to_msg);
  auto& from = static_cast<const EndtoolRS485Rx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.EndtoolRS485Rx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_word1() != 0) {
    _this->_internal_set_word1(from._internal_word1());
  }
  if (from._internal_word2() != 0) {
    _this->_internal_set_word2(from._internal_word2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EndtoolRS485Rx::CopyFrom(const EndtoolRS485Rx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.EndtoolRS485Rx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EndtoolRS485Rx::IsInitialized() const {
  return true;
}

void EndtoolRS485Rx::InternalSwap(EndtoolRS485Rx* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EndtoolRS485Rx, _impl_.word2_)
      + sizeof(EndtoolRS485Rx::_impl_.word2_)
      - PROTOBUF_FIELD_OFFSET(EndtoolRS485Rx, _impl_.word1_)>(
          reinterpret_cast<char*>(&_impl_.word1_),
          reinterpret_cast<char*>(&other->_impl_.word1_));
}

::google::protobuf::Metadata EndtoolRS485Rx::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[12]);
}
// ===================================================================

class TactTime::_Internal {
 public:
};

TactTime::TactTime(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.TactTime)
}
TactTime::TactTime(const TactTime& from) : ::google::protobuf::Message() {
  TactTime* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){},
      decltype(_impl_.tact_time_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), _this->GetArenaForAllocation());
  }
  _this->_impl_.tact_time_ = from._impl_.tact_time_;

  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.TactTime)
}
inline void TactTime::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){},
      decltype(_impl_.tact_time_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TactTime::~TactTime() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.TactTime)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TactTime::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
}
void TactTime::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TactTime::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.TactTime)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.tact_time_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TactTime::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> TactTime::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TactTime_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float tact_time = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(TactTime, _impl_.tact_time_)}},
    // string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TactTime, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1;
    {PROTOBUF_FIELD_OFFSET(TactTime, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float tact_time = 2;
    {PROTOBUF_FIELD_OFFSET(TactTime, _impl_.tact_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\33\4\0\0\0\0\0\0"
    "Nrmk.IndyFramework.TactTime"
    "type"
  }},
};

::uint8_t* TactTime::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.TactTime)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Nrmk.IndyFramework.TactTime.type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // float tact_time = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_tact_time = this->_internal_tact_time();
  ::uint32_t raw_tact_time;
  memcpy(&raw_tact_time, &tmp_tact_time, sizeof(tmp_tact_time));
  if (raw_tact_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_tact_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.TactTime)
  return target;
}

::size_t TactTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.TactTime)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // float tact_time = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_tact_time = this->_internal_tact_time();
  ::uint32_t raw_tact_time;
  memcpy(&raw_tact_time, &tmp_tact_time, sizeof(tmp_tact_time));
  if (raw_tact_time != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TactTime::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TactTime::MergeImpl
};
const ::google::protobuf::Message::ClassData*TactTime::GetClassData() const { return &_class_data_; }


void TactTime::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TactTime*>(&to_msg);
  auto& from = static_cast<const TactTime&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.TactTime)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_tact_time = from._internal_tact_time();
  ::uint32_t raw_tact_time;
  memcpy(&raw_tact_time, &tmp_tact_time, sizeof(tmp_tact_time));
  if (raw_tact_time != 0) {
    _this->_internal_set_tact_time(from._internal_tact_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TactTime::CopyFrom(const TactTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.TactTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TactTime::IsInitialized() const {
  return true;
}

void TactTime::InternalSwap(TactTime* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, lhs_arena,
                                       &other->_impl_.type_, rhs_arena);
        swap(_impl_.tact_time_, other->_impl_.tact_time_);
}

::google::protobuf::Metadata TactTime::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[13]);
}
// ===================================================================

class DateTime::_Internal {
 public:
};

DateTime::DateTime(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Nrmk.IndyFramework.DateTime)
}
DateTime::DateTime(const DateTime& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Nrmk.IndyFramework.DateTime)
}
inline void DateTime::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.year_){0u},
      decltype(_impl_.month_){0u},
      decltype(_impl_.day_){0u},
      decltype(_impl_.hour_){0u},
      decltype(_impl_.minute_){0u},
      decltype(_impl_.second_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
DateTime::~DateTime() {
  // @@protoc_insertion_point(destructor:Nrmk.IndyFramework.DateTime)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DateTime::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void DateTime::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DateTime::Clear() {
// @@protoc_insertion_point(message_clear_start:Nrmk.IndyFramework.DateTime)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.year_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.second_) -
      reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.second_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DateTime::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> DateTime::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DateTime_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 year = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DateTime, _impl_.year_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DateTime, _impl_.year_)}},
    // uint32 month = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DateTime, _impl_.month_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DateTime, _impl_.month_)}},
    // uint32 day = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DateTime, _impl_.day_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DateTime, _impl_.day_)}},
    // uint32 hour = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DateTime, _impl_.hour_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DateTime, _impl_.hour_)}},
    // uint32 minute = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DateTime, _impl_.minute_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(DateTime, _impl_.minute_)}},
    // uint32 second = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DateTime, _impl_.second_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(DateTime, _impl_.second_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 year = 1;
    {PROTOBUF_FIELD_OFFSET(DateTime, _impl_.year_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 month = 2;
    {PROTOBUF_FIELD_OFFSET(DateTime, _impl_.month_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 day = 3;
    {PROTOBUF_FIELD_OFFSET(DateTime, _impl_.day_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 hour = 4;
    {PROTOBUF_FIELD_OFFSET(DateTime, _impl_.hour_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 minute = 5;
    {PROTOBUF_FIELD_OFFSET(DateTime, _impl_.minute_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 second = 6;
    {PROTOBUF_FIELD_OFFSET(DateTime, _impl_.second_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DateTime::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Nrmk.IndyFramework.DateTime)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 year = 1;
  if (this->_internal_year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_year(), target);
  }

  // uint32 month = 2;
  if (this->_internal_month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_month(), target);
  }

  // uint32 day = 3;
  if (this->_internal_day() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_day(), target);
  }

  // uint32 hour = 4;
  if (this->_internal_hour() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_hour(), target);
  }

  // uint32 minute = 5;
  if (this->_internal_minute() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_minute(), target);
  }

  // uint32 second = 6;
  if (this->_internal_second() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_second(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Nrmk.IndyFramework.DateTime)
  return target;
}

::size_t DateTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Nrmk.IndyFramework.DateTime)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 year = 1;
  if (this->_internal_year() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_year());
  }

  // uint32 month = 2;
  if (this->_internal_month() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_month());
  }

  // uint32 day = 3;
  if (this->_internal_day() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_day());
  }

  // uint32 hour = 4;
  if (this->_internal_hour() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_hour());
  }

  // uint32 minute = 5;
  if (this->_internal_minute() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_minute());
  }

  // uint32 second = 6;
  if (this->_internal_second() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_second());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DateTime::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DateTime::MergeImpl
};
const ::google::protobuf::Message::ClassData*DateTime::GetClassData() const { return &_class_data_; }


void DateTime::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DateTime*>(&to_msg);
  auto& from = static_cast<const DateTime&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Nrmk.IndyFramework.DateTime)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_year() != 0) {
    _this->_internal_set_year(from._internal_year());
  }
  if (from._internal_month() != 0) {
    _this->_internal_set_month(from._internal_month());
  }
  if (from._internal_day() != 0) {
    _this->_internal_set_day(from._internal_day());
  }
  if (from._internal_hour() != 0) {
    _this->_internal_set_hour(from._internal_hour());
  }
  if (from._internal_minute() != 0) {
    _this->_internal_set_minute(from._internal_minute());
  }
  if (from._internal_second() != 0) {
    _this->_internal_set_second(from._internal_second());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DateTime::CopyFrom(const DateTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Nrmk.IndyFramework.DateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DateTime::IsInitialized() const {
  return true;
}

void DateTime::InternalSwap(DateTime* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DateTime, _impl_.second_)
      + sizeof(DateTime::_impl_.second_)
      - PROTOBUF_FIELD_OFFSET(DateTime, _impl_.year_)>(
          reinterpret_cast<char*>(&_impl_.year_),
          reinterpret_cast<char*>(&other->_impl_.year_));
}

::google::protobuf::Metadata DateTime::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_5fmsgs_2eproto_getter, &descriptor_table_common_5fmsgs_2eproto_once,
      file_level_metadata_common_5fmsgs_2eproto[14]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace IndyFramework
}  // namespace Nrmk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
