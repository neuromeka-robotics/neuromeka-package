// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device.proto

#include "device.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Nrmk {
namespace IndyFramework {
}  // namespace IndyFramework
}  // namespace Nrmk
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_device_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_device_2eproto = nullptr;
const ::uint32_t TableStruct_device_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_device_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014device.proto\022\022Nrmk.IndyFramework\032\021devi"
    "ce_msgs.proto\032\021common_msgs.proto2\211!\n\006Dev"
    "ice\022J\n\tSetBrakes\022\035.Nrmk.IndyFramework.Mo"
    "torList\032\034.Nrmk.IndyFramework.Response\"\000\022"
    "H\n\013SetServoAll\022\031.Nrmk.IndyFramework.Stat"
    "e\032\034.Nrmk.IndyFramework.Response\"\000\022E\n\010Set"
    "Servo\022\031.Nrmk.IndyFramework.Servo\032\034.Nrmk."
    "IndyFramework.Response\"\000\022H\n\005SetDI\022\037.Nrmk"
    ".IndyFramework.DigitalList\032\034.Nrmk.IndyFr"
    "amework.Response\"\000\022H\n\005SetDO\022\037.Nrmk.IndyF"
    "ramework.DigitalList\032\034.Nrmk.IndyFramewor"
    "k.Response\"\000\022Q\n\010SetEndDI\022%.Nrmk.IndyFram"
    "ework.EndtoolSignalList\032\034.Nrmk.IndyFrame"
    "work.Response\"\000\022Q\n\010SetEndDO\022%.Nrmk.IndyF"
    "ramework.EndtoolSignalList\032\034.Nrmk.IndyFr"
    "amework.Response\"\000\022G\n\005SetAI\022\036.Nrmk.IndyF"
    "ramework.AnalogList\032\034.Nrmk.IndyFramework"
    ".Response\"\000\022G\n\005SetAO\022\036.Nrmk.IndyFramewor"
    "k.AnalogList\032\034.Nrmk.IndyFramework.Respon"
    "se\"\000\022J\n\010SetEndAI\022\036.Nrmk.IndyFramework.An"
    "alogList\032\034.Nrmk.IndyFramework.Response\"\000"
    "\022J\n\010SetEndAO\022\036.Nrmk.IndyFramework.Analog"
    "List\032\034.Nrmk.IndyFramework.Response\"\000\022D\n\013"
    "ExecuteTool\022\030.Nrmk.IndyFramework.Name\032\031."
    "Nrmk.IndyFramework.Empty\"\000\022S\n\rSetEndRS48"
    "5Rx\022\".Nrmk.IndyFramework.EndtoolRS485Rx\032"
    "\034.Nrmk.IndyFramework.Response\"\000\022P\n\rGetEn"
    "dRS485Rx\022\031.Nrmk.IndyFramework.Empty\032\".Nr"
    "mk.IndyFramework.EndtoolRS485Rx\"\000\022P\n\rGet"
    "EndRS485Tx\022\031.Nrmk.IndyFramework.Empty\032\"."
    "Nrmk.IndyFramework.EndtoolRS485Tx\"\000\022J\n\014S"
    "etEndLedDim\022\035.Nrmk.IndyFramework.EndLedD"
    "im\032\031.Nrmk.IndyFramework.Empty\"\000\022E\n\005GetDI"
    "\022\031.Nrmk.IndyFramework.Empty\032\037.Nrmk.IndyF"
    "ramework.DigitalList\"\000\022E\n\005GetDO\022\031.Nrmk.I"
    "ndyFramework.Empty\032\037.Nrmk.IndyFramework."
    "DigitalList\"\000\022N\n\010GetEndDI\022\031.Nrmk.IndyFra"
    "mework.Empty\032%.Nrmk.IndyFramework.Endtoo"
    "lSignalList\"\000\022N\n\010GetEndDO\022\031.Nrmk.IndyFra"
    "mework.Empty\032%.Nrmk.IndyFramework.Endtoo"
    "lSignalList\"\000\022D\n\005GetAI\022\031.Nrmk.IndyFramew"
    "ork.Empty\032\036.Nrmk.IndyFramework.AnalogLis"
    "t\"\000\022D\n\005GetAO\022\031.Nrmk.IndyFramework.Empty\032"
    "\036.Nrmk.IndyFramework.AnalogList\"\000\022G\n\010Get"
    "EndAI\022\031.Nrmk.IndyFramework.Empty\032\036.Nrmk."
    "IndyFramework.AnalogList\"\000\022G\n\010GetEndAO\022\031"
    ".Nrmk.IndyFramework.Empty\032\036.Nrmk.IndyFra"
    "mework.AnalogList\"\000\022K\n\tGetEL5001\022\031.Nrmk."
    "IndyFramework.Empty\032!.Nrmk.IndyFramework"
    ".GetEL5001Data\"\000\022K\n\tGetEL5101\022\031.Nrmk.Ind"
    "yFramework.Empty\032!.Nrmk.IndyFramework.Ge"
    "tEL5101Data\"\000\022L\n\rGetDeviceInfo\022\031.Nrmk.In"
    "dyFramework.Empty\032\036.Nrmk.IndyFramework.D"
    "eviceInfo\"\000\022Z\n\024GetBrakeControlStyle\022\031.Nr"
    "mk.IndyFramework.Empty\032%.Nrmk.IndyFramew"
    "ork.BrakeControlStyle\"\000\022U\n\020SetSanderComm"
    "and\022!.Nrmk.IndyFramework.SanderCommand\032\034"
    ".Nrmk.IndyFramework.Response\"\000\022R\n\020GetSan"
    "derCommand\022\031.Nrmk.IndyFramework.Empty\032!."
    "Nrmk.IndyFramework.SanderCommand\"\000\022P\n\017Ge"
    "tFTSensorData\022\031.Nrmk.IndyFramework.Empty"
    "\032 .Nrmk.IndyFramework.FTSensorData\"\000\022H\n\013"
    "GetConveyor\022\031.Nrmk.IndyFramework.Empty\032\034"
    ".Nrmk.IndyFramework.Conveyor\"\000\022K\n\017SetCon"
    "veyorName\022\030.Nrmk.IndyFramework.Name\032\034.Nr"
    "mk.IndyFramework.Response\"\000\022M\n\021SetConvey"
    "orByName\022\030.Nrmk.IndyFramework.Name\032\034.Nrm"
    "k.IndyFramework.Response\"\000\022Q\n\022SetConveyo"
    "rEncoder\022\033.Nrmk.IndyFramework.Encoder\032\034."
    "Nrmk.IndyFramework.Response\"\000\022Q\n\022SetConv"
    "eyorTrigger\022\033.Nrmk.IndyFramework.Trigger"
    "\032\034.Nrmk.IndyFramework.Response\"\000\022N\n\021SetC"
    "onveyorOffset\022\031.Nrmk.IndyFramework.Float"
    "\032\034.Nrmk.IndyFramework.Response\"\000\022W\n\027SetC"
    "onveyorStartingPose\022\034.Nrmk.IndyFramework"
    ".PosePair\032\034.Nrmk.IndyFramework.Response\""
    "\000\022W\n\027SetConveyorTerminalPose\022\034.Nrmk.Indy"
    "Framework.PosePair\032\034.Nrmk.IndyFramework."
    "Response\"\000\022R\n\020GetConveyorState\022\031.Nrmk.In"
    "dyFramework.Empty\032!.Nrmk.IndyFramework.C"
    "onveyorState\"\000\022T\n\016GetLoadFactors\022\031.Nrmk."
    "IndyFramework.Empty\032%.Nrmk.IndyFramework"
    ".GetLoadFactorsRes\"\000\022W\n\013SetAutoMode\022\".Nr"
    "mk.IndyFramework.SetAutoModeReq\032\".Nrmk.I"
    "ndyFramework.SetAutoModeRes\"\000\022R\n\rCheckAu"
    "toMode\022\031.Nrmk.IndyFramework.Empty\032$.Nrmk"
    ".IndyFramework.CheckAutoModeRes\"\000\022X\n\020Che"
    "ckReducedMode\022\031.Nrmk.IndyFramework.Empty"
    "\032\'.Nrmk.IndyFramework.CheckReducedModeRe"
    "s\"\000\022^\n\026GetSafetyFunctionState\022\031.Nrmk.Ind"
    "yFramework.Empty\032\'.Nrmk.IndyFramework.Sa"
    "fetyFunctionState\"\000\022`\n\025RequestSafetyFunc"
    "tion\022\'.Nrmk.IndyFramework.SafetyFunction"
    "State\032\034.Nrmk.IndyFramework.Response\"\000\022Z\n"
    "\024GetSafetyControlData\022\031.Nrmk.IndyFramewo"
    "rk.Empty\032%.Nrmk.IndyFramework.SafetyCont"
    "rolData\"\000\022N\n\016GetGripperData\022\031.Nrmk.IndyF"
    "ramework.Empty\032\037.Nrmk.IndyFramework.Grip"
    "perData\"\000\022T\n\021SetGripperCommand\022\".Nrmk.In"
    "dyFramework.GripperCommand\032\031.Nrmk.IndyFr"
    "amework.Empty\"\000\022e\n\025AddPhotoneoCalibPoint"
    "\022,.Nrmk.IndyFramework.AddPhotoneoCalibPo"
    "intReq\032\034.Nrmk.IndyFramework.Response\"\000\022]"
    "\n\024GetPhotoneoDetection\022!.Nrmk.IndyFramew"
    "ork.VisionRequest\032 .Nrmk.IndyFramework.V"
    "isionResult\"\000\022]\n\024GetPhotoneoRetrieval\022!."
    "Nrmk.IndyFramework.VisionRequest\032 .Nrmk."
    "IndyFramework.VisionResult\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_device_2eproto_deps[2] =
    {
        &::descriptor_table_common_5fmsgs_2eproto,
        &::descriptor_table_device_5fmsgs_2eproto,
};
static ::absl::once_flag descriptor_table_device_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_device_2eproto = {
    false,
    false,
    4316,
    descriptor_table_protodef_device_2eproto,
    "device.proto",
    &descriptor_table_device_2eproto_once,
    descriptor_table_device_2eproto_deps,
    2,
    0,
    schemas,
    file_default_instances,
    TableStruct_device_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_device_2eproto,
    file_level_service_descriptors_device_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_device_2eproto_getter() {
  return &descriptor_table_device_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_device_2eproto(&descriptor_table_device_2eproto);
namespace Nrmk {
namespace IndyFramework {
// @@protoc_insertion_point(namespace_scope)
}  // namespace IndyFramework
}  // namespace Nrmk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
