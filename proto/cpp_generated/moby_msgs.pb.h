// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: moby_msgs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_moby_5fmsgs_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_moby_5fmsgs_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_moby_5fmsgs_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_moby_5fmsgs_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_moby_5fmsgs_2eproto;
namespace Nrmk {
namespace IndyFramework {
class BMSData;
struct BMSDataDefaultTypeInternal;
extern BMSDataDefaultTypeInternal _BMSData_default_instance_;
class BoolVal;
struct BoolValDefaultTypeInternal;
extern BoolValDefaultTypeInternal _BoolVal_default_instance_;
class BoolVals;
struct BoolValsDefaultTypeInternal;
extern BoolValsDefaultTypeInternal _BoolVals_default_instance_;
class DoubleVal;
struct DoubleValDefaultTypeInternal;
extern DoubleValDefaultTypeInternal _DoubleVal_default_instance_;
class DoubleVals;
struct DoubleValsDefaultTypeInternal;
extern DoubleValsDefaultTypeInternal _DoubleVals_default_instance_;
class DriveIndex;
struct DriveIndexDefaultTypeInternal;
extern DriveIndexDefaultTypeInternal _DriveIndex_default_instance_;
class FloatVal;
struct FloatValDefaultTypeInternal;
extern FloatValDefaultTypeInternal _FloatVal_default_instance_;
class FloatVals;
struct FloatValsDefaultTypeInternal;
extern FloatValsDefaultTypeInternal _FloatVals_default_instance_;
class ForcedKinematicsData;
struct ForcedKinematicsDataDefaultTypeInternal;
extern ForcedKinematicsDataDefaultTypeInternal _ForcedKinematicsData_default_instance_;
class GBool;
struct GBoolDefaultTypeInternal;
extern GBoolDefaultTypeInternal _GBool_default_instance_;
class GFloat;
struct GFloatDefaultTypeInternal;
extern GFloatDefaultTypeInternal _GFloat_default_instance_;
class GInt;
struct GIntDefaultTypeInternal;
extern GIntDefaultTypeInternal _GInt_default_instance_;
class GString;
struct GStringDefaultTypeInternal;
extern GStringDefaultTypeInternal _GString_default_instance_;
class IMUData;
struct IMUDataDefaultTypeInternal;
extern IMUDataDefaultTypeInternal _IMUData_default_instance_;
class IRData;
struct IRDataDefaultTypeInternal;
extern IRDataDefaultTypeInternal _IRData_default_instance_;
class IntVal;
struct IntValDefaultTypeInternal;
extern IntValDefaultTypeInternal _IntVal_default_instance_;
class IntVals;
struct IntValsDefaultTypeInternal;
extern IntValsDefaultTypeInternal _IntVals_default_instance_;
class MobyErrorState;
struct MobyErrorStateDefaultTypeInternal;
extern MobyErrorStateDefaultTypeInternal _MobyErrorState_default_instance_;
class MobyPose;
struct MobyPoseDefaultTypeInternal;
extern MobyPoseDefaultTypeInternal _MobyPose_default_instance_;
class MobyState;
struct MobyStateDefaultTypeInternal;
extern MobyStateDefaultTypeInternal _MobyState_default_instance_;
class MobyVel;
struct MobyVelDefaultTypeInternal;
extern MobyVelDefaultTypeInternal _MobyVel_default_instance_;
class MotorDriverRx;
struct MotorDriverRxDefaultTypeInternal;
extern MotorDriverRxDefaultTypeInternal _MotorDriverRx_default_instance_;
class MotorDriverTx;
struct MotorDriverTxDefaultTypeInternal;
extern MotorDriverTxDefaultTypeInternal _MotorDriverTx_default_instance_;
class RotationGain;
struct RotationGainDefaultTypeInternal;
extern RotationGainDefaultTypeInternal _RotationGain_default_instance_;
class SwerveDoubles;
struct SwerveDoublesDefaultTypeInternal;
extern SwerveDoublesDefaultTypeInternal _SwerveDoubles_default_instance_;
class TargetVel;
struct TargetVelDefaultTypeInternal;
extern TargetVelDefaultTypeInternal _TargetVel_default_instance_;
class USData;
struct USDataDefaultTypeInternal;
extern USDataDefaultTypeInternal _USData_default_instance_;
class VelAccBoundary;
struct VelAccBoundaryDefaultTypeInternal;
extern VelAccBoundaryDefaultTypeInternal _VelAccBoundary_default_instance_;
class ZeroCount;
struct ZeroCountDefaultTypeInternal;
extern ZeroCountDefaultTypeInternal _ZeroCount_default_instance_;
}  // namespace IndyFramework
}  // namespace Nrmk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Nrmk {
namespace IndyFramework {

// ===================================================================


// -------------------------------------------------------------------

class DriveIndex final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.DriveIndex) */ {
 public:
  inline DriveIndex() : DriveIndex(nullptr) {}
  ~DriveIndex() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DriveIndex(::google::protobuf::internal::ConstantInitialized);

  DriveIndex(const DriveIndex& from);
  DriveIndex(DriveIndex&& from) noexcept
    : DriveIndex() {
    *this = ::std::move(from);
  }

  inline DriveIndex& operator=(const DriveIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline DriveIndex& operator=(DriveIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DriveIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const DriveIndex* internal_default_instance() {
    return reinterpret_cast<const DriveIndex*>(
               &_DriveIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DriveIndex& a, DriveIndex& b) {
    a.Swap(&b);
  }
  inline void Swap(DriveIndex* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DriveIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DriveIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DriveIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DriveIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DriveIndex& from) {
    DriveIndex::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DriveIndex* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.DriveIndex";
  }
  protected:
  explicit DriveIndex(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMobyIndexFieldNumber = 1,
  };
  // uint32 moby_index = 1;
  void clear_moby_index() ;
  ::uint32_t moby_index() const;
  void set_moby_index(::uint32_t value);

  private:
  ::uint32_t _internal_moby_index() const;
  void _internal_set_moby_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.DriveIndex)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t moby_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MotorDriverTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.MotorDriverTx) */ {
 public:
  inline MotorDriverTx() : MotorDriverTx(nullptr) {}
  ~MotorDriverTx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MotorDriverTx(::google::protobuf::internal::ConstantInitialized);

  MotorDriverTx(const MotorDriverTx& from);
  MotorDriverTx(MotorDriverTx&& from) noexcept
    : MotorDriverTx() {
    *this = ::std::move(from);
  }

  inline MotorDriverTx& operator=(const MotorDriverTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorDriverTx& operator=(MotorDriverTx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorDriverTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const MotorDriverTx* internal_default_instance() {
    return reinterpret_cast<const MotorDriverTx*>(
               &_MotorDriverTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MotorDriverTx& a, MotorDriverTx& b) {
    a.Swap(&b);
  }
  inline void Swap(MotorDriverTx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorDriverTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorDriverTx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MotorDriverTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorDriverTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MotorDriverTx& from) {
    MotorDriverTx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotorDriverTx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.MotorDriverTx";
  }
  protected:
  explicit MotorDriverTx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusWordFieldNumber = 1,
    kModeOpDispFieldNumber = 2,
    kActualPositionFieldNumber = 3,
    kActualVelocityFieldNumber = 4,
    kActualTorqueFieldNumber = 5,
  };
  // uint32 statusWord = 1;
  void clear_statusword() ;
  ::uint32_t statusword() const;
  void set_statusword(::uint32_t value);

  private:
  ::uint32_t _internal_statusword() const;
  void _internal_set_statusword(::uint32_t value);

  public:
  // int32 modeOpDisp = 2;
  void clear_modeopdisp() ;
  ::int32_t modeopdisp() const;
  void set_modeopdisp(::int32_t value);

  private:
  ::int32_t _internal_modeopdisp() const;
  void _internal_set_modeopdisp(::int32_t value);

  public:
  // int32 actualPosition = 3;
  void clear_actualposition() ;
  ::int32_t actualposition() const;
  void set_actualposition(::int32_t value);

  private:
  ::int32_t _internal_actualposition() const;
  void _internal_set_actualposition(::int32_t value);

  public:
  // int32 actualVelocity = 4;
  void clear_actualvelocity() ;
  ::int32_t actualvelocity() const;
  void set_actualvelocity(::int32_t value);

  private:
  ::int32_t _internal_actualvelocity() const;
  void _internal_set_actualvelocity(::int32_t value);

  public:
  // int32 actualTorque = 5;
  void clear_actualtorque() ;
  ::int32_t actualtorque() const;
  void set_actualtorque(::int32_t value);

  private:
  ::int32_t _internal_actualtorque() const;
  void _internal_set_actualtorque(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.MotorDriverTx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t statusword_;
    ::int32_t modeopdisp_;
    ::int32_t actualposition_;
    ::int32_t actualvelocity_;
    ::int32_t actualtorque_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MotorDriverRx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.MotorDriverRx) */ {
 public:
  inline MotorDriverRx() : MotorDriverRx(nullptr) {}
  ~MotorDriverRx() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MotorDriverRx(::google::protobuf::internal::ConstantInitialized);

  MotorDriverRx(const MotorDriverRx& from);
  MotorDriverRx(MotorDriverRx&& from) noexcept
    : MotorDriverRx() {
    *this = ::std::move(from);
  }

  inline MotorDriverRx& operator=(const MotorDriverRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorDriverRx& operator=(MotorDriverRx&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorDriverRx& default_instance() {
    return *internal_default_instance();
  }
  static inline const MotorDriverRx* internal_default_instance() {
    return reinterpret_cast<const MotorDriverRx*>(
               &_MotorDriverRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MotorDriverRx& a, MotorDriverRx& b) {
    a.Swap(&b);
  }
  inline void Swap(MotorDriverRx* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorDriverRx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorDriverRx* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MotorDriverRx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorDriverRx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MotorDriverRx& from) {
    MotorDriverRx::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotorDriverRx* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.MotorDriverRx";
  }
  protected:
  explicit MotorDriverRx(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlWordFieldNumber = 1,
    kModeOpFieldNumber = 2,
    kTargetPositionFieldNumber = 3,
    kTargetVelocityFieldNumber = 4,
    kTargetTorqueFieldNumber = 5,
  };
  // uint32 controlWord = 1;
  void clear_controlword() ;
  ::uint32_t controlword() const;
  void set_controlword(::uint32_t value);

  private:
  ::uint32_t _internal_controlword() const;
  void _internal_set_controlword(::uint32_t value);

  public:
  // int32 modeOp = 2;
  void clear_modeop() ;
  ::int32_t modeop() const;
  void set_modeop(::int32_t value);

  private:
  ::int32_t _internal_modeop() const;
  void _internal_set_modeop(::int32_t value);

  public:
  // int32 targetPosition = 3;
  void clear_targetposition() ;
  ::int32_t targetposition() const;
  void set_targetposition(::int32_t value);

  private:
  ::int32_t _internal_targetposition() const;
  void _internal_set_targetposition(::int32_t value);

  public:
  // int32 targetVelocity = 4;
  void clear_targetvelocity() ;
  ::int32_t targetvelocity() const;
  void set_targetvelocity(::int32_t value);

  private:
  ::int32_t _internal_targetvelocity() const;
  void _internal_set_targetvelocity(::int32_t value);

  public:
  // int32 targetTorque = 5;
  void clear_targettorque() ;
  ::int32_t targettorque() const;
  void set_targettorque(::int32_t value);

  private:
  ::int32_t _internal_targettorque() const;
  void _internal_set_targettorque(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.MotorDriverRx)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t controlword_;
    ::int32_t modeop_;
    ::int32_t targetposition_;
    ::int32_t targetvelocity_;
    ::int32_t targettorque_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MobyState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.MobyState) */ {
 public:
  inline MobyState() : MobyState(nullptr) {}
  ~MobyState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MobyState(::google::protobuf::internal::ConstantInitialized);

  MobyState(const MobyState& from);
  MobyState(MobyState&& from) noexcept
    : MobyState() {
    *this = ::std::move(from);
  }

  inline MobyState& operator=(const MobyState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MobyState& operator=(MobyState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MobyState& default_instance() {
    return *internal_default_instance();
  }
  static inline const MobyState* internal_default_instance() {
    return reinterpret_cast<const MobyState*>(
               &_MobyState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MobyState& a, MobyState& b) {
    a.Swap(&b);
  }
  inline void Swap(MobyState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MobyState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MobyState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MobyState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MobyState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MobyState& from) {
    MobyState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MobyState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.MobyState";
  }
  protected:
  explicit MobyState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kIsReadyFieldNumber = 2,
    kIsEnableFieldNumber = 3,
    kIsMovingFieldNumber = 4,
    kIsViolationFieldNumber = 5,
  };
  // uint32 status = 1;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // bool is_ready = 2;
  void clear_is_ready() ;
  bool is_ready() const;
  void set_is_ready(bool value);

  private:
  bool _internal_is_ready() const;
  void _internal_set_is_ready(bool value);

  public:
  // bool is_enable = 3;
  void clear_is_enable() ;
  bool is_enable() const;
  void set_is_enable(bool value);

  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);

  public:
  // bool is_moving = 4;
  void clear_is_moving() ;
  bool is_moving() const;
  void set_is_moving(bool value);

  private:
  bool _internal_is_moving() const;
  void _internal_set_is_moving(bool value);

  public:
  // bool is_violation = 5;
  void clear_is_violation() ;
  bool is_violation() const;
  void set_is_violation(bool value);

  private:
  bool _internal_is_violation() const;
  void _internal_set_is_violation(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.MobyState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t status_;
    bool is_ready_;
    bool is_enable_;
    bool is_moving_;
    bool is_violation_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MobyErrorState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.MobyErrorState) */ {
 public:
  inline MobyErrorState() : MobyErrorState(nullptr) {}
  ~MobyErrorState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MobyErrorState(::google::protobuf::internal::ConstantInitialized);

  MobyErrorState(const MobyErrorState& from);
  MobyErrorState(MobyErrorState&& from) noexcept
    : MobyErrorState() {
    *this = ::std::move(from);
  }

  inline MobyErrorState& operator=(const MobyErrorState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MobyErrorState& operator=(MobyErrorState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MobyErrorState& default_instance() {
    return *internal_default_instance();
  }
  static inline const MobyErrorState* internal_default_instance() {
    return reinterpret_cast<const MobyErrorState*>(
               &_MobyErrorState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MobyErrorState& a, MobyErrorState& b) {
    a.Swap(&b);
  }
  inline void Swap(MobyErrorState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MobyErrorState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MobyErrorState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MobyErrorState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MobyErrorState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MobyErrorState& from) {
    MobyErrorState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MobyErrorState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.MobyErrorState";
  }
  protected:
  explicit MobyErrorState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorStateFieldNumber = 1,
    kErrorIndex1FieldNumber = 2,
    kErrorIndex2FieldNumber = 3,
    kErrorIndex3FieldNumber = 4,
  };
  // uint64 errorState = 1;
  void clear_errorstate() ;
  ::uint64_t errorstate() const;
  void set_errorstate(::uint64_t value);

  private:
  ::uint64_t _internal_errorstate() const;
  void _internal_set_errorstate(::uint64_t value);

  public:
  // int32 errorIndex1 = 2;
  void clear_errorindex1() ;
  ::int32_t errorindex1() const;
  void set_errorindex1(::int32_t value);

  private:
  ::int32_t _internal_errorindex1() const;
  void _internal_set_errorindex1(::int32_t value);

  public:
  // int32 errorIndex2 = 3;
  void clear_errorindex2() ;
  ::int32_t errorindex2() const;
  void set_errorindex2(::int32_t value);

  private:
  ::int32_t _internal_errorindex2() const;
  void _internal_set_errorindex2(::int32_t value);

  public:
  // int32 errorIndex3 = 4;
  void clear_errorindex3() ;
  ::int32_t errorindex3() const;
  void set_errorindex3(::int32_t value);

  private:
  ::int32_t _internal_errorindex3() const;
  void _internal_set_errorindex3(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.MobyErrorState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint64_t errorstate_;
    ::int32_t errorindex1_;
    ::int32_t errorindex2_;
    ::int32_t errorindex3_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MobyPose final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.MobyPose) */ {
 public:
  inline MobyPose() : MobyPose(nullptr) {}
  ~MobyPose() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MobyPose(::google::protobuf::internal::ConstantInitialized);

  MobyPose(const MobyPose& from);
  MobyPose(MobyPose&& from) noexcept
    : MobyPose() {
    *this = ::std::move(from);
  }

  inline MobyPose& operator=(const MobyPose& from) {
    CopyFrom(from);
    return *this;
  }
  inline MobyPose& operator=(MobyPose&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MobyPose& default_instance() {
    return *internal_default_instance();
  }
  static inline const MobyPose* internal_default_instance() {
    return reinterpret_cast<const MobyPose*>(
               &_MobyPose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MobyPose& a, MobyPose& b) {
    a.Swap(&b);
  }
  inline void Swap(MobyPose* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MobyPose* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MobyPose* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MobyPose>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MobyPose& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MobyPose& from) {
    MobyPose::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MobyPose* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.MobyPose";
  }
  protected:
  explicit MobyPose(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPxFieldNumber = 1,
    kPyFieldNumber = 2,
    kPwFieldNumber = 3,
  };
  // double px = 1;
  void clear_px() ;
  double px() const;
  void set_px(double value);

  private:
  double _internal_px() const;
  void _internal_set_px(double value);

  public:
  // double py = 2;
  void clear_py() ;
  double py() const;
  void set_py(double value);

  private:
  double _internal_py() const;
  void _internal_set_py(double value);

  public:
  // double pw = 3;
  void clear_pw() ;
  double pw() const;
  void set_pw(double value);

  private:
  double _internal_pw() const;
  void _internal_set_pw(double value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.MobyPose)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double px_;
    double py_;
    double pw_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MobyVel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.MobyVel) */ {
 public:
  inline MobyVel() : MobyVel(nullptr) {}
  ~MobyVel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MobyVel(::google::protobuf::internal::ConstantInitialized);

  MobyVel(const MobyVel& from);
  MobyVel(MobyVel&& from) noexcept
    : MobyVel() {
    *this = ::std::move(from);
  }

  inline MobyVel& operator=(const MobyVel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MobyVel& operator=(MobyVel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MobyVel& default_instance() {
    return *internal_default_instance();
  }
  static inline const MobyVel* internal_default_instance() {
    return reinterpret_cast<const MobyVel*>(
               &_MobyVel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MobyVel& a, MobyVel& b) {
    a.Swap(&b);
  }
  inline void Swap(MobyVel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MobyVel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MobyVel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MobyVel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MobyVel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MobyVel& from) {
    MobyVel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MobyVel* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.MobyVel";
  }
  protected:
  explicit MobyVel(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVxFieldNumber = 1,
    kVyFieldNumber = 2,
    kVwFieldNumber = 3,
  };
  // double vx = 1;
  void clear_vx() ;
  double vx() const;
  void set_vx(double value);

  private:
  double _internal_vx() const;
  void _internal_set_vx(double value);

  public:
  // double vy = 2;
  void clear_vy() ;
  double vy() const;
  void set_vy(double value);

  private:
  double _internal_vy() const;
  void _internal_set_vy(double value);

  public:
  // double vw = 3;
  void clear_vw() ;
  double vw() const;
  void set_vw(double value);

  private:
  double _internal_vw() const;
  void _internal_set_vw(double value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.MobyVel)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double vx_;
    double vy_;
    double vw_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IMUData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.IMUData) */ {
 public:
  inline IMUData() : IMUData(nullptr) {}
  ~IMUData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IMUData(::google::protobuf::internal::ConstantInitialized);

  IMUData(const IMUData& from);
  IMUData(IMUData&& from) noexcept
    : IMUData() {
    *this = ::std::move(from);
  }

  inline IMUData& operator=(const IMUData& from) {
    CopyFrom(from);
    return *this;
  }
  inline IMUData& operator=(IMUData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IMUData& default_instance() {
    return *internal_default_instance();
  }
  static inline const IMUData* internal_default_instance() {
    return reinterpret_cast<const IMUData*>(
               &_IMUData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(IMUData& a, IMUData& b) {
    a.Swap(&b);
  }
  inline void Swap(IMUData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IMUData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IMUData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IMUData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IMUData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IMUData& from) {
    IMUData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMUData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.IMUData";
  }
  protected:
  explicit IMUData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAngleXFieldNumber = 1,
    kAngleYFieldNumber = 2,
    kAngleZFieldNumber = 3,
    kAngleVelXFieldNumber = 4,
    kAngleVelYFieldNumber = 5,
    kAngleVelZFieldNumber = 6,
    kLinAccXFieldNumber = 7,
    kLinAccYFieldNumber = 8,
    kLinAccZFieldNumber = 9,
  };
  // double angleX = 1;
  void clear_anglex() ;
  double anglex() const;
  void set_anglex(double value);

  private:
  double _internal_anglex() const;
  void _internal_set_anglex(double value);

  public:
  // double angleY = 2;
  void clear_angley() ;
  double angley() const;
  void set_angley(double value);

  private:
  double _internal_angley() const;
  void _internal_set_angley(double value);

  public:
  // double angleZ = 3;
  void clear_anglez() ;
  double anglez() const;
  void set_anglez(double value);

  private:
  double _internal_anglez() const;
  void _internal_set_anglez(double value);

  public:
  // double angleVelX = 4;
  void clear_anglevelx() ;
  double anglevelx() const;
  void set_anglevelx(double value);

  private:
  double _internal_anglevelx() const;
  void _internal_set_anglevelx(double value);

  public:
  // double angleVelY = 5;
  void clear_anglevely() ;
  double anglevely() const;
  void set_anglevely(double value);

  private:
  double _internal_anglevely() const;
  void _internal_set_anglevely(double value);

  public:
  // double angleVelZ = 6;
  void clear_anglevelz() ;
  double anglevelz() const;
  void set_anglevelz(double value);

  private:
  double _internal_anglevelz() const;
  void _internal_set_anglevelz(double value);

  public:
  // double linAccX = 7;
  void clear_linaccx() ;
  double linaccx() const;
  void set_linaccx(double value);

  private:
  double _internal_linaccx() const;
  void _internal_set_linaccx(double value);

  public:
  // double linAccY = 8;
  void clear_linaccy() ;
  double linaccy() const;
  void set_linaccy(double value);

  private:
  double _internal_linaccy() const;
  void _internal_set_linaccy(double value);

  public:
  // double linAccZ = 9;
  void clear_linaccz() ;
  double linaccz() const;
  void set_linaccz(double value);

  private:
  double _internal_linaccz() const;
  void _internal_set_linaccz(double value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.IMUData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double anglex_;
    double angley_;
    double anglez_;
    double anglevelx_;
    double anglevely_;
    double anglevelz_;
    double linaccx_;
    double linaccy_;
    double linaccz_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SwerveDoubles final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.SwerveDoubles) */ {
 public:
  inline SwerveDoubles() : SwerveDoubles(nullptr) {}
  ~SwerveDoubles() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SwerveDoubles(::google::protobuf::internal::ConstantInitialized);

  SwerveDoubles(const SwerveDoubles& from);
  SwerveDoubles(SwerveDoubles&& from) noexcept
    : SwerveDoubles() {
    *this = ::std::move(from);
  }

  inline SwerveDoubles& operator=(const SwerveDoubles& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwerveDoubles& operator=(SwerveDoubles&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwerveDoubles& default_instance() {
    return *internal_default_instance();
  }
  static inline const SwerveDoubles* internal_default_instance() {
    return reinterpret_cast<const SwerveDoubles*>(
               &_SwerveDoubles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SwerveDoubles& a, SwerveDoubles& b) {
    a.Swap(&b);
  }
  inline void Swap(SwerveDoubles* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwerveDoubles* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwerveDoubles* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SwerveDoubles>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwerveDoubles& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SwerveDoubles& from) {
    SwerveDoubles::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SwerveDoubles* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.SwerveDoubles";
  }
  protected:
  explicit SwerveDoubles(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlFieldNumber = 1,
    kFrFieldNumber = 2,
    kBlFieldNumber = 3,
    kBrFieldNumber = 4,
  };
  // double fl = 1;
  void clear_fl() ;
  double fl() const;
  void set_fl(double value);

  private:
  double _internal_fl() const;
  void _internal_set_fl(double value);

  public:
  // double fr = 2;
  void clear_fr() ;
  double fr() const;
  void set_fr(double value);

  private:
  double _internal_fr() const;
  void _internal_set_fr(double value);

  public:
  // double bl = 3;
  void clear_bl() ;
  double bl() const;
  void set_bl(double value);

  private:
  double _internal_bl() const;
  void _internal_set_bl(double value);

  public:
  // double br = 4;
  void clear_br() ;
  double br() const;
  void set_br(double value);

  private:
  double _internal_br() const;
  void _internal_set_br(double value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.SwerveDoubles)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double fl_;
    double fr_;
    double bl_;
    double br_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TargetVel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.TargetVel) */ {
 public:
  inline TargetVel() : TargetVel(nullptr) {}
  ~TargetVel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TargetVel(::google::protobuf::internal::ConstantInitialized);

  TargetVel(const TargetVel& from);
  TargetVel(TargetVel&& from) noexcept
    : TargetVel() {
    *this = ::std::move(from);
  }

  inline TargetVel& operator=(const TargetVel& from) {
    CopyFrom(from);
    return *this;
  }
  inline TargetVel& operator=(TargetVel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TargetVel& default_instance() {
    return *internal_default_instance();
  }
  static inline const TargetVel* internal_default_instance() {
    return reinterpret_cast<const TargetVel*>(
               &_TargetVel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(TargetVel& a, TargetVel& b) {
    a.Swap(&b);
  }
  inline void Swap(TargetVel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TargetVel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TargetVel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TargetVel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TargetVel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TargetVel& from) {
    TargetVel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetVel* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.TargetVel";
  }
  protected:
  explicit TargetVel(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVxFieldNumber = 1,
    kVyFieldNumber = 2,
    kVwFieldNumber = 3,
  };
  // double vx = 1;
  void clear_vx() ;
  double vx() const;
  void set_vx(double value);

  private:
  double _internal_vx() const;
  void _internal_set_vx(double value);

  public:
  // double vy = 2;
  void clear_vy() ;
  double vy() const;
  void set_vy(double value);

  private:
  double _internal_vy() const;
  void _internal_set_vy(double value);

  public:
  // double vw = 3;
  void clear_vw() ;
  double vw() const;
  void set_vw(double value);

  private:
  double _internal_vw() const;
  void _internal_set_vw(double value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.TargetVel)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double vx_;
    double vy_;
    double vw_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ZeroCount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ZeroCount) */ {
 public:
  inline ZeroCount() : ZeroCount(nullptr) {}
  ~ZeroCount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ZeroCount(::google::protobuf::internal::ConstantInitialized);

  ZeroCount(const ZeroCount& from);
  ZeroCount(ZeroCount&& from) noexcept
    : ZeroCount() {
    *this = ::std::move(from);
  }

  inline ZeroCount& operator=(const ZeroCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZeroCount& operator=(ZeroCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZeroCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZeroCount* internal_default_instance() {
    return reinterpret_cast<const ZeroCount*>(
               &_ZeroCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ZeroCount& a, ZeroCount& b) {
    a.Swap(&b);
  }
  inline void Swap(ZeroCount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZeroCount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZeroCount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ZeroCount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZeroCount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ZeroCount& from) {
    ZeroCount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZeroCount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ZeroCount";
  }
  protected:
  explicit ZeroCount(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlFieldNumber = 1,
    kFrFieldNumber = 2,
    kBlFieldNumber = 3,
    kBrFieldNumber = 4,
  };
  // int32 fl = 1;
  void clear_fl() ;
  ::int32_t fl() const;
  void set_fl(::int32_t value);

  private:
  ::int32_t _internal_fl() const;
  void _internal_set_fl(::int32_t value);

  public:
  // int32 fr = 2;
  void clear_fr() ;
  ::int32_t fr() const;
  void set_fr(::int32_t value);

  private:
  ::int32_t _internal_fr() const;
  void _internal_set_fr(::int32_t value);

  public:
  // int32 bl = 3;
  void clear_bl() ;
  ::int32_t bl() const;
  void set_bl(::int32_t value);

  private:
  ::int32_t _internal_bl() const;
  void _internal_set_bl(::int32_t value);

  public:
  // int32 br = 4;
  void clear_br() ;
  ::int32_t br() const;
  void set_br(::int32_t value);

  private:
  ::int32_t _internal_br() const;
  void _internal_set_br(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ZeroCount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t fl_;
    ::int32_t fr_;
    ::int32_t bl_;
    ::int32_t br_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IRData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.IRData) */ {
 public:
  inline IRData() : IRData(nullptr) {}
  ~IRData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IRData(::google::protobuf::internal::ConstantInitialized);

  IRData(const IRData& from);
  IRData(IRData&& from) noexcept
    : IRData() {
    *this = ::std::move(from);
  }

  inline IRData& operator=(const IRData& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRData& operator=(IRData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRData& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRData* internal_default_instance() {
    return reinterpret_cast<const IRData*>(
               &_IRData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(IRData& a, IRData& b) {
    a.Swap(&b);
  }
  inline void Swap(IRData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IRData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IRData& from) {
    IRData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.IRData";
  }
  protected:
  explicit IRData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIrFront1FieldNumber = 1,
    kIrFront2FieldNumber = 2,
    kIrLeft1FieldNumber = 3,
    kIrLeft2FieldNumber = 4,
    kIrLeft3FieldNumber = 5,
    kIrRearFieldNumber = 6,
    kIrRight1FieldNumber = 7,
    kIrRight2FieldNumber = 8,
    kIrRight3FieldNumber = 9,
  };
  // int32 ir_front1 = 1;
  void clear_ir_front1() ;
  ::int32_t ir_front1() const;
  void set_ir_front1(::int32_t value);

  private:
  ::int32_t _internal_ir_front1() const;
  void _internal_set_ir_front1(::int32_t value);

  public:
  // int32 ir_front2 = 2;
  void clear_ir_front2() ;
  ::int32_t ir_front2() const;
  void set_ir_front2(::int32_t value);

  private:
  ::int32_t _internal_ir_front2() const;
  void _internal_set_ir_front2(::int32_t value);

  public:
  // int32 ir_left1 = 3;
  void clear_ir_left1() ;
  ::int32_t ir_left1() const;
  void set_ir_left1(::int32_t value);

  private:
  ::int32_t _internal_ir_left1() const;
  void _internal_set_ir_left1(::int32_t value);

  public:
  // int32 ir_left2 = 4;
  void clear_ir_left2() ;
  ::int32_t ir_left2() const;
  void set_ir_left2(::int32_t value);

  private:
  ::int32_t _internal_ir_left2() const;
  void _internal_set_ir_left2(::int32_t value);

  public:
  // int32 ir_left3 = 5;
  void clear_ir_left3() ;
  ::int32_t ir_left3() const;
  void set_ir_left3(::int32_t value);

  private:
  ::int32_t _internal_ir_left3() const;
  void _internal_set_ir_left3(::int32_t value);

  public:
  // int32 ir_rear = 6;
  void clear_ir_rear() ;
  ::int32_t ir_rear() const;
  void set_ir_rear(::int32_t value);

  private:
  ::int32_t _internal_ir_rear() const;
  void _internal_set_ir_rear(::int32_t value);

  public:
  // int32 ir_right1 = 7;
  void clear_ir_right1() ;
  ::int32_t ir_right1() const;
  void set_ir_right1(::int32_t value);

  private:
  ::int32_t _internal_ir_right1() const;
  void _internal_set_ir_right1(::int32_t value);

  public:
  // int32 ir_right2 = 8;
  void clear_ir_right2() ;
  ::int32_t ir_right2() const;
  void set_ir_right2(::int32_t value);

  private:
  ::int32_t _internal_ir_right2() const;
  void _internal_set_ir_right2(::int32_t value);

  public:
  // int32 ir_right3 = 9;
  void clear_ir_right3() ;
  ::int32_t ir_right3() const;
  void set_ir_right3(::int32_t value);

  private:
  ::int32_t _internal_ir_right3() const;
  void _internal_set_ir_right3(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.IRData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t ir_front1_;
    ::int32_t ir_front2_;
    ::int32_t ir_left1_;
    ::int32_t ir_left2_;
    ::int32_t ir_left3_;
    ::int32_t ir_rear_;
    ::int32_t ir_right1_;
    ::int32_t ir_right2_;
    ::int32_t ir_right3_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class USData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.USData) */ {
 public:
  inline USData() : USData(nullptr) {}
  ~USData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR USData(::google::protobuf::internal::ConstantInitialized);

  USData(const USData& from);
  USData(USData&& from) noexcept
    : USData() {
    *this = ::std::move(from);
  }

  inline USData& operator=(const USData& from) {
    CopyFrom(from);
    return *this;
  }
  inline USData& operator=(USData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const USData& default_instance() {
    return *internal_default_instance();
  }
  static inline const USData* internal_default_instance() {
    return reinterpret_cast<const USData*>(
               &_USData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(USData& a, USData& b) {
    a.Swap(&b);
  }
  inline void Swap(USData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(USData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  USData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<USData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const USData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const USData& from) {
    USData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(USData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.USData";
  }
  protected:
  explicit USData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsFrontLeft1FieldNumber = 1,
    kUsFrontLeft2FieldNumber = 2,
    kUsFrontLeft3FieldNumber = 3,
    kUsFrontGroundFieldNumber = 4,
    kUsFrontRight1FieldNumber = 5,
    kUsFrontRight2FieldNumber = 6,
    kUsFrontRight3FieldNumber = 7,
    kUsFrontRight4FieldNumber = 8,
    kUsBackRight1FieldNumber = 9,
    kUsBackRight2FieldNumber = 10,
    kUsBackRight3FieldNumber = 11,
    kUsBackGroundFieldNumber = 12,
    kUsBackLeft1FieldNumber = 13,
    kUsBackLeft2FieldNumber = 14,
    kUsBackLeft3FieldNumber = 15,
    kUsBackLeft4FieldNumber = 16,
  };
  // int32 us_front_left1 = 1;
  void clear_us_front_left1() ;
  ::int32_t us_front_left1() const;
  void set_us_front_left1(::int32_t value);

  private:
  ::int32_t _internal_us_front_left1() const;
  void _internal_set_us_front_left1(::int32_t value);

  public:
  // int32 us_front_left2 = 2;
  void clear_us_front_left2() ;
  ::int32_t us_front_left2() const;
  void set_us_front_left2(::int32_t value);

  private:
  ::int32_t _internal_us_front_left2() const;
  void _internal_set_us_front_left2(::int32_t value);

  public:
  // int32 us_front_left3 = 3;
  void clear_us_front_left3() ;
  ::int32_t us_front_left3() const;
  void set_us_front_left3(::int32_t value);

  private:
  ::int32_t _internal_us_front_left3() const;
  void _internal_set_us_front_left3(::int32_t value);

  public:
  // int32 us_front_ground = 4;
  void clear_us_front_ground() ;
  ::int32_t us_front_ground() const;
  void set_us_front_ground(::int32_t value);

  private:
  ::int32_t _internal_us_front_ground() const;
  void _internal_set_us_front_ground(::int32_t value);

  public:
  // int32 us_front_right1 = 5;
  void clear_us_front_right1() ;
  ::int32_t us_front_right1() const;
  void set_us_front_right1(::int32_t value);

  private:
  ::int32_t _internal_us_front_right1() const;
  void _internal_set_us_front_right1(::int32_t value);

  public:
  // int32 us_front_right2 = 6;
  void clear_us_front_right2() ;
  ::int32_t us_front_right2() const;
  void set_us_front_right2(::int32_t value);

  private:
  ::int32_t _internal_us_front_right2() const;
  void _internal_set_us_front_right2(::int32_t value);

  public:
  // int32 us_front_right3 = 7;
  void clear_us_front_right3() ;
  ::int32_t us_front_right3() const;
  void set_us_front_right3(::int32_t value);

  private:
  ::int32_t _internal_us_front_right3() const;
  void _internal_set_us_front_right3(::int32_t value);

  public:
  // int32 us_front_right4 = 8;
  void clear_us_front_right4() ;
  ::int32_t us_front_right4() const;
  void set_us_front_right4(::int32_t value);

  private:
  ::int32_t _internal_us_front_right4() const;
  void _internal_set_us_front_right4(::int32_t value);

  public:
  // int32 us_back_right1 = 9;
  void clear_us_back_right1() ;
  ::int32_t us_back_right1() const;
  void set_us_back_right1(::int32_t value);

  private:
  ::int32_t _internal_us_back_right1() const;
  void _internal_set_us_back_right1(::int32_t value);

  public:
  // int32 us_back_right2 = 10;
  void clear_us_back_right2() ;
  ::int32_t us_back_right2() const;
  void set_us_back_right2(::int32_t value);

  private:
  ::int32_t _internal_us_back_right2() const;
  void _internal_set_us_back_right2(::int32_t value);

  public:
  // int32 us_back_right3 = 11;
  void clear_us_back_right3() ;
  ::int32_t us_back_right3() const;
  void set_us_back_right3(::int32_t value);

  private:
  ::int32_t _internal_us_back_right3() const;
  void _internal_set_us_back_right3(::int32_t value);

  public:
  // int32 us_back_ground = 12;
  void clear_us_back_ground() ;
  ::int32_t us_back_ground() const;
  void set_us_back_ground(::int32_t value);

  private:
  ::int32_t _internal_us_back_ground() const;
  void _internal_set_us_back_ground(::int32_t value);

  public:
  // int32 us_back_left1 = 13;
  void clear_us_back_left1() ;
  ::int32_t us_back_left1() const;
  void set_us_back_left1(::int32_t value);

  private:
  ::int32_t _internal_us_back_left1() const;
  void _internal_set_us_back_left1(::int32_t value);

  public:
  // int32 us_back_left2 = 14;
  void clear_us_back_left2() ;
  ::int32_t us_back_left2() const;
  void set_us_back_left2(::int32_t value);

  private:
  ::int32_t _internal_us_back_left2() const;
  void _internal_set_us_back_left2(::int32_t value);

  public:
  // int32 us_back_left3 = 15;
  void clear_us_back_left3() ;
  ::int32_t us_back_left3() const;
  void set_us_back_left3(::int32_t value);

  private:
  ::int32_t _internal_us_back_left3() const;
  void _internal_set_us_back_left3(::int32_t value);

  public:
  // int32 us_back_left4 = 16;
  void clear_us_back_left4() ;
  ::int32_t us_back_left4() const;
  void set_us_back_left4(::int32_t value);

  private:
  ::int32_t _internal_us_back_left4() const;
  void _internal_set_us_back_left4(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.USData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 16, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t us_front_left1_;
    ::int32_t us_front_left2_;
    ::int32_t us_front_left3_;
    ::int32_t us_front_ground_;
    ::int32_t us_front_right1_;
    ::int32_t us_front_right2_;
    ::int32_t us_front_right3_;
    ::int32_t us_front_right4_;
    ::int32_t us_back_right1_;
    ::int32_t us_back_right2_;
    ::int32_t us_back_right3_;
    ::int32_t us_back_ground_;
    ::int32_t us_back_left1_;
    ::int32_t us_back_left2_;
    ::int32_t us_back_left3_;
    ::int32_t us_back_left4_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class BMSData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.BMSData) */ {
 public:
  inline BMSData() : BMSData(nullptr) {}
  ~BMSData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BMSData(::google::protobuf::internal::ConstantInitialized);

  BMSData(const BMSData& from);
  BMSData(BMSData&& from) noexcept
    : BMSData() {
    *this = ::std::move(from);
  }

  inline BMSData& operator=(const BMSData& from) {
    CopyFrom(from);
    return *this;
  }
  inline BMSData& operator=(BMSData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BMSData& default_instance() {
    return *internal_default_instance();
  }
  static inline const BMSData* internal_default_instance() {
    return reinterpret_cast<const BMSData*>(
               &_BMSData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(BMSData& a, BMSData& b) {
    a.Swap(&b);
  }
  inline void Swap(BMSData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BMSData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BMSData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BMSData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BMSData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BMSData& from) {
    BMSData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BMSData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.BMSData";
  }
  protected:
  explicit BMSData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBmsStatusFieldNumber = 1,
    kPackVoltFieldNumber = 2,
    kBatteryVoltFieldNumber = 3,
    kPackCurrent1FieldNumber = 4,
    kPackCurrent2FieldNumber = 5,
    kBmsTemperatureFieldNumber = 20,
    kCellVoltFieldNumber = 21,
    kIsChargeFieldNumber = 6,
    kIsCellOverVoltFieldNumber = 7,
    kIsCellUnderVoltFieldNumber = 8,
    kIsOverCurChargeFieldNumber = 9,
    kIsOverCurDischrgFieldNumber = 10,
    kIsShortCircuitFieldNumber = 11,
    kIsOverTemperatureFieldNumber = 12,
    kIsPackOverVoltFieldNumber = 13,
    kSOCFieldNumber = 14,
    kSOHFieldNumber = 15,
    kTimeChargeFieldNumber = 16,
    kTimeDchargeFieldNumber = 17,
    kRemCapAhFieldNumber = 18,
    kRemCapWhFieldNumber = 19,
  };
  // repeated int32 bms_status = 1;
  int bms_status_size() const;
  private:
  int _internal_bms_status_size() const;

  public:
  void clear_bms_status() ;
  ::int32_t bms_status(int index) const;
  void set_bms_status(int index, ::int32_t value);
  void add_bms_status(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& bms_status() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_bms_status();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_bms_status() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_bms_status();

  public:
  // repeated int32 pack_volt = 2;
  int pack_volt_size() const;
  private:
  int _internal_pack_volt_size() const;

  public:
  void clear_pack_volt() ;
  ::int32_t pack_volt(int index) const;
  void set_pack_volt(int index, ::int32_t value);
  void add_pack_volt(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& pack_volt() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_pack_volt();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_pack_volt() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_pack_volt();

  public:
  // repeated int32 battery_volt = 3;
  int battery_volt_size() const;
  private:
  int _internal_battery_volt_size() const;

  public:
  void clear_battery_volt() ;
  ::int32_t battery_volt(int index) const;
  void set_battery_volt(int index, ::int32_t value);
  void add_battery_volt(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& battery_volt() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_battery_volt();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_battery_volt() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_battery_volt();

  public:
  // repeated int32 pack_current1 = 4;
  int pack_current1_size() const;
  private:
  int _internal_pack_current1_size() const;

  public:
  void clear_pack_current1() ;
  ::int32_t pack_current1(int index) const;
  void set_pack_current1(int index, ::int32_t value);
  void add_pack_current1(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& pack_current1() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_pack_current1();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_pack_current1() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_pack_current1();

  public:
  // repeated int32 pack_current2 = 5;
  int pack_current2_size() const;
  private:
  int _internal_pack_current2_size() const;

  public:
  void clear_pack_current2() ;
  ::int32_t pack_current2(int index) const;
  void set_pack_current2(int index, ::int32_t value);
  void add_pack_current2(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& pack_current2() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_pack_current2();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_pack_current2() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_pack_current2();

  public:
  // repeated int32 bms_temperature = 20;
  int bms_temperature_size() const;
  private:
  int _internal_bms_temperature_size() const;

  public:
  void clear_bms_temperature() ;
  ::int32_t bms_temperature(int index) const;
  void set_bms_temperature(int index, ::int32_t value);
  void add_bms_temperature(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& bms_temperature() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_bms_temperature();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_bms_temperature() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_bms_temperature();

  public:
  // repeated int32 cell_volt = 21;
  int cell_volt_size() const;
  private:
  int _internal_cell_volt_size() const;

  public:
  void clear_cell_volt() ;
  ::int32_t cell_volt(int index) const;
  void set_cell_volt(int index, ::int32_t value);
  void add_cell_volt(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& cell_volt() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_cell_volt();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_cell_volt() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_cell_volt();

  public:
  // int32 isCharge = 6;
  void clear_ischarge() ;
  ::int32_t ischarge() const;
  void set_ischarge(::int32_t value);

  private:
  ::int32_t _internal_ischarge() const;
  void _internal_set_ischarge(::int32_t value);

  public:
  // int32 isCellOverVolt = 7;
  void clear_iscellovervolt() ;
  ::int32_t iscellovervolt() const;
  void set_iscellovervolt(::int32_t value);

  private:
  ::int32_t _internal_iscellovervolt() const;
  void _internal_set_iscellovervolt(::int32_t value);

  public:
  // int32 isCellUnderVolt = 8;
  void clear_iscellundervolt() ;
  ::int32_t iscellundervolt() const;
  void set_iscellundervolt(::int32_t value);

  private:
  ::int32_t _internal_iscellundervolt() const;
  void _internal_set_iscellundervolt(::int32_t value);

  public:
  // int32 isOverCurCharge = 9;
  void clear_isovercurcharge() ;
  ::int32_t isovercurcharge() const;
  void set_isovercurcharge(::int32_t value);

  private:
  ::int32_t _internal_isovercurcharge() const;
  void _internal_set_isovercurcharge(::int32_t value);

  public:
  // int32 isOverCurDischrg = 10;
  void clear_isovercurdischrg() ;
  ::int32_t isovercurdischrg() const;
  void set_isovercurdischrg(::int32_t value);

  private:
  ::int32_t _internal_isovercurdischrg() const;
  void _internal_set_isovercurdischrg(::int32_t value);

  public:
  // int32 isShortCircuit = 11;
  void clear_isshortcircuit() ;
  ::int32_t isshortcircuit() const;
  void set_isshortcircuit(::int32_t value);

  private:
  ::int32_t _internal_isshortcircuit() const;
  void _internal_set_isshortcircuit(::int32_t value);

  public:
  // int32 isOverTemperature = 12;
  void clear_isovertemperature() ;
  ::int32_t isovertemperature() const;
  void set_isovertemperature(::int32_t value);

  private:
  ::int32_t _internal_isovertemperature() const;
  void _internal_set_isovertemperature(::int32_t value);

  public:
  // int32 isPackOverVolt = 13;
  void clear_ispackovervolt() ;
  ::int32_t ispackovervolt() const;
  void set_ispackovervolt(::int32_t value);

  private:
  ::int32_t _internal_ispackovervolt() const;
  void _internal_set_ispackovervolt(::int32_t value);

  public:
  // int32 SOC = 14;
  void clear_soc() ;
  ::int32_t soc() const;
  void set_soc(::int32_t value);

  private:
  ::int32_t _internal_soc() const;
  void _internal_set_soc(::int32_t value);

  public:
  // int32 SOH = 15;
  void clear_soh() ;
  ::int32_t soh() const;
  void set_soh(::int32_t value);

  private:
  ::int32_t _internal_soh() const;
  void _internal_set_soh(::int32_t value);

  public:
  // int32 time_charge = 16;
  void clear_time_charge() ;
  ::int32_t time_charge() const;
  void set_time_charge(::int32_t value);

  private:
  ::int32_t _internal_time_charge() const;
  void _internal_set_time_charge(::int32_t value);

  public:
  // int32 time_dcharge = 17;
  void clear_time_dcharge() ;
  ::int32_t time_dcharge() const;
  void set_time_dcharge(::int32_t value);

  private:
  ::int32_t _internal_time_dcharge() const;
  void _internal_set_time_dcharge(::int32_t value);

  public:
  // int32 rem_capAh = 18;
  void clear_rem_capah() ;
  ::int32_t rem_capah() const;
  void set_rem_capah(::int32_t value);

  private:
  ::int32_t _internal_rem_capah() const;
  void _internal_set_rem_capah(::int32_t value);

  public:
  // int32 rem_capWh = 19;
  void clear_rem_capwh() ;
  ::int32_t rem_capwh() const;
  void set_rem_capwh(::int32_t value);

  private:
  ::int32_t _internal_rem_capwh() const;
  void _internal_set_rem_capwh(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.BMSData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 21, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> bms_status_;
    mutable ::google::protobuf::internal::CachedSize _bms_status_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> pack_volt_;
    mutable ::google::protobuf::internal::CachedSize _pack_volt_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> battery_volt_;
    mutable ::google::protobuf::internal::CachedSize _battery_volt_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> pack_current1_;
    mutable ::google::protobuf::internal::CachedSize _pack_current1_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> pack_current2_;
    mutable ::google::protobuf::internal::CachedSize _pack_current2_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> bms_temperature_;
    mutable ::google::protobuf::internal::CachedSize _bms_temperature_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> cell_volt_;
    mutable ::google::protobuf::internal::CachedSize _cell_volt_cached_byte_size_;
    ::int32_t ischarge_;
    ::int32_t iscellovervolt_;
    ::int32_t iscellundervolt_;
    ::int32_t isovercurcharge_;
    ::int32_t isovercurdischrg_;
    ::int32_t isshortcircuit_;
    ::int32_t isovertemperature_;
    ::int32_t ispackovervolt_;
    ::int32_t soc_;
    ::int32_t soh_;
    ::int32_t time_charge_;
    ::int32_t time_dcharge_;
    ::int32_t rem_capah_;
    ::int32_t rem_capwh_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ForcedKinematicsData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.ForcedKinematicsData) */ {
 public:
  inline ForcedKinematicsData() : ForcedKinematicsData(nullptr) {}
  ~ForcedKinematicsData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ForcedKinematicsData(::google::protobuf::internal::ConstantInitialized);

  ForcedKinematicsData(const ForcedKinematicsData& from);
  ForcedKinematicsData(ForcedKinematicsData&& from) noexcept
    : ForcedKinematicsData() {
    *this = ::std::move(from);
  }

  inline ForcedKinematicsData& operator=(const ForcedKinematicsData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForcedKinematicsData& operator=(ForcedKinematicsData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForcedKinematicsData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ForcedKinematicsData* internal_default_instance() {
    return reinterpret_cast<const ForcedKinematicsData*>(
               &_ForcedKinematicsData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ForcedKinematicsData& a, ForcedKinematicsData& b) {
    a.Swap(&b);
  }
  inline void Swap(ForcedKinematicsData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForcedKinematicsData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForcedKinematicsData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ForcedKinematicsData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ForcedKinematicsData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ForcedKinematicsData& from) {
    ForcedKinematicsData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForcedKinematicsData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.ForcedKinematicsData";
  }
  protected:
  explicit ForcedKinematicsData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivateFieldNumber = 1,
    kAngleFieldNumber = 2,
  };
  // bool activate = 1;
  void clear_activate() ;
  bool activate() const;
  void set_activate(bool value);

  private:
  bool _internal_activate() const;
  void _internal_set_activate(bool value);

  public:
  // int32 angle = 2;
  void clear_angle() ;
  ::int32_t angle() const;
  void set_angle(::int32_t value);

  private:
  ::int32_t _internal_angle() const;
  void _internal_set_angle(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.ForcedKinematicsData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool activate_;
    ::int32_t angle_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GBool final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.GBool) */ {
 public:
  inline GBool() : GBool(nullptr) {}
  ~GBool() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GBool(::google::protobuf::internal::ConstantInitialized);

  GBool(const GBool& from);
  GBool(GBool&& from) noexcept
    : GBool() {
    *this = ::std::move(from);
  }

  inline GBool& operator=(const GBool& from) {
    CopyFrom(from);
    return *this;
  }
  inline GBool& operator=(GBool&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GBool& default_instance() {
    return *internal_default_instance();
  }
  static inline const GBool* internal_default_instance() {
    return reinterpret_cast<const GBool*>(
               &_GBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(GBool& a, GBool& b) {
    a.Swap(&b);
  }
  inline void Swap(GBool* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GBool* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GBool* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GBool>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GBool& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GBool& from) {
    GBool::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GBool* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.GBool";
  }
  protected:
  explicit GBool(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdxFieldNumber = 1,
    kValFieldNumber = 2,
  };
  // int32 idx = 1;
  void clear_idx() ;
  ::int32_t idx() const;
  void set_idx(::int32_t value);

  private:
  ::int32_t _internal_idx() const;
  void _internal_set_idx(::int32_t value);

  public:
  // bool val = 2;
  void clear_val() ;
  bool val() const;
  void set_val(bool value);

  private:
  bool _internal_val() const;
  void _internal_set_val(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.GBool)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t idx_;
    bool val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GInt final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.GInt) */ {
 public:
  inline GInt() : GInt(nullptr) {}
  ~GInt() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GInt(::google::protobuf::internal::ConstantInitialized);

  GInt(const GInt& from);
  GInt(GInt&& from) noexcept
    : GInt() {
    *this = ::std::move(from);
  }

  inline GInt& operator=(const GInt& from) {
    CopyFrom(from);
    return *this;
  }
  inline GInt& operator=(GInt&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GInt& default_instance() {
    return *internal_default_instance();
  }
  static inline const GInt* internal_default_instance() {
    return reinterpret_cast<const GInt*>(
               &_GInt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GInt& a, GInt& b) {
    a.Swap(&b);
  }
  inline void Swap(GInt* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GInt* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GInt* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GInt>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GInt& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GInt& from) {
    GInt::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GInt* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.GInt";
  }
  protected:
  explicit GInt(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdxFieldNumber = 1,
    kValFieldNumber = 2,
  };
  // int32 idx = 1;
  void clear_idx() ;
  ::int32_t idx() const;
  void set_idx(::int32_t value);

  private:
  ::int32_t _internal_idx() const;
  void _internal_set_idx(::int32_t value);

  public:
  // int32 val = 2;
  void clear_val() ;
  ::int32_t val() const;
  void set_val(::int32_t value);

  private:
  ::int32_t _internal_val() const;
  void _internal_set_val(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.GInt)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t idx_;
    ::int32_t val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GFloat final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.GFloat) */ {
 public:
  inline GFloat() : GFloat(nullptr) {}
  ~GFloat() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GFloat(::google::protobuf::internal::ConstantInitialized);

  GFloat(const GFloat& from);
  GFloat(GFloat&& from) noexcept
    : GFloat() {
    *this = ::std::move(from);
  }

  inline GFloat& operator=(const GFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline GFloat& operator=(GFloat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GFloat& default_instance() {
    return *internal_default_instance();
  }
  static inline const GFloat* internal_default_instance() {
    return reinterpret_cast<const GFloat*>(
               &_GFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GFloat& a, GFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(GFloat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GFloat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GFloat* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GFloat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GFloat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GFloat& from) {
    GFloat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GFloat* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.GFloat";
  }
  protected:
  explicit GFloat(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdxFieldNumber = 1,
    kValFieldNumber = 2,
  };
  // int32 idx = 1;
  void clear_idx() ;
  ::int32_t idx() const;
  void set_idx(::int32_t value);

  private:
  ::int32_t _internal_idx() const;
  void _internal_set_idx(::int32_t value);

  public:
  // float val = 2;
  void clear_val() ;
  float val() const;
  void set_val(float value);

  private:
  float _internal_val() const;
  void _internal_set_val(float value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.GFloat)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t idx_;
    float val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GString final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.GString) */ {
 public:
  inline GString() : GString(nullptr) {}
  ~GString() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GString(::google::protobuf::internal::ConstantInitialized);

  GString(const GString& from);
  GString(GString&& from) noexcept
    : GString() {
    *this = ::std::move(from);
  }

  inline GString& operator=(const GString& from) {
    CopyFrom(from);
    return *this;
  }
  inline GString& operator=(GString&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GString& default_instance() {
    return *internal_default_instance();
  }
  static inline const GString* internal_default_instance() {
    return reinterpret_cast<const GString*>(
               &_GString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GString& a, GString& b) {
    a.Swap(&b);
  }
  inline void Swap(GString* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GString* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GString* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GString>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GString& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GString& from) {
    GString::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GString* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.GString";
  }
  protected:
  explicit GString(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 2,
    kIdxFieldNumber = 1,
  };
  // string val = 2;
  void clear_val() ;
  const std::string& val() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_val(Arg_&& arg, Args_... args);
  std::string* mutable_val();
  PROTOBUF_NODISCARD std::string* release_val();
  void set_allocated_val(std::string* ptr);

  private:
  const std::string& _internal_val() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_val(
      const std::string& value);
  std::string* _internal_mutable_val();

  public:
  // int32 idx = 1;
  void clear_idx() ;
  ::int32_t idx() const;
  void set_idx(::int32_t value);

  private:
  ::int32_t _internal_idx() const;
  void _internal_set_idx(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.GString)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 38, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr val_;
    ::int32_t idx_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class BoolVal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.BoolVal) */ {
 public:
  inline BoolVal() : BoolVal(nullptr) {}
  ~BoolVal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BoolVal(::google::protobuf::internal::ConstantInitialized);

  BoolVal(const BoolVal& from);
  BoolVal(BoolVal&& from) noexcept
    : BoolVal() {
    *this = ::std::move(from);
  }

  inline BoolVal& operator=(const BoolVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoolVal& operator=(BoolVal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoolVal& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoolVal* internal_default_instance() {
    return reinterpret_cast<const BoolVal*>(
               &_BoolVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(BoolVal& a, BoolVal& b) {
    a.Swap(&b);
  }
  inline void Swap(BoolVal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoolVal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoolVal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BoolVal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BoolVal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BoolVal& from) {
    BoolVal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoolVal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.BoolVal";
  }
  protected:
  explicit BoolVal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // bool val = 1;
  void clear_val() ;
  bool val() const;
  void set_val(bool value);

  private:
  bool _internal_val() const;
  void _internal_set_val(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.BoolVal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class BoolVals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.BoolVals) */ {
 public:
  inline BoolVals() : BoolVals(nullptr) {}
  ~BoolVals() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BoolVals(::google::protobuf::internal::ConstantInitialized);

  BoolVals(const BoolVals& from);
  BoolVals(BoolVals&& from) noexcept
    : BoolVals() {
    *this = ::std::move(from);
  }

  inline BoolVals& operator=(const BoolVals& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoolVals& operator=(BoolVals&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoolVals& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoolVals* internal_default_instance() {
    return reinterpret_cast<const BoolVals*>(
               &_BoolVals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(BoolVals& a, BoolVals& b) {
    a.Swap(&b);
  }
  inline void Swap(BoolVals* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoolVals* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoolVals* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BoolVals>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BoolVals& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BoolVals& from) {
    BoolVals::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoolVals* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.BoolVals";
  }
  protected:
  explicit BoolVals(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated bool val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;

  public:
  void clear_val() ;
  bool val(int index) const;
  void set_val(int index, bool value);
  void add_val(bool value);
  const ::google::protobuf::RepeatedField<bool>& val() const;
  ::google::protobuf::RepeatedField<bool>* mutable_val();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_val() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_val();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.BoolVals)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<bool> val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IntVal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.IntVal) */ {
 public:
  inline IntVal() : IntVal(nullptr) {}
  ~IntVal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IntVal(::google::protobuf::internal::ConstantInitialized);

  IntVal(const IntVal& from);
  IntVal(IntVal&& from) noexcept
    : IntVal() {
    *this = ::std::move(from);
  }

  inline IntVal& operator=(const IntVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntVal& operator=(IntVal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntVal& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntVal* internal_default_instance() {
    return reinterpret_cast<const IntVal*>(
               &_IntVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(IntVal& a, IntVal& b) {
    a.Swap(&b);
  }
  inline void Swap(IntVal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntVal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntVal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IntVal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntVal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IntVal& from) {
    IntVal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntVal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.IntVal";
  }
  protected:
  explicit IntVal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // int32 val = 1;
  void clear_val() ;
  ::int32_t val() const;
  void set_val(::int32_t value);

  private:
  ::int32_t _internal_val() const;
  void _internal_set_val(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.IntVal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IntVals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.IntVals) */ {
 public:
  inline IntVals() : IntVals(nullptr) {}
  ~IntVals() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IntVals(::google::protobuf::internal::ConstantInitialized);

  IntVals(const IntVals& from);
  IntVals(IntVals&& from) noexcept
    : IntVals() {
    *this = ::std::move(from);
  }

  inline IntVals& operator=(const IntVals& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntVals& operator=(IntVals&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntVals& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntVals* internal_default_instance() {
    return reinterpret_cast<const IntVals*>(
               &_IntVals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(IntVals& a, IntVals& b) {
    a.Swap(&b);
  }
  inline void Swap(IntVals* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntVals* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntVals* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IntVals>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntVals& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IntVals& from) {
    IntVals::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntVals* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.IntVals";
  }
  protected:
  explicit IntVals(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated int32 val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;

  public:
  void clear_val() ;
  ::int32_t val(int index) const;
  void set_val(int index, ::int32_t value);
  void add_val(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& val() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_val();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_val() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_val();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.IntVals)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> val_;
    mutable ::google::protobuf::internal::CachedSize _val_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class FloatVal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.FloatVal) */ {
 public:
  inline FloatVal() : FloatVal(nullptr) {}
  ~FloatVal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FloatVal(::google::protobuf::internal::ConstantInitialized);

  FloatVal(const FloatVal& from);
  FloatVal(FloatVal&& from) noexcept
    : FloatVal() {
    *this = ::std::move(from);
  }

  inline FloatVal& operator=(const FloatVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatVal& operator=(FloatVal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatVal& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatVal* internal_default_instance() {
    return reinterpret_cast<const FloatVal*>(
               &_FloatVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(FloatVal& a, FloatVal& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatVal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatVal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatVal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FloatVal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatVal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FloatVal& from) {
    FloatVal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatVal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.FloatVal";
  }
  protected:
  explicit FloatVal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // float val = 1;
  void clear_val() ;
  float val() const;
  void set_val(float value);

  private:
  float _internal_val() const;
  void _internal_set_val(float value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.FloatVal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class FloatVals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.FloatVals) */ {
 public:
  inline FloatVals() : FloatVals(nullptr) {}
  ~FloatVals() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FloatVals(::google::protobuf::internal::ConstantInitialized);

  FloatVals(const FloatVals& from);
  FloatVals(FloatVals&& from) noexcept
    : FloatVals() {
    *this = ::std::move(from);
  }

  inline FloatVals& operator=(const FloatVals& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatVals& operator=(FloatVals&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatVals& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatVals* internal_default_instance() {
    return reinterpret_cast<const FloatVals*>(
               &_FloatVals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(FloatVals& a, FloatVals& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatVals* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatVals* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatVals* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FloatVals>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatVals& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FloatVals& from) {
    FloatVals::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatVals* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.FloatVals";
  }
  protected:
  explicit FloatVals(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated float val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;

  public:
  void clear_val() ;
  float val(int index) const;
  void set_val(int index, float value);
  void add_val(float value);
  const ::google::protobuf::RepeatedField<float>& val() const;
  ::google::protobuf::RepeatedField<float>* mutable_val();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_val() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_val();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.FloatVals)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DoubleVal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.DoubleVal) */ {
 public:
  inline DoubleVal() : DoubleVal(nullptr) {}
  ~DoubleVal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DoubleVal(::google::protobuf::internal::ConstantInitialized);

  DoubleVal(const DoubleVal& from);
  DoubleVal(DoubleVal&& from) noexcept
    : DoubleVal() {
    *this = ::std::move(from);
  }

  inline DoubleVal& operator=(const DoubleVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoubleVal& operator=(DoubleVal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DoubleVal& default_instance() {
    return *internal_default_instance();
  }
  static inline const DoubleVal* internal_default_instance() {
    return reinterpret_cast<const DoubleVal*>(
               &_DoubleVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(DoubleVal& a, DoubleVal& b) {
    a.Swap(&b);
  }
  inline void Swap(DoubleVal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoubleVal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DoubleVal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DoubleVal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DoubleVal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DoubleVal& from) {
    DoubleVal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleVal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.DoubleVal";
  }
  protected:
  explicit DoubleVal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // double val = 1;
  void clear_val() ;
  double val() const;
  void set_val(double value);

  private:
  double _internal_val() const;
  void _internal_set_val(double value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.DoubleVal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DoubleVals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.DoubleVals) */ {
 public:
  inline DoubleVals() : DoubleVals(nullptr) {}
  ~DoubleVals() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DoubleVals(::google::protobuf::internal::ConstantInitialized);

  DoubleVals(const DoubleVals& from);
  DoubleVals(DoubleVals&& from) noexcept
    : DoubleVals() {
    *this = ::std::move(from);
  }

  inline DoubleVals& operator=(const DoubleVals& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoubleVals& operator=(DoubleVals&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DoubleVals& default_instance() {
    return *internal_default_instance();
  }
  static inline const DoubleVals* internal_default_instance() {
    return reinterpret_cast<const DoubleVals*>(
               &_DoubleVals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(DoubleVals& a, DoubleVals& b) {
    a.Swap(&b);
  }
  inline void Swap(DoubleVals* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoubleVals* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DoubleVals* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DoubleVals>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DoubleVals& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DoubleVals& from) {
    DoubleVals::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleVals* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.DoubleVals";
  }
  protected:
  explicit DoubleVals(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated double val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;

  public:
  void clear_val() ;
  double val(int index) const;
  void set_val(int index, double value);
  void add_val(double value);
  const ::google::protobuf::RepeatedField<double>& val() const;
  ::google::protobuf::RepeatedField<double>* mutable_val();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_val() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_val();

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.DoubleVals)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<double> val_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RotationGain final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.RotationGain) */ {
 public:
  inline RotationGain() : RotationGain(nullptr) {}
  ~RotationGain() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RotationGain(::google::protobuf::internal::ConstantInitialized);

  RotationGain(const RotationGain& from);
  RotationGain(RotationGain&& from) noexcept
    : RotationGain() {
    *this = ::std::move(from);
  }

  inline RotationGain& operator=(const RotationGain& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotationGain& operator=(RotationGain&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotationGain& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotationGain* internal_default_instance() {
    return reinterpret_cast<const RotationGain*>(
               &_RotationGain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(RotationGain& a, RotationGain& b) {
    a.Swap(&b);
  }
  inline void Swap(RotationGain* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotationGain* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotationGain* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RotationGain>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotationGain& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RotationGain& from) {
    RotationGain::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RotationGain* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.RotationGain";
  }
  protected:
  explicit RotationGain(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKFieldNumber = 2,
    kKvFieldNumber = 3,
    kKpFieldNumber = 4,
    kIdxFieldNumber = 1,
  };
  // double k = 2;
  void clear_k() ;
  double k() const;
  void set_k(double value);

  private:
  double _internal_k() const;
  void _internal_set_k(double value);

  public:
  // double kv = 3;
  void clear_kv() ;
  double kv() const;
  void set_kv(double value);

  private:
  double _internal_kv() const;
  void _internal_set_kv(double value);

  public:
  // double kp = 4;
  void clear_kp() ;
  double kp() const;
  void set_kp(double value);

  private:
  double _internal_kp() const;
  void _internal_set_kp(double value);

  public:
  // int32 idx = 1;
  void clear_idx() ;
  ::int32_t idx() const;
  void set_idx(::int32_t value);

  private:
  ::int32_t _internal_idx() const;
  void _internal_set_idx(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.RotationGain)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double k_;
    double kv_;
    double kp_;
    ::int32_t idx_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class VelAccBoundary final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Nrmk.IndyFramework.VelAccBoundary) */ {
 public:
  inline VelAccBoundary() : VelAccBoundary(nullptr) {}
  ~VelAccBoundary() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VelAccBoundary(::google::protobuf::internal::ConstantInitialized);

  VelAccBoundary(const VelAccBoundary& from);
  VelAccBoundary(VelAccBoundary&& from) noexcept
    : VelAccBoundary() {
    *this = ::std::move(from);
  }

  inline VelAccBoundary& operator=(const VelAccBoundary& from) {
    CopyFrom(from);
    return *this;
  }
  inline VelAccBoundary& operator=(VelAccBoundary&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VelAccBoundary& default_instance() {
    return *internal_default_instance();
  }
  static inline const VelAccBoundary* internal_default_instance() {
    return reinterpret_cast<const VelAccBoundary*>(
               &_VelAccBoundary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(VelAccBoundary& a, VelAccBoundary& b) {
    a.Swap(&b);
  }
  inline void Swap(VelAccBoundary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VelAccBoundary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VelAccBoundary* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VelAccBoundary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VelAccBoundary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VelAccBoundary& from) {
    VelAccBoundary::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VelAccBoundary* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Nrmk.IndyFramework.VelAccBoundary";
  }
  protected:
  explicit VelAccBoundary(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdxFieldNumber = 1,
    kVmaxFieldNumber = 2,
    kAmaxFieldNumber = 3,
  };
  // int32 idx = 1;
  void clear_idx() ;
  ::int32_t idx() const;
  void set_idx(::int32_t value);

  private:
  ::int32_t _internal_idx() const;
  void _internal_set_idx(::int32_t value);

  public:
  // float vmax = 2;
  void clear_vmax() ;
  float vmax() const;
  void set_vmax(float value);

  private:
  float _internal_vmax() const;
  void _internal_set_vmax(float value);

  public:
  // float amax = 3;
  void clear_amax() ;
  float amax() const;
  void set_amax(float value);

  private:
  float _internal_amax() const;
  void _internal_set_amax(float value);

  public:
  // @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.VelAccBoundary)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t idx_;
    float vmax_;
    float amax_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_moby_5fmsgs_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DriveIndex

// uint32 moby_index = 1;
inline void DriveIndex::clear_moby_index() {
  _impl_.moby_index_ = 0u;
}
inline ::uint32_t DriveIndex::moby_index() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DriveIndex.moby_index)
  return _internal_moby_index();
}
inline void DriveIndex::set_moby_index(::uint32_t value) {
  _internal_set_moby_index(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DriveIndex.moby_index)
}
inline ::uint32_t DriveIndex::_internal_moby_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.moby_index_;
}
inline void DriveIndex::_internal_set_moby_index(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.moby_index_ = value;
}

// -------------------------------------------------------------------

// MotorDriverTx

// uint32 statusWord = 1;
inline void MotorDriverTx::clear_statusword() {
  _impl_.statusword_ = 0u;
}
inline ::uint32_t MotorDriverTx::statusword() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverTx.statusWord)
  return _internal_statusword();
}
inline void MotorDriverTx::set_statusword(::uint32_t value) {
  _internal_set_statusword(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverTx.statusWord)
}
inline ::uint32_t MotorDriverTx::_internal_statusword() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.statusword_;
}
inline void MotorDriverTx::_internal_set_statusword(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.statusword_ = value;
}

// int32 modeOpDisp = 2;
inline void MotorDriverTx::clear_modeopdisp() {
  _impl_.modeopdisp_ = 0;
}
inline ::int32_t MotorDriverTx::modeopdisp() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverTx.modeOpDisp)
  return _internal_modeopdisp();
}
inline void MotorDriverTx::set_modeopdisp(::int32_t value) {
  _internal_set_modeopdisp(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverTx.modeOpDisp)
}
inline ::int32_t MotorDriverTx::_internal_modeopdisp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modeopdisp_;
}
inline void MotorDriverTx::_internal_set_modeopdisp(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.modeopdisp_ = value;
}

// int32 actualPosition = 3;
inline void MotorDriverTx::clear_actualposition() {
  _impl_.actualposition_ = 0;
}
inline ::int32_t MotorDriverTx::actualposition() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverTx.actualPosition)
  return _internal_actualposition();
}
inline void MotorDriverTx::set_actualposition(::int32_t value) {
  _internal_set_actualposition(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverTx.actualPosition)
}
inline ::int32_t MotorDriverTx::_internal_actualposition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualposition_;
}
inline void MotorDriverTx::_internal_set_actualposition(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualposition_ = value;
}

// int32 actualVelocity = 4;
inline void MotorDriverTx::clear_actualvelocity() {
  _impl_.actualvelocity_ = 0;
}
inline ::int32_t MotorDriverTx::actualvelocity() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverTx.actualVelocity)
  return _internal_actualvelocity();
}
inline void MotorDriverTx::set_actualvelocity(::int32_t value) {
  _internal_set_actualvelocity(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverTx.actualVelocity)
}
inline ::int32_t MotorDriverTx::_internal_actualvelocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualvelocity_;
}
inline void MotorDriverTx::_internal_set_actualvelocity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualvelocity_ = value;
}

// int32 actualTorque = 5;
inline void MotorDriverTx::clear_actualtorque() {
  _impl_.actualtorque_ = 0;
}
inline ::int32_t MotorDriverTx::actualtorque() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverTx.actualTorque)
  return _internal_actualtorque();
}
inline void MotorDriverTx::set_actualtorque(::int32_t value) {
  _internal_set_actualtorque(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverTx.actualTorque)
}
inline ::int32_t MotorDriverTx::_internal_actualtorque() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actualtorque_;
}
inline void MotorDriverTx::_internal_set_actualtorque(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actualtorque_ = value;
}

// -------------------------------------------------------------------

// MotorDriverRx

// uint32 controlWord = 1;
inline void MotorDriverRx::clear_controlword() {
  _impl_.controlword_ = 0u;
}
inline ::uint32_t MotorDriverRx::controlword() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverRx.controlWord)
  return _internal_controlword();
}
inline void MotorDriverRx::set_controlword(::uint32_t value) {
  _internal_set_controlword(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverRx.controlWord)
}
inline ::uint32_t MotorDriverRx::_internal_controlword() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controlword_;
}
inline void MotorDriverRx::_internal_set_controlword(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controlword_ = value;
}

// int32 modeOp = 2;
inline void MotorDriverRx::clear_modeop() {
  _impl_.modeop_ = 0;
}
inline ::int32_t MotorDriverRx::modeop() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverRx.modeOp)
  return _internal_modeop();
}
inline void MotorDriverRx::set_modeop(::int32_t value) {
  _internal_set_modeop(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverRx.modeOp)
}
inline ::int32_t MotorDriverRx::_internal_modeop() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modeop_;
}
inline void MotorDriverRx::_internal_set_modeop(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.modeop_ = value;
}

// int32 targetPosition = 3;
inline void MotorDriverRx::clear_targetposition() {
  _impl_.targetposition_ = 0;
}
inline ::int32_t MotorDriverRx::targetposition() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverRx.targetPosition)
  return _internal_targetposition();
}
inline void MotorDriverRx::set_targetposition(::int32_t value) {
  _internal_set_targetposition(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverRx.targetPosition)
}
inline ::int32_t MotorDriverRx::_internal_targetposition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetposition_;
}
inline void MotorDriverRx::_internal_set_targetposition(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetposition_ = value;
}

// int32 targetVelocity = 4;
inline void MotorDriverRx::clear_targetvelocity() {
  _impl_.targetvelocity_ = 0;
}
inline ::int32_t MotorDriverRx::targetvelocity() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverRx.targetVelocity)
  return _internal_targetvelocity();
}
inline void MotorDriverRx::set_targetvelocity(::int32_t value) {
  _internal_set_targetvelocity(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverRx.targetVelocity)
}
inline ::int32_t MotorDriverRx::_internal_targetvelocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetvelocity_;
}
inline void MotorDriverRx::_internal_set_targetvelocity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetvelocity_ = value;
}

// int32 targetTorque = 5;
inline void MotorDriverRx::clear_targettorque() {
  _impl_.targettorque_ = 0;
}
inline ::int32_t MotorDriverRx::targettorque() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MotorDriverRx.targetTorque)
  return _internal_targettorque();
}
inline void MotorDriverRx::set_targettorque(::int32_t value) {
  _internal_set_targettorque(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MotorDriverRx.targetTorque)
}
inline ::int32_t MotorDriverRx::_internal_targettorque() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targettorque_;
}
inline void MotorDriverRx::_internal_set_targettorque(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targettorque_ = value;
}

// -------------------------------------------------------------------

// MobyState

// uint32 status = 1;
inline void MobyState::clear_status() {
  _impl_.status_ = 0u;
}
inline ::uint32_t MobyState::status() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyState.status)
  return _internal_status();
}
inline void MobyState::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyState.status)
}
inline ::uint32_t MobyState::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void MobyState::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// bool is_ready = 2;
inline void MobyState::clear_is_ready() {
  _impl_.is_ready_ = false;
}
inline bool MobyState::is_ready() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyState.is_ready)
  return _internal_is_ready();
}
inline void MobyState::set_is_ready(bool value) {
  _internal_set_is_ready(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyState.is_ready)
}
inline bool MobyState::_internal_is_ready() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_ready_;
}
inline void MobyState::_internal_set_is_ready(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_ready_ = value;
}

// bool is_enable = 3;
inline void MobyState::clear_is_enable() {
  _impl_.is_enable_ = false;
}
inline bool MobyState::is_enable() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyState.is_enable)
  return _internal_is_enable();
}
inline void MobyState::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyState.is_enable)
}
inline bool MobyState::_internal_is_enable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_enable_;
}
inline void MobyState::_internal_set_is_enable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_enable_ = value;
}

// bool is_moving = 4;
inline void MobyState::clear_is_moving() {
  _impl_.is_moving_ = false;
}
inline bool MobyState::is_moving() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyState.is_moving)
  return _internal_is_moving();
}
inline void MobyState::set_is_moving(bool value) {
  _internal_set_is_moving(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyState.is_moving)
}
inline bool MobyState::_internal_is_moving() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_moving_;
}
inline void MobyState::_internal_set_is_moving(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_moving_ = value;
}

// bool is_violation = 5;
inline void MobyState::clear_is_violation() {
  _impl_.is_violation_ = false;
}
inline bool MobyState::is_violation() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyState.is_violation)
  return _internal_is_violation();
}
inline void MobyState::set_is_violation(bool value) {
  _internal_set_is_violation(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyState.is_violation)
}
inline bool MobyState::_internal_is_violation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_violation_;
}
inline void MobyState::_internal_set_is_violation(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_violation_ = value;
}

// -------------------------------------------------------------------

// MobyErrorState

// uint64 errorState = 1;
inline void MobyErrorState::clear_errorstate() {
  _impl_.errorstate_ = ::uint64_t{0u};
}
inline ::uint64_t MobyErrorState::errorstate() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyErrorState.errorState)
  return _internal_errorstate();
}
inline void MobyErrorState::set_errorstate(::uint64_t value) {
  _internal_set_errorstate(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyErrorState.errorState)
}
inline ::uint64_t MobyErrorState::_internal_errorstate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.errorstate_;
}
inline void MobyErrorState::_internal_set_errorstate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.errorstate_ = value;
}

// int32 errorIndex1 = 2;
inline void MobyErrorState::clear_errorindex1() {
  _impl_.errorindex1_ = 0;
}
inline ::int32_t MobyErrorState::errorindex1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyErrorState.errorIndex1)
  return _internal_errorindex1();
}
inline void MobyErrorState::set_errorindex1(::int32_t value) {
  _internal_set_errorindex1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyErrorState.errorIndex1)
}
inline ::int32_t MobyErrorState::_internal_errorindex1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.errorindex1_;
}
inline void MobyErrorState::_internal_set_errorindex1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.errorindex1_ = value;
}

// int32 errorIndex2 = 3;
inline void MobyErrorState::clear_errorindex2() {
  _impl_.errorindex2_ = 0;
}
inline ::int32_t MobyErrorState::errorindex2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyErrorState.errorIndex2)
  return _internal_errorindex2();
}
inline void MobyErrorState::set_errorindex2(::int32_t value) {
  _internal_set_errorindex2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyErrorState.errorIndex2)
}
inline ::int32_t MobyErrorState::_internal_errorindex2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.errorindex2_;
}
inline void MobyErrorState::_internal_set_errorindex2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.errorindex2_ = value;
}

// int32 errorIndex3 = 4;
inline void MobyErrorState::clear_errorindex3() {
  _impl_.errorindex3_ = 0;
}
inline ::int32_t MobyErrorState::errorindex3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyErrorState.errorIndex3)
  return _internal_errorindex3();
}
inline void MobyErrorState::set_errorindex3(::int32_t value) {
  _internal_set_errorindex3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyErrorState.errorIndex3)
}
inline ::int32_t MobyErrorState::_internal_errorindex3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.errorindex3_;
}
inline void MobyErrorState::_internal_set_errorindex3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.errorindex3_ = value;
}

// -------------------------------------------------------------------

// MobyPose

// double px = 1;
inline void MobyPose::clear_px() {
  _impl_.px_ = 0;
}
inline double MobyPose::px() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyPose.px)
  return _internal_px();
}
inline void MobyPose::set_px(double value) {
  _internal_set_px(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyPose.px)
}
inline double MobyPose::_internal_px() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.px_;
}
inline void MobyPose::_internal_set_px(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.px_ = value;
}

// double py = 2;
inline void MobyPose::clear_py() {
  _impl_.py_ = 0;
}
inline double MobyPose::py() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyPose.py)
  return _internal_py();
}
inline void MobyPose::set_py(double value) {
  _internal_set_py(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyPose.py)
}
inline double MobyPose::_internal_py() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.py_;
}
inline void MobyPose::_internal_set_py(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.py_ = value;
}

// double pw = 3;
inline void MobyPose::clear_pw() {
  _impl_.pw_ = 0;
}
inline double MobyPose::pw() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyPose.pw)
  return _internal_pw();
}
inline void MobyPose::set_pw(double value) {
  _internal_set_pw(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyPose.pw)
}
inline double MobyPose::_internal_pw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pw_;
}
inline void MobyPose::_internal_set_pw(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pw_ = value;
}

// -------------------------------------------------------------------

// MobyVel

// double vx = 1;
inline void MobyVel::clear_vx() {
  _impl_.vx_ = 0;
}
inline double MobyVel::vx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyVel.vx)
  return _internal_vx();
}
inline void MobyVel::set_vx(double value) {
  _internal_set_vx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyVel.vx)
}
inline double MobyVel::_internal_vx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vx_;
}
inline void MobyVel::_internal_set_vx(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vx_ = value;
}

// double vy = 2;
inline void MobyVel::clear_vy() {
  _impl_.vy_ = 0;
}
inline double MobyVel::vy() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyVel.vy)
  return _internal_vy();
}
inline void MobyVel::set_vy(double value) {
  _internal_set_vy(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyVel.vy)
}
inline double MobyVel::_internal_vy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vy_;
}
inline void MobyVel::_internal_set_vy(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vy_ = value;
}

// double vw = 3;
inline void MobyVel::clear_vw() {
  _impl_.vw_ = 0;
}
inline double MobyVel::vw() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.MobyVel.vw)
  return _internal_vw();
}
inline void MobyVel::set_vw(double value) {
  _internal_set_vw(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.MobyVel.vw)
}
inline double MobyVel::_internal_vw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vw_;
}
inline void MobyVel::_internal_set_vw(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vw_ = value;
}

// -------------------------------------------------------------------

// IMUData

// double angleX = 1;
inline void IMUData::clear_anglex() {
  _impl_.anglex_ = 0;
}
inline double IMUData::anglex() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.angleX)
  return _internal_anglex();
}
inline void IMUData::set_anglex(double value) {
  _internal_set_anglex(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.angleX)
}
inline double IMUData::_internal_anglex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.anglex_;
}
inline void IMUData::_internal_set_anglex(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.anglex_ = value;
}

// double angleY = 2;
inline void IMUData::clear_angley() {
  _impl_.angley_ = 0;
}
inline double IMUData::angley() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.angleY)
  return _internal_angley();
}
inline void IMUData::set_angley(double value) {
  _internal_set_angley(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.angleY)
}
inline double IMUData::_internal_angley() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.angley_;
}
inline void IMUData::_internal_set_angley(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.angley_ = value;
}

// double angleZ = 3;
inline void IMUData::clear_anglez() {
  _impl_.anglez_ = 0;
}
inline double IMUData::anglez() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.angleZ)
  return _internal_anglez();
}
inline void IMUData::set_anglez(double value) {
  _internal_set_anglez(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.angleZ)
}
inline double IMUData::_internal_anglez() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.anglez_;
}
inline void IMUData::_internal_set_anglez(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.anglez_ = value;
}

// double angleVelX = 4;
inline void IMUData::clear_anglevelx() {
  _impl_.anglevelx_ = 0;
}
inline double IMUData::anglevelx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.angleVelX)
  return _internal_anglevelx();
}
inline void IMUData::set_anglevelx(double value) {
  _internal_set_anglevelx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.angleVelX)
}
inline double IMUData::_internal_anglevelx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.anglevelx_;
}
inline void IMUData::_internal_set_anglevelx(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.anglevelx_ = value;
}

// double angleVelY = 5;
inline void IMUData::clear_anglevely() {
  _impl_.anglevely_ = 0;
}
inline double IMUData::anglevely() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.angleVelY)
  return _internal_anglevely();
}
inline void IMUData::set_anglevely(double value) {
  _internal_set_anglevely(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.angleVelY)
}
inline double IMUData::_internal_anglevely() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.anglevely_;
}
inline void IMUData::_internal_set_anglevely(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.anglevely_ = value;
}

// double angleVelZ = 6;
inline void IMUData::clear_anglevelz() {
  _impl_.anglevelz_ = 0;
}
inline double IMUData::anglevelz() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.angleVelZ)
  return _internal_anglevelz();
}
inline void IMUData::set_anglevelz(double value) {
  _internal_set_anglevelz(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.angleVelZ)
}
inline double IMUData::_internal_anglevelz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.anglevelz_;
}
inline void IMUData::_internal_set_anglevelz(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.anglevelz_ = value;
}

// double linAccX = 7;
inline void IMUData::clear_linaccx() {
  _impl_.linaccx_ = 0;
}
inline double IMUData::linaccx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.linAccX)
  return _internal_linaccx();
}
inline void IMUData::set_linaccx(double value) {
  _internal_set_linaccx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.linAccX)
}
inline double IMUData::_internal_linaccx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.linaccx_;
}
inline void IMUData::_internal_set_linaccx(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.linaccx_ = value;
}

// double linAccY = 8;
inline void IMUData::clear_linaccy() {
  _impl_.linaccy_ = 0;
}
inline double IMUData::linaccy() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.linAccY)
  return _internal_linaccy();
}
inline void IMUData::set_linaccy(double value) {
  _internal_set_linaccy(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.linAccY)
}
inline double IMUData::_internal_linaccy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.linaccy_;
}
inline void IMUData::_internal_set_linaccy(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.linaccy_ = value;
}

// double linAccZ = 9;
inline void IMUData::clear_linaccz() {
  _impl_.linaccz_ = 0;
}
inline double IMUData::linaccz() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IMUData.linAccZ)
  return _internal_linaccz();
}
inline void IMUData::set_linaccz(double value) {
  _internal_set_linaccz(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IMUData.linAccZ)
}
inline double IMUData::_internal_linaccz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.linaccz_;
}
inline void IMUData::_internal_set_linaccz(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.linaccz_ = value;
}

// -------------------------------------------------------------------

// SwerveDoubles

// double fl = 1;
inline void SwerveDoubles::clear_fl() {
  _impl_.fl_ = 0;
}
inline double SwerveDoubles::fl() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SwerveDoubles.fl)
  return _internal_fl();
}
inline void SwerveDoubles::set_fl(double value) {
  _internal_set_fl(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SwerveDoubles.fl)
}
inline double SwerveDoubles::_internal_fl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fl_;
}
inline void SwerveDoubles::_internal_set_fl(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fl_ = value;
}

// double fr = 2;
inline void SwerveDoubles::clear_fr() {
  _impl_.fr_ = 0;
}
inline double SwerveDoubles::fr() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SwerveDoubles.fr)
  return _internal_fr();
}
inline void SwerveDoubles::set_fr(double value) {
  _internal_set_fr(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SwerveDoubles.fr)
}
inline double SwerveDoubles::_internal_fr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fr_;
}
inline void SwerveDoubles::_internal_set_fr(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fr_ = value;
}

// double bl = 3;
inline void SwerveDoubles::clear_bl() {
  _impl_.bl_ = 0;
}
inline double SwerveDoubles::bl() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SwerveDoubles.bl)
  return _internal_bl();
}
inline void SwerveDoubles::set_bl(double value) {
  _internal_set_bl(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SwerveDoubles.bl)
}
inline double SwerveDoubles::_internal_bl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bl_;
}
inline void SwerveDoubles::_internal_set_bl(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bl_ = value;
}

// double br = 4;
inline void SwerveDoubles::clear_br() {
  _impl_.br_ = 0;
}
inline double SwerveDoubles::br() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.SwerveDoubles.br)
  return _internal_br();
}
inline void SwerveDoubles::set_br(double value) {
  _internal_set_br(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.SwerveDoubles.br)
}
inline double SwerveDoubles::_internal_br() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.br_;
}
inline void SwerveDoubles::_internal_set_br(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.br_ = value;
}

// -------------------------------------------------------------------

// TargetVel

// double vx = 1;
inline void TargetVel::clear_vx() {
  _impl_.vx_ = 0;
}
inline double TargetVel::vx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.TargetVel.vx)
  return _internal_vx();
}
inline void TargetVel::set_vx(double value) {
  _internal_set_vx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.TargetVel.vx)
}
inline double TargetVel::_internal_vx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vx_;
}
inline void TargetVel::_internal_set_vx(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vx_ = value;
}

// double vy = 2;
inline void TargetVel::clear_vy() {
  _impl_.vy_ = 0;
}
inline double TargetVel::vy() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.TargetVel.vy)
  return _internal_vy();
}
inline void TargetVel::set_vy(double value) {
  _internal_set_vy(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.TargetVel.vy)
}
inline double TargetVel::_internal_vy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vy_;
}
inline void TargetVel::_internal_set_vy(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vy_ = value;
}

// double vw = 3;
inline void TargetVel::clear_vw() {
  _impl_.vw_ = 0;
}
inline double TargetVel::vw() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.TargetVel.vw)
  return _internal_vw();
}
inline void TargetVel::set_vw(double value) {
  _internal_set_vw(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.TargetVel.vw)
}
inline double TargetVel::_internal_vw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vw_;
}
inline void TargetVel::_internal_set_vw(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vw_ = value;
}

// -------------------------------------------------------------------

// ZeroCount

// int32 fl = 1;
inline void ZeroCount::clear_fl() {
  _impl_.fl_ = 0;
}
inline ::int32_t ZeroCount::fl() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ZeroCount.fl)
  return _internal_fl();
}
inline void ZeroCount::set_fl(::int32_t value) {
  _internal_set_fl(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ZeroCount.fl)
}
inline ::int32_t ZeroCount::_internal_fl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fl_;
}
inline void ZeroCount::_internal_set_fl(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fl_ = value;
}

// int32 fr = 2;
inline void ZeroCount::clear_fr() {
  _impl_.fr_ = 0;
}
inline ::int32_t ZeroCount::fr() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ZeroCount.fr)
  return _internal_fr();
}
inline void ZeroCount::set_fr(::int32_t value) {
  _internal_set_fr(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ZeroCount.fr)
}
inline ::int32_t ZeroCount::_internal_fr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fr_;
}
inline void ZeroCount::_internal_set_fr(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fr_ = value;
}

// int32 bl = 3;
inline void ZeroCount::clear_bl() {
  _impl_.bl_ = 0;
}
inline ::int32_t ZeroCount::bl() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ZeroCount.bl)
  return _internal_bl();
}
inline void ZeroCount::set_bl(::int32_t value) {
  _internal_set_bl(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ZeroCount.bl)
}
inline ::int32_t ZeroCount::_internal_bl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bl_;
}
inline void ZeroCount::_internal_set_bl(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bl_ = value;
}

// int32 br = 4;
inline void ZeroCount::clear_br() {
  _impl_.br_ = 0;
}
inline ::int32_t ZeroCount::br() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ZeroCount.br)
  return _internal_br();
}
inline void ZeroCount::set_br(::int32_t value) {
  _internal_set_br(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ZeroCount.br)
}
inline ::int32_t ZeroCount::_internal_br() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.br_;
}
inline void ZeroCount::_internal_set_br(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.br_ = value;
}

// -------------------------------------------------------------------

// IRData

// int32 ir_front1 = 1;
inline void IRData::clear_ir_front1() {
  _impl_.ir_front1_ = 0;
}
inline ::int32_t IRData::ir_front1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_front1)
  return _internal_ir_front1();
}
inline void IRData::set_ir_front1(::int32_t value) {
  _internal_set_ir_front1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_front1)
}
inline ::int32_t IRData::_internal_ir_front1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_front1_;
}
inline void IRData::_internal_set_ir_front1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_front1_ = value;
}

// int32 ir_front2 = 2;
inline void IRData::clear_ir_front2() {
  _impl_.ir_front2_ = 0;
}
inline ::int32_t IRData::ir_front2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_front2)
  return _internal_ir_front2();
}
inline void IRData::set_ir_front2(::int32_t value) {
  _internal_set_ir_front2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_front2)
}
inline ::int32_t IRData::_internal_ir_front2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_front2_;
}
inline void IRData::_internal_set_ir_front2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_front2_ = value;
}

// int32 ir_left1 = 3;
inline void IRData::clear_ir_left1() {
  _impl_.ir_left1_ = 0;
}
inline ::int32_t IRData::ir_left1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_left1)
  return _internal_ir_left1();
}
inline void IRData::set_ir_left1(::int32_t value) {
  _internal_set_ir_left1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_left1)
}
inline ::int32_t IRData::_internal_ir_left1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_left1_;
}
inline void IRData::_internal_set_ir_left1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_left1_ = value;
}

// int32 ir_left2 = 4;
inline void IRData::clear_ir_left2() {
  _impl_.ir_left2_ = 0;
}
inline ::int32_t IRData::ir_left2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_left2)
  return _internal_ir_left2();
}
inline void IRData::set_ir_left2(::int32_t value) {
  _internal_set_ir_left2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_left2)
}
inline ::int32_t IRData::_internal_ir_left2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_left2_;
}
inline void IRData::_internal_set_ir_left2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_left2_ = value;
}

// int32 ir_left3 = 5;
inline void IRData::clear_ir_left3() {
  _impl_.ir_left3_ = 0;
}
inline ::int32_t IRData::ir_left3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_left3)
  return _internal_ir_left3();
}
inline void IRData::set_ir_left3(::int32_t value) {
  _internal_set_ir_left3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_left3)
}
inline ::int32_t IRData::_internal_ir_left3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_left3_;
}
inline void IRData::_internal_set_ir_left3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_left3_ = value;
}

// int32 ir_rear = 6;
inline void IRData::clear_ir_rear() {
  _impl_.ir_rear_ = 0;
}
inline ::int32_t IRData::ir_rear() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_rear)
  return _internal_ir_rear();
}
inline void IRData::set_ir_rear(::int32_t value) {
  _internal_set_ir_rear(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_rear)
}
inline ::int32_t IRData::_internal_ir_rear() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_rear_;
}
inline void IRData::_internal_set_ir_rear(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_rear_ = value;
}

// int32 ir_right1 = 7;
inline void IRData::clear_ir_right1() {
  _impl_.ir_right1_ = 0;
}
inline ::int32_t IRData::ir_right1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_right1)
  return _internal_ir_right1();
}
inline void IRData::set_ir_right1(::int32_t value) {
  _internal_set_ir_right1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_right1)
}
inline ::int32_t IRData::_internal_ir_right1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_right1_;
}
inline void IRData::_internal_set_ir_right1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_right1_ = value;
}

// int32 ir_right2 = 8;
inline void IRData::clear_ir_right2() {
  _impl_.ir_right2_ = 0;
}
inline ::int32_t IRData::ir_right2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_right2)
  return _internal_ir_right2();
}
inline void IRData::set_ir_right2(::int32_t value) {
  _internal_set_ir_right2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_right2)
}
inline ::int32_t IRData::_internal_ir_right2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_right2_;
}
inline void IRData::_internal_set_ir_right2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_right2_ = value;
}

// int32 ir_right3 = 9;
inline void IRData::clear_ir_right3() {
  _impl_.ir_right3_ = 0;
}
inline ::int32_t IRData::ir_right3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IRData.ir_right3)
  return _internal_ir_right3();
}
inline void IRData::set_ir_right3(::int32_t value) {
  _internal_set_ir_right3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IRData.ir_right3)
}
inline ::int32_t IRData::_internal_ir_right3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ir_right3_;
}
inline void IRData::_internal_set_ir_right3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ir_right3_ = value;
}

// -------------------------------------------------------------------

// USData

// int32 us_front_left1 = 1;
inline void USData::clear_us_front_left1() {
  _impl_.us_front_left1_ = 0;
}
inline ::int32_t USData::us_front_left1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_left1)
  return _internal_us_front_left1();
}
inline void USData::set_us_front_left1(::int32_t value) {
  _internal_set_us_front_left1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_left1)
}
inline ::int32_t USData::_internal_us_front_left1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_left1_;
}
inline void USData::_internal_set_us_front_left1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_left1_ = value;
}

// int32 us_front_left2 = 2;
inline void USData::clear_us_front_left2() {
  _impl_.us_front_left2_ = 0;
}
inline ::int32_t USData::us_front_left2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_left2)
  return _internal_us_front_left2();
}
inline void USData::set_us_front_left2(::int32_t value) {
  _internal_set_us_front_left2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_left2)
}
inline ::int32_t USData::_internal_us_front_left2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_left2_;
}
inline void USData::_internal_set_us_front_left2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_left2_ = value;
}

// int32 us_front_left3 = 3;
inline void USData::clear_us_front_left3() {
  _impl_.us_front_left3_ = 0;
}
inline ::int32_t USData::us_front_left3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_left3)
  return _internal_us_front_left3();
}
inline void USData::set_us_front_left3(::int32_t value) {
  _internal_set_us_front_left3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_left3)
}
inline ::int32_t USData::_internal_us_front_left3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_left3_;
}
inline void USData::_internal_set_us_front_left3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_left3_ = value;
}

// int32 us_front_ground = 4;
inline void USData::clear_us_front_ground() {
  _impl_.us_front_ground_ = 0;
}
inline ::int32_t USData::us_front_ground() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_ground)
  return _internal_us_front_ground();
}
inline void USData::set_us_front_ground(::int32_t value) {
  _internal_set_us_front_ground(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_ground)
}
inline ::int32_t USData::_internal_us_front_ground() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_ground_;
}
inline void USData::_internal_set_us_front_ground(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_ground_ = value;
}

// int32 us_front_right1 = 5;
inline void USData::clear_us_front_right1() {
  _impl_.us_front_right1_ = 0;
}
inline ::int32_t USData::us_front_right1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_right1)
  return _internal_us_front_right1();
}
inline void USData::set_us_front_right1(::int32_t value) {
  _internal_set_us_front_right1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_right1)
}
inline ::int32_t USData::_internal_us_front_right1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_right1_;
}
inline void USData::_internal_set_us_front_right1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_right1_ = value;
}

// int32 us_front_right2 = 6;
inline void USData::clear_us_front_right2() {
  _impl_.us_front_right2_ = 0;
}
inline ::int32_t USData::us_front_right2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_right2)
  return _internal_us_front_right2();
}
inline void USData::set_us_front_right2(::int32_t value) {
  _internal_set_us_front_right2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_right2)
}
inline ::int32_t USData::_internal_us_front_right2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_right2_;
}
inline void USData::_internal_set_us_front_right2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_right2_ = value;
}

// int32 us_front_right3 = 7;
inline void USData::clear_us_front_right3() {
  _impl_.us_front_right3_ = 0;
}
inline ::int32_t USData::us_front_right3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_right3)
  return _internal_us_front_right3();
}
inline void USData::set_us_front_right3(::int32_t value) {
  _internal_set_us_front_right3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_right3)
}
inline ::int32_t USData::_internal_us_front_right3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_right3_;
}
inline void USData::_internal_set_us_front_right3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_right3_ = value;
}

// int32 us_front_right4 = 8;
inline void USData::clear_us_front_right4() {
  _impl_.us_front_right4_ = 0;
}
inline ::int32_t USData::us_front_right4() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_front_right4)
  return _internal_us_front_right4();
}
inline void USData::set_us_front_right4(::int32_t value) {
  _internal_set_us_front_right4(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_front_right4)
}
inline ::int32_t USData::_internal_us_front_right4() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_front_right4_;
}
inline void USData::_internal_set_us_front_right4(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_front_right4_ = value;
}

// int32 us_back_right1 = 9;
inline void USData::clear_us_back_right1() {
  _impl_.us_back_right1_ = 0;
}
inline ::int32_t USData::us_back_right1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_right1)
  return _internal_us_back_right1();
}
inline void USData::set_us_back_right1(::int32_t value) {
  _internal_set_us_back_right1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_right1)
}
inline ::int32_t USData::_internal_us_back_right1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_right1_;
}
inline void USData::_internal_set_us_back_right1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_right1_ = value;
}

// int32 us_back_right2 = 10;
inline void USData::clear_us_back_right2() {
  _impl_.us_back_right2_ = 0;
}
inline ::int32_t USData::us_back_right2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_right2)
  return _internal_us_back_right2();
}
inline void USData::set_us_back_right2(::int32_t value) {
  _internal_set_us_back_right2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_right2)
}
inline ::int32_t USData::_internal_us_back_right2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_right2_;
}
inline void USData::_internal_set_us_back_right2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_right2_ = value;
}

// int32 us_back_right3 = 11;
inline void USData::clear_us_back_right3() {
  _impl_.us_back_right3_ = 0;
}
inline ::int32_t USData::us_back_right3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_right3)
  return _internal_us_back_right3();
}
inline void USData::set_us_back_right3(::int32_t value) {
  _internal_set_us_back_right3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_right3)
}
inline ::int32_t USData::_internal_us_back_right3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_right3_;
}
inline void USData::_internal_set_us_back_right3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_right3_ = value;
}

// int32 us_back_ground = 12;
inline void USData::clear_us_back_ground() {
  _impl_.us_back_ground_ = 0;
}
inline ::int32_t USData::us_back_ground() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_ground)
  return _internal_us_back_ground();
}
inline void USData::set_us_back_ground(::int32_t value) {
  _internal_set_us_back_ground(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_ground)
}
inline ::int32_t USData::_internal_us_back_ground() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_ground_;
}
inline void USData::_internal_set_us_back_ground(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_ground_ = value;
}

// int32 us_back_left1 = 13;
inline void USData::clear_us_back_left1() {
  _impl_.us_back_left1_ = 0;
}
inline ::int32_t USData::us_back_left1() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_left1)
  return _internal_us_back_left1();
}
inline void USData::set_us_back_left1(::int32_t value) {
  _internal_set_us_back_left1(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_left1)
}
inline ::int32_t USData::_internal_us_back_left1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_left1_;
}
inline void USData::_internal_set_us_back_left1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_left1_ = value;
}

// int32 us_back_left2 = 14;
inline void USData::clear_us_back_left2() {
  _impl_.us_back_left2_ = 0;
}
inline ::int32_t USData::us_back_left2() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_left2)
  return _internal_us_back_left2();
}
inline void USData::set_us_back_left2(::int32_t value) {
  _internal_set_us_back_left2(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_left2)
}
inline ::int32_t USData::_internal_us_back_left2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_left2_;
}
inline void USData::_internal_set_us_back_left2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_left2_ = value;
}

// int32 us_back_left3 = 15;
inline void USData::clear_us_back_left3() {
  _impl_.us_back_left3_ = 0;
}
inline ::int32_t USData::us_back_left3() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_left3)
  return _internal_us_back_left3();
}
inline void USData::set_us_back_left3(::int32_t value) {
  _internal_set_us_back_left3(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_left3)
}
inline ::int32_t USData::_internal_us_back_left3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_left3_;
}
inline void USData::_internal_set_us_back_left3(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_left3_ = value;
}

// int32 us_back_left4 = 16;
inline void USData::clear_us_back_left4() {
  _impl_.us_back_left4_ = 0;
}
inline ::int32_t USData::us_back_left4() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.USData.us_back_left4)
  return _internal_us_back_left4();
}
inline void USData::set_us_back_left4(::int32_t value) {
  _internal_set_us_back_left4(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.USData.us_back_left4)
}
inline ::int32_t USData::_internal_us_back_left4() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.us_back_left4_;
}
inline void USData::_internal_set_us_back_left4(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.us_back_left4_ = value;
}

// -------------------------------------------------------------------

// BMSData

// repeated int32 bms_status = 1;
inline int BMSData::_internal_bms_status_size() const {
  return _internal_bms_status().size();
}
inline int BMSData::bms_status_size() const {
  return _internal_bms_status_size();
}
inline void BMSData::clear_bms_status() {
  _internal_mutable_bms_status()->Clear();
}
inline ::int32_t BMSData::bms_status(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.bms_status)
  return _internal_bms_status().Get(index);
}
inline void BMSData::set_bms_status(int index, ::int32_t value) {
  _internal_mutable_bms_status()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.bms_status)
}
inline void BMSData::add_bms_status(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_bms_status()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BMSData.bms_status)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::bms_status() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BMSData.bms_status)
  return _internal_bms_status();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::mutable_bms_status() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BMSData.bms_status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bms_status();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::_internal_bms_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bms_status_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::_internal_mutable_bms_status() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bms_status_;
}

// repeated int32 pack_volt = 2;
inline int BMSData::_internal_pack_volt_size() const {
  return _internal_pack_volt().size();
}
inline int BMSData::pack_volt_size() const {
  return _internal_pack_volt_size();
}
inline void BMSData::clear_pack_volt() {
  _internal_mutable_pack_volt()->Clear();
}
inline ::int32_t BMSData::pack_volt(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.pack_volt)
  return _internal_pack_volt().Get(index);
}
inline void BMSData::set_pack_volt(int index, ::int32_t value) {
  _internal_mutable_pack_volt()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.pack_volt)
}
inline void BMSData::add_pack_volt(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pack_volt()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BMSData.pack_volt)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::pack_volt() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BMSData.pack_volt)
  return _internal_pack_volt();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::mutable_pack_volt() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BMSData.pack_volt)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pack_volt();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::_internal_pack_volt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pack_volt_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::_internal_mutable_pack_volt() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pack_volt_;
}

// repeated int32 battery_volt = 3;
inline int BMSData::_internal_battery_volt_size() const {
  return _internal_battery_volt().size();
}
inline int BMSData::battery_volt_size() const {
  return _internal_battery_volt_size();
}
inline void BMSData::clear_battery_volt() {
  _internal_mutable_battery_volt()->Clear();
}
inline ::int32_t BMSData::battery_volt(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.battery_volt)
  return _internal_battery_volt().Get(index);
}
inline void BMSData::set_battery_volt(int index, ::int32_t value) {
  _internal_mutable_battery_volt()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.battery_volt)
}
inline void BMSData::add_battery_volt(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_battery_volt()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BMSData.battery_volt)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::battery_volt() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BMSData.battery_volt)
  return _internal_battery_volt();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::mutable_battery_volt() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BMSData.battery_volt)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_battery_volt();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::_internal_battery_volt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battery_volt_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::_internal_mutable_battery_volt() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.battery_volt_;
}

// repeated int32 pack_current1 = 4;
inline int BMSData::_internal_pack_current1_size() const {
  return _internal_pack_current1().size();
}
inline int BMSData::pack_current1_size() const {
  return _internal_pack_current1_size();
}
inline void BMSData::clear_pack_current1() {
  _internal_mutable_pack_current1()->Clear();
}
inline ::int32_t BMSData::pack_current1(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.pack_current1)
  return _internal_pack_current1().Get(index);
}
inline void BMSData::set_pack_current1(int index, ::int32_t value) {
  _internal_mutable_pack_current1()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.pack_current1)
}
inline void BMSData::add_pack_current1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pack_current1()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BMSData.pack_current1)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::pack_current1() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BMSData.pack_current1)
  return _internal_pack_current1();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::mutable_pack_current1() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BMSData.pack_current1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pack_current1();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::_internal_pack_current1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pack_current1_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::_internal_mutable_pack_current1() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pack_current1_;
}

// repeated int32 pack_current2 = 5;
inline int BMSData::_internal_pack_current2_size() const {
  return _internal_pack_current2().size();
}
inline int BMSData::pack_current2_size() const {
  return _internal_pack_current2_size();
}
inline void BMSData::clear_pack_current2() {
  _internal_mutable_pack_current2()->Clear();
}
inline ::int32_t BMSData::pack_current2(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.pack_current2)
  return _internal_pack_current2().Get(index);
}
inline void BMSData::set_pack_current2(int index, ::int32_t value) {
  _internal_mutable_pack_current2()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.pack_current2)
}
inline void BMSData::add_pack_current2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pack_current2()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BMSData.pack_current2)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::pack_current2() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BMSData.pack_current2)
  return _internal_pack_current2();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::mutable_pack_current2() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BMSData.pack_current2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pack_current2();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::_internal_pack_current2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pack_current2_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::_internal_mutable_pack_current2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pack_current2_;
}

// int32 isCharge = 6;
inline void BMSData::clear_ischarge() {
  _impl_.ischarge_ = 0;
}
inline ::int32_t BMSData::ischarge() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isCharge)
  return _internal_ischarge();
}
inline void BMSData::set_ischarge(::int32_t value) {
  _internal_set_ischarge(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isCharge)
}
inline ::int32_t BMSData::_internal_ischarge() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ischarge_;
}
inline void BMSData::_internal_set_ischarge(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ischarge_ = value;
}

// int32 isCellOverVolt = 7;
inline void BMSData::clear_iscellovervolt() {
  _impl_.iscellovervolt_ = 0;
}
inline ::int32_t BMSData::iscellovervolt() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isCellOverVolt)
  return _internal_iscellovervolt();
}
inline void BMSData::set_iscellovervolt(::int32_t value) {
  _internal_set_iscellovervolt(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isCellOverVolt)
}
inline ::int32_t BMSData::_internal_iscellovervolt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iscellovervolt_;
}
inline void BMSData::_internal_set_iscellovervolt(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iscellovervolt_ = value;
}

// int32 isCellUnderVolt = 8;
inline void BMSData::clear_iscellundervolt() {
  _impl_.iscellundervolt_ = 0;
}
inline ::int32_t BMSData::iscellundervolt() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isCellUnderVolt)
  return _internal_iscellundervolt();
}
inline void BMSData::set_iscellundervolt(::int32_t value) {
  _internal_set_iscellundervolt(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isCellUnderVolt)
}
inline ::int32_t BMSData::_internal_iscellundervolt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iscellundervolt_;
}
inline void BMSData::_internal_set_iscellundervolt(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iscellundervolt_ = value;
}

// int32 isOverCurCharge = 9;
inline void BMSData::clear_isovercurcharge() {
  _impl_.isovercurcharge_ = 0;
}
inline ::int32_t BMSData::isovercurcharge() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isOverCurCharge)
  return _internal_isovercurcharge();
}
inline void BMSData::set_isovercurcharge(::int32_t value) {
  _internal_set_isovercurcharge(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isOverCurCharge)
}
inline ::int32_t BMSData::_internal_isovercurcharge() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isovercurcharge_;
}
inline void BMSData::_internal_set_isovercurcharge(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isovercurcharge_ = value;
}

// int32 isOverCurDischrg = 10;
inline void BMSData::clear_isovercurdischrg() {
  _impl_.isovercurdischrg_ = 0;
}
inline ::int32_t BMSData::isovercurdischrg() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isOverCurDischrg)
  return _internal_isovercurdischrg();
}
inline void BMSData::set_isovercurdischrg(::int32_t value) {
  _internal_set_isovercurdischrg(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isOverCurDischrg)
}
inline ::int32_t BMSData::_internal_isovercurdischrg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isovercurdischrg_;
}
inline void BMSData::_internal_set_isovercurdischrg(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isovercurdischrg_ = value;
}

// int32 isShortCircuit = 11;
inline void BMSData::clear_isshortcircuit() {
  _impl_.isshortcircuit_ = 0;
}
inline ::int32_t BMSData::isshortcircuit() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isShortCircuit)
  return _internal_isshortcircuit();
}
inline void BMSData::set_isshortcircuit(::int32_t value) {
  _internal_set_isshortcircuit(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isShortCircuit)
}
inline ::int32_t BMSData::_internal_isshortcircuit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isshortcircuit_;
}
inline void BMSData::_internal_set_isshortcircuit(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isshortcircuit_ = value;
}

// int32 isOverTemperature = 12;
inline void BMSData::clear_isovertemperature() {
  _impl_.isovertemperature_ = 0;
}
inline ::int32_t BMSData::isovertemperature() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isOverTemperature)
  return _internal_isovertemperature();
}
inline void BMSData::set_isovertemperature(::int32_t value) {
  _internal_set_isovertemperature(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isOverTemperature)
}
inline ::int32_t BMSData::_internal_isovertemperature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isovertemperature_;
}
inline void BMSData::_internal_set_isovertemperature(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isovertemperature_ = value;
}

// int32 isPackOverVolt = 13;
inline void BMSData::clear_ispackovervolt() {
  _impl_.ispackovervolt_ = 0;
}
inline ::int32_t BMSData::ispackovervolt() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.isPackOverVolt)
  return _internal_ispackovervolt();
}
inline void BMSData::set_ispackovervolt(::int32_t value) {
  _internal_set_ispackovervolt(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.isPackOverVolt)
}
inline ::int32_t BMSData::_internal_ispackovervolt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ispackovervolt_;
}
inline void BMSData::_internal_set_ispackovervolt(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ispackovervolt_ = value;
}

// int32 SOC = 14;
inline void BMSData::clear_soc() {
  _impl_.soc_ = 0;
}
inline ::int32_t BMSData::soc() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.SOC)
  return _internal_soc();
}
inline void BMSData::set_soc(::int32_t value) {
  _internal_set_soc(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.SOC)
}
inline ::int32_t BMSData::_internal_soc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.soc_;
}
inline void BMSData::_internal_set_soc(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.soc_ = value;
}

// int32 SOH = 15;
inline void BMSData::clear_soh() {
  _impl_.soh_ = 0;
}
inline ::int32_t BMSData::soh() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.SOH)
  return _internal_soh();
}
inline void BMSData::set_soh(::int32_t value) {
  _internal_set_soh(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.SOH)
}
inline ::int32_t BMSData::_internal_soh() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.soh_;
}
inline void BMSData::_internal_set_soh(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.soh_ = value;
}

// int32 time_charge = 16;
inline void BMSData::clear_time_charge() {
  _impl_.time_charge_ = 0;
}
inline ::int32_t BMSData::time_charge() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.time_charge)
  return _internal_time_charge();
}
inline void BMSData::set_time_charge(::int32_t value) {
  _internal_set_time_charge(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.time_charge)
}
inline ::int32_t BMSData::_internal_time_charge() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_charge_;
}
inline void BMSData::_internal_set_time_charge(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_charge_ = value;
}

// int32 time_dcharge = 17;
inline void BMSData::clear_time_dcharge() {
  _impl_.time_dcharge_ = 0;
}
inline ::int32_t BMSData::time_dcharge() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.time_dcharge)
  return _internal_time_dcharge();
}
inline void BMSData::set_time_dcharge(::int32_t value) {
  _internal_set_time_dcharge(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.time_dcharge)
}
inline ::int32_t BMSData::_internal_time_dcharge() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_dcharge_;
}
inline void BMSData::_internal_set_time_dcharge(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_dcharge_ = value;
}

// int32 rem_capAh = 18;
inline void BMSData::clear_rem_capah() {
  _impl_.rem_capah_ = 0;
}
inline ::int32_t BMSData::rem_capah() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.rem_capAh)
  return _internal_rem_capah();
}
inline void BMSData::set_rem_capah(::int32_t value) {
  _internal_set_rem_capah(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.rem_capAh)
}
inline ::int32_t BMSData::_internal_rem_capah() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rem_capah_;
}
inline void BMSData::_internal_set_rem_capah(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rem_capah_ = value;
}

// int32 rem_capWh = 19;
inline void BMSData::clear_rem_capwh() {
  _impl_.rem_capwh_ = 0;
}
inline ::int32_t BMSData::rem_capwh() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.rem_capWh)
  return _internal_rem_capwh();
}
inline void BMSData::set_rem_capwh(::int32_t value) {
  _internal_set_rem_capwh(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.rem_capWh)
}
inline ::int32_t BMSData::_internal_rem_capwh() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rem_capwh_;
}
inline void BMSData::_internal_set_rem_capwh(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rem_capwh_ = value;
}

// repeated int32 bms_temperature = 20;
inline int BMSData::_internal_bms_temperature_size() const {
  return _internal_bms_temperature().size();
}
inline int BMSData::bms_temperature_size() const {
  return _internal_bms_temperature_size();
}
inline void BMSData::clear_bms_temperature() {
  _internal_mutable_bms_temperature()->Clear();
}
inline ::int32_t BMSData::bms_temperature(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.bms_temperature)
  return _internal_bms_temperature().Get(index);
}
inline void BMSData::set_bms_temperature(int index, ::int32_t value) {
  _internal_mutable_bms_temperature()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.bms_temperature)
}
inline void BMSData::add_bms_temperature(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_bms_temperature()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BMSData.bms_temperature)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::bms_temperature() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BMSData.bms_temperature)
  return _internal_bms_temperature();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::mutable_bms_temperature() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BMSData.bms_temperature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bms_temperature();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::_internal_bms_temperature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bms_temperature_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::_internal_mutable_bms_temperature() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bms_temperature_;
}

// repeated int32 cell_volt = 21;
inline int BMSData::_internal_cell_volt_size() const {
  return _internal_cell_volt().size();
}
inline int BMSData::cell_volt_size() const {
  return _internal_cell_volt_size();
}
inline void BMSData::clear_cell_volt() {
  _internal_mutable_cell_volt()->Clear();
}
inline ::int32_t BMSData::cell_volt(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BMSData.cell_volt)
  return _internal_cell_volt().Get(index);
}
inline void BMSData::set_cell_volt(int index, ::int32_t value) {
  _internal_mutable_cell_volt()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BMSData.cell_volt)
}
inline void BMSData::add_cell_volt(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cell_volt()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BMSData.cell_volt)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::cell_volt() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BMSData.cell_volt)
  return _internal_cell_volt();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::mutable_cell_volt() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BMSData.cell_volt)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cell_volt();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& BMSData::_internal_cell_volt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cell_volt_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BMSData::_internal_mutable_cell_volt() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cell_volt_;
}

// -------------------------------------------------------------------

// ForcedKinematicsData

// bool activate = 1;
inline void ForcedKinematicsData::clear_activate() {
  _impl_.activate_ = false;
}
inline bool ForcedKinematicsData::activate() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ForcedKinematicsData.activate)
  return _internal_activate();
}
inline void ForcedKinematicsData::set_activate(bool value) {
  _internal_set_activate(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ForcedKinematicsData.activate)
}
inline bool ForcedKinematicsData::_internal_activate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.activate_;
}
inline void ForcedKinematicsData::_internal_set_activate(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.activate_ = value;
}

// int32 angle = 2;
inline void ForcedKinematicsData::clear_angle() {
  _impl_.angle_ = 0;
}
inline ::int32_t ForcedKinematicsData::angle() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.ForcedKinematicsData.angle)
  return _internal_angle();
}
inline void ForcedKinematicsData::set_angle(::int32_t value) {
  _internal_set_angle(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.ForcedKinematicsData.angle)
}
inline ::int32_t ForcedKinematicsData::_internal_angle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.angle_;
}
inline void ForcedKinematicsData::_internal_set_angle(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.angle_ = value;
}

// -------------------------------------------------------------------

// GBool

// int32 idx = 1;
inline void GBool::clear_idx() {
  _impl_.idx_ = 0;
}
inline ::int32_t GBool::idx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GBool.idx)
  return _internal_idx();
}
inline void GBool::set_idx(::int32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GBool.idx)
}
inline ::int32_t GBool::_internal_idx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.idx_;
}
inline void GBool::_internal_set_idx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.idx_ = value;
}

// bool val = 2;
inline void GBool::clear_val() {
  _impl_.val_ = false;
}
inline bool GBool::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GBool.val)
  return _internal_val();
}
inline void GBool::set_val(bool value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GBool.val)
}
inline bool GBool::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void GBool::_internal_set_val(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// GInt

// int32 idx = 1;
inline void GInt::clear_idx() {
  _impl_.idx_ = 0;
}
inline ::int32_t GInt::idx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GInt.idx)
  return _internal_idx();
}
inline void GInt::set_idx(::int32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GInt.idx)
}
inline ::int32_t GInt::_internal_idx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.idx_;
}
inline void GInt::_internal_set_idx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.idx_ = value;
}

// int32 val = 2;
inline void GInt::clear_val() {
  _impl_.val_ = 0;
}
inline ::int32_t GInt::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GInt.val)
  return _internal_val();
}
inline void GInt::set_val(::int32_t value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GInt.val)
}
inline ::int32_t GInt::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void GInt::_internal_set_val(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// GFloat

// int32 idx = 1;
inline void GFloat::clear_idx() {
  _impl_.idx_ = 0;
}
inline ::int32_t GFloat::idx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GFloat.idx)
  return _internal_idx();
}
inline void GFloat::set_idx(::int32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GFloat.idx)
}
inline ::int32_t GFloat::_internal_idx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.idx_;
}
inline void GFloat::_internal_set_idx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.idx_ = value;
}

// float val = 2;
inline void GFloat::clear_val() {
  _impl_.val_ = 0;
}
inline float GFloat::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GFloat.val)
  return _internal_val();
}
inline void GFloat::set_val(float value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GFloat.val)
}
inline float GFloat::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void GFloat::_internal_set_val(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// GString

// int32 idx = 1;
inline void GString::clear_idx() {
  _impl_.idx_ = 0;
}
inline ::int32_t GString::idx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GString.idx)
  return _internal_idx();
}
inline void GString::set_idx(::int32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GString.idx)
}
inline ::int32_t GString::_internal_idx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.idx_;
}
inline void GString::_internal_set_idx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.idx_ = value;
}

// string val = 2;
inline void GString::clear_val() {
  _impl_.val_.ClearToEmpty();
}
inline const std::string& GString::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.GString.val)
  return _internal_val();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GString::set_val(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.GString.val)
}
inline std::string* GString::mutable_val() {
  std::string* _s = _internal_mutable_val();
  // @@protoc_insertion_point(field_mutable:Nrmk.IndyFramework.GString.val)
  return _s;
}
inline const std::string& GString::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_.Get();
}
inline void GString::_internal_set_val(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_.Set(value, GetArenaForAllocation());
}
inline std::string* GString::_internal_mutable_val() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.val_.Mutable( GetArenaForAllocation());
}
inline std::string* GString::release_val() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Nrmk.IndyFramework.GString.val)
  return _impl_.val_.Release();
}
inline void GString::set_allocated_val(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.val_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.val_.IsDefault()) {
          _impl_.val_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Nrmk.IndyFramework.GString.val)
}

// -------------------------------------------------------------------

// BoolVal

// bool val = 1;
inline void BoolVal::clear_val() {
  _impl_.val_ = false;
}
inline bool BoolVal::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BoolVal.val)
  return _internal_val();
}
inline void BoolVal::set_val(bool value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BoolVal.val)
}
inline bool BoolVal::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void BoolVal::_internal_set_val(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// BoolVals

// repeated bool val = 1;
inline int BoolVals::_internal_val_size() const {
  return _internal_val().size();
}
inline int BoolVals::val_size() const {
  return _internal_val_size();
}
inline void BoolVals::clear_val() {
  _internal_mutable_val()->Clear();
}
inline bool BoolVals::val(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.BoolVals.val)
  return _internal_val().Get(index);
}
inline void BoolVals::set_val(int index, bool value) {
  _internal_mutable_val()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.BoolVals.val)
}
inline void BoolVals::add_val(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_val()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.BoolVals.val)
}
inline const ::google::protobuf::RepeatedField<bool>& BoolVals::val() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.BoolVals.val)
  return _internal_val();
}
inline ::google::protobuf::RepeatedField<bool>* BoolVals::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.BoolVals.val)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_val();
}

inline const ::google::protobuf::RepeatedField<bool>& BoolVals::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline ::google::protobuf::RepeatedField<bool>* BoolVals::_internal_mutable_val() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.val_;
}

// -------------------------------------------------------------------

// IntVal

// int32 val = 1;
inline void IntVal::clear_val() {
  _impl_.val_ = 0;
}
inline ::int32_t IntVal::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IntVal.val)
  return _internal_val();
}
inline void IntVal::set_val(::int32_t value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IntVal.val)
}
inline ::int32_t IntVal::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void IntVal::_internal_set_val(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// IntVals

// repeated int32 val = 1;
inline int IntVals::_internal_val_size() const {
  return _internal_val().size();
}
inline int IntVals::val_size() const {
  return _internal_val_size();
}
inline void IntVals::clear_val() {
  _internal_mutable_val()->Clear();
}
inline ::int32_t IntVals::val(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.IntVals.val)
  return _internal_val().Get(index);
}
inline void IntVals::set_val(int index, ::int32_t value) {
  _internal_mutable_val()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.IntVals.val)
}
inline void IntVals::add_val(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_val()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.IntVals.val)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& IntVals::val() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.IntVals.val)
  return _internal_val();
}
inline ::google::protobuf::RepeatedField<::int32_t>* IntVals::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.IntVals.val)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_val();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& IntVals::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* IntVals::_internal_mutable_val() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.val_;
}

// -------------------------------------------------------------------

// FloatVal

// float val = 1;
inline void FloatVal::clear_val() {
  _impl_.val_ = 0;
}
inline float FloatVal::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FloatVal.val)
  return _internal_val();
}
inline void FloatVal::set_val(float value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FloatVal.val)
}
inline float FloatVal::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void FloatVal::_internal_set_val(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// FloatVals

// repeated float val = 1;
inline int FloatVals::_internal_val_size() const {
  return _internal_val().size();
}
inline int FloatVals::val_size() const {
  return _internal_val_size();
}
inline void FloatVals::clear_val() {
  _internal_mutable_val()->Clear();
}
inline float FloatVals::val(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.FloatVals.val)
  return _internal_val().Get(index);
}
inline void FloatVals::set_val(int index, float value) {
  _internal_mutable_val()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.FloatVals.val)
}
inline void FloatVals::add_val(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_val()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.FloatVals.val)
}
inline const ::google::protobuf::RepeatedField<float>& FloatVals::val() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.FloatVals.val)
  return _internal_val();
}
inline ::google::protobuf::RepeatedField<float>* FloatVals::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.FloatVals.val)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_val();
}

inline const ::google::protobuf::RepeatedField<float>& FloatVals::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline ::google::protobuf::RepeatedField<float>* FloatVals::_internal_mutable_val() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.val_;
}

// -------------------------------------------------------------------

// DoubleVal

// double val = 1;
inline void DoubleVal::clear_val() {
  _impl_.val_ = 0;
}
inline double DoubleVal::val() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DoubleVal.val)
  return _internal_val();
}
inline void DoubleVal::set_val(double value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DoubleVal.val)
}
inline double DoubleVal::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline void DoubleVal::_internal_set_val(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.val_ = value;
}

// -------------------------------------------------------------------

// DoubleVals

// repeated double val = 1;
inline int DoubleVals::_internal_val_size() const {
  return _internal_val().size();
}
inline int DoubleVals::val_size() const {
  return _internal_val_size();
}
inline void DoubleVals::clear_val() {
  _internal_mutable_val()->Clear();
}
inline double DoubleVals::val(int index) const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.DoubleVals.val)
  return _internal_val().Get(index);
}
inline void DoubleVals::set_val(int index, double value) {
  _internal_mutable_val()->Set(index, value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.DoubleVals.val)
}
inline void DoubleVals::add_val(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_val()->Add(value);
  // @@protoc_insertion_point(field_add:Nrmk.IndyFramework.DoubleVals.val)
}
inline const ::google::protobuf::RepeatedField<double>& DoubleVals::val() const {
  // @@protoc_insertion_point(field_list:Nrmk.IndyFramework.DoubleVals.val)
  return _internal_val();
}
inline ::google::protobuf::RepeatedField<double>* DoubleVals::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:Nrmk.IndyFramework.DoubleVals.val)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_val();
}

inline const ::google::protobuf::RepeatedField<double>& DoubleVals::_internal_val() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.val_;
}
inline ::google::protobuf::RepeatedField<double>* DoubleVals::_internal_mutable_val() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.val_;
}

// -------------------------------------------------------------------

// RotationGain

// int32 idx = 1;
inline void RotationGain::clear_idx() {
  _impl_.idx_ = 0;
}
inline ::int32_t RotationGain::idx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.RotationGain.idx)
  return _internal_idx();
}
inline void RotationGain::set_idx(::int32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.RotationGain.idx)
}
inline ::int32_t RotationGain::_internal_idx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.idx_;
}
inline void RotationGain::_internal_set_idx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.idx_ = value;
}

// double k = 2;
inline void RotationGain::clear_k() {
  _impl_.k_ = 0;
}
inline double RotationGain::k() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.RotationGain.k)
  return _internal_k();
}
inline void RotationGain::set_k(double value) {
  _internal_set_k(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.RotationGain.k)
}
inline double RotationGain::_internal_k() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.k_;
}
inline void RotationGain::_internal_set_k(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.k_ = value;
}

// double kv = 3;
inline void RotationGain::clear_kv() {
  _impl_.kv_ = 0;
}
inline double RotationGain::kv() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.RotationGain.kv)
  return _internal_kv();
}
inline void RotationGain::set_kv(double value) {
  _internal_set_kv(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.RotationGain.kv)
}
inline double RotationGain::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline void RotationGain::_internal_set_kv(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.kv_ = value;
}

// double kp = 4;
inline void RotationGain::clear_kp() {
  _impl_.kp_ = 0;
}
inline double RotationGain::kp() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.RotationGain.kp)
  return _internal_kp();
}
inline void RotationGain::set_kp(double value) {
  _internal_set_kp(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.RotationGain.kp)
}
inline double RotationGain::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline void RotationGain::_internal_set_kp(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.kp_ = value;
}

// -------------------------------------------------------------------

// VelAccBoundary

// int32 idx = 1;
inline void VelAccBoundary::clear_idx() {
  _impl_.idx_ = 0;
}
inline ::int32_t VelAccBoundary::idx() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.VelAccBoundary.idx)
  return _internal_idx();
}
inline void VelAccBoundary::set_idx(::int32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.VelAccBoundary.idx)
}
inline ::int32_t VelAccBoundary::_internal_idx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.idx_;
}
inline void VelAccBoundary::_internal_set_idx(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.idx_ = value;
}

// float vmax = 2;
inline void VelAccBoundary::clear_vmax() {
  _impl_.vmax_ = 0;
}
inline float VelAccBoundary::vmax() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.VelAccBoundary.vmax)
  return _internal_vmax();
}
inline void VelAccBoundary::set_vmax(float value) {
  _internal_set_vmax(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.VelAccBoundary.vmax)
}
inline float VelAccBoundary::_internal_vmax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vmax_;
}
inline void VelAccBoundary::_internal_set_vmax(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vmax_ = value;
}

// float amax = 3;
inline void VelAccBoundary::clear_amax() {
  _impl_.amax_ = 0;
}
inline float VelAccBoundary::amax() const {
  // @@protoc_insertion_point(field_get:Nrmk.IndyFramework.VelAccBoundary.amax)
  return _internal_amax();
}
inline void VelAccBoundary::set_amax(float value) {
  _internal_set_amax(value);
  // @@protoc_insertion_point(field_set:Nrmk.IndyFramework.VelAccBoundary.amax)
}
inline float VelAccBoundary::_internal_amax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amax_;
}
inline void VelAccBoundary::_internal_set_amax(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.amax_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace IndyFramework
}  // namespace Nrmk


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_moby_5fmsgs_2eproto_2epb_2eh
