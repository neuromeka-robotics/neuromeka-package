syntax = "proto3";
package Nrmk.IndyFramework;
import "device_msgs.proto";
import "common_msgs.proto";

//////////////////////////TestRequest/////////////////////////
message TestRequest {
  int32 intVal = 1;
  string strVal = 2;
}

//////////////////////////TestResponse/////////////////////////
message TestResponse {
  int64 code = 1;
  string msg = 2;
}

//////////////////////////MotionData/////////////////////////
message MotionData {
  TrajState traj_state = 1;
  int32 traj_progress = 2;
  bool is_in_motion = 3;
  bool is_target_reached = 4;
  bool is_pausing = 5;
  bool is_stopping = 6;
  bool has_motion = 7;
  int32 speed_ratio = 8;
  int32 motion_id = 9;
  float remain_distance = 10;
  uint32 motion_queue_size = 11;
  int32 cur_traj_progress = 12;

  Response response = 100;
}

//////////////////////////ControlData/////////////////////////
message ControlData {
  uint32 running_hours = 1;
  uint32 running_mins = 2;
  uint32 running_secs = 3;

  OpState op_state = 4;
  bool sim_mode = 5;

  repeated float q = 10;
  repeated float qdot = 11;
  repeated float p = 12;
  repeated float pdot = 13;

  repeated float ref_frame = 20;
  repeated float tool_frame = 21;

  Response response = 100;
}

message ControlData2 {
    repeated float q = 1;
    repeated float qdot = 2;
    repeated float qddot = 3;
    repeated float qdes = 4;
    repeated float qdotdes = 5;
    repeated float qddotdes = 6;

    repeated float p = 10;
    repeated float pdot = 11;
    repeated float pddot = 12;
    repeated float pdes = 13;
    repeated float pdotdes = 14;
    repeated float pddotdes = 15;

    repeated float tau = 20;
    repeated float tau_act = 21;
    repeated float tau_ext = 22;

    Response response = 100;
}

//////////////////////////IOData/////////////////////////
message IOData {
  repeated DigitalSignal di = 1;
  repeated DigitalSignal do = 2;
  repeated AnalogSignal ai = 3;
  repeated AnalogSignal ao = 4;

  repeated EndtoolSignal end_di = 5;
  repeated EndtoolSignal end_do = 6;
  repeated AnalogSignal end_ai = 7;
  repeated AnalogSignal end_ao = 8;

  Response response = 100;
}

//////////////////////////ViolationData/////////////////////////
message ViolationData {
  uint64 violation_code = 1;
  uint32 j_index = 2;
  repeated int32 i_args = 3;
  repeated float f_args = 4;
  string violation_str = 5;

  Response response = 100;
}
message ViolationMessageQueue {
  repeated ViolationData violation_queue = 1;
  Response response = 100;
}

//////////////////////////ServoData/////////////////////////
message ServoData {
  repeated string status_codes = 1;
  repeated float temperatures = 2;
  repeated float voltages = 3;
  repeated float currents = 4;

  repeated bool servo_actives = 10;
  repeated bool brake_actives = 11;

  Response response = 100;
}

//////////////////////////ProgramData/////////////////////////
message ProgramData {
  ProgramState program_state = 1;
  int32 cmd_id = 2;
  int32 sub_cmd_id = 3;
  uint32 running_hours = 4;
  uint32 running_mins = 5;
  uint32 running_secs = 6;
  string program_name = 7;
  string program_alarm = 8;
  string program_annotation = 9;
  int32 speed_ratio = 10;

  Response response = 100;
}

//////////////////////////StopState/////////////////////////
message StopState {
  enum StopCategory{
    STOP_CAT_0 = 0;
    STOP_CAT_1 = 1;
    STOP_CAT_2 = 2;
    STOP_CAT_NONE = -1;
  }
  StopCategory category = 1;
  Response response = 100;
}