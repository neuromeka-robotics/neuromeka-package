syntax = "proto3";
package Nrmk.IndyFramework;

//////////////////////////Empty/////////////////////////
message Empty {}

//////////////////////////Name/////////////////////////
message Name {
  string name = 1;
}

//////////////////////////State/////////////////////////
message State {
  bool enable = 1;
}

//////////////////////////Float/////////////////////////
message Float {
  float value = 1;
}

//////////////////////////IntMode/////////////////////////
message IntMode {
  uint64 mode = 1;
}

//////////////////////////StopCat/////////////////////////
message StopCat {
  StopCategory category = 1;
}

//////////////////////////StopCat/////////////////////////
message PauseCat {
  PauseCategory category = 1;
}

//////////////////////////Response/////////////////////////
message Response {
  int64 code = 1;
  string msg = 2;
}

//////////////////////////Message/////////////////////////
message Message {
  string content = 1;
}

//////////////////////////Vector/////////////////////////
message Vector {
  repeated double values = 1;
}

message PosePair {
  repeated float q = 1;
  repeated float p = 2;
}

//////////////////////////EndtoolRS485/////////////////////////
message EndtoolRS485Tx {
  uint32 word1 = 1;
  uint32 word2 = 2;
}

message EndtoolRS485Rx {
  uint32 word1 = 1;
  uint32 word2 = 2;
}

message TactTime {
  string type = 1;
  float tact_time = 2;
}

message DateTime {
  uint32 year = 1;
  uint32 month = 2;
  uint32 day = 3;
  uint32 hour = 4;
  uint32 minute = 5;
  uint32 second = 6;
}

//////////////////////////OpState/////////////////////////
//enum OpState {
//  OP_SYSTEM_OFF = 0;
//  OP_SYSTEM_ON = 1;
//  OP_VIOLATE = 2;
//  OP_RECOVER_HARD = 3;
//  OP_RECOVER_SOFT = 4;
//  OP_MANUAL_RECOVER = 5;
//  OP_IDLE = 6;
//  OP_MOVING = 7;
//  OP_TEACHING = 8;
//  OP_COLLISION = 9;
//  OP_STOP_AND_OFF = 10;
//  OP_COMPLIANCE = 11;
//  OP_BRAKE_CONTROL = 12;
//  OP_SYSTEM_RESET = 13;
//  OP_SYSTEM_SWITCH = 14;
//  OP_VIOLATE_HARD = 15;
//}

enum OpState {
  OP_SYSTEM_OFF = 0;
  OP_SYSTEM_ON = 1;
  OP_VIOLATE = 2;
  OP_RECOVER_HARD = 3;
  OP_RECOVER_SOFT = 4;
  OP_IDLE = 5;
  OP_MOVING = 6;
  OP_TEACHING = 7;
  OP_COLLISION = 8;
  OP_STOP_AND_OFF = 9;
  OP_COMPLIANCE = 10;
  OP_BRAKE_CONTROL = 11;
  OP_SYSTEM_RESET = 12;
  OP_SYSTEM_SWITCH = 13;
  OP_VIOLATE_HARD = 15;
  OP_MANUAL_RECOVER = 16;
  TELE_OP = 17;
  TRAJ_MOVING = 18;
}

enum TrajState {
  TRAJ_NONE = 0;
  TRAJ_INIT = 1;
  TRAJ_CALC = 2;
  TRAJ_STAND_BY = 3;
  TRAJ_ACC = 4;
  TRAJ_CRUISE = 5;
  TRAJ_DEC = 6;
  TRAJ_CANCELLING = 7;
  TRAJ_FINISHED = 8;
  TRAJ_ERROR = 9;
}

enum TrajCondition {
  TRAJ_STARTED = 0;
  TRAJ_ACC_DONE = 1;
  TRAJ_CRZ_DONE = 2;
  TRAJ_DEC_DONE = 3;
}

enum StopCategory {
  IMMEDIATE_BRAKE = 0;
  SMOOTH_BRAKE = 1;
  SMOOTH_ONLY = 2;
}

enum PauseCategory {
  SMOOTH_PAUSE = 0;
  IMMEDIATE_PAUSE = 1;
}

enum ProgramState {
  PROG_IDLE = 0;
  PROG_RUNNING = 1;
  PROG_PAUSING = 2;
  PROG_STOPPING = 3;
}

enum CollisionPolicyType {
  COLL_NO_DETECT = 0;
  COLL_PAUSE = 1;
  COLL_RESUME_AFTER_SLEEP = 2;
  COLL_STOP = 3;
}

enum TuningSpace {
  TUNE_ALL = 0;
  TUNE_JOINT = 1;
  TUNE_TASK = 2;
}

enum TuningPrecision {
  LOW_PRECISION = 0;
  MIDDLE_PRECISION = 1;
  HIGH_PRECISION = 2;
}

//enum DIFunctionCode {
//  REGISTER_DEFAULT_PROG_IDX = 0;
//  START_DEFAULT_PROG = 10;
//  START_PROG = 11;
//  STOP_PROG = 12;
//  PAUSE_PROG = 13;
//  RESUME_PROG = 14;
//  RESET_ROBOT = 60;
//  FORCE_RESET = 61;
//  STOP_MOTION = 62;
//  STOP_EMERGENCY = 63;
//  MOVE_HOME = 64;
//  MOVE_ZERO = 65;
//  ENTER_DIRECT_TEACHING = 70;
//  FINISH_DIRECT_TEACHING = 71;
//  EXECUTE_SPECIFIC_MOVE = 200;
//}
