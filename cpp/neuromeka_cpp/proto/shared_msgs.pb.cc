// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shared_msgs.proto

#include "shared_msgs.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace IndyFramework {
namespace Protobuf {
namespace Shared {
        template <typename>
PROTOBUF_CONSTEXPR MoveSJPoint::MoveSJPoint(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.jpos_)*/ {},
      /*decltype(_impl_.blending_radius_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MoveSJPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveSJPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveSJPointDefaultTypeInternal() {}
  union {
    MoveSJPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveSJPointDefaultTypeInternal _MoveSJPoint_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MoveSJTPoint::MoveSJTPoint(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.jpos_)*/ {},
      /*decltype(_impl_.blending_radius_)*/ 0,
      /*decltype(_impl_.time_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MoveSJTPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveSJTPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveSJTPointDefaultTypeInternal() {}
  union {
    MoveSJTPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveSJTPointDefaultTypeInternal _MoveSJTPoint_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MoveSLPoint::MoveSLPoint(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tpos_)*/ {},
      /*decltype(_impl_.blending_radius_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MoveSLPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveSLPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveSLPointDefaultTypeInternal() {}
  union {
    MoveSLPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveSLPointDefaultTypeInternal _MoveSLPoint_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MoveSLTPoint::MoveSLTPoint(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tpos_)*/ {},
      /*decltype(_impl_.blending_radius_)*/ 0,
      /*decltype(_impl_.time_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MoveSLTPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveSLTPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveSLTPointDefaultTypeInternal() {}
  union {
    MoveSLTPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveSLTPointDefaultTypeInternal _MoveSLTPoint_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DigitalSignal::DigitalSignal(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_.on_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DigitalSignalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DigitalSignalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DigitalSignalDefaultTypeInternal() {}
  union {
    DigitalSignal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DigitalSignalDefaultTypeInternal _DigitalSignal_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AnalogSignal::AnalogSignal(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_.voltage_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AnalogSignalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalogSignalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalogSignalDefaultTypeInternal() {}
  union {
    AnalogSignal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalogSignalDefaultTypeInternal _AnalogSignal_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR NamedTaskPosition::NamedTaskPosition(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tpos_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct NamedTaskPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamedTaskPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamedTaskPositionDefaultTypeInternal() {}
  union {
    NamedTaskPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamedTaskPositionDefaultTypeInternal _NamedTaskPosition_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR NamedJointPosition::NamedJointPosition(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.jpos_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct NamedJointPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamedJointPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamedJointPositionDefaultTypeInternal() {}
  union {
    NamedJointPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamedJointPositionDefaultTypeInternal _NamedJointPosition_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR NamedReferencePosition::NamedReferencePosition(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tpos_)*/ {},
      /*decltype(_impl_.tpos0_)*/ {},
      /*decltype(_impl_.tpos1_)*/ {},
      /*decltype(_impl_.tpos2_)*/ {},
      /*decltype(_impl_.jpos0_)*/ {},
      /*decltype(_impl_.jpos1_)*/ {},
      /*decltype(_impl_.jpos2_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct NamedReferencePositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamedReferencePositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamedReferencePositionDefaultTypeInternal() {}
  union {
    NamedReferencePosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamedReferencePositionDefaultTypeInternal _NamedReferencePosition_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR IntVariable::IntVariable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct IntVariableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntVariableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntVariableDefaultTypeInternal() {}
  union {
    IntVariable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntVariableDefaultTypeInternal _IntVariable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ModbusVariable::ModbusVariable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ModbusVariableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModbusVariableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModbusVariableDefaultTypeInternal() {}
  union {
    ModbusVariable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModbusVariableDefaultTypeInternal _ModbusVariable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BoolVariable::BoolVariable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_.value_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BoolVariableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolVariableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolVariableDefaultTypeInternal() {}
  union {
    BoolVariable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolVariableDefaultTypeInternal _BoolVariable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FloatVariable::FloatVariable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct FloatVariableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatVariableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatVariableDefaultTypeInternal() {}
  union {
    FloatVariable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatVariableDefaultTypeInternal _FloatVariable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR JPosVariable::JPosVariable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.jpos_)*/ {},
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct JPosVariableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JPosVariableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JPosVariableDefaultTypeInternal() {}
  union {
    JPosVariable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JPosVariableDefaultTypeInternal _JPosVariable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TPosVariable::TPosVariable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tpos_)*/ {},
      /*decltype(_impl_.addr_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TPosVariableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TPosVariableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TPosVariableDefaultTypeInternal() {}
  union {
    TPosVariable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TPosVariableDefaultTypeInternal _TPosVariable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Tool::Tool(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.do_list_)*/ {},
      /*decltype(_impl_.m_vars_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.tool_type_)*/ 0,
      /*decltype(_impl_.sleep_time_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ToolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolDefaultTypeInternal() {}
  union {
    Tool _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolDefaultTypeInternal _Tool_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PalletPoint::PalletPoint(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tar_pos_)*/ {},
      /*decltype(_impl_.approach_pos_)*/ {},
      /*decltype(_impl_.retract_pos_)*/ {},
      /*decltype(_impl_.tar_jpos_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PalletPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PalletPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PalletPointDefaultTypeInternal() {}
  union {
    PalletPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PalletPointDefaultTypeInternal _PalletPoint_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR VisionServer::VisionServer(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ip_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.vision_server_type_)*/ 0,
      /*decltype(_impl_.port_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct VisionServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionServerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionServerDefaultTypeInternal() {}
  union {
    VisionServer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionServerDefaultTypeInternal _VisionServer_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ModbusServer::ModbusServer(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ip_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.port_)*/ 0,
      /*decltype(_impl_.unit_id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ModbusServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModbusServerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModbusServerDefaultTypeInternal() {}
  union {
    ModbusServer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModbusServerDefaultTypeInternal _ModbusServer_default_instance_;
}  // namespace Shared
}  // namespace Protobuf
}  // namespace IndyFramework
static ::_pb::Metadata file_level_metadata_shared_5fmsgs_2eproto[19];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_shared_5fmsgs_2eproto[28];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_shared_5fmsgs_2eproto = nullptr;
const ::uint32_t TableStruct_shared_5fmsgs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSJPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSJPoint, _impl_.jpos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSJPoint, _impl_.blending_radius_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSJTPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSJTPoint, _impl_.jpos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSJTPoint, _impl_.blending_radius_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSJTPoint, _impl_.time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSLPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSLPoint, _impl_.tpos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSLPoint, _impl_.blending_radius_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSLTPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSLTPoint, _impl_.tpos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSLTPoint, _impl_.blending_radius_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::MoveSLTPoint, _impl_.time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::DigitalSignal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::DigitalSignal, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::DigitalSignal, _impl_.on_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::AnalogSignal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::AnalogSignal, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::AnalogSignal, _impl_.voltage_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedTaskPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedTaskPosition, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedTaskPosition, _impl_.tpos_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedJointPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedJointPosition, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedJointPosition, _impl_.jpos_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.tpos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.tpos0_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.tpos1_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.tpos2_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.jpos0_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.jpos1_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::NamedReferencePosition, _impl_.jpos2_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::IntVariable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::IntVariable, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::IntVariable, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusVariable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusVariable, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusVariable, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::BoolVariable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::BoolVariable, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::BoolVariable, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::FloatVariable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::FloatVariable, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::FloatVariable, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::JPosVariable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::JPosVariable, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::JPosVariable, _impl_.jpos_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::TPosVariable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::TPosVariable, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::TPosVariable, _impl_.tpos_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::Tool, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::Tool, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::Tool, _impl_.tool_type_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::Tool, _impl_.do_list_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::Tool, _impl_.m_vars_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::Tool, _impl_.sleep_time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::PalletPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::PalletPoint, _impl_.tar_pos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::PalletPoint, _impl_.approach_pos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::PalletPoint, _impl_.retract_pos_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::PalletPoint, _impl_.tar_jpos_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::VisionServer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::VisionServer, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::VisionServer, _impl_.vision_server_type_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::VisionServer, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::VisionServer, _impl_.port_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusServer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusServer, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusServer, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusServer, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::IndyFramework::Protobuf::Shared::ModbusServer, _impl_.unit_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::MoveSJPoint)},
        {10, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::MoveSJTPoint)},
        {21, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::MoveSLPoint)},
        {31, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::MoveSLTPoint)},
        {42, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::DigitalSignal)},
        {52, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::AnalogSignal)},
        {62, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::NamedTaskPosition)},
        {72, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::NamedJointPosition)},
        {82, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::NamedReferencePosition)},
        {98, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::IntVariable)},
        {108, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::ModbusVariable)},
        {118, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::BoolVariable)},
        {128, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::FloatVariable)},
        {138, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::JPosVariable)},
        {148, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::TPosVariable)},
        {158, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::Tool)},
        {171, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::PalletPoint)},
        {183, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::VisionServer)},
        {195, -1, -1, sizeof(::IndyFramework::Protobuf::Shared::ModbusServer)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::IndyFramework::Protobuf::Shared::_MoveSJPoint_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_MoveSJTPoint_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_MoveSLPoint_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_MoveSLTPoint_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_DigitalSignal_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_AnalogSignal_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_NamedTaskPosition_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_NamedJointPosition_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_NamedReferencePosition_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_IntVariable_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_ModbusVariable_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_BoolVariable_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_FloatVariable_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_JPosVariable_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_TPosVariable_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_Tool_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_PalletPoint_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_VisionServer_default_instance_._instance,
    &::IndyFramework::Protobuf::Shared::_ModbusServer_default_instance_._instance,
};
const char descriptor_table_protodef_shared_5fmsgs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021shared_msgs.proto\022\035IndyFramework.Proto"
    "buf.Shared\"4\n\013MoveSJPoint\022\014\n\004jpos\030\001 \003(\002\022"
    "\027\n\017blending_radius\030\002 \001(\002\"C\n\014MoveSJTPoint"
    "\022\014\n\004jpos\030\001 \003(\002\022\027\n\017blending_radius\030\002 \001(\002\022"
    "\014\n\004time\030\003 \001(\002\"4\n\013MoveSLPoint\022\014\n\004tpos\030\001 \003"
    "(\002\022\027\n\017blending_radius\030\002 \001(\002\"C\n\014MoveSLTPo"
    "int\022\014\n\004tpos\030\001 \003(\002\022\027\n\017blending_radius\030\002 \001"
    "(\002\022\014\n\004time\030\003 \001(\002\")\n\rDigitalSignal\022\014\n\004add"
    "r\030\001 \001(\005\022\n\n\002on\030\002 \001(\010\"-\n\014AnalogSignal\022\014\n\004a"
    "ddr\030\001 \001(\005\022\017\n\007voltage\030\002 \001(\005\"/\n\021NamedTaskP"
    "osition\022\014\n\004name\030\001 \001(\t\022\014\n\004tpos\030\002 \003(\002\"0\n\022N"
    "amedJointPosition\022\014\n\004name\030\001 \001(\t\022\014\n\004jpos\030"
    "\002 \003(\002\"\216\001\n\026NamedReferencePosition\022\014\n\004name"
    "\030\001 \001(\t\022\014\n\004tpos\030\002 \003(\002\022\r\n\005tpos0\030\003 \003(\002\022\r\n\005t"
    "pos1\030\004 \003(\002\022\r\n\005tpos2\030\005 \003(\002\022\r\n\005jpos0\030\006 \003(\002"
    "\022\r\n\005jpos1\030\007 \003(\002\022\r\n\005jpos2\030\010 \003(\002\"*\n\013IntVar"
    "iable\022\014\n\004addr\030\001 \001(\005\022\r\n\005value\030\002 \001(\005\"-\n\016Mo"
    "dbusVariable\022\014\n\004addr\030\001 \001(\005\022\r\n\005value\030\002 \001("
    "\005\"+\n\014BoolVariable\022\014\n\004addr\030\001 \001(\005\022\r\n\005value"
    "\030\002 \001(\010\",\n\rFloatVariable\022\014\n\004addr\030\001 \001(\005\022\r\n"
    "\005value\030\002 \001(\002\"*\n\014JPosVariable\022\014\n\004addr\030\001 \001"
    "(\005\022\014\n\004jpos\030\002 \003(\002\"*\n\014TPosVariable\022\014\n\004addr"
    "\030\001 \001(\005\022\014\n\004tpos\030\002 \003(\002\"\223\002\n\004Tool\022\014\n\004name\030\001 "
    "\001(\t\022\?\n\ttool_type\030\002 \001(\0162,.IndyFramework.P"
    "rotobuf.Shared.Tool.ToolType\022=\n\007do_list\030"
    "\005 \003(\0132,.IndyFramework.Protobuf.Shared.Di"
    "gitalSignal\022=\n\006m_vars\030\006 \003(\0132-.IndyFramew"
    "ork.Protobuf.Shared.ModbusVariable\022\022\n\nsl"
    "eep_time\030\n \001(\002\"*\n\010ToolType\022\022\n\016DIGITAL_OU"
    "TPUT\020\000\022\n\n\006MODBUS\020\001\"[\n\013PalletPoint\022\017\n\007tar"
    "_pos\030\001 \003(\002\022\024\n\014approach_pos\030\002 \003(\002\022\023\n\013retr"
    "act_pos\030\003 \003(\002\022\020\n\010tar_jpos\030\004 \003(\002\"\310\001\n\014Visi"
    "onServer\022\014\n\004name\030\001 \001(\t\022X\n\022vision_server_"
    "type\030\002 \001(\0162<.IndyFramework.Protobuf.Shar"
    "ed.VisionServer.VisionServerType\022\n\n\002ip\030\003"
    " \001(\t\022\014\n\004port\030\004 \001(\r\"6\n\020VisionServerType\022\013"
    "\n\007INDYEYE\020\000\022\n\n\006PICKIT\020\001\022\t\n\005OMRON\020\002\"G\n\014Mo"
    "dbusServer\022\014\n\004name\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\014\n\004"
    "port\030\003 \001(\005\022\017\n\007unit_id\030\004 \001(\005*A\n\013MotionSta"
    "te\022\n\n\006IDLING\020\000\022\013\n\007RUNNING\020\001\022\013\n\007PAUSING\020\002"
    "\022\014\n\010STOPPING\020\003*}\n\017EndToolPortType\022\030\n\024END"
    "_TOOL_PORT_TYPE_A\020\000\022\030\n\024END_TOOL_PORT_TYP"
    "E_B\020\001\022\031\n\025END_TOOL_PORT_TYPE_AB\020\002\022\033\n\027END_"
    "TOOL_PORT_TYPE_REVC\020\003*B\n\016ControlBoxType\022"
    "\014\n\010NORMAL_2\020\000\022\014\n\010NORMAL_3\020\001\022\t\n\005KEY_2\020\002\022\t"
    "\n\005KEY_3\020\003*\224\001\n\014VariableType\022\023\n\017VariableTy"
    "peInt\020\000\022\025\n\021VariableTypeFloat\020\001\022\024\n\020Variab"
    "leTypeBool\020\002\022\026\n\022VariableTypeModbus\020\003\022\024\n\020"
    "VariableTypeJPos\020\004\022\024\n\020VariableTypeTPos\020\005"
    "*\224\001\n\014ProgramState\022\031\n\025PROGRAM_STATE_STOPP"
    "ED\020\000\022\031\n\025PROGRAM_STATE_RUNNING\020\001\022\030\n\024PROGR"
    "AM_STATE_PAUSED\020\002\022\027\n\023PROGRAM_STATE_ERROR"
    "\020\003\022\033\n\027PROGRAM_STATE_COLLISION\020\004*l\n\016Progr"
    "amControl\022\025\n\021PROGRAM_CTRL_NONE\020\000\022\024\n\020PROG"
    "RAM_CTRL_RUN\020\001\022\026\n\022PROGRAM_CTRL_PAUSE\020\002\022\025"
    "\n\021PROGRAM_CTRL_STOP\020\003*@\n\017ProgramCategory"
    "\022\026\n\022PROGRAM_CAT_NORMAL\020\000\022\025\n\021PROGRAM_CAT_"
    "INDEX\020\001*K\n\rJointBaseType\022\034\n\030JOINT_BASE_T"
    "YPE_ABSOLUTE\020\000\022\034\n\030JOINT_BASE_TYPE_RELATI"
    "VE\020\001*`\n\014TaskBaseType\022\033\n\027TASK_BASE_TYPE_A"
    "BSOLUTE\020\000\022\033\n\027TASK_BASE_TYPE_RELATIVE\020\001\022\026"
    "\n\022TASK_BASE_TYPE_TCP\020\002*|\n\014BlendingType\022\026"
    "\n\022BLENDING_TYPE_NONE\020\000\022\032\n\026BLENDING_TYPE_"
    "OVERRIDE\020\001\022\033\n\027BLENDING_TYPE_DUPLICATE\020\002\022"
    "\033\n\027BLENDING_TYPE_INTERRUPT\020\003*5\n\023Circular"
    "SettingType\022\r\n\tPOINT_SET\020\000\022\017\n\013CENTER_AXI"
    "S\020\001*:\n\022CircularMovingType\022\014\n\010CONSTANT\020\000\022"
    "\n\n\006RADIAL\020\001\022\n\n\006SMOOTH\020\002*\316\001\n\tTrajState\022\022\n"
    "\016TRAJSTATE_NONE\020\000\022\022\n\016TRAJSTATE_INIT\020\001\022\022\n"
    "\016TRAJSTATE_CALC\020\002\022\022\n\016TRAJSTATE_STBY\020\003\022\021\n"
    "\rTRAJSTATE_ACC\020\004\022\021\n\rTRAJSTATE_CRZ\020\005\022\021\n\rT"
    "RAJSTATE_DEC\020\006\022\022\n\016TRAJSTATE_CANC\020\007\022\021\n\rTR"
    "AJSTATE_FIN\020\010\022\021\n\rTRAJSTATE_ERR\020\t*Z\n\rTraj"
    "Condition\022\020\n\014TRAJ_STARTED\020\000\022\021\n\rTRAJ_ACC_"
    "DONE\020\001\022\021\n\rTRAJ_CRZ_DONE\020\002\022\021\n\rTRAJ_DEC_DO"
    "NE\020\003*\221\001\n\017CollisionPolicy\022\036\n\032COLLISION_PO"
    "LICY_NO_DETECT\020\000\022\032\n\026COLLISION_POLICY_PAU"
    "SE\020\001\022\'\n#COLLISION_POLICY_RESUME_AFTER_SL"
    "EEP\020\002\022\031\n\025COLLISION_POLICY_STOP\020\003*l\n\014Stop"
    "Category\022\034\n\030STOP_CAT_IMMEDIATE_BRAKE\020\000\022#"
    "\n\037STOP_CAT_REDUCE_SPEED_AND_BRAKE\020\001\022\031\n\025S"
    "TOP_CAT_REDUCE_SPEED\020\002*D\n\rPauseCategory\022"
    "\032\n\026PAUSE_CAT_REDUCE_SPEED\020\000\022\027\n\023PAUSE_CAT"
    "_IMMEDIATE\020\001*K\n\016EyeCommandType\022\033\n\027EYE_CO"
    "MMAND_TYPE_DETECT\020\000\022\034\n\030EYE_COMMAND_TYPE_"
    "EXTRACT\020\001*\313\002\n\014DIConfigFunc\022\030\n\024DI_RUN_IND"
    "EX_PROGRAM\020\000\022\023\n\017DI_STOP_PROGRAM\020\001\022\024\n\020DI_"
    "PAUSE_PROGRAM\020\002\022\025\n\021DI_RESUME_PROGRAM\020\003\022\016"
    "\n\nDI_RECOVER\020\004\022\020\n\014DI_STOP_SLOW\020\005\022\025\n\021DI_S"
    "TOP_IMMADIATE\020\006\022\023\n\017DI_MOVE_TO_HOME\020\007\022\023\n\017"
    "DI_MOVE_TO_ZERO\020\010\022\036\n\032DI_DIRECT_TEACHING_"
    "MODE_ON\020\t\022\037\n\033DI_DIRECT_TEACHING_MODE_OFF"
    "\020\n\022\034\n\030DI_REDUCED_SPEED_MODE_ON\020\013\022\035\n\031DI_R"
    "EDUCED_SPEED_MODE_OFF\020\014*\265\001\n\rDOConfigStat"
    "e\022\016\n\nDO_IS_IDLE\020\000\022\020\n\014DO_IS_MOVING\020\001\022\021\n\rD"
    "O_IS_VIOLATE\020\002\022\021\n\rDO_IS_RECOVER\020\003\022\022\n\016DO_"
    "IS_TEACHING\020\004\022\023\n\017DO_IS_COLLISION\020\005\022\031\n\025DO"
    "_IS_PROGRAM_RUNNING\020\006\022\030\n\024DO_IS_PROGRAM_P"
    "AUSED\020\007*\204\002\n\007OpState\022\021\n\rOP_SYSTEM_OFF\020\000\022\020"
    "\n\014OP_SYSTEM_ON\020\001\022\016\n\nOP_VIOLATE\020\002\022\023\n\017OP_R"
    "ECOVER_HARD\020\003\022\023\n\017OP_RECOVER_SOFT\020\004\022\013\n\007OP"
    "_IDLE\020\005\022\r\n\tOP_MOVING\020\006\022\017\n\013OP_TEACHING\020\007\022"
    "\020\n\014OP_COLLISION\020\010\022\023\n\017OP_STOP_AND_OFF\020\t\022\016"
    "\n\nCOMPLIANCE\020\n\022\021\n\rBRAKE_CONTROL\020\013\022\020\n\014SYS"
    "TEM_RESET\020\014\022\021\n\rSYSTEM_SWITCH\020\r*3\n\010LogLev"
    "el\022\022\n\016LOG_LEVEL_INFO\020\000\022\023\n\017LOG_LEVEL_ERRO"
    "R\020\001*\?\n\014JogFrameType\022\026\n\022JOG_FRAME_TYPE_RE"
    "F\020\000\022\027\n\023JOG_FRAME_TYPE_TOOL\020\001*N\n\004Axis\022\n\n\006"
    "AXIS_X\020\000\022\n\n\006AXIS_Y\020\001\022\n\n\006AXIS_Z\020\002\022\n\n\006AXIS"
    "_U\020\003\022\n\n\006AXIS_V\020\004\022\n\n\006AXIS_W\020\005*/\n\017VisionFr"
    "ameType\022\n\n\006OBJECT\020\000\022\020\n\014END_EFFECTOR\020\001*B\n"
    "\013WeavingBase\022\031\n\025WEAVE_FRAME_TYPE_TOOL\020\000\022"
    "\030\n\024WEAVE_FRAME_TYPE_REF\020\001b\006proto3"
};
static ::absl::once_flag descriptor_table_shared_5fmsgs_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_shared_5fmsgs_2eproto = {
    false,
    false,
    4513,
    descriptor_table_protodef_shared_5fmsgs_2eproto,
    "shared_msgs.proto",
    &descriptor_table_shared_5fmsgs_2eproto_once,
    nullptr,
    0,
    19,
    schemas,
    file_default_instances,
    TableStruct_shared_5fmsgs_2eproto::offsets,
    file_level_metadata_shared_5fmsgs_2eproto,
    file_level_enum_descriptors_shared_5fmsgs_2eproto,
    file_level_service_descriptors_shared_5fmsgs_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_shared_5fmsgs_2eproto_getter() {
  return &descriptor_table_shared_5fmsgs_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_shared_5fmsgs_2eproto(&descriptor_table_shared_5fmsgs_2eproto);
namespace IndyFramework {
namespace Protobuf {
namespace Shared {
const ::google::protobuf::EnumDescriptor* Tool_ToolType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[0];
}
bool Tool_ToolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Tool_ToolType Tool::DIGITAL_OUTPUT;
constexpr Tool_ToolType Tool::MODBUS;
constexpr Tool_ToolType Tool::ToolType_MIN;
constexpr Tool_ToolType Tool::ToolType_MAX;
constexpr int Tool::ToolType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VisionServer_VisionServerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[1];
}
bool VisionServer_VisionServerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VisionServer_VisionServerType VisionServer::INDYEYE;
constexpr VisionServer_VisionServerType VisionServer::PICKIT;
constexpr VisionServer_VisionServerType VisionServer::OMRON;
constexpr VisionServer_VisionServerType VisionServer::VisionServerType_MIN;
constexpr VisionServer_VisionServerType VisionServer::VisionServerType_MAX;
constexpr int VisionServer::VisionServerType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* MotionState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[2];
}
bool MotionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* EndToolPortType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[3];
}
bool EndToolPortType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ControlBoxType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[4];
}
bool ControlBoxType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* VariableType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[5];
}
bool VariableType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ProgramState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[6];
}
bool ProgramState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ProgramControl_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[7];
}
bool ProgramControl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ProgramCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[8];
}
bool ProgramCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* JointBaseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[9];
}
bool JointBaseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TaskBaseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[10];
}
bool TaskBaseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* BlendingType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[11];
}
bool BlendingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* CircularSettingType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[12];
}
bool CircularSettingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* CircularMovingType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[13];
}
bool CircularMovingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TrajState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[14];
}
bool TrajState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TrajCondition_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[15];
}
bool TrajCondition_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* CollisionPolicy_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[16];
}
bool CollisionPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* StopCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[17];
}
bool StopCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* PauseCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[18];
}
bool PauseCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* EyeCommandType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[19];
}
bool EyeCommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* DIConfigFunc_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[20];
}
bool DIConfigFunc_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* DOConfigState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[21];
}
bool DOConfigState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* OpState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[22];
}
bool OpState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* LogLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[23];
}
bool LogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* JogFrameType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[24];
}
bool JogFrameType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* Axis_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[25];
}
bool Axis_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* VisionFrameType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[26];
}
bool VisionFrameType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* WeavingBase_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_shared_5fmsgs_2eproto);
  return file_level_enum_descriptors_shared_5fmsgs_2eproto[27];
}
bool WeavingBase_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class MoveSJPoint::_Internal {
 public:
};

MoveSJPoint::MoveSJPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.MoveSJPoint)
}
MoveSJPoint::MoveSJPoint(const MoveSJPoint& from) : ::google::protobuf::Message() {
  MoveSJPoint* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){from._impl_.jpos_},
      decltype(_impl_.blending_radius_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.blending_radius_ = from._impl_.blending_radius_;

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.MoveSJPoint)
}
inline void MoveSJPoint::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){arena},
      decltype(_impl_.blending_radius_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MoveSJPoint::~MoveSJPoint() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.MoveSJPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoveSJPoint::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jpos_.~RepeatedField();
}
void MoveSJPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MoveSJPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.MoveSJPoint)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_jpos()->Clear();
  _impl_.blending_radius_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoveSJPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MoveSJPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MoveSJPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float blending_radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSJPoint, _impl_.blending_radius_)}},
    // repeated float jpos = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSJPoint, _impl_.jpos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float jpos = 1;
    {PROTOBUF_FIELD_OFFSET(MoveSJPoint, _impl_.jpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // float blending_radius = 2;
    {PROTOBUF_FIELD_OFFSET(MoveSJPoint, _impl_.blending_radius_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MoveSJPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.MoveSJPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float jpos = 1;
  if (this->_internal_jpos_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_jpos(), target);
  }

  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_blending_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.MoveSJPoint)
  return target;
}

::size_t MoveSJPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.MoveSJPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float jpos = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_jpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoveSJPoint::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MoveSJPoint::MergeImpl
};
const ::google::protobuf::Message::ClassData*MoveSJPoint::GetClassData() const { return &_class_data_; }


void MoveSJPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoveSJPoint*>(&to_msg);
  auto& from = static_cast<const MoveSJPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.MoveSJPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_jpos()->MergeFrom(from._internal_jpos());
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = from._internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    _this->_internal_set_blending_radius(from._internal_blending_radius());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveSJPoint::CopyFrom(const MoveSJPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.MoveSJPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoveSJPoint::IsInitialized() const {
  return true;
}

void MoveSJPoint::InternalSwap(MoveSJPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.jpos_.InternalSwap(&other->_impl_.jpos_);
        swap(_impl_.blending_radius_, other->_impl_.blending_radius_);
}

::google::protobuf::Metadata MoveSJPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[0]);
}
// ===================================================================

class MoveSJTPoint::_Internal {
 public:
};

MoveSJTPoint::MoveSJTPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.MoveSJTPoint)
}
MoveSJTPoint::MoveSJTPoint(const MoveSJTPoint& from) : ::google::protobuf::Message() {
  MoveSJTPoint* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){from._impl_.jpos_},
      decltype(_impl_.blending_radius_){},
      decltype(_impl_.time_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.blending_radius_, &from._impl_.blending_radius_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.time_) -
    reinterpret_cast<char*>(&_impl_.blending_radius_)) + sizeof(_impl_.time_));

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.MoveSJTPoint)
}
inline void MoveSJTPoint::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){arena},
      decltype(_impl_.blending_radius_){0},
      decltype(_impl_.time_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MoveSJTPoint::~MoveSJTPoint() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.MoveSJTPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoveSJTPoint::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jpos_.~RepeatedField();
}
void MoveSJTPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MoveSJTPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.MoveSJTPoint)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_jpos()->Clear();
  ::memset(&_impl_.blending_radius_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.time_) -
      reinterpret_cast<char*>(&_impl_.blending_radius_)) + sizeof(_impl_.time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoveSJTPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MoveSJTPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MoveSJTPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated float jpos = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.jpos_)}},
    // float blending_radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.blending_radius_)}},
    // float time = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float jpos = 1;
    {PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.jpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // float blending_radius = 2;
    {PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.blending_radius_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float time = 3;
    {PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MoveSJTPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.MoveSJTPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float jpos = 1;
  if (this->_internal_jpos_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_jpos(), target);
  }

  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_blending_radius(), target);
  }

  // float time = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.MoveSJTPoint)
  return target;
}

::size_t MoveSJTPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.MoveSJTPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float jpos = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_jpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    total_size += 5;
  }

  // float time = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoveSJTPoint::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MoveSJTPoint::MergeImpl
};
const ::google::protobuf::Message::ClassData*MoveSJTPoint::GetClassData() const { return &_class_data_; }


void MoveSJTPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoveSJTPoint*>(&to_msg);
  auto& from = static_cast<const MoveSJTPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.MoveSJTPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_jpos()->MergeFrom(from._internal_jpos());
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = from._internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    _this->_internal_set_blending_radius(from._internal_blending_radius());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = from._internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveSJTPoint::CopyFrom(const MoveSJTPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.MoveSJTPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoveSJTPoint::IsInitialized() const {
  return true;
}

void MoveSJTPoint::InternalSwap(MoveSJTPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.jpos_.InternalSwap(&other->_impl_.jpos_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.time_)
      + sizeof(MoveSJTPoint::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(MoveSJTPoint, _impl_.blending_radius_)>(
          reinterpret_cast<char*>(&_impl_.blending_radius_),
          reinterpret_cast<char*>(&other->_impl_.blending_radius_));
}

::google::protobuf::Metadata MoveSJTPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[1]);
}
// ===================================================================

class MoveSLPoint::_Internal {
 public:
};

MoveSLPoint::MoveSLPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.MoveSLPoint)
}
MoveSLPoint::MoveSLPoint(const MoveSLPoint& from) : ::google::protobuf::Message() {
  MoveSLPoint* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){from._impl_.tpos_},
      decltype(_impl_.blending_radius_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.blending_radius_ = from._impl_.blending_radius_;

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.MoveSLPoint)
}
inline void MoveSLPoint::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){arena},
      decltype(_impl_.blending_radius_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MoveSLPoint::~MoveSLPoint() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.MoveSLPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoveSLPoint::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tpos_.~RepeatedField();
}
void MoveSLPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MoveSLPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.MoveSLPoint)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tpos()->Clear();
  _impl_.blending_radius_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoveSLPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MoveSLPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MoveSLPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float blending_radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSLPoint, _impl_.blending_radius_)}},
    // repeated float tpos = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSLPoint, _impl_.tpos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float tpos = 1;
    {PROTOBUF_FIELD_OFFSET(MoveSLPoint, _impl_.tpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // float blending_radius = 2;
    {PROTOBUF_FIELD_OFFSET(MoveSLPoint, _impl_.blending_radius_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MoveSLPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.MoveSLPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float tpos = 1;
  if (this->_internal_tpos_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_tpos(), target);
  }

  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_blending_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.MoveSLPoint)
  return target;
}

::size_t MoveSLPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.MoveSLPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float tpos = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoveSLPoint::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MoveSLPoint::MergeImpl
};
const ::google::protobuf::Message::ClassData*MoveSLPoint::GetClassData() const { return &_class_data_; }


void MoveSLPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoveSLPoint*>(&to_msg);
  auto& from = static_cast<const MoveSLPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.MoveSLPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tpos()->MergeFrom(from._internal_tpos());
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = from._internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    _this->_internal_set_blending_radius(from._internal_blending_radius());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveSLPoint::CopyFrom(const MoveSLPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.MoveSLPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoveSLPoint::IsInitialized() const {
  return true;
}

void MoveSLPoint::InternalSwap(MoveSLPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tpos_.InternalSwap(&other->_impl_.tpos_);
        swap(_impl_.blending_radius_, other->_impl_.blending_radius_);
}

::google::protobuf::Metadata MoveSLPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[2]);
}
// ===================================================================

class MoveSLTPoint::_Internal {
 public:
};

MoveSLTPoint::MoveSLTPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.MoveSLTPoint)
}
MoveSLTPoint::MoveSLTPoint(const MoveSLTPoint& from) : ::google::protobuf::Message() {
  MoveSLTPoint* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){from._impl_.tpos_},
      decltype(_impl_.blending_radius_){},
      decltype(_impl_.time_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.blending_radius_, &from._impl_.blending_radius_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.time_) -
    reinterpret_cast<char*>(&_impl_.blending_radius_)) + sizeof(_impl_.time_));

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.MoveSLTPoint)
}
inline void MoveSLTPoint::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){arena},
      decltype(_impl_.blending_radius_){0},
      decltype(_impl_.time_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MoveSLTPoint::~MoveSLTPoint() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.MoveSLTPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoveSLTPoint::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tpos_.~RepeatedField();
}
void MoveSLTPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MoveSLTPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.MoveSLTPoint)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tpos()->Clear();
  ::memset(&_impl_.blending_radius_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.time_) -
      reinterpret_cast<char*>(&_impl_.blending_radius_)) + sizeof(_impl_.time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoveSLTPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MoveSLTPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MoveSLTPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated float tpos = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.tpos_)}},
    // float blending_radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.blending_radius_)}},
    // float time = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float tpos = 1;
    {PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.tpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // float blending_radius = 2;
    {PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.blending_radius_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float time = 3;
    {PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MoveSLTPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.MoveSLTPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float tpos = 1;
  if (this->_internal_tpos_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_tpos(), target);
  }

  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_blending_radius(), target);
  }

  // float time = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.MoveSLTPoint)
  return target;
}

::size_t MoveSLTPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.MoveSLTPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float tpos = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // float blending_radius = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = this->_internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    total_size += 5;
  }

  // float time = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoveSLTPoint::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MoveSLTPoint::MergeImpl
};
const ::google::protobuf::Message::ClassData*MoveSLTPoint::GetClassData() const { return &_class_data_; }


void MoveSLTPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoveSLTPoint*>(&to_msg);
  auto& from = static_cast<const MoveSLTPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.MoveSLTPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tpos()->MergeFrom(from._internal_tpos());
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_blending_radius = from._internal_blending_radius();
  ::uint32_t raw_blending_radius;
  memcpy(&raw_blending_radius, &tmp_blending_radius, sizeof(tmp_blending_radius));
  if (raw_blending_radius != 0) {
    _this->_internal_set_blending_radius(from._internal_blending_radius());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = from._internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveSLTPoint::CopyFrom(const MoveSLTPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.MoveSLTPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoveSLTPoint::IsInitialized() const {
  return true;
}

void MoveSLTPoint::InternalSwap(MoveSLTPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tpos_.InternalSwap(&other->_impl_.tpos_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.time_)
      + sizeof(MoveSLTPoint::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(MoveSLTPoint, _impl_.blending_radius_)>(
          reinterpret_cast<char*>(&_impl_.blending_radius_),
          reinterpret_cast<char*>(&other->_impl_.blending_radius_));
}

::google::protobuf::Metadata MoveSLTPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[3]);
}
// ===================================================================

class DigitalSignal::_Internal {
 public:
};

DigitalSignal::DigitalSignal(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.DigitalSignal)
}
DigitalSignal::DigitalSignal(const DigitalSignal& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.DigitalSignal)
}
inline void DigitalSignal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){0},
      decltype(_impl_.on_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
DigitalSignal::~DigitalSignal() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.DigitalSignal)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DigitalSignal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void DigitalSignal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DigitalSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.DigitalSignal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.on_) -
      reinterpret_cast<char*>(&_impl_.addr_)) + sizeof(_impl_.on_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DigitalSignal::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DigitalSignal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DigitalSignal_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool on = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DigitalSignal, _impl_.on_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DigitalSignal, _impl_.on_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DigitalSignal, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DigitalSignal, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(DigitalSignal, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool on = 2;
    {PROTOBUF_FIELD_OFFSET(DigitalSignal, _impl_.on_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DigitalSignal::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.DigitalSignal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // bool on = 2;
  if (this->_internal_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_on(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.DigitalSignal)
  return target;
}

::size_t DigitalSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.DigitalSignal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  // bool on = 2;
  if (this->_internal_on() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DigitalSignal::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DigitalSignal::MergeImpl
};
const ::google::protobuf::Message::ClassData*DigitalSignal::GetClassData() const { return &_class_data_; }


void DigitalSignal::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DigitalSignal*>(&to_msg);
  auto& from = static_cast<const DigitalSignal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.DigitalSignal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_on() != 0) {
    _this->_internal_set_on(from._internal_on());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DigitalSignal::CopyFrom(const DigitalSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.DigitalSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DigitalSignal::IsInitialized() const {
  return true;
}

void DigitalSignal::InternalSwap(DigitalSignal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DigitalSignal, _impl_.on_)
      + sizeof(DigitalSignal::_impl_.on_)
      - PROTOBUF_FIELD_OFFSET(DigitalSignal, _impl_.addr_)>(
          reinterpret_cast<char*>(&_impl_.addr_),
          reinterpret_cast<char*>(&other->_impl_.addr_));
}

::google::protobuf::Metadata DigitalSignal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[4]);
}
// ===================================================================

class AnalogSignal::_Internal {
 public:
};

AnalogSignal::AnalogSignal(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.AnalogSignal)
}
AnalogSignal::AnalogSignal(const AnalogSignal& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.AnalogSignal)
}
inline void AnalogSignal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){0},
      decltype(_impl_.voltage_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AnalogSignal::~AnalogSignal() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.AnalogSignal)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AnalogSignal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void AnalogSignal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AnalogSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.AnalogSignal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.voltage_) -
      reinterpret_cast<char*>(&_impl_.addr_)) + sizeof(_impl_.voltage_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AnalogSignal::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AnalogSignal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AnalogSignal_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 voltage = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalogSignal, _impl_.voltage_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogSignal, _impl_.voltage_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalogSignal, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogSignal, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(AnalogSignal, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 voltage = 2;
    {PROTOBUF_FIELD_OFFSET(AnalogSignal, _impl_.voltage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AnalogSignal::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.AnalogSignal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // int32 voltage = 2;
  if (this->_internal_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_voltage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.AnalogSignal)
  return target;
}

::size_t AnalogSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.AnalogSignal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  // int32 voltage = 2;
  if (this->_internal_voltage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_voltage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AnalogSignal::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AnalogSignal::MergeImpl
};
const ::google::protobuf::Message::ClassData*AnalogSignal::GetClassData() const { return &_class_data_; }


void AnalogSignal::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AnalogSignal*>(&to_msg);
  auto& from = static_cast<const AnalogSignal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.AnalogSignal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_voltage() != 0) {
    _this->_internal_set_voltage(from._internal_voltage());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalogSignal::CopyFrom(const AnalogSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.AnalogSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AnalogSignal::IsInitialized() const {
  return true;
}

void AnalogSignal::InternalSwap(AnalogSignal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnalogSignal, _impl_.voltage_)
      + sizeof(AnalogSignal::_impl_.voltage_)
      - PROTOBUF_FIELD_OFFSET(AnalogSignal, _impl_.addr_)>(
          reinterpret_cast<char*>(&_impl_.addr_),
          reinterpret_cast<char*>(&other->_impl_.addr_));
}

::google::protobuf::Metadata AnalogSignal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[5]);
}
// ===================================================================

class NamedTaskPosition::_Internal {
 public:
};

NamedTaskPosition::NamedTaskPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.NamedTaskPosition)
}
NamedTaskPosition::NamedTaskPosition(const NamedTaskPosition& from) : ::google::protobuf::Message() {
  NamedTaskPosition* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){from._impl_.tpos_},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.NamedTaskPosition)
}
inline void NamedTaskPosition::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){arena},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
NamedTaskPosition::~NamedTaskPosition() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.NamedTaskPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NamedTaskPosition::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tpos_.~RepeatedField();
  _impl_.name_.Destroy();
}
void NamedTaskPosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void NamedTaskPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.NamedTaskPosition)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tpos()->Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NamedTaskPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> NamedTaskPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NamedTaskPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float tpos = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NamedTaskPosition, _impl_.tpos_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NamedTaskPosition, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NamedTaskPosition, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated float tpos = 2;
    {PROTOBUF_FIELD_OFFSET(NamedTaskPosition, _impl_.tpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
    "\57\4\0\0\0\0\0\0"
    "IndyFramework.Protobuf.Shared.NamedTaskPosition"
    "name"
  }},
};

::uint8_t* NamedTaskPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.NamedTaskPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.NamedTaskPosition.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated float tpos = 2;
  if (this->_internal_tpos_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_tpos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.NamedTaskPosition)
  return target;
}

::size_t NamedTaskPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.NamedTaskPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float tpos = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NamedTaskPosition::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    NamedTaskPosition::MergeImpl
};
const ::google::protobuf::Message::ClassData*NamedTaskPosition::GetClassData() const { return &_class_data_; }


void NamedTaskPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NamedTaskPosition*>(&to_msg);
  auto& from = static_cast<const NamedTaskPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.NamedTaskPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tpos()->MergeFrom(from._internal_tpos());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NamedTaskPosition::CopyFrom(const NamedTaskPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.NamedTaskPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NamedTaskPosition::IsInitialized() const {
  return true;
}

void NamedTaskPosition::InternalSwap(NamedTaskPosition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tpos_.InternalSwap(&other->_impl_.tpos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata NamedTaskPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[6]);
}
// ===================================================================

class NamedJointPosition::_Internal {
 public:
};

NamedJointPosition::NamedJointPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.NamedJointPosition)
}
NamedJointPosition::NamedJointPosition(const NamedJointPosition& from) : ::google::protobuf::Message() {
  NamedJointPosition* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){from._impl_.jpos_},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.NamedJointPosition)
}
inline void NamedJointPosition::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){arena},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
NamedJointPosition::~NamedJointPosition() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.NamedJointPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NamedJointPosition::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jpos_.~RepeatedField();
  _impl_.name_.Destroy();
}
void NamedJointPosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void NamedJointPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.NamedJointPosition)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_jpos()->Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NamedJointPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> NamedJointPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NamedJointPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float jpos = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NamedJointPosition, _impl_.jpos_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NamedJointPosition, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NamedJointPosition, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated float jpos = 2;
    {PROTOBUF_FIELD_OFFSET(NamedJointPosition, _impl_.jpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
    "\60\4\0\0\0\0\0\0"
    "IndyFramework.Protobuf.Shared.NamedJointPosition"
    "name"
  }},
};

::uint8_t* NamedJointPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.NamedJointPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.NamedJointPosition.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated float jpos = 2;
  if (this->_internal_jpos_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_jpos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.NamedJointPosition)
  return target;
}

::size_t NamedJointPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.NamedJointPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float jpos = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_jpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NamedJointPosition::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    NamedJointPosition::MergeImpl
};
const ::google::protobuf::Message::ClassData*NamedJointPosition::GetClassData() const { return &_class_data_; }


void NamedJointPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NamedJointPosition*>(&to_msg);
  auto& from = static_cast<const NamedJointPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.NamedJointPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_jpos()->MergeFrom(from._internal_jpos());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NamedJointPosition::CopyFrom(const NamedJointPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.NamedJointPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NamedJointPosition::IsInitialized() const {
  return true;
}

void NamedJointPosition::InternalSwap(NamedJointPosition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.jpos_.InternalSwap(&other->_impl_.jpos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata NamedJointPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[7]);
}
// ===================================================================

class NamedReferencePosition::_Internal {
 public:
};

NamedReferencePosition::NamedReferencePosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.NamedReferencePosition)
}
NamedReferencePosition::NamedReferencePosition(const NamedReferencePosition& from) : ::google::protobuf::Message() {
  NamedReferencePosition* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){from._impl_.tpos_},
      decltype(_impl_.tpos0_){from._impl_.tpos0_},
      decltype(_impl_.tpos1_){from._impl_.tpos1_},
      decltype(_impl_.tpos2_){from._impl_.tpos2_},
      decltype(_impl_.jpos0_){from._impl_.jpos0_},
      decltype(_impl_.jpos1_){from._impl_.jpos1_},
      decltype(_impl_.jpos2_){from._impl_.jpos2_},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.NamedReferencePosition)
}
inline void NamedReferencePosition::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){arena},
      decltype(_impl_.tpos0_){arena},
      decltype(_impl_.tpos1_){arena},
      decltype(_impl_.tpos2_){arena},
      decltype(_impl_.jpos0_){arena},
      decltype(_impl_.jpos1_){arena},
      decltype(_impl_.jpos2_){arena},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
NamedReferencePosition::~NamedReferencePosition() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.NamedReferencePosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NamedReferencePosition::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tpos_.~RepeatedField();
  _impl_.tpos0_.~RepeatedField();
  _impl_.tpos1_.~RepeatedField();
  _impl_.tpos2_.~RepeatedField();
  _impl_.jpos0_.~RepeatedField();
  _impl_.jpos1_.~RepeatedField();
  _impl_.jpos2_.~RepeatedField();
  _impl_.name_.Destroy();
}
void NamedReferencePosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void NamedReferencePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.NamedReferencePosition)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tpos()->Clear();
  _internal_mutable_tpos0()->Clear();
  _internal_mutable_tpos1()->Clear();
  _internal_mutable_tpos2()->Clear();
  _internal_mutable_jpos0()->Clear();
  _internal_mutable_jpos1()->Clear();
  _internal_mutable_jpos2()->Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NamedReferencePosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 73, 2> NamedReferencePosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NamedReferencePosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float jpos2 = 8;
    {::_pbi::TcParser::FastF32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.jpos2_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.name_)}},
    // repeated float tpos = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos_)}},
    // repeated float tpos0 = 3;
    {::_pbi::TcParser::FastF32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos0_)}},
    // repeated float tpos1 = 4;
    {::_pbi::TcParser::FastF32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos1_)}},
    // repeated float tpos2 = 5;
    {::_pbi::TcParser::FastF32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos2_)}},
    // repeated float jpos0 = 6;
    {::_pbi::TcParser::FastF32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.jpos0_)}},
    // repeated float jpos1 = 7;
    {::_pbi::TcParser::FastF32P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.jpos1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated float tpos = 2;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float tpos0 = 3;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos0_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float tpos1 = 4;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float tpos2 = 5;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.tpos2_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float jpos0 = 6;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.jpos0_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float jpos1 = 7;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.jpos1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float jpos2 = 8;
    {PROTOBUF_FIELD_OFFSET(NamedReferencePosition, _impl_.jpos2_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
    "\64\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "IndyFramework.Protobuf.Shared.NamedReferencePosition"
    "name"
  }},
};

::uint8_t* NamedReferencePosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.NamedReferencePosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.NamedReferencePosition.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated float tpos = 2;
  if (this->_internal_tpos_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_tpos(), target);
  }

  // repeated float tpos0 = 3;
  if (this->_internal_tpos0_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_tpos0(), target);
  }

  // repeated float tpos1 = 4;
  if (this->_internal_tpos1_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_tpos1(), target);
  }

  // repeated float tpos2 = 5;
  if (this->_internal_tpos2_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_tpos2(), target);
  }

  // repeated float jpos0 = 6;
  if (this->_internal_jpos0_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_jpos0(), target);
  }

  // repeated float jpos1 = 7;
  if (this->_internal_jpos1_size() > 0) {
    target = stream->WriteFixedPacked(7, _internal_jpos1(), target);
  }

  // repeated float jpos2 = 8;
  if (this->_internal_jpos2_size() > 0) {
    target = stream->WriteFixedPacked(8, _internal_jpos2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.NamedReferencePosition)
  return target;
}

::size_t NamedReferencePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.NamedReferencePosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float tpos = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float tpos0 = 3;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos0_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float tpos1 = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos1_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float tpos2 = 5;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos2_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float jpos0 = 6;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_jpos0_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float jpos1 = 7;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_jpos1_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float jpos2 = 8;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_jpos2_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NamedReferencePosition::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    NamedReferencePosition::MergeImpl
};
const ::google::protobuf::Message::ClassData*NamedReferencePosition::GetClassData() const { return &_class_data_; }


void NamedReferencePosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NamedReferencePosition*>(&to_msg);
  auto& from = static_cast<const NamedReferencePosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.NamedReferencePosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tpos()->MergeFrom(from._internal_tpos());
  _this->_internal_mutable_tpos0()->MergeFrom(from._internal_tpos0());
  _this->_internal_mutable_tpos1()->MergeFrom(from._internal_tpos1());
  _this->_internal_mutable_tpos2()->MergeFrom(from._internal_tpos2());
  _this->_internal_mutable_jpos0()->MergeFrom(from._internal_jpos0());
  _this->_internal_mutable_jpos1()->MergeFrom(from._internal_jpos1());
  _this->_internal_mutable_jpos2()->MergeFrom(from._internal_jpos2());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NamedReferencePosition::CopyFrom(const NamedReferencePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.NamedReferencePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NamedReferencePosition::IsInitialized() const {
  return true;
}

void NamedReferencePosition::InternalSwap(NamedReferencePosition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tpos_.InternalSwap(&other->_impl_.tpos_);
  _impl_.tpos0_.InternalSwap(&other->_impl_.tpos0_);
  _impl_.tpos1_.InternalSwap(&other->_impl_.tpos1_);
  _impl_.tpos2_.InternalSwap(&other->_impl_.tpos2_);
  _impl_.jpos0_.InternalSwap(&other->_impl_.jpos0_);
  _impl_.jpos1_.InternalSwap(&other->_impl_.jpos1_);
  _impl_.jpos2_.InternalSwap(&other->_impl_.jpos2_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata NamedReferencePosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[8]);
}
// ===================================================================

class IntVariable::_Internal {
 public:
};

IntVariable::IntVariable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.IntVariable)
}
IntVariable::IntVariable(const IntVariable& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.IntVariable)
}
inline void IntVariable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){0},
      decltype(_impl_.value_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
IntVariable::~IntVariable() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.IntVariable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IntVariable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void IntVariable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void IntVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.IntVariable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.value_) -
      reinterpret_cast<char*>(&_impl_.addr_)) + sizeof(_impl_.value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IntVariable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> IntVariable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IntVariable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IntVariable, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IntVariable, _impl_.value_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IntVariable, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IntVariable, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(IntVariable, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(IntVariable, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* IntVariable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.IntVariable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.IntVariable)
  return target;
}

::size_t IntVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.IntVariable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IntVariable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    IntVariable::MergeImpl
};
const ::google::protobuf::Message::ClassData*IntVariable::GetClassData() const { return &_class_data_; }


void IntVariable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IntVariable*>(&to_msg);
  auto& from = static_cast<const IntVariable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.IntVariable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IntVariable::CopyFrom(const IntVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.IntVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IntVariable::IsInitialized() const {
  return true;
}

void IntVariable::InternalSwap(IntVariable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IntVariable, _impl_.value_)
      + sizeof(IntVariable::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(IntVariable, _impl_.addr_)>(
          reinterpret_cast<char*>(&_impl_.addr_),
          reinterpret_cast<char*>(&other->_impl_.addr_));
}

::google::protobuf::Metadata IntVariable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[9]);
}
// ===================================================================

class ModbusVariable::_Internal {
 public:
};

ModbusVariable::ModbusVariable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.ModbusVariable)
}
ModbusVariable::ModbusVariable(const ModbusVariable& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.ModbusVariable)
}
inline void ModbusVariable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){0},
      decltype(_impl_.value_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ModbusVariable::~ModbusVariable() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.ModbusVariable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ModbusVariable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void ModbusVariable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ModbusVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.ModbusVariable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.value_) -
      reinterpret_cast<char*>(&_impl_.addr_)) + sizeof(_impl_.value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ModbusVariable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ModbusVariable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ModbusVariable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModbusVariable, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ModbusVariable, _impl_.value_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModbusVariable, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ModbusVariable, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(ModbusVariable, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(ModbusVariable, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ModbusVariable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.ModbusVariable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.ModbusVariable)
  return target;
}

::size_t ModbusVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.ModbusVariable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ModbusVariable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ModbusVariable::MergeImpl
};
const ::google::protobuf::Message::ClassData*ModbusVariable::GetClassData() const { return &_class_data_; }


void ModbusVariable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ModbusVariable*>(&to_msg);
  auto& from = static_cast<const ModbusVariable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.ModbusVariable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModbusVariable::CopyFrom(const ModbusVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.ModbusVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ModbusVariable::IsInitialized() const {
  return true;
}

void ModbusVariable::InternalSwap(ModbusVariable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModbusVariable, _impl_.value_)
      + sizeof(ModbusVariable::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(ModbusVariable, _impl_.addr_)>(
          reinterpret_cast<char*>(&_impl_.addr_),
          reinterpret_cast<char*>(&other->_impl_.addr_));
}

::google::protobuf::Metadata ModbusVariable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[10]);
}
// ===================================================================

class BoolVariable::_Internal {
 public:
};

BoolVariable::BoolVariable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.BoolVariable)
}
BoolVariable::BoolVariable(const BoolVariable& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.BoolVariable)
}
inline void BoolVariable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){0},
      decltype(_impl_.value_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
BoolVariable::~BoolVariable() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.BoolVariable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BoolVariable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void BoolVariable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BoolVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.BoolVariable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.value_) -
      reinterpret_cast<char*>(&_impl_.addr_)) + sizeof(_impl_.value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BoolVariable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> BoolVariable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BoolVariable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BoolVariable, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BoolVariable, _impl_.value_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BoolVariable, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BoolVariable, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(BoolVariable, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool value = 2;
    {PROTOBUF_FIELD_OFFSET(BoolVariable, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BoolVariable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.BoolVariable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // bool value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.BoolVariable)
  return target;
}

::size_t BoolVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.BoolVariable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  // bool value = 2;
  if (this->_internal_value() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BoolVariable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BoolVariable::MergeImpl
};
const ::google::protobuf::Message::ClassData*BoolVariable::GetClassData() const { return &_class_data_; }


void BoolVariable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BoolVariable*>(&to_msg);
  auto& from = static_cast<const BoolVariable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.BoolVariable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoolVariable::CopyFrom(const BoolVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.BoolVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BoolVariable::IsInitialized() const {
  return true;
}

void BoolVariable::InternalSwap(BoolVariable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoolVariable, _impl_.value_)
      + sizeof(BoolVariable::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(BoolVariable, _impl_.addr_)>(
          reinterpret_cast<char*>(&_impl_.addr_),
          reinterpret_cast<char*>(&other->_impl_.addr_));
}

::google::protobuf::Metadata BoolVariable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[11]);
}
// ===================================================================

class FloatVariable::_Internal {
 public:
};

FloatVariable::FloatVariable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.FloatVariable)
}
FloatVariable::FloatVariable(const FloatVariable& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.FloatVariable)
}
inline void FloatVariable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){0},
      decltype(_impl_.value_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
FloatVariable::~FloatVariable() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.FloatVariable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FloatVariable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void FloatVariable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FloatVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.FloatVariable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.value_) -
      reinterpret_cast<char*>(&_impl_.addr_)) + sizeof(_impl_.value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FloatVariable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> FloatVariable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FloatVariable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(FloatVariable, _impl_.value_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FloatVariable, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FloatVariable, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(FloatVariable, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float value = 2;
    {PROTOBUF_FIELD_OFFSET(FloatVariable, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FloatVariable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.FloatVariable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // float value = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.FloatVariable)
  return target;
}

::size_t FloatVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.FloatVariable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  // float value = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FloatVariable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FloatVariable::MergeImpl
};
const ::google::protobuf::Message::ClassData*FloatVariable::GetClassData() const { return &_class_data_; }


void FloatVariable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FloatVariable*>(&to_msg);
  auto& from = static_cast<const FloatVariable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.FloatVariable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FloatVariable::CopyFrom(const FloatVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.FloatVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FloatVariable::IsInitialized() const {
  return true;
}

void FloatVariable::InternalSwap(FloatVariable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FloatVariable, _impl_.value_)
      + sizeof(FloatVariable::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(FloatVariable, _impl_.addr_)>(
          reinterpret_cast<char*>(&_impl_.addr_),
          reinterpret_cast<char*>(&other->_impl_.addr_));
}

::google::protobuf::Metadata FloatVariable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[12]);
}
// ===================================================================

class JPosVariable::_Internal {
 public:
};

JPosVariable::JPosVariable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.JPosVariable)
}
JPosVariable::JPosVariable(const JPosVariable& from) : ::google::protobuf::Message() {
  JPosVariable* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){from._impl_.jpos_},
      decltype(_impl_.addr_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.addr_ = from._impl_.addr_;

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.JPosVariable)
}
inline void JPosVariable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.jpos_){arena},
      decltype(_impl_.addr_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
JPosVariable::~JPosVariable() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.JPosVariable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JPosVariable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jpos_.~RepeatedField();
}
void JPosVariable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void JPosVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.JPosVariable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_jpos()->Clear();
  _impl_.addr_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JPosVariable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> JPosVariable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JPosVariable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float jpos = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JPosVariable, _impl_.jpos_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JPosVariable, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JPosVariable, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(JPosVariable, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated float jpos = 2;
    {PROTOBUF_FIELD_OFFSET(JPosVariable, _impl_.jpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* JPosVariable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.JPosVariable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // repeated float jpos = 2;
  if (this->_internal_jpos_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_jpos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.JPosVariable)
  return target;
}

::size_t JPosVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.JPosVariable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float jpos = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_jpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JPosVariable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    JPosVariable::MergeImpl
};
const ::google::protobuf::Message::ClassData*JPosVariable::GetClassData() const { return &_class_data_; }


void JPosVariable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JPosVariable*>(&to_msg);
  auto& from = static_cast<const JPosVariable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.JPosVariable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_jpos()->MergeFrom(from._internal_jpos());
  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JPosVariable::CopyFrom(const JPosVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.JPosVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JPosVariable::IsInitialized() const {
  return true;
}

void JPosVariable::InternalSwap(JPosVariable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.jpos_.InternalSwap(&other->_impl_.jpos_);
        swap(_impl_.addr_, other->_impl_.addr_);
}

::google::protobuf::Metadata JPosVariable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[13]);
}
// ===================================================================

class TPosVariable::_Internal {
 public:
};

TPosVariable::TPosVariable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.TPosVariable)
}
TPosVariable::TPosVariable(const TPosVariable& from) : ::google::protobuf::Message() {
  TPosVariable* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){from._impl_.tpos_},
      decltype(_impl_.addr_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.addr_ = from._impl_.addr_;

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.TPosVariable)
}
inline void TPosVariable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tpos_){arena},
      decltype(_impl_.addr_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TPosVariable::~TPosVariable() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.TPosVariable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TPosVariable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tpos_.~RepeatedField();
}
void TPosVariable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TPosVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.TPosVariable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tpos()->Clear();
  _impl_.addr_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TPosVariable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TPosVariable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TPosVariable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float tpos = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TPosVariable, _impl_.tpos_)}},
    // int32 addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TPosVariable, _impl_.addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TPosVariable, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 addr = 1;
    {PROTOBUF_FIELD_OFFSET(TPosVariable, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated float tpos = 2;
    {PROTOBUF_FIELD_OFFSET(TPosVariable, _impl_.tpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TPosVariable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.TPosVariable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_addr(), target);
  }

  // repeated float tpos = 2;
  if (this->_internal_tpos_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_tpos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.TPosVariable)
  return target;
}

::size_t TPosVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.TPosVariable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float tpos = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // int32 addr = 1;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_addr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TPosVariable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TPosVariable::MergeImpl
};
const ::google::protobuf::Message::ClassData*TPosVariable::GetClassData() const { return &_class_data_; }


void TPosVariable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TPosVariable*>(&to_msg);
  auto& from = static_cast<const TPosVariable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.TPosVariable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tpos()->MergeFrom(from._internal_tpos());
  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TPosVariable::CopyFrom(const TPosVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.TPosVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TPosVariable::IsInitialized() const {
  return true;
}

void TPosVariable::InternalSwap(TPosVariable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tpos_.InternalSwap(&other->_impl_.tpos_);
        swap(_impl_.addr_, other->_impl_.addr_);
}

::google::protobuf::Metadata TPosVariable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[14]);
}
// ===================================================================

class Tool::_Internal {
 public:
};

Tool::Tool(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.Tool)
}
Tool::Tool(const Tool& from) : ::google::protobuf::Message() {
  Tool* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.do_list_){from._impl_.do_list_},
      decltype(_impl_.m_vars_){from._impl_.m_vars_},
      decltype(_impl_.name_){},
      decltype(_impl_.tool_type_){},
      decltype(_impl_.sleep_time_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.tool_type_, &from._impl_.tool_type_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sleep_time_) -
    reinterpret_cast<char*>(&_impl_.tool_type_)) + sizeof(_impl_.sleep_time_));

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.Tool)
}
inline void Tool::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.do_list_){arena},
      decltype(_impl_.m_vars_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.tool_type_){0},
      decltype(_impl_.sleep_time_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Tool::~Tool() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.Tool)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Tool::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.do_list_.~RepeatedPtrField();
  _impl_.m_vars_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}
void Tool::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Tool::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.Tool)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_do_list()->Clear();
  _internal_mutable_m_vars()->Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.tool_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sleep_time_) -
      reinterpret_cast<char*>(&_impl_.tool_type_)) + sizeof(_impl_.sleep_time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Tool::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 47, 2> Tool::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966732,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Tool_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Tool, _impl_.name_)}},
    // .IndyFramework.Protobuf.Shared.Tool.ToolType tool_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Tool, _impl_.tool_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Tool, _impl_.tool_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .IndyFramework.Protobuf.Shared.DigitalSignal do_list = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Tool, _impl_.do_list_)}},
    // repeated .IndyFramework.Protobuf.Shared.ModbusVariable m_vars = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(Tool, _impl_.m_vars_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Tool, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .IndyFramework.Protobuf.Shared.Tool.ToolType tool_type = 2;
    {PROTOBUF_FIELD_OFFSET(Tool, _impl_.tool_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .IndyFramework.Protobuf.Shared.DigitalSignal do_list = 5;
    {PROTOBUF_FIELD_OFFSET(Tool, _impl_.do_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IndyFramework.Protobuf.Shared.ModbusVariable m_vars = 6;
    {PROTOBUF_FIELD_OFFSET(Tool, _impl_.m_vars_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // float sleep_time = 10;
    {PROTOBUF_FIELD_OFFSET(Tool, _impl_.sleep_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IndyFramework::Protobuf::Shared::DigitalSignal>()},
    {::_pbi::TcParser::GetTable<::IndyFramework::Protobuf::Shared::ModbusVariable>()},
  }}, {{
    "\42\4\0\0\0\0\0\0"
    "IndyFramework.Protobuf.Shared.Tool"
    "name"
  }},
};

::uint8_t* Tool::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.Tool)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.Tool.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .IndyFramework.Protobuf.Shared.Tool.ToolType tool_type = 2;
  if (this->_internal_tool_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_tool_type(), target);
  }

  // repeated .IndyFramework.Protobuf.Shared.DigitalSignal do_list = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_do_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_do_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IndyFramework.Protobuf.Shared.ModbusVariable m_vars = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_m_vars_size()); i < n; i++) {
    const auto& repfield = this->_internal_m_vars().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // float sleep_time = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_sleep_time = this->_internal_sleep_time();
  ::uint32_t raw_sleep_time;
  memcpy(&raw_sleep_time, &tmp_sleep_time, sizeof(tmp_sleep_time));
  if (raw_sleep_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_sleep_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.Tool)
  return target;
}

::size_t Tool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.Tool)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IndyFramework.Protobuf.Shared.DigitalSignal do_list = 5;
  total_size += 1UL * this->_internal_do_list_size();
  for (const auto& msg : this->_internal_do_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IndyFramework.Protobuf.Shared.ModbusVariable m_vars = 6;
  total_size += 1UL * this->_internal_m_vars_size();
  for (const auto& msg : this->_internal_m_vars()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .IndyFramework.Protobuf.Shared.Tool.ToolType tool_type = 2;
  if (this->_internal_tool_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_tool_type());
  }

  // float sleep_time = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_sleep_time = this->_internal_sleep_time();
  ::uint32_t raw_sleep_time;
  memcpy(&raw_sleep_time, &tmp_sleep_time, sizeof(tmp_sleep_time));
  if (raw_sleep_time != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Tool::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Tool::MergeImpl
};
const ::google::protobuf::Message::ClassData*Tool::GetClassData() const { return &_class_data_; }


void Tool::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Tool*>(&to_msg);
  auto& from = static_cast<const Tool&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.Tool)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_do_list()->MergeFrom(from._internal_do_list());
  _this->_internal_mutable_m_vars()->MergeFrom(from._internal_m_vars());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_tool_type() != 0) {
    _this->_internal_set_tool_type(from._internal_tool_type());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_sleep_time = from._internal_sleep_time();
  ::uint32_t raw_sleep_time;
  memcpy(&raw_sleep_time, &tmp_sleep_time, sizeof(tmp_sleep_time));
  if (raw_sleep_time != 0) {
    _this->_internal_set_sleep_time(from._internal_sleep_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Tool::CopyFrom(const Tool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.Tool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Tool::IsInitialized() const {
  return true;
}

void Tool::InternalSwap(Tool* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.do_list_.InternalSwap(&other->_impl_.do_list_);
  _impl_.m_vars_.InternalSwap(&other->_impl_.m_vars_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tool, _impl_.sleep_time_)
      + sizeof(Tool::_impl_.sleep_time_)
      - PROTOBUF_FIELD_OFFSET(Tool, _impl_.tool_type_)>(
          reinterpret_cast<char*>(&_impl_.tool_type_),
          reinterpret_cast<char*>(&other->_impl_.tool_type_));
}

::google::protobuf::Metadata Tool::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[15]);
}
// ===================================================================

class PalletPoint::_Internal {
 public:
};

PalletPoint::PalletPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.PalletPoint)
}
PalletPoint::PalletPoint(const PalletPoint& from) : ::google::protobuf::Message() {
  PalletPoint* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tar_pos_){from._impl_.tar_pos_},
      decltype(_impl_.approach_pos_){from._impl_.approach_pos_},
      decltype(_impl_.retract_pos_){from._impl_.retract_pos_},
      decltype(_impl_.tar_jpos_){from._impl_.tar_jpos_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.PalletPoint)
}
inline void PalletPoint::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tar_pos_){arena},
      decltype(_impl_.approach_pos_){arena},
      decltype(_impl_.retract_pos_){arena},
      decltype(_impl_.tar_jpos_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
PalletPoint::~PalletPoint() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.PalletPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PalletPoint::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tar_pos_.~RepeatedField();
  _impl_.approach_pos_.~RepeatedField();
  _impl_.retract_pos_.~RepeatedField();
  _impl_.tar_jpos_.~RepeatedField();
}
void PalletPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PalletPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.PalletPoint)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tar_pos()->Clear();
  _internal_mutable_approach_pos()->Clear();
  _internal_mutable_retract_pos()->Clear();
  _internal_mutable_tar_jpos()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PalletPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PalletPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PalletPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float tar_jpos = 4;
    {::_pbi::TcParser::FastF32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.tar_jpos_)}},
    // repeated float tar_pos = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.tar_pos_)}},
    // repeated float approach_pos = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.approach_pos_)}},
    // repeated float retract_pos = 3;
    {::_pbi::TcParser::FastF32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.retract_pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float tar_pos = 1;
    {PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.tar_pos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float approach_pos = 2;
    {PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.approach_pos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float retract_pos = 3;
    {PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.retract_pos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float tar_jpos = 4;
    {PROTOBUF_FIELD_OFFSET(PalletPoint, _impl_.tar_jpos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PalletPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.PalletPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float tar_pos = 1;
  if (this->_internal_tar_pos_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_tar_pos(), target);
  }

  // repeated float approach_pos = 2;
  if (this->_internal_approach_pos_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_approach_pos(), target);
  }

  // repeated float retract_pos = 3;
  if (this->_internal_retract_pos_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_retract_pos(), target);
  }

  // repeated float tar_jpos = 4;
  if (this->_internal_tar_jpos_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_tar_jpos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.PalletPoint)
  return target;
}

::size_t PalletPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.PalletPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float tar_pos = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tar_pos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float approach_pos = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_approach_pos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float retract_pos = 3;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_retract_pos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float tar_jpos = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_tar_jpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PalletPoint::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PalletPoint::MergeImpl
};
const ::google::protobuf::Message::ClassData*PalletPoint::GetClassData() const { return &_class_data_; }


void PalletPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PalletPoint*>(&to_msg);
  auto& from = static_cast<const PalletPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.PalletPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tar_pos()->MergeFrom(from._internal_tar_pos());
  _this->_internal_mutable_approach_pos()->MergeFrom(from._internal_approach_pos());
  _this->_internal_mutable_retract_pos()->MergeFrom(from._internal_retract_pos());
  _this->_internal_mutable_tar_jpos()->MergeFrom(from._internal_tar_jpos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PalletPoint::CopyFrom(const PalletPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.PalletPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PalletPoint::IsInitialized() const {
  return true;
}

void PalletPoint::InternalSwap(PalletPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tar_pos_.InternalSwap(&other->_impl_.tar_pos_);
  _impl_.approach_pos_.InternalSwap(&other->_impl_.approach_pos_);
  _impl_.retract_pos_.InternalSwap(&other->_impl_.retract_pos_);
  _impl_.tar_jpos_.InternalSwap(&other->_impl_.tar_jpos_);
}

::google::protobuf::Metadata PalletPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[16]);
}
// ===================================================================

class VisionServer::_Internal {
 public:
};

VisionServer::VisionServer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.VisionServer)
}
VisionServer::VisionServer(const VisionServer& from) : ::google::protobuf::Message() {
  VisionServer* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.ip_){},
      decltype(_impl_.vision_server_type_){},
      decltype(_impl_.port_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    _this->_impl_.ip_.Set(from._internal_ip(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.vision_server_type_, &from._impl_.vision_server_type_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.port_) -
    reinterpret_cast<char*>(&_impl_.vision_server_type_)) + sizeof(_impl_.port_));

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.VisionServer)
}
inline void VisionServer::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.ip_){},
      decltype(_impl_.vision_server_type_){0},
      decltype(_impl_.port_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
VisionServer::~VisionServer() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.VisionServer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionServer::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.ip_.Destroy();
}
void VisionServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void VisionServer::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.VisionServer)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.vision_server_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.port_) -
      reinterpret_cast<char*>(&_impl_.vision_server_type_)) + sizeof(_impl_.port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionServer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 57, 2> VisionServer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VisionServer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 port = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionServer, _impl_.port_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.port_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.name_)}},
    // .IndyFramework.Protobuf.Shared.VisionServer.VisionServerType vision_server_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionServer, _impl_.vision_server_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.vision_server_type_)}},
    // string ip = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.ip_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .IndyFramework.Protobuf.Shared.VisionServer.VisionServerType vision_server_type = 2;
    {PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.vision_server_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string ip = 3;
    {PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 4;
    {PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\52\4\0\2\0\0\0\0"
    "IndyFramework.Protobuf.Shared.VisionServer"
    "name"
    "ip"
  }},
};

::uint8_t* VisionServer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.VisionServer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.VisionServer.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .IndyFramework.Protobuf.Shared.VisionServer.VisionServerType vision_server_type = 2;
  if (this->_internal_vision_server_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_vision_server_type(), target);
  }

  // string ip = 3;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.VisionServer.ip");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint32 port = 4;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.VisionServer)
  return target;
}

::size_t VisionServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.VisionServer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string ip = 3;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // .IndyFramework.Protobuf.Shared.VisionServer.VisionServerType vision_server_type = 2;
  if (this->_internal_vision_server_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_vision_server_type());
  }

  // uint32 port = 4;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisionServer::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    VisionServer::MergeImpl
};
const ::google::protobuf::Message::ClassData*VisionServer::GetClassData() const { return &_class_data_; }


void VisionServer::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisionServer*>(&to_msg);
  auto& from = static_cast<const VisionServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.VisionServer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_vision_server_type() != 0) {
    _this->_internal_set_vision_server_type(from._internal_vision_server_type());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionServer::CopyFrom(const VisionServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.VisionServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionServer::IsInitialized() const {
  return true;
}

void VisionServer::InternalSwap(VisionServer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, lhs_arena,
                                       &other->_impl_.ip_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.port_)
      + sizeof(VisionServer::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(VisionServer, _impl_.vision_server_type_)>(
          reinterpret_cast<char*>(&_impl_.vision_server_type_),
          reinterpret_cast<char*>(&other->_impl_.vision_server_type_));
}

::google::protobuf::Metadata VisionServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[17]);
}
// ===================================================================

class ModbusServer::_Internal {
 public:
};

ModbusServer::ModbusServer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndyFramework.Protobuf.Shared.ModbusServer)
}
ModbusServer::ModbusServer(const ModbusServer& from) : ::google::protobuf::Message() {
  ModbusServer* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.ip_){},
      decltype(_impl_.port_){},
      decltype(_impl_.unit_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    _this->_impl_.ip_.Set(from._internal_ip(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.port_, &from._impl_.port_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.unit_id_) -
    reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.unit_id_));

  // @@protoc_insertion_point(copy_constructor:IndyFramework.Protobuf.Shared.ModbusServer)
}
inline void ModbusServer::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.ip_){},
      decltype(_impl_.port_){0},
      decltype(_impl_.unit_id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ModbusServer::~ModbusServer() {
  // @@protoc_insertion_point(destructor:IndyFramework.Protobuf.Shared.ModbusServer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ModbusServer::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.ip_.Destroy();
}
void ModbusServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ModbusServer::Clear() {
// @@protoc_insertion_point(message_clear_start:IndyFramework.Protobuf.Shared.ModbusServer)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.unit_id_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.unit_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ModbusServer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 57, 2> ModbusServer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ModbusServer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 unit_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModbusServer, _impl_.unit_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.unit_id_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.name_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.ip_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModbusServer, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 unit_id = 4;
    {PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.unit_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\52\4\2\0\0\0\0\0"
    "IndyFramework.Protobuf.Shared.ModbusServer"
    "name"
    "ip"
  }},
};

::uint8_t* ModbusServer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndyFramework.Protobuf.Shared.ModbusServer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.ModbusServer.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndyFramework.Protobuf.Shared.ModbusServer.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_port(), target);
  }

  // int32 unit_id = 4;
  if (this->_internal_unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_unit_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndyFramework.Protobuf.Shared.ModbusServer)
  return target;
}

::size_t ModbusServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndyFramework.Protobuf.Shared.ModbusServer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  // int32 unit_id = 4;
  if (this->_internal_unit_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_unit_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ModbusServer::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ModbusServer::MergeImpl
};
const ::google::protobuf::Message::ClassData*ModbusServer::GetClassData() const { return &_class_data_; }


void ModbusServer::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ModbusServer*>(&to_msg);
  auto& from = static_cast<const ModbusServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndyFramework.Protobuf.Shared.ModbusServer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_unit_id() != 0) {
    _this->_internal_set_unit_id(from._internal_unit_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModbusServer::CopyFrom(const ModbusServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndyFramework.Protobuf.Shared.ModbusServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ModbusServer::IsInitialized() const {
  return true;
}

void ModbusServer::InternalSwap(ModbusServer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, lhs_arena,
                                       &other->_impl_.ip_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.unit_id_)
      + sizeof(ModbusServer::_impl_.unit_id_)
      - PROTOBUF_FIELD_OFFSET(ModbusServer, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata ModbusServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_shared_5fmsgs_2eproto_getter, &descriptor_table_shared_5fmsgs_2eproto_once,
      file_level_metadata_shared_5fmsgs_2eproto[18]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Shared
}  // namespace Protobuf
}  // namespace IndyFramework
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
