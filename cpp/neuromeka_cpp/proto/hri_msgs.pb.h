// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hri_msgs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hri_5fmsgs_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_hri_5fmsgs_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "shared_msgs.pb.h"
#include "common_msgs.pb.h"
#include "device_msgs.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_hri_5fmsgs_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_hri_5fmsgs_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_hri_5fmsgs_2eproto;
namespace IndyFramework {
namespace Protobuf {
namespace HRI {
class AOSignals;
struct AOSignalsDefaultTypeInternal;
extern AOSignalsDefaultTypeInternal _AOSignals_default_instance_;
class AddPhotoneoCalibPointReq;
struct AddPhotoneoCalibPointReqDefaultTypeInternal;
extern AddPhotoneoCalibPointReqDefaultTypeInternal _AddPhotoneoCalibPointReq_default_instance_;
class AnalogSignal;
struct AnalogSignalDefaultTypeInternal;
extern AnalogSignalDefaultTypeInternal _AnalogSignal_default_instance_;
class AxisJReq;
struct AxisJReqDefaultTypeInternal;
extern AxisJReqDefaultTypeInternal _AxisJReq_default_instance_;
class BrakeControlStyle;
struct BrakeControlStyleDefaultTypeInternal;
extern BrakeControlStyleDefaultTypeInternal _BrakeControlStyle_default_instance_;
class CalculateCurrentPoseRelReq;
struct CalculateCurrentPoseRelReqDefaultTypeInternal;
extern CalculateCurrentPoseRelReqDefaultTypeInternal _CalculateCurrentPoseRelReq_default_instance_;
class CalculateCurrentPoseRelRes;
struct CalculateCurrentPoseRelResDefaultTypeInternal;
extern CalculateCurrentPoseRelResDefaultTypeInternal _CalculateCurrentPoseRelRes_default_instance_;
class CalculateRelativePoseReq;
struct CalculateRelativePoseReqDefaultTypeInternal;
extern CalculateRelativePoseReqDefaultTypeInternal _CalculateRelativePoseReq_default_instance_;
class CalculateRelativePoseRes;
struct CalculateRelativePoseResDefaultTypeInternal;
extern CalculateRelativePoseResDefaultTypeInternal _CalculateRelativePoseRes_default_instance_;
class CheckAproachRetractValidReq;
struct CheckAproachRetractValidReqDefaultTypeInternal;
extern CheckAproachRetractValidReqDefaultTypeInternal _CheckAproachRetractValidReq_default_instance_;
class CheckAproachRetractValidRes;
struct CheckAproachRetractValidResDefaultTypeInternal;
extern CheckAproachRetractValidResDefaultTypeInternal _CheckAproachRetractValidRes_default_instance_;
class CheckAutoModeRes;
struct CheckAutoModeResDefaultTypeInternal;
extern CheckAutoModeResDefaultTypeInternal _CheckAutoModeRes_default_instance_;
class CheckModbusConnectionReq;
struct CheckModbusConnectionReqDefaultTypeInternal;
extern CheckModbusConnectionReqDefaultTypeInternal _CheckModbusConnectionReq_default_instance_;
class CheckModbusConnectionRes;
struct CheckModbusConnectionResDefaultTypeInternal;
extern CheckModbusConnectionResDefaultTypeInternal _CheckModbusConnectionRes_default_instance_;
class CheckReducedModeRes;
struct CheckReducedModeResDefaultTypeInternal;
extern CheckReducedModeResDefaultTypeInternal _CheckReducedModeRes_default_instance_;
class CollisionPolicy;
struct CollisionPolicyDefaultTypeInternal;
extern CollisionPolicyDefaultTypeInternal _CollisionPolicy_default_instance_;
class CollisionSensLevel;
struct CollisionSensLevelDefaultTypeInternal;
extern CollisionSensLevelDefaultTypeInternal _CollisionSensLevel_default_instance_;
class CollisionThresholds;
struct CollisionThresholdsDefaultTypeInternal;
extern CollisionThresholdsDefaultTypeInternal _CollisionThresholds_default_instance_;
class ControlData;
struct ControlDataDefaultTypeInternal;
extern ControlDataDefaultTypeInternal _ControlData_default_instance_;
class ContyInitReq;
struct ContyInitReqDefaultTypeInternal;
extern ContyInitReqDefaultTypeInternal _ContyInitReq_default_instance_;
class ContyInitRes;
struct ContyInitResDefaultTypeInternal;
extern ContyInitResDefaultTypeInternal _ContyInitRes_default_instance_;
class Conveyor;
struct ConveyorDefaultTypeInternal;
extern ConveyorDefaultTypeInternal _Conveyor_default_instance_;
class ConveyorState;
struct ConveyorStateDefaultTypeInternal;
extern ConveyorStateDefaultTypeInternal _ConveyorState_default_instance_;
class DIConfig;
struct DIConfigDefaultTypeInternal;
extern DIConfigDefaultTypeInternal _DIConfig_default_instance_;
class DIConfigList;
struct DIConfigListDefaultTypeInternal;
extern DIConfigListDefaultTypeInternal _DIConfigList_default_instance_;
class DOConfig;
struct DOConfigDefaultTypeInternal;
extern DOConfigDefaultTypeInternal _DOConfig_default_instance_;
class DOConfigList;
struct DOConfigListDefaultTypeInternal;
extern DOConfigListDefaultTypeInternal _DOConfigList_default_instance_;
class DOSignals;
struct DOSignalsDefaultTypeInternal;
extern DOSignalsDefaultTypeInternal _DOSignals_default_instance_;
class DateTime;
struct DateTimeDefaultTypeInternal;
extern DateTimeDefaultTypeInternal _DateTime_default_instance_;
class DigitalSignal;
struct DigitalSignalDefaultTypeInternal;
extern DigitalSignalDefaultTypeInternal _DigitalSignal_default_instance_;
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Encoder;
struct EncoderDefaultTypeInternal;
extern EncoderDefaultTypeInternal _Encoder_default_instance_;
class EndtoolSignal;
struct EndtoolSignalDefaultTypeInternal;
extern EndtoolSignalDefaultTypeInternal _EndtoolSignal_default_instance_;
class EndtoolSignalList;
struct EndtoolSignalListDefaultTypeInternal;
extern EndtoolSignalListDefaultTypeInternal _EndtoolSignalList_default_instance_;
class FTSensorData;
struct FTSensorDataDefaultTypeInternal;
extern FTSensorDataDefaultTypeInternal _FTSensorData_default_instance_;
class FTSensorDevice;
struct FTSensorDeviceDefaultTypeInternal;
extern FTSensorDeviceDefaultTypeInternal _FTSensorDevice_default_instance_;
class FTSensorDeviceRes;
struct FTSensorDeviceResDefaultTypeInternal;
extern FTSensorDeviceResDefaultTypeInternal _FTSensorDeviceRes_default_instance_;
class Float;
struct FloatDefaultTypeInternal;
extern FloatDefaultTypeInternal _Float_default_instance_;
class GetAutoModeConfigRes;
struct GetAutoModeConfigResDefaultTypeInternal;
extern GetAutoModeConfigResDefaultTypeInternal _GetAutoModeConfigRes_default_instance_;
class GetAutoServoOffReq;
struct GetAutoServoOffReqDefaultTypeInternal;
extern GetAutoServoOffReqDefaultTypeInternal _GetAutoServoOffReq_default_instance_;
class GetAutoServoOffRes;
struct GetAutoServoOffResDefaultTypeInternal;
extern GetAutoServoOffResDefaultTypeInternal _GetAutoServoOffRes_default_instance_;
class GetCollSensLevelRes;
struct GetCollSensLevelResDefaultTypeInternal;
extern GetCollSensLevelResDefaultTypeInternal _GetCollSensLevelRes_default_instance_;
class GetConveyorListReq;
struct GetConveyorListReqDefaultTypeInternal;
extern GetConveyorListReqDefaultTypeInternal _GetConveyorListReq_default_instance_;
class GetConveyorListRes;
struct GetConveyorListResDefaultTypeInternal;
extern GetConveyorListResDefaultTypeInternal _GetConveyorListRes_default_instance_;
class GetCustomPosListReq;
struct GetCustomPosListReqDefaultTypeInternal;
extern GetCustomPosListReqDefaultTypeInternal _GetCustomPosListReq_default_instance_;
class GetCustomPosListRes;
struct GetCustomPosListResDefaultTypeInternal;
extern GetCustomPosListResDefaultTypeInternal _GetCustomPosListRes_default_instance_;
class GetExtAxisControlGainReq;
struct GetExtAxisControlGainReqDefaultTypeInternal;
extern GetExtAxisControlGainReqDefaultTypeInternal _GetExtAxisControlGainReq_default_instance_;
class GetExtAxisControlGainRes;
struct GetExtAxisControlGainResDefaultTypeInternal;
extern GetExtAxisControlGainResDefaultTypeInternal _GetExtAxisControlGainRes_default_instance_;
class GetFileReq;
struct GetFileReqDefaultTypeInternal;
extern GetFileReqDefaultTypeInternal _GetFileReq_default_instance_;
class GetFileRes;
struct GetFileResDefaultTypeInternal;
extern GetFileResDefaultTypeInternal _GetFileRes_default_instance_;
class GetForceControlGainReq;
struct GetForceControlGainReqDefaultTypeInternal;
extern GetForceControlGainReqDefaultTypeInternal _GetForceControlGainReq_default_instance_;
class GetForceControlGainRes;
struct GetForceControlGainResDefaultTypeInternal;
extern GetForceControlGainResDefaultTypeInternal _GetForceControlGainRes_default_instance_;
class GetFricCompReq;
struct GetFricCompReqDefaultTypeInternal;
extern GetFricCompReqDefaultTypeInternal _GetFricCompReq_default_instance_;
class GetFricCompRes;
struct GetFricCompResDefaultTypeInternal;
extern GetFricCompResDefaultTypeInternal _GetFricCompRes_default_instance_;
class GetGcodeMotionListReq;
struct GetGcodeMotionListReqDefaultTypeInternal;
extern GetGcodeMotionListReqDefaultTypeInternal _GetGcodeMotionListReq_default_instance_;
class GetGcodeMotionListRes;
struct GetGcodeMotionListResDefaultTypeInternal;
extern GetGcodeMotionListResDefaultTypeInternal _GetGcodeMotionListRes_default_instance_;
class GetHomePosReq;
struct GetHomePosReqDefaultTypeInternal;
extern GetHomePosReqDefaultTypeInternal _GetHomePosReq_default_instance_;
class GetHomePosRes;
struct GetHomePosResDefaultTypeInternal;
extern GetHomePosResDefaultTypeInternal _GetHomePosRes_default_instance_;
class GetImpedanceControlGainReq;
struct GetImpedanceControlGainReqDefaultTypeInternal;
extern GetImpedanceControlGainReqDefaultTypeInternal _GetImpedanceControlGainReq_default_instance_;
class GetImpedanceControlGainRes;
struct GetImpedanceControlGainResDefaultTypeInternal;
extern GetImpedanceControlGainResDefaultTypeInternal _GetImpedanceControlGainRes_default_instance_;
class GetIndexProgramListReq;
struct GetIndexProgramListReqDefaultTypeInternal;
extern GetIndexProgramListReqDefaultTypeInternal _GetIndexProgramListReq_default_instance_;
class GetIndexProgramListRes;
struct GetIndexProgramListResDefaultTypeInternal;
extern GetIndexProgramListResDefaultTypeInternal _GetIndexProgramListRes_default_instance_;
class GetJointControlGainReq;
struct GetJointControlGainReqDefaultTypeInternal;
extern GetJointControlGainReqDefaultTypeInternal _GetJointControlGainReq_default_instance_;
class GetJointControlGainRes;
struct GetJointControlGainResDefaultTypeInternal;
extern GetJointControlGainResDefaultTypeInternal _GetJointControlGainRes_default_instance_;
class GetLoadFactorsRes;
struct GetLoadFactorsResDefaultTypeInternal;
extern GetLoadFactorsResDefaultTypeInternal _GetLoadFactorsRes_default_instance_;
class GetLogContentListReq;
struct GetLogContentListReqDefaultTypeInternal;
extern GetLogContentListReqDefaultTypeInternal _GetLogContentListReq_default_instance_;
class GetLogContentListRes;
struct GetLogContentListResDefaultTypeInternal;
extern GetLogContentListResDefaultTypeInternal _GetLogContentListRes_default_instance_;
class GetLogContentReq;
struct GetLogContentReqDefaultTypeInternal;
extern GetLogContentReqDefaultTypeInternal _GetLogContentReq_default_instance_;
class GetLogContentRes;
struct GetLogContentResDefaultTypeInternal;
extern GetLogContentResDefaultTypeInternal _GetLogContentRes_default_instance_;
class GetLogListReq;
struct GetLogListReqDefaultTypeInternal;
extern GetLogListReqDefaultTypeInternal _GetLogListReq_default_instance_;
class GetLogListRes;
struct GetLogListResDefaultTypeInternal;
extern GetLogListResDefaultTypeInternal _GetLogListRes_default_instance_;
class GetLogReq;
struct GetLogReqDefaultTypeInternal;
extern GetLogReqDefaultTypeInternal _GetLogReq_default_instance_;
class GetLogRes;
struct GetLogResDefaultTypeInternal;
extern GetLogResDefaultTypeInternal _GetLogRes_default_instance_;
class GetModbusServerListReq;
struct GetModbusServerListReqDefaultTypeInternal;
extern GetModbusServerListReqDefaultTypeInternal _GetModbusServerListReq_default_instance_;
class GetModbusServerListRes;
struct GetModbusServerListResDefaultTypeInternal;
extern GetModbusServerListResDefaultTypeInternal _GetModbusServerListRes_default_instance_;
class GetMonitoringVariableListReq;
struct GetMonitoringVariableListReqDefaultTypeInternal;
extern GetMonitoringVariableListReqDefaultTypeInternal _GetMonitoringVariableListReq_default_instance_;
class GetMonitoringVariableListRes;
struct GetMonitoringVariableListResDefaultTypeInternal;
extern GetMonitoringVariableListResDefaultTypeInternal _GetMonitoringVariableListRes_default_instance_;
class GetMonitoringVariableListRes_MonitorVariable;
struct GetMonitoringVariableListRes_MonitorVariableDefaultTypeInternal;
extern GetMonitoringVariableListRes_MonitorVariableDefaultTypeInternal _GetMonitoringVariableListRes_MonitorVariable_default_instance_;
class GetMountPosReq;
struct GetMountPosReqDefaultTypeInternal;
extern GetMountPosReqDefaultTypeInternal _GetMountPosReq_default_instance_;
class GetMountPosRes;
struct GetMountPosResDefaultTypeInternal;
extern GetMountPosResDefaultTypeInternal _GetMountPosRes_default_instance_;
class GetOnStartProgramConfigReq;
struct GetOnStartProgramConfigReqDefaultTypeInternal;
extern GetOnStartProgramConfigReqDefaultTypeInternal _GetOnStartProgramConfigReq_default_instance_;
class GetOnStartProgramConfigRes;
struct GetOnStartProgramConfigResDefaultTypeInternal;
extern GetOnStartProgramConfigResDefaultTypeInternal _GetOnStartProgramConfigRes_default_instance_;
class GetPackagingPosReq;
struct GetPackagingPosReqDefaultTypeInternal;
extern GetPackagingPosReqDefaultTypeInternal _GetPackagingPosReq_default_instance_;
class GetPackagingPosRes;
struct GetPackagingPosResDefaultTypeInternal;
extern GetPackagingPosResDefaultTypeInternal _GetPackagingPosRes_default_instance_;
class GetPalletMakerListReq;
struct GetPalletMakerListReqDefaultTypeInternal;
extern GetPalletMakerListReqDefaultTypeInternal _GetPalletMakerListReq_default_instance_;
class GetPalletMakerListRes;
struct GetPalletMakerListResDefaultTypeInternal;
extern GetPalletMakerListResDefaultTypeInternal _GetPalletMakerListRes_default_instance_;
class GetPalletPointListReq;
struct GetPalletPointListReqDefaultTypeInternal;
extern GetPalletPointListReqDefaultTypeInternal _GetPalletPointListReq_default_instance_;
class GetPalletPointListRes;
struct GetPalletPointListResDefaultTypeInternal;
extern GetPalletPointListResDefaultTypeInternal _GetPalletPointListRes_default_instance_;
class GetProgramListReq;
struct GetProgramListReqDefaultTypeInternal;
extern GetProgramListReqDefaultTypeInternal _GetProgramListReq_default_instance_;
class GetProgramListRes;
struct GetProgramListResDefaultTypeInternal;
extern GetProgramListResDefaultTypeInternal _GetProgramListRes_default_instance_;
class GetReducedRatioRes;
struct GetReducedRatioResDefaultTypeInternal;
extern GetReducedRatioResDefaultTypeInternal _GetReducedRatioRes_default_instance_;
class GetReducedSpeedRes;
struct GetReducedSpeedResDefaultTypeInternal;
extern GetReducedSpeedResDefaultTypeInternal _GetReducedSpeedRes_default_instance_;
class GetRefFrameListReq;
struct GetRefFrameListReqDefaultTypeInternal;
extern GetRefFrameListReqDefaultTypeInternal _GetRefFrameListReq_default_instance_;
class GetRefFrameListRes;
struct GetRefFrameListResDefaultTypeInternal;
extern GetRefFrameListResDefaultTypeInternal _GetRefFrameListRes_default_instance_;
class GetSafetyConfigHashReq;
struct GetSafetyConfigHashReqDefaultTypeInternal;
extern GetSafetyConfigHashReqDefaultTypeInternal _GetSafetyConfigHashReq_default_instance_;
class GetSafetyConfigHashRes;
struct GetSafetyConfigHashResDefaultTypeInternal;
extern GetSafetyConfigHashResDefaultTypeInternal _GetSafetyConfigHashRes_default_instance_;
class GetSafetyLimitConfigReq;
struct GetSafetyLimitConfigReqDefaultTypeInternal;
extern GetSafetyLimitConfigReqDefaultTypeInternal _GetSafetyLimitConfigReq_default_instance_;
class GetSafetyLimitConfigRes;
struct GetSafetyLimitConfigResDefaultTypeInternal;
extern GetSafetyLimitConfigResDefaultTypeInternal _GetSafetyLimitConfigRes_default_instance_;
class GetSafetyStopConfigReq;
struct GetSafetyStopConfigReqDefaultTypeInternal;
extern GetSafetyStopConfigReqDefaultTypeInternal _GetSafetyStopConfigReq_default_instance_;
class GetSafetyStopConfigRes;
struct GetSafetyStopConfigResDefaultTypeInternal;
extern GetSafetyStopConfigResDefaultTypeInternal _GetSafetyStopConfigRes_default_instance_;
class GetSensorlessComplianceGainReq;
struct GetSensorlessComplianceGainReqDefaultTypeInternal;
extern GetSensorlessComplianceGainReqDefaultTypeInternal _GetSensorlessComplianceGainReq_default_instance_;
class GetSensorlessComplianceGainRes;
struct GetSensorlessComplianceGainResDefaultTypeInternal;
extern GetSensorlessComplianceGainResDefaultTypeInternal _GetSensorlessComplianceGainRes_default_instance_;
class GetTaskControlGainReq;
struct GetTaskControlGainReqDefaultTypeInternal;
extern GetTaskControlGainReqDefaultTypeInternal _GetTaskControlGainReq_default_instance_;
class GetTaskControlGainRes;
struct GetTaskControlGainResDefaultTypeInternal;
extern GetTaskControlGainResDefaultTypeInternal _GetTaskControlGainRes_default_instance_;
class GetToolFrameListReq;
struct GetToolFrameListReqDefaultTypeInternal;
extern GetToolFrameListReqDefaultTypeInternal _GetToolFrameListReq_default_instance_;
class GetToolFrameListRes;
struct GetToolFrameListResDefaultTypeInternal;
extern GetToolFrameListResDefaultTypeInternal _GetToolFrameListRes_default_instance_;
class GetToolPropertyReq;
struct GetToolPropertyReqDefaultTypeInternal;
extern GetToolPropertyReqDefaultTypeInternal _GetToolPropertyReq_default_instance_;
class GetToolPropertyRes;
struct GetToolPropertyResDefaultTypeInternal;
extern GetToolPropertyResDefaultTypeInternal _GetToolPropertyRes_default_instance_;
class GetVariableListReq;
struct GetVariableListReqDefaultTypeInternal;
extern GetVariableListReqDefaultTypeInternal _GetVariableListReq_default_instance_;
class GetVariableListRes;
struct GetVariableListResDefaultTypeInternal;
extern GetVariableListResDefaultTypeInternal _GetVariableListRes_default_instance_;
class GetVariableListRes_Variable;
struct GetVariableListRes_VariableDefaultTypeInternal;
extern GetVariableListRes_VariableDefaultTypeInternal _GetVariableListRes_Variable_default_instance_;
class GetVisionObjectListReq;
struct GetVisionObjectListReqDefaultTypeInternal;
extern GetVisionObjectListReqDefaultTypeInternal _GetVisionObjectListReq_default_instance_;
class GetVisionObjectListRes;
struct GetVisionObjectListResDefaultTypeInternal;
extern GetVisionObjectListResDefaultTypeInternal _GetVisionObjectListRes_default_instance_;
class GetVisionServerListReq;
struct GetVisionServerListReqDefaultTypeInternal;
extern GetVisionServerListReqDefaultTypeInternal _GetVisionServerListReq_default_instance_;
class GetVisionServerListRes;
struct GetVisionServerListResDefaultTypeInternal;
extern GetVisionServerListResDefaultTypeInternal _GetVisionServerListRes_default_instance_;
class GripperCommand;
struct GripperCommandDefaultTypeInternal;
extern GripperCommandDefaultTypeInternal _GripperCommand_default_instance_;
class GripperData;
struct GripperDataDefaultTypeInternal;
extern GripperDataDefaultTypeInternal _GripperData_default_instance_;
class HoldToMoveConveyorReq;
struct HoldToMoveConveyorReqDefaultTypeInternal;
extern HoldToMoveConveyorReqDefaultTypeInternal _HoldToMoveConveyorReq_default_instance_;
class InitCollSensParamReq;
struct InitCollSensParamReqDefaultTypeInternal;
extern InitCollSensParamReqDefaultTypeInternal _InitCollSensParamReq_default_instance_;
class InitCollSensParamRes;
struct InitCollSensParamResDefaultTypeInternal;
extern InitCollSensParamResDefaultTypeInternal _InitCollSensParamRes_default_instance_;
class IntMode;
struct IntModeDefaultTypeInternal;
extern IntModeDefaultTypeInternal _IntMode_default_instance_;
class InverseKinematicsReq;
struct InverseKinematicsReqDefaultTypeInternal;
extern InverseKinematicsReqDefaultTypeInternal _InverseKinematicsReq_default_instance_;
class InverseKinematicsRes;
struct InverseKinematicsResDefaultTypeInternal;
extern InverseKinematicsResDefaultTypeInternal _InverseKinematicsRes_default_instance_;
class IsTouchedReq;
struct IsTouchedReqDefaultTypeInternal;
extern IsTouchedReqDefaultTypeInternal _IsTouchedReq_default_instance_;
class IsTouchedRes;
struct IsTouchedResDefaultTypeInternal;
extern IsTouchedResDefaultTypeInternal _IsTouchedRes_default_instance_;
class JogAxisReq;
struct JogAxisReqDefaultTypeInternal;
extern JogAxisReqDefaultTypeInternal _JogAxisReq_default_instance_;
class JogAxisRes;
struct JogAxisResDefaultTypeInternal;
extern JogAxisResDefaultTypeInternal _JogAxisRes_default_instance_;
class JogJTar;
struct JogJTarDefaultTypeInternal;
extern JogJTarDefaultTypeInternal _JogJTar_default_instance_;
class JogJointReq;
struct JogJointReqDefaultTypeInternal;
extern JogJointReqDefaultTypeInternal _JogJointReq_default_instance_;
class JogJointRes;
struct JogJointResDefaultTypeInternal;
extern JogJointResDefaultTypeInternal _JogJointRes_default_instance_;
class JogTaskReq;
struct JogTaskReqDefaultTypeInternal;
extern JogTaskReqDefaultTypeInternal _JogTaskReq_default_instance_;
class JogTaskRes;
struct JogTaskResDefaultTypeInternal;
extern JogTaskResDefaultTypeInternal _JogTaskRes_default_instance_;
class KeyDataReq;
struct KeyDataReqDefaultTypeInternal;
extern KeyDataReqDefaultTypeInternal _KeyDataReq_default_instance_;
class KeyDataRes;
struct KeyDataResDefaultTypeInternal;
extern KeyDataResDefaultTypeInternal _KeyDataRes_default_instance_;
class KeyInitReq;
struct KeyInitReqDefaultTypeInternal;
extern KeyInitReqDefaultTypeInternal _KeyInitReq_default_instance_;
class KeyInitRes;
struct KeyInitResDefaultTypeInternal;
extern KeyInitResDefaultTypeInternal _KeyInitRes_default_instance_;
class KinematicsParams;
struct KinematicsParamsDefaultTypeInternal;
extern KinematicsParamsDefaultTypeInternal _KinematicsParams_default_instance_;
class KinematicsParams_MDH;
struct KinematicsParams_MDHDefaultTypeInternal;
extern KinematicsParams_MDHDefaultTypeInternal _KinematicsParams_MDH_default_instance_;
class LinearData;
struct LinearDataDefaultTypeInternal;
extern LinearDataDefaultTypeInternal _LinearData_default_instance_;
class ModbusCommand;
struct ModbusCommandDefaultTypeInternal;
extern ModbusCommandDefaultTypeInternal _ModbusCommand_default_instance_;
class ModbusSignal;
struct ModbusSignalDefaultTypeInternal;
extern ModbusSignalDefaultTypeInternal _ModbusSignal_default_instance_;
class MoveJReq;
struct MoveJReqDefaultTypeInternal;
extern MoveJReqDefaultTypeInternal _MoveJReq_default_instance_;
class MoveLReq;
struct MoveLReqDefaultTypeInternal;
extern MoveLReqDefaultTypeInternal _MoveLReq_default_instance_;
class MoveTeleJReq;
struct MoveTeleJReqDefaultTypeInternal;
extern MoveTeleJReqDefaultTypeInternal _MoveTeleJReq_default_instance_;
class MoveTeleLReq;
struct MoveTeleLReqDefaultTypeInternal;
extern MoveTeleLReqDefaultTypeInternal _MoveTeleLReq_default_instance_;
class Name;
struct NameDefaultTypeInternal;
extern NameDefaultTypeInternal _Name_default_instance_;
class PalletMaker;
struct PalletMakerDefaultTypeInternal;
extern PalletMakerDefaultTypeInternal _PalletMaker_default_instance_;
class PauseProgramReq;
struct PauseProgramReqDefaultTypeInternal;
extern PauseProgramReqDefaultTypeInternal _PauseProgramReq_default_instance_;
class PauseProgramRes;
struct PauseProgramResDefaultTypeInternal;
extern PauseProgramResDefaultTypeInternal _PauseProgramRes_default_instance_;
class PlayIndexProgramReq;
struct PlayIndexProgramReqDefaultTypeInternal;
extern PlayIndexProgramReqDefaultTypeInternal _PlayIndexProgramReq_default_instance_;
class PlayIndexProgramRes;
struct PlayIndexProgramResDefaultTypeInternal;
extern PlayIndexProgramResDefaultTypeInternal _PlayIndexProgramRes_default_instance_;
class PlayProgramLineReq;
struct PlayProgramLineReqDefaultTypeInternal;
extern PlayProgramLineReqDefaultTypeInternal _PlayProgramLineReq_default_instance_;
class PlayProgramLineRes;
struct PlayProgramLineResDefaultTypeInternal;
extern PlayProgramLineResDefaultTypeInternal _PlayProgramLineRes_default_instance_;
class PlayProgramReq;
struct PlayProgramReqDefaultTypeInternal;
extern PlayProgramReqDefaultTypeInternal _PlayProgramReq_default_instance_;
class PlayProgramRes;
struct PlayProgramResDefaultTypeInternal;
extern PlayProgramResDefaultTypeInternal _PlayProgramRes_default_instance_;
class PlayTuningReq;
struct PlayTuningReqDefaultTypeInternal;
extern PlayTuningReqDefaultTypeInternal _PlayTuningReq_default_instance_;
class PosePair;
struct PosePairDefaultTypeInternal;
extern PosePairDefaultTypeInternal _PosePair_default_instance_;
class PowerOffReq;
struct PowerOffReqDefaultTypeInternal;
extern PowerOffReqDefaultTypeInternal _PowerOffReq_default_instance_;
class PowerOffRes;
struct PowerOffResDefaultTypeInternal;
extern PowerOffResDefaultTypeInternal _PowerOffRes_default_instance_;
class ProgramData;
struct ProgramDataDefaultTypeInternal;
extern ProgramDataDefaultTypeInternal _ProgramData_default_instance_;
class RebootReq;
struct RebootReqDefaultTypeInternal;
extern RebootReqDefaultTypeInternal _RebootReq_default_instance_;
class RebootRes;
struct RebootResDefaultTypeInternal;
extern RebootResDefaultTypeInternal _RebootRes_default_instance_;
class RecoverReq;
struct RecoverReqDefaultTypeInternal;
extern RecoverReqDefaultTypeInternal _RecoverReq_default_instance_;
class RecoverRes;
struct RecoverResDefaultTypeInternal;
extern RecoverResDefaultTypeInternal _RecoverRes_default_instance_;
class RemoveFileReq;
struct RemoveFileReqDefaultTypeInternal;
extern RemoveFileReqDefaultTypeInternal _RemoveFileReq_default_instance_;
class RemoveFileRes;
struct RemoveFileResDefaultTypeInternal;
extern RemoveFileResDefaultTypeInternal _RemoveFileRes_default_instance_;
class RenameFileReq;
struct RenameFileReqDefaultTypeInternal;
extern RenameFileReqDefaultTypeInternal _RenameFileReq_default_instance_;
class RenameFileRes;
struct RenameFileResDefaultTypeInternal;
extern RenameFileResDefaultTypeInternal _RenameFileRes_default_instance_;
class Response;
struct ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class ResumeProgramReq;
struct ResumeProgramReqDefaultTypeInternal;
extern ResumeProgramReqDefaultTypeInternal _ResumeProgramReq_default_instance_;
class ResumeProgramRes;
struct ResumeProgramResDefaultTypeInternal;
extern ResumeProgramResDefaultTypeInternal _ResumeProgramRes_default_instance_;
class RobotData;
struct RobotDataDefaultTypeInternal;
extern RobotDataDefaultTypeInternal _RobotData_default_instance_;
class SFDAccount;
struct SFDAccountDefaultTypeInternal;
extern SFDAccountDefaultTypeInternal _SFDAccount_default_instance_;
class SFDCriData;
struct SFDCriDataDefaultTypeInternal;
extern SFDCriDataDefaultTypeInternal _SFDCriData_default_instance_;
class SFDCriTarget;
struct SFDCriTargetDefaultTypeInternal;
extern SFDCriTargetDefaultTypeInternal _SFDCriTarget_default_instance_;
class SFDProjectList;
struct SFDProjectListDefaultTypeInternal;
extern SFDProjectListDefaultTypeInternal _SFDProjectList_default_instance_;
class SafetyFunctionState;
struct SafetyFunctionStateDefaultTypeInternal;
extern SafetyFunctionStateDefaultTypeInternal _SafetyFunctionState_default_instance_;
class SanderCommand;
struct SanderCommandDefaultTypeInternal;
extern SanderCommandDefaultTypeInternal _SanderCommand_default_instance_;
class SandingStopConditionState;
struct SandingStopConditionStateDefaultTypeInternal;
extern SandingStopConditionStateDefaultTypeInternal _SandingStopConditionState_default_instance_;
class Servo;
struct ServoDefaultTypeInternal;
extern ServoDefaultTypeInternal _Servo_default_instance_;
class SetArcReq;
struct SetArcReqDefaultTypeInternal;
extern SetArcReqDefaultTypeInternal _SetArcReq_default_instance_;
class SetArcRes;
struct SetArcResDefaultTypeInternal;
extern SetArcResDefaultTypeInternal _SetArcRes_default_instance_;
class SetAutoModeReq;
struct SetAutoModeReqDefaultTypeInternal;
extern SetAutoModeReqDefaultTypeInternal _SetAutoModeReq_default_instance_;
class SetAutoModeRes;
struct SetAutoModeResDefaultTypeInternal;
extern SetAutoModeResDefaultTypeInternal _SetAutoModeRes_default_instance_;
class SetAutoServoOffReq;
struct SetAutoServoOffReqDefaultTypeInternal;
extern SetAutoServoOffReqDefaultTypeInternal _SetAutoServoOffReq_default_instance_;
class SetAutoServoOffRes;
struct SetAutoServoOffResDefaultTypeInternal;
extern SetAutoServoOffResDefaultTypeInternal _SetAutoServoOffRes_default_instance_;
class SetBrakeReq;
struct SetBrakeReqDefaultTypeInternal;
extern SetBrakeReqDefaultTypeInternal _SetBrakeReq_default_instance_;
class SetBrakeRes;
struct SetBrakeResDefaultTypeInternal;
extern SetBrakeResDefaultTypeInternal _SetBrakeRes_default_instance_;
class SetCollSensLevelReq;
struct SetCollSensLevelReqDefaultTypeInternal;
extern SetCollSensLevelReqDefaultTypeInternal _SetCollSensLevelReq_default_instance_;
class SetConveyorListReq;
struct SetConveyorListReqDefaultTypeInternal;
extern SetConveyorListReqDefaultTypeInternal _SetConveyorListReq_default_instance_;
class SetConveyorListRes;
struct SetConveyorListResDefaultTypeInternal;
extern SetConveyorListResDefaultTypeInternal _SetConveyorListRes_default_instance_;
class SetCustomPosListReq;
struct SetCustomPosListReqDefaultTypeInternal;
extern SetCustomPosListReqDefaultTypeInternal _SetCustomPosListReq_default_instance_;
class SetCustomPosListRes;
struct SetCustomPosListResDefaultTypeInternal;
extern SetCustomPosListResDefaultTypeInternal _SetCustomPosListRes_default_instance_;
class SetDirectTeachingModeReq;
struct SetDirectTeachingModeReqDefaultTypeInternal;
extern SetDirectTeachingModeReqDefaultTypeInternal _SetDirectTeachingModeReq_default_instance_;
class SetDirectTeachingModeRes;
struct SetDirectTeachingModeResDefaultTypeInternal;
extern SetDirectTeachingModeResDefaultTypeInternal _SetDirectTeachingModeRes_default_instance_;
class SetExtAxisControlGainReq;
struct SetExtAxisControlGainReqDefaultTypeInternal;
extern SetExtAxisControlGainReqDefaultTypeInternal _SetExtAxisControlGainReq_default_instance_;
class SetExtAxisControlGainRes;
struct SetExtAxisControlGainResDefaultTypeInternal;
extern SetExtAxisControlGainResDefaultTypeInternal _SetExtAxisControlGainRes_default_instance_;
class SetFileReq;
struct SetFileReqDefaultTypeInternal;
extern SetFileReqDefaultTypeInternal _SetFileReq_default_instance_;
class SetFileRes;
struct SetFileResDefaultTypeInternal;
extern SetFileResDefaultTypeInternal _SetFileRes_default_instance_;
class SetForceControlGainReq;
struct SetForceControlGainReqDefaultTypeInternal;
extern SetForceControlGainReqDefaultTypeInternal _SetForceControlGainReq_default_instance_;
class SetForceControlGainRes;
struct SetForceControlGainResDefaultTypeInternal;
extern SetForceControlGainResDefaultTypeInternal _SetForceControlGainRes_default_instance_;
class SetFricCompReq;
struct SetFricCompReqDefaultTypeInternal;
extern SetFricCompReqDefaultTypeInternal _SetFricCompReq_default_instance_;
class SetFricCompRes;
struct SetFricCompResDefaultTypeInternal;
extern SetFricCompResDefaultTypeInternal _SetFricCompRes_default_instance_;
class SetGasReq;
struct SetGasReqDefaultTypeInternal;
extern SetGasReqDefaultTypeInternal _SetGasReq_default_instance_;
class SetGasRes;
struct SetGasResDefaultTypeInternal;
extern SetGasResDefaultTypeInternal _SetGasRes_default_instance_;
class SetHomePosReq;
struct SetHomePosReqDefaultTypeInternal;
extern SetHomePosReqDefaultTypeInternal _SetHomePosReq_default_instance_;
class SetHomePosRes;
struct SetHomePosResDefaultTypeInternal;
extern SetHomePosResDefaultTypeInternal _SetHomePosRes_default_instance_;
class SetImpedanceControlGainReq;
struct SetImpedanceControlGainReqDefaultTypeInternal;
extern SetImpedanceControlGainReqDefaultTypeInternal _SetImpedanceControlGainReq_default_instance_;
class SetImpedanceControlGainRes;
struct SetImpedanceControlGainResDefaultTypeInternal;
extern SetImpedanceControlGainResDefaultTypeInternal _SetImpedanceControlGainRes_default_instance_;
class SetInchingReq;
struct SetInchingReqDefaultTypeInternal;
extern SetInchingReqDefaultTypeInternal _SetInchingReq_default_instance_;
class SetInchingRes;
struct SetInchingResDefaultTypeInternal;
extern SetInchingResDefaultTypeInternal _SetInchingRes_default_instance_;
class SetJointControlGainReq;
struct SetJointControlGainReqDefaultTypeInternal;
extern SetJointControlGainReqDefaultTypeInternal _SetJointControlGainReq_default_instance_;
class SetJointControlGainRes;
struct SetJointControlGainResDefaultTypeInternal;
extern SetJointControlGainResDefaultTypeInternal _SetJointControlGainRes_default_instance_;
class SetModbusServerListReq;
struct SetModbusServerListReqDefaultTypeInternal;
extern SetModbusServerListReqDefaultTypeInternal _SetModbusServerListReq_default_instance_;
class SetModbusServerListRes;
struct SetModbusServerListResDefaultTypeInternal;
extern SetModbusServerListResDefaultTypeInternal _SetModbusServerListRes_default_instance_;
class SetModbusVarReq;
struct SetModbusVarReqDefaultTypeInternal;
extern SetModbusVarReqDefaultTypeInternal _SetModbusVarReq_default_instance_;
class SetModbusVarRes;
struct SetModbusVarResDefaultTypeInternal;
extern SetModbusVarResDefaultTypeInternal _SetModbusVarRes_default_instance_;
class SetMonitoringVariableListReq;
struct SetMonitoringVariableListReqDefaultTypeInternal;
extern SetMonitoringVariableListReqDefaultTypeInternal _SetMonitoringVariableListReq_default_instance_;
class SetMonitoringVariableListReq_MonitorVariable;
struct SetMonitoringVariableListReq_MonitorVariableDefaultTypeInternal;
extern SetMonitoringVariableListReq_MonitorVariableDefaultTypeInternal _SetMonitoringVariableListReq_MonitorVariable_default_instance_;
class SetMonitoringVariableListRes;
struct SetMonitoringVariableListResDefaultTypeInternal;
extern SetMonitoringVariableListResDefaultTypeInternal _SetMonitoringVariableListRes_default_instance_;
class SetMountPosReq;
struct SetMountPosReqDefaultTypeInternal;
extern SetMountPosReqDefaultTypeInternal _SetMountPosReq_default_instance_;
class SetMountPosRes;
struct SetMountPosResDefaultTypeInternal;
extern SetMountPosResDefaultTypeInternal _SetMountPosRes_default_instance_;
class SetOnStartProgramConfigReq;
struct SetOnStartProgramConfigReqDefaultTypeInternal;
extern SetOnStartProgramConfigReqDefaultTypeInternal _SetOnStartProgramConfigReq_default_instance_;
class SetOnStartProgramConfigRes;
struct SetOnStartProgramConfigResDefaultTypeInternal;
extern SetOnStartProgramConfigResDefaultTypeInternal _SetOnStartProgramConfigRes_default_instance_;
class SetPalletMakerListReq;
struct SetPalletMakerListReqDefaultTypeInternal;
extern SetPalletMakerListReqDefaultTypeInternal _SetPalletMakerListReq_default_instance_;
class SetPalletMakerListRes;
struct SetPalletMakerListResDefaultTypeInternal;
extern SetPalletMakerListResDefaultTypeInternal _SetPalletMakerListRes_default_instance_;
class SetPalletPointListReq;
struct SetPalletPointListReqDefaultTypeInternal;
extern SetPalletPointListReqDefaultTypeInternal _SetPalletPointListReq_default_instance_;
class SetPalletPointListRes;
struct SetPalletPointListResDefaultTypeInternal;
extern SetPalletPointListResDefaultTypeInternal _SetPalletPointListRes_default_instance_;
class SetReducedSpeedReq;
struct SetReducedSpeedReqDefaultTypeInternal;
extern SetReducedSpeedReqDefaultTypeInternal _SetReducedSpeedReq_default_instance_;
class SetRefFrameListReq;
struct SetRefFrameListReqDefaultTypeInternal;
extern SetRefFrameListReqDefaultTypeInternal _SetRefFrameListReq_default_instance_;
class SetRefFrameListRes;
struct SetRefFrameListResDefaultTypeInternal;
extern SetRefFrameListResDefaultTypeInternal _SetRefFrameListRes_default_instance_;
class SetRefFramePlanarReq;
struct SetRefFramePlanarReqDefaultTypeInternal;
extern SetRefFramePlanarReqDefaultTypeInternal _SetRefFramePlanarReq_default_instance_;
class SetRefFramePlanarRes;
struct SetRefFramePlanarResDefaultTypeInternal;
extern SetRefFramePlanarResDefaultTypeInternal _SetRefFramePlanarRes_default_instance_;
class SetRefFrameReq;
struct SetRefFrameReqDefaultTypeInternal;
extern SetRefFrameReqDefaultTypeInternal _SetRefFrameReq_default_instance_;
class SetRefFrameRes;
struct SetRefFrameResDefaultTypeInternal;
extern SetRefFrameResDefaultTypeInternal _SetRefFrameRes_default_instance_;
class SetSafetyLimitConfigReq;
struct SetSafetyLimitConfigReqDefaultTypeInternal;
extern SetSafetyLimitConfigReqDefaultTypeInternal _SetSafetyLimitConfigReq_default_instance_;
class SetSafetyLimitConfigRes;
struct SetSafetyLimitConfigResDefaultTypeInternal;
extern SetSafetyLimitConfigResDefaultTypeInternal _SetSafetyLimitConfigRes_default_instance_;
class SetSafetyStopConfigReq;
struct SetSafetyStopConfigReqDefaultTypeInternal;
extern SetSafetyStopConfigReqDefaultTypeInternal _SetSafetyStopConfigReq_default_instance_;
class SetSafetyStopConfigRes;
struct SetSafetyStopConfigResDefaultTypeInternal;
extern SetSafetyStopConfigResDefaultTypeInternal _SetSafetyStopConfigRes_default_instance_;
class SetSensorlessComplianceGainReq;
struct SetSensorlessComplianceGainReqDefaultTypeInternal;
extern SetSensorlessComplianceGainReqDefaultTypeInternal _SetSensorlessComplianceGainReq_default_instance_;
class SetSensorlessComplianceGainRes;
struct SetSensorlessComplianceGainResDefaultTypeInternal;
extern SetSensorlessComplianceGainResDefaultTypeInternal _SetSensorlessComplianceGainRes_default_instance_;
class SetSensorlessComplianceModeReq;
struct SetSensorlessComplianceModeReqDefaultTypeInternal;
extern SetSensorlessComplianceModeReqDefaultTypeInternal _SetSensorlessComplianceModeReq_default_instance_;
class SetSensorlessComplianceModeRes;
struct SetSensorlessComplianceModeResDefaultTypeInternal;
extern SetSensorlessComplianceModeResDefaultTypeInternal _SetSensorlessComplianceModeRes_default_instance_;
class SetServoReq;
struct SetServoReqDefaultTypeInternal;
extern SetServoReqDefaultTypeInternal _SetServoReq_default_instance_;
class SetServoRes;
struct SetServoResDefaultTypeInternal;
extern SetServoResDefaultTypeInternal _SetServoRes_default_instance_;
class SetSimulationModeReq;
struct SetSimulationModeReqDefaultTypeInternal;
extern SetSimulationModeReqDefaultTypeInternal _SetSimulationModeReq_default_instance_;
class SetSimulationModeRes;
struct SetSimulationModeResDefaultTypeInternal;
extern SetSimulationModeResDefaultTypeInternal _SetSimulationModeRes_default_instance_;
class SetSpeedRatioReq;
struct SetSpeedRatioReqDefaultTypeInternal;
extern SetSpeedRatioReqDefaultTypeInternal _SetSpeedRatioReq_default_instance_;
class SetSpeedRatioRes;
struct SetSpeedRatioResDefaultTypeInternal;
extern SetSpeedRatioResDefaultTypeInternal _SetSpeedRatioRes_default_instance_;
class SetTaskControlGainReq;
struct SetTaskControlGainReqDefaultTypeInternal;
extern SetTaskControlGainReqDefaultTypeInternal _SetTaskControlGainReq_default_instance_;
class SetTaskControlGainRes;
struct SetTaskControlGainResDefaultTypeInternal;
extern SetTaskControlGainResDefaultTypeInternal _SetTaskControlGainRes_default_instance_;
class SetToolFrameListReq;
struct SetToolFrameListReqDefaultTypeInternal;
extern SetToolFrameListReqDefaultTypeInternal _SetToolFrameListReq_default_instance_;
class SetToolFrameListRes;
struct SetToolFrameListResDefaultTypeInternal;
extern SetToolFrameListResDefaultTypeInternal _SetToolFrameListRes_default_instance_;
class SetToolFrameReq;
struct SetToolFrameReqDefaultTypeInternal;
extern SetToolFrameReqDefaultTypeInternal _SetToolFrameReq_default_instance_;
class SetToolFrameRes;
struct SetToolFrameResDefaultTypeInternal;
extern SetToolFrameResDefaultTypeInternal _SetToolFrameRes_default_instance_;
class SetToolPropertyReq;
struct SetToolPropertyReqDefaultTypeInternal;
extern SetToolPropertyReqDefaultTypeInternal _SetToolPropertyReq_default_instance_;
class SetToolPropertyRes;
struct SetToolPropertyResDefaultTypeInternal;
extern SetToolPropertyResDefaultTypeInternal _SetToolPropertyRes_default_instance_;
class SetTouchReq;
struct SetTouchReqDefaultTypeInternal;
extern SetTouchReqDefaultTypeInternal _SetTouchReq_default_instance_;
class SetTouchRes;
struct SetTouchResDefaultTypeInternal;
extern SetTouchResDefaultTypeInternal _SetTouchRes_default_instance_;
class SetVisionServerListReq;
struct SetVisionServerListReqDefaultTypeInternal;
extern SetVisionServerListReqDefaultTypeInternal _SetVisionServerListReq_default_instance_;
class SetVisionServerListRes;
struct SetVisionServerListResDefaultTypeInternal;
extern SetVisionServerListResDefaultTypeInternal _SetVisionServerListRes_default_instance_;
class State;
struct StateDefaultTypeInternal;
extern StateDefaultTypeInternal _State_default_instance_;
class StopInchingReq;
struct StopInchingReqDefaultTypeInternal;
extern StopInchingReqDefaultTypeInternal _StopInchingReq_default_instance_;
class StopInchingRes;
struct StopInchingResDefaultTypeInternal;
extern StopInchingResDefaultTypeInternal _StopInchingRes_default_instance_;
class StopMotionReq;
struct StopMotionReqDefaultTypeInternal;
extern StopMotionReqDefaultTypeInternal _StopMotionReq_default_instance_;
class StopMotionRes;
struct StopMotionResDefaultTypeInternal;
extern StopMotionResDefaultTypeInternal _StopMotionRes_default_instance_;
class StopProgramReq;
struct StopProgramReqDefaultTypeInternal;
extern StopProgramReqDefaultTypeInternal _StopProgramReq_default_instance_;
class StopProgramRes;
struct StopProgramResDefaultTypeInternal;
extern StopProgramResDefaultTypeInternal _StopProgramRes_default_instance_;
class StopState;
struct StopStateDefaultTypeInternal;
extern StopStateDefaultTypeInternal _StopState_default_instance_;
class TactTime;
struct TactTimeDefaultTypeInternal;
extern TactTimeDefaultTypeInternal _TactTime_default_instance_;
class TeleFileReq;
struct TeleFileReqDefaultTypeInternal;
extern TeleFileReqDefaultTypeInternal _TeleFileReq_default_instance_;
class TeleOpDevice;
struct TeleOpDeviceDefaultTypeInternal;
extern TeleOpDeviceDefaultTypeInternal _TeleOpDevice_default_instance_;
class TeleOpFileList;
struct TeleOpFileListDefaultTypeInternal;
extern TeleOpFileListDefaultTypeInternal _TeleOpFileList_default_instance_;
class TeleOpParams;
struct TeleOpParamsDefaultTypeInternal;
extern TeleOpParamsDefaultTypeInternal _TeleOpParams_default_instance_;
class TeleOpState;
struct TeleOpStateDefaultTypeInternal;
extern TeleOpStateDefaultTypeInternal _TeleOpState_default_instance_;
class TeleP;
struct TelePDefaultTypeInternal;
extern TelePDefaultTypeInternal _TeleP_default_instance_;
class TelePlayRate;
struct TelePlayRateDefaultTypeInternal;
extern TelePlayRateDefaultTypeInternal _TelePlayRate_default_instance_;
class Tool;
struct ToolDefaultTypeInternal;
extern ToolDefaultTypeInternal _Tool_default_instance_;
class ToolList;
struct ToolListDefaultTypeInternal;
extern ToolListDefaultTypeInternal _ToolList_default_instance_;
class Trigger;
struct TriggerDefaultTypeInternal;
extern TriggerDefaultTypeInternal _Trigger_default_instance_;
class TuningProgram;
struct TuningProgramDefaultTypeInternal;
extern TuningProgramDefaultTypeInternal _TuningProgram_default_instance_;
class UpdateIndySWReq;
struct UpdateIndySWReqDefaultTypeInternal;
extern UpdateIndySWReqDefaultTypeInternal _UpdateIndySWReq_default_instance_;
class UpdateIndySWRes;
struct UpdateIndySWResDefaultTypeInternal;
extern UpdateIndySWResDefaultTypeInternal _UpdateIndySWRes_default_instance_;
class ViolationMsgCode;
struct ViolationMsgCodeDefaultTypeInternal;
extern ViolationMsgCodeDefaultTypeInternal _ViolationMsgCode_default_instance_;
class VisionRequest;
struct VisionRequestDefaultTypeInternal;
extern VisionRequestDefaultTypeInternal _VisionRequest_default_instance_;
class VisionResult;
struct VisionResultDefaultTypeInternal;
extern VisionResultDefaultTypeInternal _VisionResult_default_instance_;
}  // namespace HRI
}  // namespace Protobuf
}  // namespace IndyFramework
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace IndyFramework {
namespace Protobuf {
namespace HRI {
enum PalletMaker_PalletPattern : int {
  PalletMaker_PalletPattern_PATTERN_0 = 0,
  PalletMaker_PalletPattern_PATTERN_1 = 1,
  PalletMaker_PalletPattern_PATTERN_2 = 2,
  PalletMaker_PalletPattern_PATTERN_3 = 3,
  PalletMaker_PalletPattern_PalletMaker_PalletPattern_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PalletMaker_PalletPattern_PalletMaker_PalletPattern_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PalletMaker_PalletPattern_IsValid(int value);
constexpr PalletMaker_PalletPattern PalletMaker_PalletPattern_PalletPattern_MIN = static_cast<PalletMaker_PalletPattern>(0);
constexpr PalletMaker_PalletPattern PalletMaker_PalletPattern_PalletPattern_MAX = static_cast<PalletMaker_PalletPattern>(3);
constexpr int PalletMaker_PalletPattern_PalletPattern_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
PalletMaker_PalletPattern_descriptor();
template <typename T>
const std::string& PalletMaker_PalletPattern_Name(T value) {
  static_assert(std::is_same<T, PalletMaker_PalletPattern>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PalletPattern_Name().");
  return PalletMaker_PalletPattern_Name(static_cast<PalletMaker_PalletPattern>(value));
}
template <>
inline const std::string& PalletMaker_PalletPattern_Name(PalletMaker_PalletPattern value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PalletMaker_PalletPattern_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool PalletMaker_PalletPattern_Parse(absl::string_view name, PalletMaker_PalletPattern* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PalletMaker_PalletPattern>(
      PalletMaker_PalletPattern_descriptor(), name, value);
}
enum BrakeControlStyle_ControlStyle : int {
  BrakeControlStyle_ControlStyle_UNAVAILABLE = 0,
  BrakeControlStyle_ControlStyle_CONCURRENT = 1,
  BrakeControlStyle_ControlStyle_INDIVIDUAL = 2,
  BrakeControlStyle_ControlStyle_BrakeControlStyle_ControlStyle_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BrakeControlStyle_ControlStyle_BrakeControlStyle_ControlStyle_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BrakeControlStyle_ControlStyle_IsValid(int value);
constexpr BrakeControlStyle_ControlStyle BrakeControlStyle_ControlStyle_ControlStyle_MIN = static_cast<BrakeControlStyle_ControlStyle>(0);
constexpr BrakeControlStyle_ControlStyle BrakeControlStyle_ControlStyle_ControlStyle_MAX = static_cast<BrakeControlStyle_ControlStyle>(2);
constexpr int BrakeControlStyle_ControlStyle_ControlStyle_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
BrakeControlStyle_ControlStyle_descriptor();
template <typename T>
const std::string& BrakeControlStyle_ControlStyle_Name(T value) {
  static_assert(std::is_same<T, BrakeControlStyle_ControlStyle>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ControlStyle_Name().");
  return BrakeControlStyle_ControlStyle_Name(static_cast<BrakeControlStyle_ControlStyle>(value));
}
template <>
inline const std::string& BrakeControlStyle_ControlStyle_Name(BrakeControlStyle_ControlStyle value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BrakeControlStyle_ControlStyle_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool BrakeControlStyle_ControlStyle_Parse(absl::string_view name, BrakeControlStyle_ControlStyle* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrakeControlStyle_ControlStyle>(
      BrakeControlStyle_ControlStyle_descriptor(), name, value);
}
enum GetAutoModeConfigRes_AutoModeConfig : int {
  GetAutoModeConfigRes_AutoModeConfig_AUTO_MODE_NOT_USED = 0,
  GetAutoModeConfigRes_AutoModeConfig_AUTO_MODE_BY_CONTY = 1,
  GetAutoModeConfigRes_AutoModeConfig_AUTO_MODE_BY_INDYKEY = 2,
  GetAutoModeConfigRes_AutoModeConfig_GetAutoModeConfigRes_AutoModeConfig_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GetAutoModeConfigRes_AutoModeConfig_GetAutoModeConfigRes_AutoModeConfig_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GetAutoModeConfigRes_AutoModeConfig_IsValid(int value);
constexpr GetAutoModeConfigRes_AutoModeConfig GetAutoModeConfigRes_AutoModeConfig_AutoModeConfig_MIN = static_cast<GetAutoModeConfigRes_AutoModeConfig>(0);
constexpr GetAutoModeConfigRes_AutoModeConfig GetAutoModeConfigRes_AutoModeConfig_AutoModeConfig_MAX = static_cast<GetAutoModeConfigRes_AutoModeConfig>(2);
constexpr int GetAutoModeConfigRes_AutoModeConfig_AutoModeConfig_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
GetAutoModeConfigRes_AutoModeConfig_descriptor();
template <typename T>
const std::string& GetAutoModeConfigRes_AutoModeConfig_Name(T value) {
  static_assert(std::is_same<T, GetAutoModeConfigRes_AutoModeConfig>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AutoModeConfig_Name().");
  return GetAutoModeConfigRes_AutoModeConfig_Name(static_cast<GetAutoModeConfigRes_AutoModeConfig>(value));
}
template <>
inline const std::string& GetAutoModeConfigRes_AutoModeConfig_Name(GetAutoModeConfigRes_AutoModeConfig value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GetAutoModeConfigRes_AutoModeConfig_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool GetAutoModeConfigRes_AutoModeConfig_Parse(absl::string_view name, GetAutoModeConfigRes_AutoModeConfig* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetAutoModeConfigRes_AutoModeConfig>(
      GetAutoModeConfigRes_AutoModeConfig_descriptor(), name, value);
}
enum StopState_StopCategory : int {
  StopState_StopCategory_STOP_CAT_0 = 0,
  StopState_StopCategory_STOP_CAT_1 = 1,
  StopState_StopCategory_STOP_CAT_2 = 2,
  StopState_StopCategory_STOP_CAT_NONE = -1,
  StopState_StopCategory_StopState_StopCategory_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StopState_StopCategory_StopState_StopCategory_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StopState_StopCategory_IsValid(int value);
constexpr StopState_StopCategory StopState_StopCategory_StopCategory_MIN = static_cast<StopState_StopCategory>(-1);
constexpr StopState_StopCategory StopState_StopCategory_StopCategory_MAX = static_cast<StopState_StopCategory>(2);
constexpr int StopState_StopCategory_StopCategory_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
StopState_StopCategory_descriptor();
template <typename T>
const std::string& StopState_StopCategory_Name(T value) {
  static_assert(std::is_same<T, StopState_StopCategory>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StopCategory_Name().");
  return StopState_StopCategory_Name(static_cast<StopState_StopCategory>(value));
}
template <>
inline const std::string& StopState_StopCategory_Name(StopState_StopCategory value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StopState_StopCategory_descriptor,
                                                 -1, 2>(
      static_cast<int>(value));
}
inline bool StopState_StopCategory_Parse(absl::string_view name, StopState_StopCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StopState_StopCategory>(
      StopState_StopCategory_descriptor(), name, value);
}
enum KinematicsParams_JointType : int {
  KinematicsParams_JointType_REVOLUTE = 0,
  KinematicsParams_JointType_PRISMATIC = 1,
  KinematicsParams_JointType_FIXED = 2,
  KinematicsParams_JointType_KinematicsParams_JointType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  KinematicsParams_JointType_KinematicsParams_JointType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool KinematicsParams_JointType_IsValid(int value);
constexpr KinematicsParams_JointType KinematicsParams_JointType_JointType_MIN = static_cast<KinematicsParams_JointType>(0);
constexpr KinematicsParams_JointType KinematicsParams_JointType_JointType_MAX = static_cast<KinematicsParams_JointType>(2);
constexpr int KinematicsParams_JointType_JointType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
KinematicsParams_JointType_descriptor();
template <typename T>
const std::string& KinematicsParams_JointType_Name(T value) {
  static_assert(std::is_same<T, KinematicsParams_JointType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to JointType_Name().");
  return KinematicsParams_JointType_Name(static_cast<KinematicsParams_JointType>(value));
}
template <>
inline const std::string& KinematicsParams_JointType_Name(KinematicsParams_JointType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<KinematicsParams_JointType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool KinematicsParams_JointType_Parse(absl::string_view name, KinematicsParams_JointType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KinematicsParams_JointType>(
      KinematicsParams_JointType_descriptor(), name, value);
}
enum TeleOpDevice_TeleOpDeviceType : int {
  TeleOpDevice_TeleOpDeviceType_NONE = 0,
  TeleOpDevice_TeleOpDeviceType_VIVE = 1,
  TeleOpDevice_TeleOpDeviceType_TeleOpDevice_TeleOpDeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TeleOpDevice_TeleOpDeviceType_TeleOpDevice_TeleOpDeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TeleOpDevice_TeleOpDeviceType_IsValid(int value);
constexpr TeleOpDevice_TeleOpDeviceType TeleOpDevice_TeleOpDeviceType_TeleOpDeviceType_MIN = static_cast<TeleOpDevice_TeleOpDeviceType>(0);
constexpr TeleOpDevice_TeleOpDeviceType TeleOpDevice_TeleOpDeviceType_TeleOpDeviceType_MAX = static_cast<TeleOpDevice_TeleOpDeviceType>(1);
constexpr int TeleOpDevice_TeleOpDeviceType_TeleOpDeviceType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
TeleOpDevice_TeleOpDeviceType_descriptor();
template <typename T>
const std::string& TeleOpDevice_TeleOpDeviceType_Name(T value) {
  static_assert(std::is_same<T, TeleOpDevice_TeleOpDeviceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TeleOpDeviceType_Name().");
  return TeleOpDevice_TeleOpDeviceType_Name(static_cast<TeleOpDevice_TeleOpDeviceType>(value));
}
template <>
inline const std::string& TeleOpDevice_TeleOpDeviceType_Name(TeleOpDevice_TeleOpDeviceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TeleOpDevice_TeleOpDeviceType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool TeleOpDevice_TeleOpDeviceType_Parse(absl::string_view name, TeleOpDevice_TeleOpDeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeleOpDevice_TeleOpDeviceType>(
      TeleOpDevice_TeleOpDeviceType_descriptor(), name, value);
}
enum FTSensorDevice_FTSensorDeviceType : int {
  FTSensorDevice_FTSensorDeviceType_NONE = 0,
  FTSensorDevice_FTSensorDeviceType_AFT200_D80 = 1,
  FTSensorDevice_FTSensorDeviceType_AFT200_D80_EC = 2,
  FTSensorDevice_FTSensorDeviceType_RFT80_6A01 = 3,
  FTSensorDevice_FTSensorDeviceType_RFT60_HA01 = 4,
  FTSensorDevice_FTSensorDeviceType_HEX_E_H_QC = 5,
  FTSensorDevice_FTSensorDeviceType_FTSensorDevice_FTSensorDeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FTSensorDevice_FTSensorDeviceType_FTSensorDevice_FTSensorDeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FTSensorDevice_FTSensorDeviceType_IsValid(int value);
constexpr FTSensorDevice_FTSensorDeviceType FTSensorDevice_FTSensorDeviceType_FTSensorDeviceType_MIN = static_cast<FTSensorDevice_FTSensorDeviceType>(0);
constexpr FTSensorDevice_FTSensorDeviceType FTSensorDevice_FTSensorDeviceType_FTSensorDeviceType_MAX = static_cast<FTSensorDevice_FTSensorDeviceType>(5);
constexpr int FTSensorDevice_FTSensorDeviceType_FTSensorDeviceType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
FTSensorDevice_FTSensorDeviceType_descriptor();
template <typename T>
const std::string& FTSensorDevice_FTSensorDeviceType_Name(T value) {
  static_assert(std::is_same<T, FTSensorDevice_FTSensorDeviceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FTSensorDeviceType_Name().");
  return FTSensorDevice_FTSensorDeviceType_Name(static_cast<FTSensorDevice_FTSensorDeviceType>(value));
}
template <>
inline const std::string& FTSensorDevice_FTSensorDeviceType_Name(FTSensorDevice_FTSensorDeviceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FTSensorDevice_FTSensorDeviceType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool FTSensorDevice_FTSensorDeviceType_Parse(absl::string_view name, FTSensorDevice_FTSensorDeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FTSensorDevice_FTSensorDeviceType>(
      FTSensorDevice_FTSensorDeviceType_descriptor(), name, value);
}
enum FTSensorDevice_FTSensorDeviceComType : int {
  FTSensorDevice_FTSensorDeviceComType_ENDTOOLCAN = 0,
  FTSensorDevice_FTSensorDeviceComType_CBCAN = 1,
  FTSensorDevice_FTSensorDeviceComType_MODBUSCLIENT = 2,
  FTSensorDevice_FTSensorDeviceComType_ETHERCAT = 3,
  FTSensorDevice_FTSensorDeviceComType_FTSensorDevice_FTSensorDeviceComType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FTSensorDevice_FTSensorDeviceComType_FTSensorDevice_FTSensorDeviceComType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FTSensorDevice_FTSensorDeviceComType_IsValid(int value);
constexpr FTSensorDevice_FTSensorDeviceComType FTSensorDevice_FTSensorDeviceComType_FTSensorDeviceComType_MIN = static_cast<FTSensorDevice_FTSensorDeviceComType>(0);
constexpr FTSensorDevice_FTSensorDeviceComType FTSensorDevice_FTSensorDeviceComType_FTSensorDeviceComType_MAX = static_cast<FTSensorDevice_FTSensorDeviceComType>(3);
constexpr int FTSensorDevice_FTSensorDeviceComType_FTSensorDeviceComType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
FTSensorDevice_FTSensorDeviceComType_descriptor();
template <typename T>
const std::string& FTSensorDevice_FTSensorDeviceComType_Name(T value) {
  static_assert(std::is_same<T, FTSensorDevice_FTSensorDeviceComType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FTSensorDeviceComType_Name().");
  return FTSensorDevice_FTSensorDeviceComType_Name(static_cast<FTSensorDevice_FTSensorDeviceComType>(value));
}
template <>
inline const std::string& FTSensorDevice_FTSensorDeviceComType_Name(FTSensorDevice_FTSensorDeviceComType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FTSensorDevice_FTSensorDeviceComType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool FTSensorDevice_FTSensorDeviceComType_Parse(absl::string_view name, FTSensorDevice_FTSensorDeviceComType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FTSensorDevice_FTSensorDeviceComType>(
      FTSensorDevice_FTSensorDeviceComType_descriptor(), name, value);
}
enum SanderCommand_SanderType : int {
  SanderCommand_SanderType_SANDER_ONROBOT = 0,
  SanderCommand_SanderType_SanderCommand_SanderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SanderCommand_SanderType_SanderCommand_SanderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SanderCommand_SanderType_IsValid(int value);
constexpr SanderCommand_SanderType SanderCommand_SanderType_SanderType_MIN = static_cast<SanderCommand_SanderType>(0);
constexpr SanderCommand_SanderType SanderCommand_SanderType_SanderType_MAX = static_cast<SanderCommand_SanderType>(0);
constexpr int SanderCommand_SanderType_SanderType_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
SanderCommand_SanderType_descriptor();
template <typename T>
const std::string& SanderCommand_SanderType_Name(T value) {
  static_assert(std::is_same<T, SanderCommand_SanderType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SanderType_Name().");
  return SanderCommand_SanderType_Name(static_cast<SanderCommand_SanderType>(value));
}
template <>
inline const std::string& SanderCommand_SanderType_Name(SanderCommand_SanderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SanderCommand_SanderType_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool SanderCommand_SanderType_Parse(absl::string_view name, SanderCommand_SanderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SanderCommand_SanderType>(
      SanderCommand_SanderType_descriptor(), name, value);
}
enum Encoder_EncoderType : int {
  Encoder_EncoderType_CONSTANT = 0,
  Encoder_EncoderType_QUADRATURE = 1,
  Encoder_EncoderType_RISING = 2,
  Encoder_EncoderType_FALLING = 3,
  Encoder_EncoderType_MODBUS = 4,
  Encoder_EncoderType_Encoder_EncoderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Encoder_EncoderType_Encoder_EncoderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Encoder_EncoderType_IsValid(int value);
constexpr Encoder_EncoderType Encoder_EncoderType_EncoderType_MIN = static_cast<Encoder_EncoderType>(0);
constexpr Encoder_EncoderType Encoder_EncoderType_EncoderType_MAX = static_cast<Encoder_EncoderType>(4);
constexpr int Encoder_EncoderType_EncoderType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
Encoder_EncoderType_descriptor();
template <typename T>
const std::string& Encoder_EncoderType_Name(T value) {
  static_assert(std::is_same<T, Encoder_EncoderType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EncoderType_Name().");
  return Encoder_EncoderType_Name(static_cast<Encoder_EncoderType>(value));
}
template <>
inline const std::string& Encoder_EncoderType_Name(Encoder_EncoderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Encoder_EncoderType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool Encoder_EncoderType_Parse(absl::string_view name, Encoder_EncoderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Encoder_EncoderType>(
      Encoder_EncoderType_descriptor(), name, value);
}
enum Trigger_TriggerType : int {
  Trigger_TriggerType_DIGITAL = 0,
  Trigger_TriggerType_MODBUS = 1,
  Trigger_TriggerType_Trigger_TriggerType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Trigger_TriggerType_Trigger_TriggerType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Trigger_TriggerType_IsValid(int value);
constexpr Trigger_TriggerType Trigger_TriggerType_TriggerType_MIN = static_cast<Trigger_TriggerType>(0);
constexpr Trigger_TriggerType Trigger_TriggerType_TriggerType_MAX = static_cast<Trigger_TriggerType>(1);
constexpr int Trigger_TriggerType_TriggerType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Trigger_TriggerType_descriptor();
template <typename T>
const std::string& Trigger_TriggerType_Name(T value) {
  static_assert(std::is_same<T, Trigger_TriggerType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TriggerType_Name().");
  return Trigger_TriggerType_Name(static_cast<Trigger_TriggerType>(value));
}
template <>
inline const std::string& Trigger_TriggerType_Name(Trigger_TriggerType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Trigger_TriggerType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Trigger_TriggerType_Parse(absl::string_view name, Trigger_TriggerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Trigger_TriggerType>(
      Trigger_TriggerType_descriptor(), name, value);
}
enum GripperCommand_GripperCommandType : int {
  GripperCommand_GripperCommandType_AUTO_DETECT = 0,
  GripperCommand_GripperCommandType_ACTIVATE = 1,
  GripperCommand_GripperCommandType_RE_ACTIVATE = 2,
  GripperCommand_GripperCommandType_SET_PVT = 3,
  GripperCommand_GripperCommandType_GripperCommand_GripperCommandType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GripperCommand_GripperCommandType_GripperCommand_GripperCommandType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GripperCommand_GripperCommandType_IsValid(int value);
constexpr GripperCommand_GripperCommandType GripperCommand_GripperCommandType_GripperCommandType_MIN = static_cast<GripperCommand_GripperCommandType>(0);
constexpr GripperCommand_GripperCommandType GripperCommand_GripperCommandType_GripperCommandType_MAX = static_cast<GripperCommand_GripperCommandType>(3);
constexpr int GripperCommand_GripperCommandType_GripperCommandType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
GripperCommand_GripperCommandType_descriptor();
template <typename T>
const std::string& GripperCommand_GripperCommandType_Name(T value) {
  static_assert(std::is_same<T, GripperCommand_GripperCommandType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GripperCommandType_Name().");
  return GripperCommand_GripperCommandType_Name(static_cast<GripperCommand_GripperCommandType>(value));
}
template <>
inline const std::string& GripperCommand_GripperCommandType_Name(GripperCommand_GripperCommandType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GripperCommand_GripperCommandType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool GripperCommand_GripperCommandType_Parse(absl::string_view name, GripperCommand_GripperCommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GripperCommand_GripperCommandType>(
      GripperCommand_GripperCommandType_descriptor(), name, value);
}
enum JointBaseType : int {
  ABSOLUTE_JOINT = 0,
  RELATIVE_JOINT = 1,
  JointBaseType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  JointBaseType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool JointBaseType_IsValid(int value);
constexpr JointBaseType JointBaseType_MIN = static_cast<JointBaseType>(0);
constexpr JointBaseType JointBaseType_MAX = static_cast<JointBaseType>(1);
constexpr int JointBaseType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
JointBaseType_descriptor();
template <typename T>
const std::string& JointBaseType_Name(T value) {
  static_assert(std::is_same<T, JointBaseType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to JointBaseType_Name().");
  return JointBaseType_Name(static_cast<JointBaseType>(value));
}
template <>
inline const std::string& JointBaseType_Name(JointBaseType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<JointBaseType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool JointBaseType_Parse(absl::string_view name, JointBaseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JointBaseType>(
      JointBaseType_descriptor(), name, value);
}
enum TaskBaseType : int {
  ABSOLUTE_TASK = 0,
  RELATIVE_TASK = 1,
  TCP_TASK = 2,
  TaskBaseType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TaskBaseType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TaskBaseType_IsValid(int value);
constexpr TaskBaseType TaskBaseType_MIN = static_cast<TaskBaseType>(0);
constexpr TaskBaseType TaskBaseType_MAX = static_cast<TaskBaseType>(2);
constexpr int TaskBaseType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
TaskBaseType_descriptor();
template <typename T>
const std::string& TaskBaseType_Name(T value) {
  static_assert(std::is_same<T, TaskBaseType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TaskBaseType_Name().");
  return TaskBaseType_Name(static_cast<TaskBaseType>(value));
}
template <>
inline const std::string& TaskBaseType_Name(TaskBaseType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TaskBaseType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TaskBaseType_Parse(absl::string_view name, TaskBaseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskBaseType>(
      TaskBaseType_descriptor(), name, value);
}
enum CollisionPolicyType : int {
  COLL_NO_DETECT = 0,
  COLL_PAUSE = 1,
  COLL_RESUME_AFTER_SLEEP = 2,
  COLL_STOP = 3,
  CollisionPolicyType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CollisionPolicyType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CollisionPolicyType_IsValid(int value);
constexpr CollisionPolicyType CollisionPolicyType_MIN = static_cast<CollisionPolicyType>(0);
constexpr CollisionPolicyType CollisionPolicyType_MAX = static_cast<CollisionPolicyType>(3);
constexpr int CollisionPolicyType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
CollisionPolicyType_descriptor();
template <typename T>
const std::string& CollisionPolicyType_Name(T value) {
  static_assert(std::is_same<T, CollisionPolicyType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CollisionPolicyType_Name().");
  return CollisionPolicyType_Name(static_cast<CollisionPolicyType>(value));
}
template <>
inline const std::string& CollisionPolicyType_Name(CollisionPolicyType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CollisionPolicyType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool CollisionPolicyType_Parse(absl::string_view name, CollisionPolicyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CollisionPolicyType>(
      CollisionPolicyType_descriptor(), name, value);
}
enum EndtoolState : int {
  UNUSED = 0,
  HIGH_PNP = 2,
  HIGH_NPN = 1,
  LOW_NPN = -1,
  LOW_PNP = -2,
  EndtoolState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EndtoolState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EndtoolState_IsValid(int value);
constexpr EndtoolState EndtoolState_MIN = static_cast<EndtoolState>(-2);
constexpr EndtoolState EndtoolState_MAX = static_cast<EndtoolState>(2);
constexpr int EndtoolState_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EndtoolState_descriptor();
template <typename T>
const std::string& EndtoolState_Name(T value) {
  static_assert(std::is_same<T, EndtoolState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EndtoolState_Name().");
  return EndtoolState_Name(static_cast<EndtoolState>(value));
}
template <>
inline const std::string& EndtoolState_Name(EndtoolState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EndtoolState_descriptor,
                                                 -2, 2>(
      static_cast<int>(value));
}
inline bool EndtoolState_Parse(absl::string_view name, EndtoolState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EndtoolState>(
      EndtoolState_descriptor(), name, value);
}
enum TeleMode : int {
  TELE_INACTIVE = 0,
  TELE_CALIB = 1,
  TELE_RECORD = 2,
  TELE_PLAY = 3,
  TELE_RAW = 10,
  TELE_MOVE = 20,
  TeleMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TeleMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TeleMode_IsValid(int value);
constexpr TeleMode TeleMode_MIN = static_cast<TeleMode>(0);
constexpr TeleMode TeleMode_MAX = static_cast<TeleMode>(20);
constexpr int TeleMode_ARRAYSIZE = 20 + 1;
const ::google::protobuf::EnumDescriptor*
TeleMode_descriptor();
template <typename T>
const std::string& TeleMode_Name(T value) {
  static_assert(std::is_same<T, TeleMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TeleMode_Name().");
  return ::google::protobuf::internal::NameOfEnum(TeleMode_descriptor(), value);
}
inline bool TeleMode_Parse(absl::string_view name, TeleMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeleMode>(
      TeleMode_descriptor(), name, value);
}
enum TeleMethod : int {
  TELE_TASK_ABSOLUTE = 0,
  TELE_TASK_RELATIVE = 1,
  TELE_TASK_TCP = 2,
  TELE_JOINT_ABSOLUTE = 10,
  TELE_JOINT_RELATIVE = 11,
  TeleMethod_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TeleMethod_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TeleMethod_IsValid(int value);
constexpr TeleMethod TeleMethod_MIN = static_cast<TeleMethod>(0);
constexpr TeleMethod TeleMethod_MAX = static_cast<TeleMethod>(11);
constexpr int TeleMethod_ARRAYSIZE = 11 + 1;
const ::google::protobuf::EnumDescriptor*
TeleMethod_descriptor();
template <typename T>
const std::string& TeleMethod_Name(T value) {
  static_assert(std::is_same<T, TeleMethod>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TeleMethod_Name().");
  return TeleMethod_Name(static_cast<TeleMethod>(value));
}
template <>
inline const std::string& TeleMethod_Name(TeleMethod value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TeleMethod_descriptor,
                                                 0, 11>(
      static_cast<int>(value));
}
inline bool TeleMethod_Parse(absl::string_view name, TeleMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeleMethod>(
      TeleMethod_descriptor(), name, value);
}
enum GripperType : int {
  NONE = 0,
  ROBOTIQ_GRIPPER = 1,
  DH_GRIPPER = 2,
  GripperType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GripperType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GripperType_IsValid(int value);
constexpr GripperType GripperType_MIN = static_cast<GripperType>(0);
constexpr GripperType GripperType_MAX = static_cast<GripperType>(2);
constexpr int GripperType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
GripperType_descriptor();
template <typename T>
const std::string& GripperType_Name(T value) {
  static_assert(std::is_same<T, GripperType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GripperType_Name().");
  return GripperType_Name(static_cast<GripperType>(value));
}
template <>
inline const std::string& GripperType_Name(GripperType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GripperType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool GripperType_Parse(absl::string_view name, GripperType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GripperType>(
      GripperType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PalletMaker final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PalletMaker) */ {
 public:
  inline PalletMaker() : PalletMaker(nullptr) {}
  ~PalletMaker() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PalletMaker(::google::protobuf::internal::ConstantInitialized);

  PalletMaker(const PalletMaker& from);
  PalletMaker(PalletMaker&& from) noexcept
    : PalletMaker() {
    *this = ::std::move(from);
  }

  inline PalletMaker& operator=(const PalletMaker& from) {
    CopyFrom(from);
    return *this;
  }
  inline PalletMaker& operator=(PalletMaker&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PalletMaker& default_instance() {
    return *internal_default_instance();
  }
  static inline const PalletMaker* internal_default_instance() {
    return reinterpret_cast<const PalletMaker*>(
               &_PalletMaker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PalletMaker& a, PalletMaker& b) {
    a.Swap(&b);
  }
  inline void Swap(PalletMaker* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PalletMaker* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PalletMaker* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PalletMaker>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PalletMaker& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PalletMaker& from) {
    PalletMaker::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PalletMaker* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PalletMaker";
  }
  protected:
  explicit PalletMaker(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using PalletPattern = PalletMaker_PalletPattern;
  static constexpr PalletPattern PATTERN_0 = PalletMaker_PalletPattern_PATTERN_0;
  static constexpr PalletPattern PATTERN_1 = PalletMaker_PalletPattern_PATTERN_1;
  static constexpr PalletPattern PATTERN_2 = PalletMaker_PalletPattern_PATTERN_2;
  static constexpr PalletPattern PATTERN_3 = PalletMaker_PalletPattern_PATTERN_3;
  static inline bool PalletPattern_IsValid(int value) {
    return PalletMaker_PalletPattern_IsValid(value);
  }
  static constexpr PalletPattern PalletPattern_MIN = PalletMaker_PalletPattern_PalletPattern_MIN;
  static constexpr PalletPattern PalletPattern_MAX = PalletMaker_PalletPattern_PalletPattern_MAX;
  static constexpr int PalletPattern_ARRAYSIZE = PalletMaker_PalletPattern_PalletPattern_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PalletPattern_descriptor() {
    return PalletMaker_PalletPattern_descriptor();
  }
  template <typename T>
  static inline const std::string& PalletPattern_Name(T value) {
    return PalletMaker_PalletPattern_Name(value);
  }
  static inline bool PalletPattern_Parse(absl::string_view name, PalletPattern* value) {
    return PalletMaker_PalletPattern_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTpos0FieldNumber = 5,
    kTpos1FieldNumber = 6,
    kTpos2FieldNumber = 7,
    kJpos0FieldNumber = 8,
    kJpos1FieldNumber = 9,
    kJpos2FieldNumber = 10,
    kNameFieldNumber = 1,
    kPalletPatternFieldNumber = 2,
    kWidthNumFieldNumber = 3,
    kHeightNumFieldNumber = 4,
  };
  // repeated float tpos0 = 5;
  int tpos0_size() const;
  private:
  int _internal_tpos0_size() const;

  public:
  void clear_tpos0() ;
  float tpos0(int index) const;
  void set_tpos0(int index, float value);
  void add_tpos0(float value);
  const ::google::protobuf::RepeatedField<float>& tpos0() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos0();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos0() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos0();

  public:
  // repeated float tpos1 = 6;
  int tpos1_size() const;
  private:
  int _internal_tpos1_size() const;

  public:
  void clear_tpos1() ;
  float tpos1(int index) const;
  void set_tpos1(int index, float value);
  void add_tpos1(float value);
  const ::google::protobuf::RepeatedField<float>& tpos1() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos1();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos1() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos1();

  public:
  // repeated float tpos2 = 7;
  int tpos2_size() const;
  private:
  int _internal_tpos2_size() const;

  public:
  void clear_tpos2() ;
  float tpos2(int index) const;
  void set_tpos2(int index, float value);
  void add_tpos2(float value);
  const ::google::protobuf::RepeatedField<float>& tpos2() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos2();

  public:
  // repeated float jpos0 = 8;
  int jpos0_size() const;
  private:
  int _internal_jpos0_size() const;

  public:
  void clear_jpos0() ;
  float jpos0(int index) const;
  void set_jpos0(int index, float value);
  void add_jpos0(float value);
  const ::google::protobuf::RepeatedField<float>& jpos0() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos0();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos0() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos0();

  public:
  // repeated float jpos1 = 9;
  int jpos1_size() const;
  private:
  int _internal_jpos1_size() const;

  public:
  void clear_jpos1() ;
  float jpos1(int index) const;
  void set_jpos1(int index, float value);
  void add_jpos1(float value);
  const ::google::protobuf::RepeatedField<float>& jpos1() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos1();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos1() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos1();

  public:
  // repeated float jpos2 = 10;
  int jpos2_size() const;
  private:
  int _internal_jpos2_size() const;

  public:
  void clear_jpos2() ;
  float jpos2(int index) const;
  void set_jpos2(int index, float value);
  void add_jpos2(float value);
  const ::google::protobuf::RepeatedField<float>& jpos2() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos2();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .IndyFramework.Protobuf.HRI.PalletMaker.PalletPattern pallet_pattern = 2;
  void clear_pallet_pattern() ;
  ::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern pallet_pattern() const;
  void set_pallet_pattern(::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern value);

  private:
  ::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern _internal_pallet_pattern() const;
  void _internal_set_pallet_pattern(::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern value);

  public:
  // int32 width_num = 3;
  void clear_width_num() ;
  ::int32_t width_num() const;
  void set_width_num(::int32_t value);

  private:
  ::int32_t _internal_width_num() const;
  void _internal_set_width_num(::int32_t value);

  public:
  // int32 height_num = 4;
  void clear_height_num() ;
  ::int32_t height_num() const;
  void set_height_num(::int32_t value);

  private:
  ::int32_t _internal_height_num() const;
  void _internal_set_height_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PalletMaker)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10, 0, 59, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> tpos0_;
    ::google::protobuf::RepeatedField<float> tpos1_;
    ::google::protobuf::RepeatedField<float> tpos2_;
    ::google::protobuf::RepeatedField<float> jpos0_;
    ::google::protobuf::RepeatedField<float> jpos1_;
    ::google::protobuf::RepeatedField<float> jpos2_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    int pallet_pattern_;
    ::int32_t width_num_;
    ::int32_t height_num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ContyInitReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ContyInitReq) */ {
 public:
  inline ContyInitReq() : ContyInitReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ContyInitReq(::google::protobuf::internal::ConstantInitialized);

  ContyInitReq(const ContyInitReq& from);
  ContyInitReq(ContyInitReq&& from) noexcept
    : ContyInitReq() {
    *this = ::std::move(from);
  }

  inline ContyInitReq& operator=(const ContyInitReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContyInitReq& operator=(ContyInitReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContyInitReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContyInitReq* internal_default_instance() {
    return reinterpret_cast<const ContyInitReq*>(
               &_ContyInitReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ContyInitReq& a, ContyInitReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ContyInitReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContyInitReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContyInitReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ContyInitReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ContyInitReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ContyInitReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ContyInitReq";
  }
  protected:
  explicit ContyInitReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ContyInitReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ContyInitRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ContyInitRes) */ {
 public:
  inline ContyInitRes() : ContyInitRes(nullptr) {}
  ~ContyInitRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ContyInitRes(::google::protobuf::internal::ConstantInitialized);

  ContyInitRes(const ContyInitRes& from);
  ContyInitRes(ContyInitRes&& from) noexcept
    : ContyInitRes() {
    *this = ::std::move(from);
  }

  inline ContyInitRes& operator=(const ContyInitRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContyInitRes& operator=(ContyInitRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContyInitRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContyInitRes* internal_default_instance() {
    return reinterpret_cast<const ContyInitRes*>(
               &_ContyInitRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ContyInitRes& a, ContyInitRes& b) {
    a.Swap(&b);
  }
  inline void Swap(ContyInitRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContyInitRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContyInitRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ContyInitRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContyInitRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ContyInitRes& from) {
    ContyInitRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContyInitRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ContyInitRes";
  }
  protected:
  explicit ContyInitRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoreFwVersFieldNumber = 41,
    kJointUpperLimitsFieldNumber = 43,
    kJointLowerLimitsFieldNumber = 44,
    kRobotNameFieldNumber = 1,
    kRobotSnFieldNumber = 3,
    kCbIpFieldNumber = 10,
    kCbSnFieldNumber = 11,
    kControllerVerFieldNumber = 20,
    kControllerDetailFieldNumber = 21,
    kControllerDateFieldNumber = 22,
    kServerVerFieldNumber = 23,
    kServerDetailFieldNumber = 24,
    kServerDateFieldNumber = 25,
    kConfigPathFieldNumber = 30,
    kProgramPathFieldNumber = 31,
    kIndexProgramPathFieldNumber = 32,
    kServerLogPathFieldNumber = 33,
    kRtLogPathFieldNumber = 34,
    kIoFwVerFieldNumber = 40,
    kEndtoolFwVerFieldNumber = 42,
    kSystemTimeFieldNumber = 50,
    kRobotDofFieldNumber = 2,
    kRobotPayloadFieldNumber = 4,
    kTeleopLoadedFieldNumber = 5,
    kCalibratedFieldNumber = 6,
  };
  // repeated string core_fw_vers = 41;
  int core_fw_vers_size() const;
  private:
  int _internal_core_fw_vers_size() const;

  public:
  void clear_core_fw_vers() ;
  const std::string& core_fw_vers(int index) const;
  std::string* mutable_core_fw_vers(int index);
  void set_core_fw_vers(int index, const std::string& value);
  void set_core_fw_vers(int index, std::string&& value);
  void set_core_fw_vers(int index, const char* value);
  void set_core_fw_vers(int index, const char* value, std::size_t size);
  void set_core_fw_vers(int index, absl::string_view value);
  std::string* add_core_fw_vers();
  void add_core_fw_vers(const std::string& value);
  void add_core_fw_vers(std::string&& value);
  void add_core_fw_vers(const char* value);
  void add_core_fw_vers(const char* value, std::size_t size);
  void add_core_fw_vers(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& core_fw_vers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_core_fw_vers();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_core_fw_vers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_core_fw_vers();

  public:
  // repeated float joint_upper_limits = 43;
  int joint_upper_limits_size() const;
  private:
  int _internal_joint_upper_limits_size() const;

  public:
  void clear_joint_upper_limits() ;
  float joint_upper_limits(int index) const;
  void set_joint_upper_limits(int index, float value);
  void add_joint_upper_limits(float value);
  const ::google::protobuf::RepeatedField<float>& joint_upper_limits() const;
  ::google::protobuf::RepeatedField<float>* mutable_joint_upper_limits();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_joint_upper_limits() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_joint_upper_limits();

  public:
  // repeated float joint_lower_limits = 44;
  int joint_lower_limits_size() const;
  private:
  int _internal_joint_lower_limits_size() const;

  public:
  void clear_joint_lower_limits() ;
  float joint_lower_limits(int index) const;
  void set_joint_lower_limits(int index, float value);
  void add_joint_lower_limits(float value);
  const ::google::protobuf::RepeatedField<float>& joint_lower_limits() const;
  ::google::protobuf::RepeatedField<float>* mutable_joint_lower_limits();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_joint_lower_limits() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_joint_lower_limits();

  public:
  // string robot_name = 1;
  void clear_robot_name() ;
  const std::string& robot_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_robot_name(Arg_&& arg, Args_... args);
  std::string* mutable_robot_name();
  PROTOBUF_NODISCARD std::string* release_robot_name();
  void set_allocated_robot_name(std::string* ptr);

  private:
  const std::string& _internal_robot_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_robot_name(
      const std::string& value);
  std::string* _internal_mutable_robot_name();

  public:
  // string robot_sn = 3;
  void clear_robot_sn() ;
  const std::string& robot_sn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_robot_sn(Arg_&& arg, Args_... args);
  std::string* mutable_robot_sn();
  PROTOBUF_NODISCARD std::string* release_robot_sn();
  void set_allocated_robot_sn(std::string* ptr);

  private:
  const std::string& _internal_robot_sn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_robot_sn(
      const std::string& value);
  std::string* _internal_mutable_robot_sn();

  public:
  // string cb_ip = 10;
  void clear_cb_ip() ;
  const std::string& cb_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cb_ip(Arg_&& arg, Args_... args);
  std::string* mutable_cb_ip();
  PROTOBUF_NODISCARD std::string* release_cb_ip();
  void set_allocated_cb_ip(std::string* ptr);

  private:
  const std::string& _internal_cb_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cb_ip(
      const std::string& value);
  std::string* _internal_mutable_cb_ip();

  public:
  // string cb_sn = 11;
  void clear_cb_sn() ;
  const std::string& cb_sn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cb_sn(Arg_&& arg, Args_... args);
  std::string* mutable_cb_sn();
  PROTOBUF_NODISCARD std::string* release_cb_sn();
  void set_allocated_cb_sn(std::string* ptr);

  private:
  const std::string& _internal_cb_sn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cb_sn(
      const std::string& value);
  std::string* _internal_mutable_cb_sn();

  public:
  // string controller_ver = 20;
  void clear_controller_ver() ;
  const std::string& controller_ver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_controller_ver(Arg_&& arg, Args_... args);
  std::string* mutable_controller_ver();
  PROTOBUF_NODISCARD std::string* release_controller_ver();
  void set_allocated_controller_ver(std::string* ptr);

  private:
  const std::string& _internal_controller_ver() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_controller_ver(
      const std::string& value);
  std::string* _internal_mutable_controller_ver();

  public:
  // string controller_detail = 21;
  void clear_controller_detail() ;
  const std::string& controller_detail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_controller_detail(Arg_&& arg, Args_... args);
  std::string* mutable_controller_detail();
  PROTOBUF_NODISCARD std::string* release_controller_detail();
  void set_allocated_controller_detail(std::string* ptr);

  private:
  const std::string& _internal_controller_detail() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_controller_detail(
      const std::string& value);
  std::string* _internal_mutable_controller_detail();

  public:
  // string controller_date = 22;
  void clear_controller_date() ;
  const std::string& controller_date() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_controller_date(Arg_&& arg, Args_... args);
  std::string* mutable_controller_date();
  PROTOBUF_NODISCARD std::string* release_controller_date();
  void set_allocated_controller_date(std::string* ptr);

  private:
  const std::string& _internal_controller_date() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_controller_date(
      const std::string& value);
  std::string* _internal_mutable_controller_date();

  public:
  // string server_ver = 23;
  void clear_server_ver() ;
  const std::string& server_ver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server_ver(Arg_&& arg, Args_... args);
  std::string* mutable_server_ver();
  PROTOBUF_NODISCARD std::string* release_server_ver();
  void set_allocated_server_ver(std::string* ptr);

  private:
  const std::string& _internal_server_ver() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_ver(
      const std::string& value);
  std::string* _internal_mutable_server_ver();

  public:
  // string server_detail = 24;
  void clear_server_detail() ;
  const std::string& server_detail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server_detail(Arg_&& arg, Args_... args);
  std::string* mutable_server_detail();
  PROTOBUF_NODISCARD std::string* release_server_detail();
  void set_allocated_server_detail(std::string* ptr);

  private:
  const std::string& _internal_server_detail() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_detail(
      const std::string& value);
  std::string* _internal_mutable_server_detail();

  public:
  // string server_date = 25;
  void clear_server_date() ;
  const std::string& server_date() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server_date(Arg_&& arg, Args_... args);
  std::string* mutable_server_date();
  PROTOBUF_NODISCARD std::string* release_server_date();
  void set_allocated_server_date(std::string* ptr);

  private:
  const std::string& _internal_server_date() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_date(
      const std::string& value);
  std::string* _internal_mutable_server_date();

  public:
  // string config_path = 30;
  void clear_config_path() ;
  const std::string& config_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_config_path(Arg_&& arg, Args_... args);
  std::string* mutable_config_path();
  PROTOBUF_NODISCARD std::string* release_config_path();
  void set_allocated_config_path(std::string* ptr);

  private:
  const std::string& _internal_config_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_config_path(
      const std::string& value);
  std::string* _internal_mutable_config_path();

  public:
  // string program_path = 31;
  void clear_program_path() ;
  const std::string& program_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_program_path(Arg_&& arg, Args_... args);
  std::string* mutable_program_path();
  PROTOBUF_NODISCARD std::string* release_program_path();
  void set_allocated_program_path(std::string* ptr);

  private:
  const std::string& _internal_program_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_program_path(
      const std::string& value);
  std::string* _internal_mutable_program_path();

  public:
  // string index_program_path = 32;
  void clear_index_program_path() ;
  const std::string& index_program_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_index_program_path(Arg_&& arg, Args_... args);
  std::string* mutable_index_program_path();
  PROTOBUF_NODISCARD std::string* release_index_program_path();
  void set_allocated_index_program_path(std::string* ptr);

  private:
  const std::string& _internal_index_program_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_index_program_path(
      const std::string& value);
  std::string* _internal_mutable_index_program_path();

  public:
  // string server_log_path = 33;
  void clear_server_log_path() ;
  const std::string& server_log_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server_log_path(Arg_&& arg, Args_... args);
  std::string* mutable_server_log_path();
  PROTOBUF_NODISCARD std::string* release_server_log_path();
  void set_allocated_server_log_path(std::string* ptr);

  private:
  const std::string& _internal_server_log_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_log_path(
      const std::string& value);
  std::string* _internal_mutable_server_log_path();

  public:
  // string rt_log_path = 34;
  void clear_rt_log_path() ;
  const std::string& rt_log_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rt_log_path(Arg_&& arg, Args_... args);
  std::string* mutable_rt_log_path();
  PROTOBUF_NODISCARD std::string* release_rt_log_path();
  void set_allocated_rt_log_path(std::string* ptr);

  private:
  const std::string& _internal_rt_log_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rt_log_path(
      const std::string& value);
  std::string* _internal_mutable_rt_log_path();

  public:
  // string io_fw_ver = 40;
  void clear_io_fw_ver() ;
  const std::string& io_fw_ver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_io_fw_ver(Arg_&& arg, Args_... args);
  std::string* mutable_io_fw_ver();
  PROTOBUF_NODISCARD std::string* release_io_fw_ver();
  void set_allocated_io_fw_ver(std::string* ptr);

  private:
  const std::string& _internal_io_fw_ver() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_io_fw_ver(
      const std::string& value);
  std::string* _internal_mutable_io_fw_ver();

  public:
  // string endtool_fw_ver = 42;
  void clear_endtool_fw_ver() ;
  const std::string& endtool_fw_ver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_endtool_fw_ver(Arg_&& arg, Args_... args);
  std::string* mutable_endtool_fw_ver();
  PROTOBUF_NODISCARD std::string* release_endtool_fw_ver();
  void set_allocated_endtool_fw_ver(std::string* ptr);

  private:
  const std::string& _internal_endtool_fw_ver() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endtool_fw_ver(
      const std::string& value);
  std::string* _internal_mutable_endtool_fw_ver();

  public:
  // .IndyFramework.Protobuf.HRI.DateTime system_time = 50;
  bool has_system_time() const;
  void clear_system_time() ;
  const ::IndyFramework::Protobuf::HRI::DateTime& system_time() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::DateTime* release_system_time();
  ::IndyFramework::Protobuf::HRI::DateTime* mutable_system_time();
  void set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value);
  void unsafe_arena_set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value);
  ::IndyFramework::Protobuf::HRI::DateTime* unsafe_arena_release_system_time();

  private:
  const ::IndyFramework::Protobuf::HRI::DateTime& _internal_system_time() const;
  ::IndyFramework::Protobuf::HRI::DateTime* _internal_mutable_system_time();

  public:
  // int32 robot_dof = 2;
  void clear_robot_dof() ;
  ::int32_t robot_dof() const;
  void set_robot_dof(::int32_t value);

  private:
  ::int32_t _internal_robot_dof() const;
  void _internal_set_robot_dof(::int32_t value);

  public:
  // float robot_payload = 4;
  void clear_robot_payload() ;
  float robot_payload() const;
  void set_robot_payload(float value);

  private:
  float _internal_robot_payload() const;
  void _internal_set_robot_payload(float value);

  public:
  // bool teleop_loaded = 5;
  void clear_teleop_loaded() ;
  bool teleop_loaded() const;
  void set_teleop_loaded(bool value);

  private:
  bool _internal_teleop_loaded() const;
  void _internal_set_teleop_loaded(bool value);

  public:
  // bool calibrated = 6;
  void clear_calibrated() ;
  bool calibrated() const;
  void set_calibrated(bool value);

  private:
  bool _internal_calibrated() const;
  void _internal_set_calibrated(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ContyInitRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 25, 1, 282, 9> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> core_fw_vers_;
    ::google::protobuf::RepeatedField<float> joint_upper_limits_;
    ::google::protobuf::RepeatedField<float> joint_lower_limits_;
    ::google::protobuf::internal::ArenaStringPtr robot_name_;
    ::google::protobuf::internal::ArenaStringPtr robot_sn_;
    ::google::protobuf::internal::ArenaStringPtr cb_ip_;
    ::google::protobuf::internal::ArenaStringPtr cb_sn_;
    ::google::protobuf::internal::ArenaStringPtr controller_ver_;
    ::google::protobuf::internal::ArenaStringPtr controller_detail_;
    ::google::protobuf::internal::ArenaStringPtr controller_date_;
    ::google::protobuf::internal::ArenaStringPtr server_ver_;
    ::google::protobuf::internal::ArenaStringPtr server_detail_;
    ::google::protobuf::internal::ArenaStringPtr server_date_;
    ::google::protobuf::internal::ArenaStringPtr config_path_;
    ::google::protobuf::internal::ArenaStringPtr program_path_;
    ::google::protobuf::internal::ArenaStringPtr index_program_path_;
    ::google::protobuf::internal::ArenaStringPtr server_log_path_;
    ::google::protobuf::internal::ArenaStringPtr rt_log_path_;
    ::google::protobuf::internal::ArenaStringPtr io_fw_ver_;
    ::google::protobuf::internal::ArenaStringPtr endtool_fw_ver_;
    ::IndyFramework::Protobuf::HRI::DateTime* system_time_;
    ::int32_t robot_dof_;
    float robot_payload_;
    bool teleop_loaded_;
    bool calibrated_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RobotData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RobotData) */ {
 public:
  inline RobotData() : RobotData(nullptr) {}
  ~RobotData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RobotData(::google::protobuf::internal::ConstantInitialized);

  RobotData(const RobotData& from);
  RobotData(RobotData&& from) noexcept
    : RobotData() {
    *this = ::std::move(from);
  }

  inline RobotData& operator=(const RobotData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RobotData& operator=(RobotData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RobotData& default_instance() {
    return *internal_default_instance();
  }
  static inline const RobotData* internal_default_instance() {
    return reinterpret_cast<const RobotData*>(
               &_RobotData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RobotData& a, RobotData& b) {
    a.Swap(&b);
  }
  inline void Swap(RobotData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RobotData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RobotData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RobotData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RobotData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RobotData& from) {
    RobotData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RobotData";
  }
  protected:
  explicit RobotData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoFieldNumber = 10,
    kDiFieldNumber = 11,
    kAoFieldNumber = 12,
    kAiFieldNumber = 13,
    kEndDoFieldNumber = 14,
    kEndDiFieldNumber = 15,
    kEndAoFieldNumber = 16,
    kEndAiFieldNumber = 17,
    kJointServosFieldNumber = 21,
    kJointBrakesFieldNumber = 22,
    kTemperaturesFieldNumber = 30,
    kVoltagesFieldNumber = 31,
    kCurrentsFieldNumber = 32,
    kStatusCodesFieldNumber = 33,
    kSystemTimeFieldNumber = 50,
    kResponseFieldNumber = 100,
    kRobotStateFieldNumber = 20,
  };
  // repeated .IndyFramework.Protobuf.HRI.DigitalSignal do = 10;
  int do__size() const;
  private:
  int _internal_do__size() const;

  public:
  void clear_do_() ;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* mutable_do_(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
      mutable_do_();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>& _internal_do_() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>* _internal_mutable_do_();
  public:
  const ::IndyFramework::Protobuf::HRI::DigitalSignal& do_(int index) const;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* add_do_();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
      do_() const;
  // repeated .IndyFramework.Protobuf.HRI.DigitalSignal di = 11;
  int di_size() const;
  private:
  int _internal_di_size() const;

  public:
  void clear_di() ;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* mutable_di(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
      mutable_di();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>& _internal_di() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>* _internal_mutable_di();
  public:
  const ::IndyFramework::Protobuf::HRI::DigitalSignal& di(int index) const;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* add_di();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
      di() const;
  // repeated int32 ao = 12;
  int ao_size() const;
  private:
  int _internal_ao_size() const;

  public:
  void clear_ao() ;
  ::int32_t ao(int index) const;
  void set_ao(int index, ::int32_t value);
  void add_ao(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& ao() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_ao();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_ao() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_ao();

  public:
  // repeated int32 ai = 13;
  int ai_size() const;
  private:
  int _internal_ai_size() const;

  public:
  void clear_ai() ;
  ::int32_t ai(int index) const;
  void set_ai(int index, ::int32_t value);
  void add_ai(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& ai() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_ai();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_ai() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_ai();

  public:
  // repeated .IndyFramework.Protobuf.HRI.EndtoolSignal end_do = 14;
  int end_do_size() const;
  private:
  int _internal_end_do_size() const;

  public:
  void clear_end_do() ;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* mutable_end_do(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
      mutable_end_do();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>& _internal_end_do() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>* _internal_mutable_end_do();
  public:
  const ::IndyFramework::Protobuf::HRI::EndtoolSignal& end_do(int index) const;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* add_end_do();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
      end_do() const;
  // repeated .IndyFramework.Protobuf.HRI.EndtoolSignal end_di = 15;
  int end_di_size() const;
  private:
  int _internal_end_di_size() const;

  public:
  void clear_end_di() ;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* mutable_end_di(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
      mutable_end_di();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>& _internal_end_di() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>* _internal_mutable_end_di();
  public:
  const ::IndyFramework::Protobuf::HRI::EndtoolSignal& end_di(int index) const;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* add_end_di();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
      end_di() const;
  // repeated int32 end_ao = 16;
  int end_ao_size() const;
  private:
  int _internal_end_ao_size() const;

  public:
  void clear_end_ao() ;
  ::int32_t end_ao(int index) const;
  void set_end_ao(int index, ::int32_t value);
  void add_end_ao(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& end_ao() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_end_ao();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_end_ao() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_end_ao();

  public:
  // repeated int32 end_ai = 17;
  int end_ai_size() const;
  private:
  int _internal_end_ai_size() const;

  public:
  void clear_end_ai() ;
  ::int32_t end_ai(int index) const;
  void set_end_ai(int index, ::int32_t value);
  void add_end_ai(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& end_ai() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_end_ai();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_end_ai() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_end_ai();

  public:
  // repeated bool joint_servos = 21;
  int joint_servos_size() const;
  private:
  int _internal_joint_servos_size() const;

  public:
  void clear_joint_servos() ;
  bool joint_servos(int index) const;
  void set_joint_servos(int index, bool value);
  void add_joint_servos(bool value);
  const ::google::protobuf::RepeatedField<bool>& joint_servos() const;
  ::google::protobuf::RepeatedField<bool>* mutable_joint_servos();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_joint_servos() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_joint_servos();

  public:
  // repeated bool joint_brakes = 22;
  int joint_brakes_size() const;
  private:
  int _internal_joint_brakes_size() const;

  public:
  void clear_joint_brakes() ;
  bool joint_brakes(int index) const;
  void set_joint_brakes(int index, bool value);
  void add_joint_brakes(bool value);
  const ::google::protobuf::RepeatedField<bool>& joint_brakes() const;
  ::google::protobuf::RepeatedField<bool>* mutable_joint_brakes();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_joint_brakes() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_joint_brakes();

  public:
  // repeated float temperatures = 30;
  int temperatures_size() const;
  private:
  int _internal_temperatures_size() const;

  public:
  void clear_temperatures() ;
  float temperatures(int index) const;
  void set_temperatures(int index, float value);
  void add_temperatures(float value);
  const ::google::protobuf::RepeatedField<float>& temperatures() const;
  ::google::protobuf::RepeatedField<float>* mutable_temperatures();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_temperatures() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_temperatures();

  public:
  // repeated float voltages = 31;
  int voltages_size() const;
  private:
  int _internal_voltages_size() const;

  public:
  void clear_voltages() ;
  float voltages(int index) const;
  void set_voltages(int index, float value);
  void add_voltages(float value);
  const ::google::protobuf::RepeatedField<float>& voltages() const;
  ::google::protobuf::RepeatedField<float>* mutable_voltages();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_voltages() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_voltages();

  public:
  // repeated float currents = 32;
  int currents_size() const;
  private:
  int _internal_currents_size() const;

  public:
  void clear_currents() ;
  float currents(int index) const;
  void set_currents(int index, float value);
  void add_currents(float value);
  const ::google::protobuf::RepeatedField<float>& currents() const;
  ::google::protobuf::RepeatedField<float>* mutable_currents();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_currents() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_currents();

  public:
  // repeated string status_codes = 33;
  int status_codes_size() const;
  private:
  int _internal_status_codes_size() const;

  public:
  void clear_status_codes() ;
  const std::string& status_codes(int index) const;
  std::string* mutable_status_codes(int index);
  void set_status_codes(int index, const std::string& value);
  void set_status_codes(int index, std::string&& value);
  void set_status_codes(int index, const char* value);
  void set_status_codes(int index, const char* value, std::size_t size);
  void set_status_codes(int index, absl::string_view value);
  std::string* add_status_codes();
  void add_status_codes(const std::string& value);
  void add_status_codes(std::string&& value);
  void add_status_codes(const char* value);
  void add_status_codes(const char* value, std::size_t size);
  void add_status_codes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& status_codes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_status_codes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_status_codes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_status_codes();

  public:
  // .IndyFramework.Protobuf.HRI.DateTime system_time = 50;
  bool has_system_time() const;
  void clear_system_time() ;
  const ::IndyFramework::Protobuf::HRI::DateTime& system_time() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::DateTime* release_system_time();
  ::IndyFramework::Protobuf::HRI::DateTime* mutable_system_time();
  void set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value);
  void unsafe_arena_set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value);
  ::IndyFramework::Protobuf::HRI::DateTime* unsafe_arena_release_system_time();

  private:
  const ::IndyFramework::Protobuf::HRI::DateTime& _internal_system_time() const;
  ::IndyFramework::Protobuf::HRI::DateTime* _internal_mutable_system_time();

  public:
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // bool robot_state = 20;
  void clear_robot_state() ;
  bool robot_state() const;
  void set_robot_state(bool value);

  private:
  bool _internal_robot_state() const;
  void _internal_set_robot_state(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RobotData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 17, 6, 73, 15> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal > do__;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal > di_;
    ::google::protobuf::RepeatedField<::int32_t> ao_;
    mutable ::google::protobuf::internal::CachedSize _ao_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> ai_;
    mutable ::google::protobuf::internal::CachedSize _ai_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal > end_do_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal > end_di_;
    ::google::protobuf::RepeatedField<::int32_t> end_ao_;
    mutable ::google::protobuf::internal::CachedSize _end_ao_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> end_ai_;
    mutable ::google::protobuf::internal::CachedSize _end_ai_cached_byte_size_;
    ::google::protobuf::RepeatedField<bool> joint_servos_;
    ::google::protobuf::RepeatedField<bool> joint_brakes_;
    ::google::protobuf::RepeatedField<float> temperatures_;
    ::google::protobuf::RepeatedField<float> voltages_;
    ::google::protobuf::RepeatedField<float> currents_;
    ::google::protobuf::RepeatedPtrField<std::string> status_codes_;
    ::IndyFramework::Protobuf::HRI::DateTime* system_time_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    bool robot_state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ProgramData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ProgramData) */ {
 public:
  inline ProgramData() : ProgramData(nullptr) {}
  ~ProgramData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ProgramData(::google::protobuf::internal::ConstantInitialized);

  ProgramData(const ProgramData& from);
  ProgramData(ProgramData&& from) noexcept
    : ProgramData() {
    *this = ::std::move(from);
  }

  inline ProgramData& operator=(const ProgramData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProgramData& operator=(ProgramData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProgramData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProgramData* internal_default_instance() {
    return reinterpret_cast<const ProgramData*>(
               &_ProgramData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ProgramData& a, ProgramData& b) {
    a.Swap(&b);
  }
  inline void Swap(ProgramData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProgramData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProgramData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProgramData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProgramData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ProgramData& from) {
    ProgramData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProgramData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ProgramData";
  }
  protected:
  explicit ProgramData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramTimeFieldNumber = 4,
    kProgramNameFieldNumber = 5,
    kProgramAlarmFieldNumber = 6,
    kProgramAnnotationFieldNumber = 7,
    kResponseFieldNumber = 100,
    kProgramStateFieldNumber = 1,
    kCmdIdFieldNumber = 2,
    kSpeedRatioFieldNumber = 3,
  };
  // string program_time = 4;
  void clear_program_time() ;
  const std::string& program_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_program_time(Arg_&& arg, Args_... args);
  std::string* mutable_program_time();
  PROTOBUF_NODISCARD std::string* release_program_time();
  void set_allocated_program_time(std::string* ptr);

  private:
  const std::string& _internal_program_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_program_time(
      const std::string& value);
  std::string* _internal_mutable_program_time();

  public:
  // string program_name = 5;
  void clear_program_name() ;
  const std::string& program_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_program_name(Arg_&& arg, Args_... args);
  std::string* mutable_program_name();
  PROTOBUF_NODISCARD std::string* release_program_name();
  void set_allocated_program_name(std::string* ptr);

  private:
  const std::string& _internal_program_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_program_name(
      const std::string& value);
  std::string* _internal_mutable_program_name();

  public:
  // string program_alarm = 6;
  void clear_program_alarm() ;
  const std::string& program_alarm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_program_alarm(Arg_&& arg, Args_... args);
  std::string* mutable_program_alarm();
  PROTOBUF_NODISCARD std::string* release_program_alarm();
  void set_allocated_program_alarm(std::string* ptr);

  private:
  const std::string& _internal_program_alarm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_program_alarm(
      const std::string& value);
  std::string* _internal_mutable_program_alarm();

  public:
  // string program_annotation = 7;
  void clear_program_annotation() ;
  const std::string& program_annotation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_program_annotation(Arg_&& arg, Args_... args);
  std::string* mutable_program_annotation();
  PROTOBUF_NODISCARD std::string* release_program_annotation();
  void set_allocated_program_annotation(std::string* ptr);

  private:
  const std::string& _internal_program_annotation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_program_annotation(
      const std::string& value);
  std::string* _internal_mutable_program_annotation();

  public:
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // .Nrmk.IndyFramework.ProgramState program_state = 1;
  void clear_program_state() ;
  ::Nrmk::IndyFramework::ProgramState program_state() const;
  void set_program_state(::Nrmk::IndyFramework::ProgramState value);

  private:
  ::Nrmk::IndyFramework::ProgramState _internal_program_state() const;
  void _internal_set_program_state(::Nrmk::IndyFramework::ProgramState value);

  public:
  // int32 cmd_id = 2;
  void clear_cmd_id() ;
  ::int32_t cmd_id() const;
  void set_cmd_id(::int32_t value);

  private:
  ::int32_t _internal_cmd_id() const;
  void _internal_set_cmd_id(::int32_t value);

  public:
  // int32 speed_ratio = 3;
  void clear_speed_ratio() ;
  ::int32_t speed_ratio() const;
  void set_speed_ratio(::int32_t value);

  private:
  ::int32_t _internal_speed_ratio() const;
  void _internal_set_speed_ratio(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ProgramData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8, 1, 110, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr program_time_;
    ::google::protobuf::internal::ArenaStringPtr program_name_;
    ::google::protobuf::internal::ArenaStringPtr program_alarm_;
    ::google::protobuf::internal::ArenaStringPtr program_annotation_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    int program_state_;
    ::int32_t cmd_id_;
    ::int32_t speed_ratio_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ViolationMsgCode final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ViolationMsgCode) */ {
 public:
  inline ViolationMsgCode() : ViolationMsgCode(nullptr) {}
  ~ViolationMsgCode() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ViolationMsgCode(::google::protobuf::internal::ConstantInitialized);

  ViolationMsgCode(const ViolationMsgCode& from);
  ViolationMsgCode(ViolationMsgCode&& from) noexcept
    : ViolationMsgCode() {
    *this = ::std::move(from);
  }

  inline ViolationMsgCode& operator=(const ViolationMsgCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViolationMsgCode& operator=(ViolationMsgCode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ViolationMsgCode& default_instance() {
    return *internal_default_instance();
  }
  static inline const ViolationMsgCode* internal_default_instance() {
    return reinterpret_cast<const ViolationMsgCode*>(
               &_ViolationMsgCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ViolationMsgCode& a, ViolationMsgCode& b) {
    a.Swap(&b);
  }
  inline void Swap(ViolationMsgCode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ViolationMsgCode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ViolationMsgCode* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ViolationMsgCode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ViolationMsgCode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ViolationMsgCode& from) {
    ViolationMsgCode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViolationMsgCode* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ViolationMsgCode";
  }
  protected:
  explicit ViolationMsgCode(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kViolationFieldNumber = 10,
    kViolationCodeFieldNumber = 21,
  };
  // string violation = 10;
  void clear_violation() ;
  const std::string& violation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_violation(Arg_&& arg, Args_... args);
  std::string* mutable_violation();
  PROTOBUF_NODISCARD std::string* release_violation();
  void set_allocated_violation(std::string* ptr);

  private:
  const std::string& _internal_violation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_violation(
      const std::string& value);
  std::string* _internal_mutable_violation();

  public:
  // uint64 violation_code = 21;
  void clear_violation_code() ;
  ::uint64_t violation_code() const;
  void set_violation_code(::uint64_t value);

  private:
  ::uint64_t _internal_violation_code() const;
  void _internal_set_violation_code(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ViolationMsgCode)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr violation_;
    ::uint64_t violation_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ControlData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ControlData) */ {
 public:
  inline ControlData() : ControlData(nullptr) {}
  ~ControlData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ControlData(::google::protobuf::internal::ConstantInitialized);

  ControlData(const ControlData& from);
  ControlData(ControlData&& from) noexcept
    : ControlData() {
    *this = ::std::move(from);
  }

  inline ControlData& operator=(const ControlData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlData& operator=(ControlData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ControlData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ControlData* internal_default_instance() {
    return reinterpret_cast<const ControlData*>(
               &_ControlData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ControlData& a, ControlData& b) {
    a.Swap(&b);
  }
  inline void Swap(ControlData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ControlData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ControlData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ControlData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ControlData& from) {
    ControlData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ControlData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ControlData";
  }
  protected:
  explicit ControlData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 1,
    kJvelFieldNumber = 2,
    kTposFieldNumber = 3,
    kTvelFieldNumber = 4,
    kRefFrameFieldNumber = 5,
    kToolFrameFieldNumber = 6,
    kViolationQueueFieldNumber = 25,
    kRefFrameNameFieldNumber = 7,
    kToolFrameNameFieldNumber = 8,
    kControlTimeFieldNumber = 10,
    kViolationFieldNumber = 20,
    kResponseFieldNumber = 100,
    kControlStateFieldNumber = 11,
    kIsSimulationModeFieldNumber = 12,
    kIsAutoModeFieldNumber = 13,
    kIsTargetReachedFieldNumber = 14,
    kIsKeyConnectedFieldNumber = 15,
    kViolationCodeFieldNumber = 21,
    kIsEnablerOnFieldNumber = 16,
  };
  // repeated float jpos = 1;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // repeated float jvel = 2;
  int jvel_size() const;
  private:
  int _internal_jvel_size() const;

  public:
  void clear_jvel() ;
  float jvel(int index) const;
  void set_jvel(int index, float value);
  void add_jvel(float value);
  const ::google::protobuf::RepeatedField<float>& jvel() const;
  ::google::protobuf::RepeatedField<float>* mutable_jvel();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jvel() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jvel();

  public:
  // repeated float tpos = 3;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // repeated float tvel = 4;
  int tvel_size() const;
  private:
  int _internal_tvel_size() const;

  public:
  void clear_tvel() ;
  float tvel(int index) const;
  void set_tvel(int index, float value);
  void add_tvel(float value);
  const ::google::protobuf::RepeatedField<float>& tvel() const;
  ::google::protobuf::RepeatedField<float>* mutable_tvel();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tvel() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tvel();

  public:
  // repeated float ref_frame = 5;
  int ref_frame_size() const;
  private:
  int _internal_ref_frame_size() const;

  public:
  void clear_ref_frame() ;
  float ref_frame(int index) const;
  void set_ref_frame(int index, float value);
  void add_ref_frame(float value);
  const ::google::protobuf::RepeatedField<float>& ref_frame() const;
  ::google::protobuf::RepeatedField<float>* mutable_ref_frame();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_ref_frame() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_ref_frame();

  public:
  // repeated float tool_frame = 6;
  int tool_frame_size() const;
  private:
  int _internal_tool_frame_size() const;

  public:
  void clear_tool_frame() ;
  float tool_frame(int index) const;
  void set_tool_frame(int index, float value);
  void add_tool_frame(float value);
  const ::google::protobuf::RepeatedField<float>& tool_frame() const;
  ::google::protobuf::RepeatedField<float>* mutable_tool_frame();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tool_frame() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tool_frame();

  public:
  // repeated .IndyFramework.Protobuf.HRI.ViolationMsgCode violation_queue = 25;
  int violation_queue_size() const;
  private:
  int _internal_violation_queue_size() const;

  public:
  void clear_violation_queue() ;
  ::IndyFramework::Protobuf::HRI::ViolationMsgCode* mutable_violation_queue(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ViolationMsgCode >*
      mutable_violation_queue();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ViolationMsgCode>& _internal_violation_queue() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ViolationMsgCode>* _internal_mutable_violation_queue();
  public:
  const ::IndyFramework::Protobuf::HRI::ViolationMsgCode& violation_queue(int index) const;
  ::IndyFramework::Protobuf::HRI::ViolationMsgCode* add_violation_queue();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ViolationMsgCode >&
      violation_queue() const;
  // string ref_frame_name = 7;
  void clear_ref_frame_name() ;
  const std::string& ref_frame_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ref_frame_name(Arg_&& arg, Args_... args);
  std::string* mutable_ref_frame_name();
  PROTOBUF_NODISCARD std::string* release_ref_frame_name();
  void set_allocated_ref_frame_name(std::string* ptr);

  private:
  const std::string& _internal_ref_frame_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ref_frame_name(
      const std::string& value);
  std::string* _internal_mutable_ref_frame_name();

  public:
  // string tool_frame_name = 8;
  void clear_tool_frame_name() ;
  const std::string& tool_frame_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tool_frame_name(Arg_&& arg, Args_... args);
  std::string* mutable_tool_frame_name();
  PROTOBUF_NODISCARD std::string* release_tool_frame_name();
  void set_allocated_tool_frame_name(std::string* ptr);

  private:
  const std::string& _internal_tool_frame_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tool_frame_name(
      const std::string& value);
  std::string* _internal_mutable_tool_frame_name();

  public:
  // string control_time = 10;
  void clear_control_time() ;
  const std::string& control_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_control_time(Arg_&& arg, Args_... args);
  std::string* mutable_control_time();
  PROTOBUF_NODISCARD std::string* release_control_time();
  void set_allocated_control_time(std::string* ptr);

  private:
  const std::string& _internal_control_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_control_time(
      const std::string& value);
  std::string* _internal_mutable_control_time();

  public:
  // string violation = 20;
  void clear_violation() ;
  const std::string& violation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_violation(Arg_&& arg, Args_... args);
  std::string* mutable_violation();
  PROTOBUF_NODISCARD std::string* release_violation();
  void set_allocated_violation(std::string* ptr);

  private:
  const std::string& _internal_violation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_violation(
      const std::string& value);
  std::string* _internal_mutable_violation();

  public:
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // .Nrmk.IndyFramework.OpState control_state = 11;
  void clear_control_state() ;
  ::Nrmk::IndyFramework::OpState control_state() const;
  void set_control_state(::Nrmk::IndyFramework::OpState value);

  private:
  ::Nrmk::IndyFramework::OpState _internal_control_state() const;
  void _internal_set_control_state(::Nrmk::IndyFramework::OpState value);

  public:
  // bool is_simulation_mode = 12;
  void clear_is_simulation_mode() ;
  bool is_simulation_mode() const;
  void set_is_simulation_mode(bool value);

  private:
  bool _internal_is_simulation_mode() const;
  void _internal_set_is_simulation_mode(bool value);

  public:
  // bool is_auto_mode = 13;
  void clear_is_auto_mode() ;
  bool is_auto_mode() const;
  void set_is_auto_mode(bool value);

  private:
  bool _internal_is_auto_mode() const;
  void _internal_set_is_auto_mode(bool value);

  public:
  // bool is_target_reached = 14;
  void clear_is_target_reached() ;
  bool is_target_reached() const;
  void set_is_target_reached(bool value);

  private:
  bool _internal_is_target_reached() const;
  void _internal_set_is_target_reached(bool value);

  public:
  // bool is_key_connected = 15;
  void clear_is_key_connected() ;
  bool is_key_connected() const;
  void set_is_key_connected(bool value);

  private:
  bool _internal_is_key_connected() const;
  void _internal_set_is_key_connected(bool value);

  public:
  // uint64 violation_code = 21;
  void clear_violation_code() ;
  ::uint64_t violation_code() const;
  void set_violation_code(::uint64_t value);

  private:
  ::uint64_t _internal_violation_code() const;
  void _internal_set_violation_code(::uint64_t value);

  public:
  // bool is_enabler_on = 16;
  void clear_is_enabler_on() ;
  bool is_enabler_on() const;
  void set_is_enabler_on(bool value);

  private:
  bool _internal_is_enabler_on() const;
  void _internal_set_is_enabler_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ControlData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 19, 2, 113, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> jpos_;
    ::google::protobuf::RepeatedField<float> jvel_;
    ::google::protobuf::RepeatedField<float> tpos_;
    ::google::protobuf::RepeatedField<float> tvel_;
    ::google::protobuf::RepeatedField<float> ref_frame_;
    ::google::protobuf::RepeatedField<float> tool_frame_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ViolationMsgCode > violation_queue_;
    ::google::protobuf::internal::ArenaStringPtr ref_frame_name_;
    ::google::protobuf::internal::ArenaStringPtr tool_frame_name_;
    ::google::protobuf::internal::ArenaStringPtr control_time_;
    ::google::protobuf::internal::ArenaStringPtr violation_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    int control_state_;
    bool is_simulation_mode_;
    bool is_auto_mode_;
    bool is_target_reached_;
    bool is_key_connected_;
    ::uint64_t violation_code_;
    bool is_enabler_on_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class LinearData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.LinearData) */ {
 public:
  inline LinearData() : LinearData(nullptr) {}
  ~LinearData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LinearData(::google::protobuf::internal::ConstantInitialized);

  LinearData(const LinearData& from);
  LinearData(LinearData&& from) noexcept
    : LinearData() {
    *this = ::std::move(from);
  }

  inline LinearData& operator=(const LinearData& from) {
    CopyFrom(from);
    return *this;
  }
  inline LinearData& operator=(LinearData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LinearData& default_instance() {
    return *internal_default_instance();
  }
  static inline const LinearData* internal_default_instance() {
    return reinterpret_cast<const LinearData*>(
               &_LinearData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LinearData& a, LinearData& b) {
    a.Swap(&b);
  }
  inline void Swap(LinearData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LinearData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LinearData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LinearData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LinearData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LinearData& from) {
    LinearData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinearData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.LinearData";
  }
  protected:
  explicit LinearData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAxisServosFieldNumber = 2,
    kPosMmFieldNumber = 3,
    kVelMmFieldNumber = 4,
    kNumAxesFieldNumber = 1,
    kOpStateFieldNumber = 10,
  };
  // repeated bool axis_servos = 2;
  int axis_servos_size() const;
  private:
  int _internal_axis_servos_size() const;

  public:
  void clear_axis_servos() ;
  bool axis_servos(int index) const;
  void set_axis_servos(int index, bool value);
  void add_axis_servos(bool value);
  const ::google::protobuf::RepeatedField<bool>& axis_servos() const;
  ::google::protobuf::RepeatedField<bool>* mutable_axis_servos();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_axis_servos() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_axis_servos();

  public:
  // repeated float pos_mm = 3;
  int pos_mm_size() const;
  private:
  int _internal_pos_mm_size() const;

  public:
  void clear_pos_mm() ;
  float pos_mm(int index) const;
  void set_pos_mm(int index, float value);
  void add_pos_mm(float value);
  const ::google::protobuf::RepeatedField<float>& pos_mm() const;
  ::google::protobuf::RepeatedField<float>* mutable_pos_mm();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_pos_mm() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_pos_mm();

  public:
  // repeated float vel_mm = 4;
  int vel_mm_size() const;
  private:
  int _internal_vel_mm_size() const;

  public:
  void clear_vel_mm() ;
  float vel_mm(int index) const;
  void set_vel_mm(int index, float value);
  void add_vel_mm(float value);
  const ::google::protobuf::RepeatedField<float>& vel_mm() const;
  ::google::protobuf::RepeatedField<float>* mutable_vel_mm();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_vel_mm() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_vel_mm();

  public:
  // uint32 num_axes = 1;
  void clear_num_axes() ;
  ::uint32_t num_axes() const;
  void set_num_axes(::uint32_t value);

  private:
  ::uint32_t _internal_num_axes() const;
  void _internal_set_num_axes(::uint32_t value);

  public:
  // .Nrmk.IndyFramework.OpState op_state = 10;
  void clear_op_state() ;
  ::Nrmk::IndyFramework::OpState op_state() const;
  void set_op_state(::Nrmk::IndyFramework::OpState value);

  private:
  ::Nrmk::IndyFramework::OpState _internal_op_state() const;
  void _internal_set_op_state(::Nrmk::IndyFramework::OpState value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.LinearData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<bool> axis_servos_;
    ::google::protobuf::RepeatedField<float> pos_mm_;
    ::google::protobuf::RepeatedField<float> vel_mm_;
    ::uint32_t num_axes_;
    int op_state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class JogJointReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.JogJointReq) */ {
 public:
  inline JogJointReq() : JogJointReq(nullptr) {}
  ~JogJointReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JogJointReq(::google::protobuf::internal::ConstantInitialized);

  JogJointReq(const JogJointReq& from);
  JogJointReq(JogJointReq&& from) noexcept
    : JogJointReq() {
    *this = ::std::move(from);
  }

  inline JogJointReq& operator=(const JogJointReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline JogJointReq& operator=(JogJointReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JogJointReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const JogJointReq* internal_default_instance() {
    return reinterpret_cast<const JogJointReq*>(
               &_JogJointReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(JogJointReq& a, JogJointReq& b) {
    a.Swap(&b);
  }
  inline void Swap(JogJointReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JogJointReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JogJointReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JogJointReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JogJointReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JogJointReq& from) {
    JogJointReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JogJointReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.JogJointReq";
  }
  protected:
  explicit JogJointReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJointNumFieldNumber = 1,
    kVelLevelFieldNumber = 2,
    kDistanceFieldNumber = 3,
  };
  // int32 joint_num = 1;
  void clear_joint_num() ;
  ::int32_t joint_num() const;
  void set_joint_num(::int32_t value);

  private:
  ::int32_t _internal_joint_num() const;
  void _internal_set_joint_num(::int32_t value);

  public:
  // int32 vel_level = 2;
  void clear_vel_level() ;
  ::int32_t vel_level() const;
  void set_vel_level(::int32_t value);

  private:
  ::int32_t _internal_vel_level() const;
  void _internal_set_vel_level(::int32_t value);

  public:
  // float distance = 3;
  void clear_distance() ;
  float distance() const;
  void set_distance(float value);

  private:
  float _internal_distance() const;
  void _internal_set_distance(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.JogJointReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t joint_num_;
    ::int32_t vel_level_;
    float distance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class JogJointRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.JogJointRes) */ {
 public:
  inline JogJointRes() : JogJointRes(nullptr) {}
  ~JogJointRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JogJointRes(::google::protobuf::internal::ConstantInitialized);

  JogJointRes(const JogJointRes& from);
  JogJointRes(JogJointRes&& from) noexcept
    : JogJointRes() {
    *this = ::std::move(from);
  }

  inline JogJointRes& operator=(const JogJointRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline JogJointRes& operator=(JogJointRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JogJointRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const JogJointRes* internal_default_instance() {
    return reinterpret_cast<const JogJointRes*>(
               &_JogJointRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(JogJointRes& a, JogJointRes& b) {
    a.Swap(&b);
  }
  inline void Swap(JogJointRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JogJointRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JogJointRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JogJointRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JogJointRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JogJointRes& from) {
    JogJointRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JogJointRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.JogJointRes";
  }
  protected:
  explicit JogJointRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.JogJointRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 50, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class JogTaskReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.JogTaskReq) */ {
 public:
  inline JogTaskReq() : JogTaskReq(nullptr) {}
  ~JogTaskReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JogTaskReq(::google::protobuf::internal::ConstantInitialized);

  JogTaskReq(const JogTaskReq& from);
  JogTaskReq(JogTaskReq&& from) noexcept
    : JogTaskReq() {
    *this = ::std::move(from);
  }

  inline JogTaskReq& operator=(const JogTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline JogTaskReq& operator=(JogTaskReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JogTaskReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const JogTaskReq* internal_default_instance() {
    return reinterpret_cast<const JogTaskReq*>(
               &_JogTaskReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(JogTaskReq& a, JogTaskReq& b) {
    a.Swap(&b);
  }
  inline void Swap(JogTaskReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JogTaskReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JogTaskReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JogTaskReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JogTaskReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JogTaskReq& from) {
    JogTaskReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JogTaskReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.JogTaskReq";
  }
  protected:
  explicit JogTaskReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAxisFieldNumber = 1,
    kVelLevelFieldNumber = 2,
    kJogFrameFieldNumber = 3,
    kDistanceFieldNumber = 4,
  };
  // .IndyFramework.Protobuf.Shared.Axis axis = 1;
  void clear_axis() ;
  ::IndyFramework::Protobuf::Shared::Axis axis() const;
  void set_axis(::IndyFramework::Protobuf::Shared::Axis value);

  private:
  ::IndyFramework::Protobuf::Shared::Axis _internal_axis() const;
  void _internal_set_axis(::IndyFramework::Protobuf::Shared::Axis value);

  public:
  // int32 vel_level = 2;
  void clear_vel_level() ;
  ::int32_t vel_level() const;
  void set_vel_level(::int32_t value);

  private:
  ::int32_t _internal_vel_level() const;
  void _internal_set_vel_level(::int32_t value);

  public:
  // .IndyFramework.Protobuf.Shared.JogFrameType jog_frame = 3;
  void clear_jog_frame() ;
  ::IndyFramework::Protobuf::Shared::JogFrameType jog_frame() const;
  void set_jog_frame(::IndyFramework::Protobuf::Shared::JogFrameType value);

  private:
  ::IndyFramework::Protobuf::Shared::JogFrameType _internal_jog_frame() const;
  void _internal_set_jog_frame(::IndyFramework::Protobuf::Shared::JogFrameType value);

  public:
  // float distance = 4;
  void clear_distance() ;
  float distance() const;
  void set_distance(float value);

  private:
  float _internal_distance() const;
  void _internal_set_distance(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.JogTaskReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int axis_;
    ::int32_t vel_level_;
    int jog_frame_;
    float distance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class JogTaskRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.JogTaskRes) */ {
 public:
  inline JogTaskRes() : JogTaskRes(nullptr) {}
  ~JogTaskRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JogTaskRes(::google::protobuf::internal::ConstantInitialized);

  JogTaskRes(const JogTaskRes& from);
  JogTaskRes(JogTaskRes&& from) noexcept
    : JogTaskRes() {
    *this = ::std::move(from);
  }

  inline JogTaskRes& operator=(const JogTaskRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline JogTaskRes& operator=(JogTaskRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JogTaskRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const JogTaskRes* internal_default_instance() {
    return reinterpret_cast<const JogTaskRes*>(
               &_JogTaskRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(JogTaskRes& a, JogTaskRes& b) {
    a.Swap(&b);
  }
  inline void Swap(JogTaskRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JogTaskRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JogTaskRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JogTaskRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JogTaskRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JogTaskRes& from) {
    JogTaskRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JogTaskRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.JogTaskRes";
  }
  protected:
  explicit JogTaskRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.JogTaskRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 49, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class JogAxisReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.JogAxisReq) */ {
 public:
  inline JogAxisReq() : JogAxisReq(nullptr) {}
  ~JogAxisReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JogAxisReq(::google::protobuf::internal::ConstantInitialized);

  JogAxisReq(const JogAxisReq& from);
  JogAxisReq(JogAxisReq&& from) noexcept
    : JogAxisReq() {
    *this = ::std::move(from);
  }

  inline JogAxisReq& operator=(const JogAxisReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline JogAxisReq& operator=(JogAxisReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JogAxisReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const JogAxisReq* internal_default_instance() {
    return reinterpret_cast<const JogAxisReq*>(
               &_JogAxisReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(JogAxisReq& a, JogAxisReq& b) {
    a.Swap(&b);
  }
  inline void Swap(JogAxisReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JogAxisReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JogAxisReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JogAxisReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JogAxisReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JogAxisReq& from) {
    JogAxisReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JogAxisReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.JogAxisReq";
  }
  protected:
  explicit JogAxisReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJointNumFieldNumber = 1,
    kVelLevelFieldNumber = 2,
    kDistanceFieldNumber = 3,
  };
  // int32 joint_num = 1;
  void clear_joint_num() ;
  ::int32_t joint_num() const;
  void set_joint_num(::int32_t value);

  private:
  ::int32_t _internal_joint_num() const;
  void _internal_set_joint_num(::int32_t value);

  public:
  // int32 vel_level = 2;
  void clear_vel_level() ;
  ::int32_t vel_level() const;
  void set_vel_level(::int32_t value);

  private:
  ::int32_t _internal_vel_level() const;
  void _internal_set_vel_level(::int32_t value);

  public:
  // float distance = 3;
  void clear_distance() ;
  float distance() const;
  void set_distance(float value);

  private:
  float _internal_distance() const;
  void _internal_set_distance(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.JogAxisReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t joint_num_;
    ::int32_t vel_level_;
    float distance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class JogAxisRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.JogAxisRes) */ {
 public:
  inline JogAxisRes() : JogAxisRes(nullptr) {}
  ~JogAxisRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JogAxisRes(::google::protobuf::internal::ConstantInitialized);

  JogAxisRes(const JogAxisRes& from);
  JogAxisRes(JogAxisRes&& from) noexcept
    : JogAxisRes() {
    *this = ::std::move(from);
  }

  inline JogAxisRes& operator=(const JogAxisRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline JogAxisRes& operator=(JogAxisRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JogAxisRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const JogAxisRes* internal_default_instance() {
    return reinterpret_cast<const JogAxisRes*>(
               &_JogAxisRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(JogAxisRes& a, JogAxisRes& b) {
    a.Swap(&b);
  }
  inline void Swap(JogAxisRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JogAxisRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JogAxisRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JogAxisRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JogAxisRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JogAxisRes& from) {
    JogAxisRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JogAxisRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.JogAxisRes";
  }
  protected:
  explicit JogAxisRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.JogAxisRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 49, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MoveJReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.MoveJReq) */ {
 public:
  inline MoveJReq() : MoveJReq(nullptr) {}
  ~MoveJReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MoveJReq(::google::protobuf::internal::ConstantInitialized);

  MoveJReq(const MoveJReq& from);
  MoveJReq(MoveJReq&& from) noexcept
    : MoveJReq() {
    *this = ::std::move(from);
  }

  inline MoveJReq& operator=(const MoveJReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveJReq& operator=(MoveJReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveJReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveJReq* internal_default_instance() {
    return reinterpret_cast<const MoveJReq*>(
               &_MoveJReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MoveJReq& a, MoveJReq& b) {
    a.Swap(&b);
  }
  inline void Swap(MoveJReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveJReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveJReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MoveJReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoveJReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MoveJReq& from) {
    MoveJReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveJReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.MoveJReq";
  }
  protected:
  explicit MoveJReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJStartFieldNumber = 1,
    kJTargetFieldNumber = 2,
    kBaseTypeFieldNumber = 3,
    kVelLevelFieldNumber = 4,
  };
  // repeated float j_start = 1;
  int j_start_size() const;
  private:
  int _internal_j_start_size() const;

  public:
  void clear_j_start() ;
  float j_start(int index) const;
  void set_j_start(int index, float value);
  void add_j_start(float value);
  const ::google::protobuf::RepeatedField<float>& j_start() const;
  ::google::protobuf::RepeatedField<float>* mutable_j_start();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_j_start() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_j_start();

  public:
  // repeated float j_target = 2;
  int j_target_size() const;
  private:
  int _internal_j_target_size() const;

  public:
  void clear_j_target() ;
  float j_target(int index) const;
  void set_j_target(int index, float value);
  void add_j_target(float value);
  const ::google::protobuf::RepeatedField<float>& j_target() const;
  ::google::protobuf::RepeatedField<float>* mutable_j_target();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_j_target() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_j_target();

  public:
  // .IndyFramework.Protobuf.HRI.JointBaseType base_type = 3;
  void clear_base_type() ;
  ::IndyFramework::Protobuf::HRI::JointBaseType base_type() const;
  void set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value);

  private:
  ::IndyFramework::Protobuf::HRI::JointBaseType _internal_base_type() const;
  void _internal_set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value);

  public:
  // int32 vel_level = 4;
  void clear_vel_level() ;
  ::int32_t vel_level() const;
  void set_vel_level(::int32_t value);

  private:
  ::int32_t _internal_vel_level() const;
  void _internal_set_vel_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.MoveJReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> j_start_;
    ::google::protobuf::RepeatedField<float> j_target_;
    int base_type_;
    ::int32_t vel_level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MoveLReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.MoveLReq) */ {
 public:
  inline MoveLReq() : MoveLReq(nullptr) {}
  ~MoveLReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MoveLReq(::google::protobuf::internal::ConstantInitialized);

  MoveLReq(const MoveLReq& from);
  MoveLReq(MoveLReq&& from) noexcept
    : MoveLReq() {
    *this = ::std::move(from);
  }

  inline MoveLReq& operator=(const MoveLReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveLReq& operator=(MoveLReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveLReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveLReq* internal_default_instance() {
    return reinterpret_cast<const MoveLReq*>(
               &_MoveLReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MoveLReq& a, MoveLReq& b) {
    a.Swap(&b);
  }
  inline void Swap(MoveLReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveLReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveLReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MoveLReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoveLReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MoveLReq& from) {
    MoveLReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveLReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.MoveLReq";
  }
  protected:
  explicit MoveLReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTStartFieldNumber = 1,
    kTTargetFieldNumber = 2,
    kBaseTypeFieldNumber = 3,
    kVelLevelFieldNumber = 4,
    kBypassSingularFieldNumber = 10,
  };
  // repeated float t_start = 1;
  int t_start_size() const;
  private:
  int _internal_t_start_size() const;

  public:
  void clear_t_start() ;
  float t_start(int index) const;
  void set_t_start(int index, float value);
  void add_t_start(float value);
  const ::google::protobuf::RepeatedField<float>& t_start() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_start();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_start() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_start();

  public:
  // repeated float t_target = 2;
  int t_target_size() const;
  private:
  int _internal_t_target_size() const;

  public:
  void clear_t_target() ;
  float t_target(int index) const;
  void set_t_target(int index, float value);
  void add_t_target(float value);
  const ::google::protobuf::RepeatedField<float>& t_target() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_target();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_target() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_target();

  public:
  // .IndyFramework.Protobuf.HRI.TaskBaseType base_type = 3;
  void clear_base_type() ;
  ::IndyFramework::Protobuf::HRI::TaskBaseType base_type() const;
  void set_base_type(::IndyFramework::Protobuf::HRI::TaskBaseType value);

  private:
  ::IndyFramework::Protobuf::HRI::TaskBaseType _internal_base_type() const;
  void _internal_set_base_type(::IndyFramework::Protobuf::HRI::TaskBaseType value);

  public:
  // int32 vel_level = 4;
  void clear_vel_level() ;
  ::int32_t vel_level() const;
  void set_vel_level(::int32_t value);

  private:
  ::int32_t _internal_vel_level() const;
  void _internal_set_vel_level(::int32_t value);

  public:
  // bool bypass_singular = 10;
  void clear_bypass_singular() ;
  bool bypass_singular() const;
  void set_bypass_singular(bool value);

  private:
  bool _internal_bypass_singular() const;
  void _internal_set_bypass_singular(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.MoveLReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> t_start_;
    ::google::protobuf::RepeatedField<float> t_target_;
    int base_type_;
    ::int32_t vel_level_;
    bool bypass_singular_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class AxisJReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.AxisJReq) */ {
 public:
  inline AxisJReq() : AxisJReq(nullptr) {}
  ~AxisJReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AxisJReq(::google::protobuf::internal::ConstantInitialized);

  AxisJReq(const AxisJReq& from);
  AxisJReq(AxisJReq&& from) noexcept
    : AxisJReq() {
    *this = ::std::move(from);
  }

  inline AxisJReq& operator=(const AxisJReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AxisJReq& operator=(AxisJReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AxisJReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AxisJReq* internal_default_instance() {
    return reinterpret_cast<const AxisJReq*>(
               &_AxisJReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(AxisJReq& a, AxisJReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AxisJReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AxisJReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AxisJReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AxisJReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AxisJReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AxisJReq& from) {
    AxisJReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AxisJReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.AxisJReq";
  }
  protected:
  explicit AxisJReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJStartFieldNumber = 1,
    kJTargetFieldNumber = 2,
    kAStartFieldNumber = 3,
    kATargetFieldNumber = 4,
    kBaseTypeFieldNumber = 5,
    kVelLevelFieldNumber = 6,
  };
  // repeated float j_start = 1;
  int j_start_size() const;
  private:
  int _internal_j_start_size() const;

  public:
  void clear_j_start() ;
  float j_start(int index) const;
  void set_j_start(int index, float value);
  void add_j_start(float value);
  const ::google::protobuf::RepeatedField<float>& j_start() const;
  ::google::protobuf::RepeatedField<float>* mutable_j_start();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_j_start() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_j_start();

  public:
  // repeated float j_target = 2;
  int j_target_size() const;
  private:
  int _internal_j_target_size() const;

  public:
  void clear_j_target() ;
  float j_target(int index) const;
  void set_j_target(int index, float value);
  void add_j_target(float value);
  const ::google::protobuf::RepeatedField<float>& j_target() const;
  ::google::protobuf::RepeatedField<float>* mutable_j_target();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_j_target() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_j_target();

  public:
  // repeated float a_start = 3;
  int a_start_size() const;
  private:
  int _internal_a_start_size() const;

  public:
  void clear_a_start() ;
  float a_start(int index) const;
  void set_a_start(int index, float value);
  void add_a_start(float value);
  const ::google::protobuf::RepeatedField<float>& a_start() const;
  ::google::protobuf::RepeatedField<float>* mutable_a_start();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_a_start() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_a_start();

  public:
  // repeated float a_target = 4;
  int a_target_size() const;
  private:
  int _internal_a_target_size() const;

  public:
  void clear_a_target() ;
  float a_target(int index) const;
  void set_a_target(int index, float value);
  void add_a_target(float value);
  const ::google::protobuf::RepeatedField<float>& a_target() const;
  ::google::protobuf::RepeatedField<float>* mutable_a_target();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_a_target() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_a_target();

  public:
  // .IndyFramework.Protobuf.HRI.JointBaseType base_type = 5;
  void clear_base_type() ;
  ::IndyFramework::Protobuf::HRI::JointBaseType base_type() const;
  void set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value);

  private:
  ::IndyFramework::Protobuf::HRI::JointBaseType _internal_base_type() const;
  void _internal_set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value);

  public:
  // int32 vel_level = 6;
  void clear_vel_level() ;
  ::int32_t vel_level() const;
  void set_vel_level(::int32_t value);

  private:
  ::int32_t _internal_vel_level() const;
  void _internal_set_vel_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.AxisJReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> j_start_;
    ::google::protobuf::RepeatedField<float> j_target_;
    ::google::protobuf::RepeatedField<float> a_start_;
    ::google::protobuf::RepeatedField<float> a_target_;
    int base_type_;
    ::int32_t vel_level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class StopMotionReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.StopMotionReq) */ {
 public:
  inline StopMotionReq() : StopMotionReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopMotionReq(::google::protobuf::internal::ConstantInitialized);

  StopMotionReq(const StopMotionReq& from);
  StopMotionReq(StopMotionReq&& from) noexcept
    : StopMotionReq() {
    *this = ::std::move(from);
  }

  inline StopMotionReq& operator=(const StopMotionReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopMotionReq& operator=(StopMotionReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopMotionReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopMotionReq* internal_default_instance() {
    return reinterpret_cast<const StopMotionReq*>(
               &_StopMotionReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(StopMotionReq& a, StopMotionReq& b) {
    a.Swap(&b);
  }
  inline void Swap(StopMotionReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopMotionReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopMotionReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopMotionReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopMotionReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopMotionReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.StopMotionReq";
  }
  protected:
  explicit StopMotionReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.StopMotionReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class StopMotionRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.StopMotionRes) */ {
 public:
  inline StopMotionRes() : StopMotionRes(nullptr) {}
  ~StopMotionRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopMotionRes(::google::protobuf::internal::ConstantInitialized);

  StopMotionRes(const StopMotionRes& from);
  StopMotionRes(StopMotionRes&& from) noexcept
    : StopMotionRes() {
    *this = ::std::move(from);
  }

  inline StopMotionRes& operator=(const StopMotionRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopMotionRes& operator=(StopMotionRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopMotionRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopMotionRes* internal_default_instance() {
    return reinterpret_cast<const StopMotionRes*>(
               &_StopMotionRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(StopMotionRes& a, StopMotionRes& b) {
    a.Swap(&b);
  }
  inline void Swap(StopMotionRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopMotionRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopMotionRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopMotionRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopMotionRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StopMotionRes& from) {
    StopMotionRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopMotionRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.StopMotionRes";
  }
  protected:
  explicit StopMotionRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.StopMotionRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 52, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RecoverReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RecoverReq) */ {
 public:
  inline RecoverReq() : RecoverReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RecoverReq(::google::protobuf::internal::ConstantInitialized);

  RecoverReq(const RecoverReq& from);
  RecoverReq(RecoverReq&& from) noexcept
    : RecoverReq() {
    *this = ::std::move(from);
  }

  inline RecoverReq& operator=(const RecoverReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecoverReq& operator=(RecoverReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecoverReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecoverReq* internal_default_instance() {
    return reinterpret_cast<const RecoverReq*>(
               &_RecoverReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(RecoverReq& a, RecoverReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RecoverReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecoverReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecoverReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RecoverReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RecoverReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RecoverReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RecoverReq";
  }
  protected:
  explicit RecoverReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RecoverReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RecoverRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RecoverRes) */ {
 public:
  inline RecoverRes() : RecoverRes(nullptr) {}
  ~RecoverRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RecoverRes(::google::protobuf::internal::ConstantInitialized);

  RecoverRes(const RecoverRes& from);
  RecoverRes(RecoverRes&& from) noexcept
    : RecoverRes() {
    *this = ::std::move(from);
  }

  inline RecoverRes& operator=(const RecoverRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecoverRes& operator=(RecoverRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecoverRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecoverRes* internal_default_instance() {
    return reinterpret_cast<const RecoverRes*>(
               &_RecoverRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(RecoverRes& a, RecoverRes& b) {
    a.Swap(&b);
  }
  inline void Swap(RecoverRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecoverRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecoverRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RecoverRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecoverRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RecoverRes& from) {
    RecoverRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecoverRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RecoverRes";
  }
  protected:
  explicit RecoverRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RecoverRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 49, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSimulationModeReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSimulationModeReq) */ {
 public:
  inline SetSimulationModeReq() : SetSimulationModeReq(nullptr) {}
  ~SetSimulationModeReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSimulationModeReq(::google::protobuf::internal::ConstantInitialized);

  SetSimulationModeReq(const SetSimulationModeReq& from);
  SetSimulationModeReq(SetSimulationModeReq&& from) noexcept
    : SetSimulationModeReq() {
    *this = ::std::move(from);
  }

  inline SetSimulationModeReq& operator=(const SetSimulationModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSimulationModeReq& operator=(SetSimulationModeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSimulationModeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSimulationModeReq* internal_default_instance() {
    return reinterpret_cast<const SetSimulationModeReq*>(
               &_SetSimulationModeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(SetSimulationModeReq& a, SetSimulationModeReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSimulationModeReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSimulationModeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSimulationModeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSimulationModeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSimulationModeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSimulationModeReq& from) {
    SetSimulationModeReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSimulationModeReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSimulationModeReq";
  }
  protected:
  explicit SetSimulationModeReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnFieldNumber = 1,
  };
  // bool on = 1;
  void clear_on() ;
  bool on() const;
  void set_on(bool value);

  private:
  bool _internal_on() const;
  void _internal_set_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSimulationModeReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSimulationModeRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSimulationModeRes) */ {
 public:
  inline SetSimulationModeRes() : SetSimulationModeRes(nullptr) {}
  ~SetSimulationModeRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSimulationModeRes(::google::protobuf::internal::ConstantInitialized);

  SetSimulationModeRes(const SetSimulationModeRes& from);
  SetSimulationModeRes(SetSimulationModeRes&& from) noexcept
    : SetSimulationModeRes() {
    *this = ::std::move(from);
  }

  inline SetSimulationModeRes& operator=(const SetSimulationModeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSimulationModeRes& operator=(SetSimulationModeRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSimulationModeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSimulationModeRes* internal_default_instance() {
    return reinterpret_cast<const SetSimulationModeRes*>(
               &_SetSimulationModeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(SetSimulationModeRes& a, SetSimulationModeRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSimulationModeRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSimulationModeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSimulationModeRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSimulationModeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSimulationModeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSimulationModeRes& from) {
    SetSimulationModeRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSimulationModeRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSimulationModeRes";
  }
  protected:
  explicit SetSimulationModeRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSimulationModeRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 59, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetDirectTeachingModeReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetDirectTeachingModeReq) */ {
 public:
  inline SetDirectTeachingModeReq() : SetDirectTeachingModeReq(nullptr) {}
  ~SetDirectTeachingModeReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDirectTeachingModeReq(::google::protobuf::internal::ConstantInitialized);

  SetDirectTeachingModeReq(const SetDirectTeachingModeReq& from);
  SetDirectTeachingModeReq(SetDirectTeachingModeReq&& from) noexcept
    : SetDirectTeachingModeReq() {
    *this = ::std::move(from);
  }

  inline SetDirectTeachingModeReq& operator=(const SetDirectTeachingModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDirectTeachingModeReq& operator=(SetDirectTeachingModeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDirectTeachingModeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDirectTeachingModeReq* internal_default_instance() {
    return reinterpret_cast<const SetDirectTeachingModeReq*>(
               &_SetDirectTeachingModeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(SetDirectTeachingModeReq& a, SetDirectTeachingModeReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDirectTeachingModeReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDirectTeachingModeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDirectTeachingModeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDirectTeachingModeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetDirectTeachingModeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetDirectTeachingModeReq& from) {
    SetDirectTeachingModeReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetDirectTeachingModeReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetDirectTeachingModeReq";
  }
  protected:
  explicit SetDirectTeachingModeReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnFieldNumber = 1,
  };
  // bool on = 1;
  void clear_on() ;
  bool on() const;
  void set_on(bool value);

  private:
  bool _internal_on() const;
  void _internal_set_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetDirectTeachingModeReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetDirectTeachingModeRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes) */ {
 public:
  inline SetDirectTeachingModeRes() : SetDirectTeachingModeRes(nullptr) {}
  ~SetDirectTeachingModeRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDirectTeachingModeRes(::google::protobuf::internal::ConstantInitialized);

  SetDirectTeachingModeRes(const SetDirectTeachingModeRes& from);
  SetDirectTeachingModeRes(SetDirectTeachingModeRes&& from) noexcept
    : SetDirectTeachingModeRes() {
    *this = ::std::move(from);
  }

  inline SetDirectTeachingModeRes& operator=(const SetDirectTeachingModeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDirectTeachingModeRes& operator=(SetDirectTeachingModeRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDirectTeachingModeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDirectTeachingModeRes* internal_default_instance() {
    return reinterpret_cast<const SetDirectTeachingModeRes*>(
               &_SetDirectTeachingModeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(SetDirectTeachingModeRes& a, SetDirectTeachingModeRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDirectTeachingModeRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDirectTeachingModeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDirectTeachingModeRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDirectTeachingModeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetDirectTeachingModeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetDirectTeachingModeRes& from) {
    SetDirectTeachingModeRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetDirectTeachingModeRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes";
  }
  protected:
  explicit SetDirectTeachingModeRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 63, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSensorlessComplianceModeReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeReq) */ {
 public:
  inline SetSensorlessComplianceModeReq() : SetSensorlessComplianceModeReq(nullptr) {}
  ~SetSensorlessComplianceModeReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSensorlessComplianceModeReq(::google::protobuf::internal::ConstantInitialized);

  SetSensorlessComplianceModeReq(const SetSensorlessComplianceModeReq& from);
  SetSensorlessComplianceModeReq(SetSensorlessComplianceModeReq&& from) noexcept
    : SetSensorlessComplianceModeReq() {
    *this = ::std::move(from);
  }

  inline SetSensorlessComplianceModeReq& operator=(const SetSensorlessComplianceModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSensorlessComplianceModeReq& operator=(SetSensorlessComplianceModeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSensorlessComplianceModeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSensorlessComplianceModeReq* internal_default_instance() {
    return reinterpret_cast<const SetSensorlessComplianceModeReq*>(
               &_SetSensorlessComplianceModeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(SetSensorlessComplianceModeReq& a, SetSensorlessComplianceModeReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSensorlessComplianceModeReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSensorlessComplianceModeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSensorlessComplianceModeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSensorlessComplianceModeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSensorlessComplianceModeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSensorlessComplianceModeReq& from) {
    SetSensorlessComplianceModeReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSensorlessComplianceModeReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeReq";
  }
  protected:
  explicit SetSensorlessComplianceModeReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnFieldNumber = 1,
  };
  // bool on = 1;
  void clear_on() ;
  bool on() const;
  void set_on(bool value);

  private:
  bool _internal_on() const;
  void _internal_set_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSensorlessComplianceModeRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes) */ {
 public:
  inline SetSensorlessComplianceModeRes() : SetSensorlessComplianceModeRes(nullptr) {}
  ~SetSensorlessComplianceModeRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSensorlessComplianceModeRes(::google::protobuf::internal::ConstantInitialized);

  SetSensorlessComplianceModeRes(const SetSensorlessComplianceModeRes& from);
  SetSensorlessComplianceModeRes(SetSensorlessComplianceModeRes&& from) noexcept
    : SetSensorlessComplianceModeRes() {
    *this = ::std::move(from);
  }

  inline SetSensorlessComplianceModeRes& operator=(const SetSensorlessComplianceModeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSensorlessComplianceModeRes& operator=(SetSensorlessComplianceModeRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSensorlessComplianceModeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSensorlessComplianceModeRes* internal_default_instance() {
    return reinterpret_cast<const SetSensorlessComplianceModeRes*>(
               &_SetSensorlessComplianceModeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(SetSensorlessComplianceModeRes& a, SetSensorlessComplianceModeRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSensorlessComplianceModeRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSensorlessComplianceModeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSensorlessComplianceModeRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSensorlessComplianceModeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSensorlessComplianceModeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSensorlessComplianceModeRes& from) {
    SetSensorlessComplianceModeRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSensorlessComplianceModeRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes";
  }
  protected:
  explicit SetSensorlessComplianceModeRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 69, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class UpdateIndySWReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.UpdateIndySWReq) */ {
 public:
  inline UpdateIndySWReq() : UpdateIndySWReq(nullptr) {}
  ~UpdateIndySWReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateIndySWReq(::google::protobuf::internal::ConstantInitialized);

  UpdateIndySWReq(const UpdateIndySWReq& from);
  UpdateIndySWReq(UpdateIndySWReq&& from) noexcept
    : UpdateIndySWReq() {
    *this = ::std::move(from);
  }

  inline UpdateIndySWReq& operator=(const UpdateIndySWReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateIndySWReq& operator=(UpdateIndySWReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateIndySWReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateIndySWReq* internal_default_instance() {
    return reinterpret_cast<const UpdateIndySWReq*>(
               &_UpdateIndySWReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(UpdateIndySWReq& a, UpdateIndySWReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateIndySWReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateIndySWReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateIndySWReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateIndySWReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateIndySWReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateIndySWReq& from) {
    UpdateIndySWReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateIndySWReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.UpdateIndySWReq";
  }
  protected:
  explicit UpdateIndySWReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileBufferFieldNumber = 1,
  };
  // bytes file_buffer = 1;
  void clear_file_buffer() ;
  const std::string& file_buffer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_buffer(Arg_&& arg, Args_... args);
  std::string* mutable_file_buffer();
  PROTOBUF_NODISCARD std::string* release_file_buffer();
  void set_allocated_file_buffer(std::string* ptr);

  private:
  const std::string& _internal_file_buffer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_buffer(
      const std::string& value);
  std::string* _internal_mutable_file_buffer();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.UpdateIndySWReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_buffer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class UpdateIndySWRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.UpdateIndySWRes) */ {
 public:
  inline UpdateIndySWRes() : UpdateIndySWRes(nullptr) {}
  ~UpdateIndySWRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateIndySWRes(::google::protobuf::internal::ConstantInitialized);

  UpdateIndySWRes(const UpdateIndySWRes& from);
  UpdateIndySWRes(UpdateIndySWRes&& from) noexcept
    : UpdateIndySWRes() {
    *this = ::std::move(from);
  }

  inline UpdateIndySWRes& operator=(const UpdateIndySWRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateIndySWRes& operator=(UpdateIndySWRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateIndySWRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateIndySWRes* internal_default_instance() {
    return reinterpret_cast<const UpdateIndySWRes*>(
               &_UpdateIndySWRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(UpdateIndySWRes& a, UpdateIndySWRes& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateIndySWRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateIndySWRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateIndySWRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateIndySWRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateIndySWRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateIndySWRes& from) {
    UpdateIndySWRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateIndySWRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.UpdateIndySWRes";
  }
  protected:
  explicit UpdateIndySWRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kFileLengthFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // int32 file_length = 1;
  void clear_file_length() ;
  ::int32_t file_length() const;
  void set_file_length(::int32_t value);

  private:
  ::int32_t _internal_file_length() const;
  void _internal_set_file_length(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.UpdateIndySWRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 54, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::int32_t file_length_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetFileReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetFileReq) */ {
 public:
  inline GetFileReq() : GetFileReq(nullptr) {}
  ~GetFileReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetFileReq(::google::protobuf::internal::ConstantInitialized);

  GetFileReq(const GetFileReq& from);
  GetFileReq(GetFileReq&& from) noexcept
    : GetFileReq() {
    *this = ::std::move(from);
  }

  inline GetFileReq& operator=(const GetFileReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFileReq& operator=(GetFileReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFileReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFileReq* internal_default_instance() {
    return reinterpret_cast<const GetFileReq*>(
               &_GetFileReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(GetFileReq& a, GetFileReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFileReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFileReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFileReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetFileReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFileReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetFileReq& from) {
    GetFileReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFileReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetFileReq";
  }
  protected:
  explicit GetFileReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 1,
  };
  // string file_dir = 1;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetFileReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetFileRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetFileRes) */ {
 public:
  inline GetFileRes() : GetFileRes(nullptr) {}
  ~GetFileRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetFileRes(::google::protobuf::internal::ConstantInitialized);

  GetFileRes(const GetFileRes& from);
  GetFileRes(GetFileRes&& from) noexcept
    : GetFileRes() {
    *this = ::std::move(from);
  }

  inline GetFileRes& operator=(const GetFileRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFileRes& operator=(GetFileRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFileRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFileRes* internal_default_instance() {
    return reinterpret_cast<const GetFileRes*>(
               &_GetFileRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(GetFileRes& a, GetFileRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFileRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFileRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFileRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetFileRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFileRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetFileRes& from) {
    GetFileRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFileRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetFileRes";
  }
  protected:
  explicit GetFileRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBufferFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // bytes buffer = 1;
  void clear_buffer() ;
  const std::string& buffer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_buffer(Arg_&& arg, Args_... args);
  std::string* mutable_buffer();
  PROTOBUF_NODISCARD std::string* release_buffer();
  void set_allocated_buffer(std::string* ptr);

  private:
  const std::string& _internal_buffer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_buffer(
      const std::string& value);
  std::string* _internal_mutable_buffer();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetFileRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 49, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr buffer_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetFileReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetFileReq) */ {
 public:
  inline SetFileReq() : SetFileReq(nullptr) {}
  ~SetFileReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetFileReq(::google::protobuf::internal::ConstantInitialized);

  SetFileReq(const SetFileReq& from);
  SetFileReq(SetFileReq&& from) noexcept
    : SetFileReq() {
    *this = ::std::move(from);
  }

  inline SetFileReq& operator=(const SetFileReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetFileReq& operator=(SetFileReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetFileReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetFileReq* internal_default_instance() {
    return reinterpret_cast<const SetFileReq*>(
               &_SetFileReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(SetFileReq& a, SetFileReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetFileReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetFileReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetFileReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetFileReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetFileReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetFileReq& from) {
    SetFileReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetFileReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetFileReq";
  }
  protected:
  explicit SetFileReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 1,
    kBufferFieldNumber = 2,
  };
  // string file_dir = 1;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // bytes buffer = 2;
  void clear_buffer() ;
  const std::string& buffer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_buffer(Arg_&& arg, Args_... args);
  std::string* mutable_buffer();
  PROTOBUF_NODISCARD std::string* release_buffer();
  void set_allocated_buffer(std::string* ptr);

  private:
  const std::string& _internal_buffer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_buffer(
      const std::string& value);
  std::string* _internal_mutable_buffer();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetFileReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    ::google::protobuf::internal::ArenaStringPtr buffer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetFileRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetFileRes) */ {
 public:
  inline SetFileRes() : SetFileRes(nullptr) {}
  ~SetFileRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetFileRes(::google::protobuf::internal::ConstantInitialized);

  SetFileRes(const SetFileRes& from);
  SetFileRes(SetFileRes&& from) noexcept
    : SetFileRes() {
    *this = ::std::move(from);
  }

  inline SetFileRes& operator=(const SetFileRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetFileRes& operator=(SetFileRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetFileRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetFileRes* internal_default_instance() {
    return reinterpret_cast<const SetFileRes*>(
               &_SetFileRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(SetFileRes& a, SetFileRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetFileRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetFileRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetFileRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetFileRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetFileRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetFileRes& from) {
    SetFileRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetFileRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetFileRes";
  }
  protected:
  explicit SetFileRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kFileLengthFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // int32 file_length = 1;
  void clear_file_length() ;
  ::int32_t file_length() const;
  void set_file_length(::int32_t value);

  private:
  ::int32_t _internal_file_length() const;
  void _internal_set_file_length(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetFileRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 49, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::int32_t file_length_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RenameFileReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RenameFileReq) */ {
 public:
  inline RenameFileReq() : RenameFileReq(nullptr) {}
  ~RenameFileReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RenameFileReq(::google::protobuf::internal::ConstantInitialized);

  RenameFileReq(const RenameFileReq& from);
  RenameFileReq(RenameFileReq&& from) noexcept
    : RenameFileReq() {
    *this = ::std::move(from);
  }

  inline RenameFileReq& operator=(const RenameFileReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RenameFileReq& operator=(RenameFileReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RenameFileReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RenameFileReq* internal_default_instance() {
    return reinterpret_cast<const RenameFileReq*>(
               &_RenameFileReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(RenameFileReq& a, RenameFileReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RenameFileReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RenameFileReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RenameFileReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RenameFileReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RenameFileReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RenameFileReq& from) {
    RenameFileReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RenameFileReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RenameFileReq";
  }
  protected:
  explicit RenameFileReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurFileDirFieldNumber = 1,
    kNewFileDirFieldNumber = 2,
  };
  // string cur_file_dir = 1;
  void clear_cur_file_dir() ;
  const std::string& cur_file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cur_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_cur_file_dir();
  PROTOBUF_NODISCARD std::string* release_cur_file_dir();
  void set_allocated_cur_file_dir(std::string* ptr);

  private:
  const std::string& _internal_cur_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cur_file_dir(
      const std::string& value);
  std::string* _internal_mutable_cur_file_dir();

  public:
  // string new_file_dir = 2;
  void clear_new_file_dir() ;
  const std::string& new_file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_new_file_dir();
  PROTOBUF_NODISCARD std::string* release_new_file_dir();
  void set_allocated_new_file_dir(std::string* ptr);

  private:
  const std::string& _internal_new_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_file_dir(
      const std::string& value);
  std::string* _internal_mutable_new_file_dir();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RenameFileReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 73, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr cur_file_dir_;
    ::google::protobuf::internal::ArenaStringPtr new_file_dir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RenameFileRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RenameFileRes) */ {
 public:
  inline RenameFileRes() : RenameFileRes(nullptr) {}
  ~RenameFileRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RenameFileRes(::google::protobuf::internal::ConstantInitialized);

  RenameFileRes(const RenameFileRes& from);
  RenameFileRes(RenameFileRes&& from) noexcept
    : RenameFileRes() {
    *this = ::std::move(from);
  }

  inline RenameFileRes& operator=(const RenameFileRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline RenameFileRes& operator=(RenameFileRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RenameFileRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const RenameFileRes* internal_default_instance() {
    return reinterpret_cast<const RenameFileRes*>(
               &_RenameFileRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(RenameFileRes& a, RenameFileRes& b) {
    a.Swap(&b);
  }
  inline void Swap(RenameFileRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RenameFileRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RenameFileRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RenameFileRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RenameFileRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RenameFileRes& from) {
    RenameFileRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RenameFileRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RenameFileRes";
  }
  protected:
  explicit RenameFileRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RenameFileRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 52, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RemoveFileReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RemoveFileReq) */ {
 public:
  inline RemoveFileReq() : RemoveFileReq(nullptr) {}
  ~RemoveFileReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveFileReq(::google::protobuf::internal::ConstantInitialized);

  RemoveFileReq(const RemoveFileReq& from);
  RemoveFileReq(RemoveFileReq&& from) noexcept
    : RemoveFileReq() {
    *this = ::std::move(from);
  }

  inline RemoveFileReq& operator=(const RemoveFileReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveFileReq& operator=(RemoveFileReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveFileReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveFileReq* internal_default_instance() {
    return reinterpret_cast<const RemoveFileReq*>(
               &_RemoveFileReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(RemoveFileReq& a, RemoveFileReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveFileReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveFileReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveFileReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveFileReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveFileReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveFileReq& from) {
    RemoveFileReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveFileReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RemoveFileReq";
  }
  protected:
  explicit RemoveFileReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 1,
  };
  // string file_dir = 1;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RemoveFileReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RemoveFileRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RemoveFileRes) */ {
 public:
  inline RemoveFileRes() : RemoveFileRes(nullptr) {}
  ~RemoveFileRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveFileRes(::google::protobuf::internal::ConstantInitialized);

  RemoveFileRes(const RemoveFileRes& from);
  RemoveFileRes(RemoveFileRes&& from) noexcept
    : RemoveFileRes() {
    *this = ::std::move(from);
  }

  inline RemoveFileRes& operator=(const RemoveFileRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveFileRes& operator=(RemoveFileRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveFileRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveFileRes* internal_default_instance() {
    return reinterpret_cast<const RemoveFileRes*>(
               &_RemoveFileRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(RemoveFileRes& a, RemoveFileRes& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveFileRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveFileRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveFileRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveFileRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveFileRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveFileRes& from) {
    RemoveFileRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveFileRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RemoveFileRes";
  }
  protected:
  explicit RemoveFileRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RemoveFileRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 52, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetPalletMakerListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetPalletMakerListReq) */ {
 public:
  inline GetPalletMakerListReq() : GetPalletMakerListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPalletMakerListReq(::google::protobuf::internal::ConstantInitialized);

  GetPalletMakerListReq(const GetPalletMakerListReq& from);
  GetPalletMakerListReq(GetPalletMakerListReq&& from) noexcept
    : GetPalletMakerListReq() {
    *this = ::std::move(from);
  }

  inline GetPalletMakerListReq& operator=(const GetPalletMakerListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPalletMakerListReq& operator=(GetPalletMakerListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPalletMakerListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPalletMakerListReq* internal_default_instance() {
    return reinterpret_cast<const GetPalletMakerListReq*>(
               &_GetPalletMakerListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(GetPalletMakerListReq& a, GetPalletMakerListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPalletMakerListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPalletMakerListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPalletMakerListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPalletMakerListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetPalletMakerListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetPalletMakerListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetPalletMakerListReq";
  }
  protected:
  explicit GetPalletMakerListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetPalletMakerListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetPalletMakerListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetPalletMakerListRes) */ {
 public:
  inline GetPalletMakerListRes() : GetPalletMakerListRes(nullptr) {}
  ~GetPalletMakerListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPalletMakerListRes(::google::protobuf::internal::ConstantInitialized);

  GetPalletMakerListRes(const GetPalletMakerListRes& from);
  GetPalletMakerListRes(GetPalletMakerListRes&& from) noexcept
    : GetPalletMakerListRes() {
    *this = ::std::move(from);
  }

  inline GetPalletMakerListRes& operator=(const GetPalletMakerListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPalletMakerListRes& operator=(GetPalletMakerListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPalletMakerListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPalletMakerListRes* internal_default_instance() {
    return reinterpret_cast<const GetPalletMakerListRes*>(
               &_GetPalletMakerListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(GetPalletMakerListRes& a, GetPalletMakerListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPalletMakerListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPalletMakerListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPalletMakerListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPalletMakerListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPalletMakerListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPalletMakerListRes& from) {
    GetPalletMakerListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPalletMakerListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetPalletMakerListRes";
  }
  protected:
  explicit GetPalletMakerListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPalletMakersFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.PalletMaker pallet_makers = 1;
  int pallet_makers_size() const;
  private:
  int _internal_pallet_makers_size() const;

  public:
  void clear_pallet_makers() ;
  ::IndyFramework::Protobuf::HRI::PalletMaker* mutable_pallet_makers(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >*
      mutable_pallet_makers();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>& _internal_pallet_makers() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>* _internal_mutable_pallet_makers();
  public:
  const ::IndyFramework::Protobuf::HRI::PalletMaker& pallet_makers(int index) const;
  ::IndyFramework::Protobuf::HRI::PalletMaker* add_pallet_makers();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >&
      pallet_makers() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetPalletMakerListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker > pallet_makers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetPalletMakerListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetPalletMakerListReq) */ {
 public:
  inline SetPalletMakerListReq() : SetPalletMakerListReq(nullptr) {}
  ~SetPalletMakerListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPalletMakerListReq(::google::protobuf::internal::ConstantInitialized);

  SetPalletMakerListReq(const SetPalletMakerListReq& from);
  SetPalletMakerListReq(SetPalletMakerListReq&& from) noexcept
    : SetPalletMakerListReq() {
    *this = ::std::move(from);
  }

  inline SetPalletMakerListReq& operator=(const SetPalletMakerListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPalletMakerListReq& operator=(SetPalletMakerListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPalletMakerListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPalletMakerListReq* internal_default_instance() {
    return reinterpret_cast<const SetPalletMakerListReq*>(
               &_SetPalletMakerListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(SetPalletMakerListReq& a, SetPalletMakerListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPalletMakerListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPalletMakerListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPalletMakerListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPalletMakerListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPalletMakerListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPalletMakerListReq& from) {
    SetPalletMakerListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPalletMakerListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetPalletMakerListReq";
  }
  protected:
  explicit SetPalletMakerListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPalletMakersFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.PalletMaker pallet_makers = 1;
  int pallet_makers_size() const;
  private:
  int _internal_pallet_makers_size() const;

  public:
  void clear_pallet_makers() ;
  ::IndyFramework::Protobuf::HRI::PalletMaker* mutable_pallet_makers(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >*
      mutable_pallet_makers();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>& _internal_pallet_makers() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>* _internal_mutable_pallet_makers();
  public:
  const ::IndyFramework::Protobuf::HRI::PalletMaker& pallet_makers(int index) const;
  ::IndyFramework::Protobuf::HRI::PalletMaker* add_pallet_makers();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >&
      pallet_makers() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetPalletMakerListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker > pallet_makers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetPalletMakerListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetPalletMakerListRes) */ {
 public:
  inline SetPalletMakerListRes() : SetPalletMakerListRes(nullptr) {}
  ~SetPalletMakerListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPalletMakerListRes(::google::protobuf::internal::ConstantInitialized);

  SetPalletMakerListRes(const SetPalletMakerListRes& from);
  SetPalletMakerListRes(SetPalletMakerListRes&& from) noexcept
    : SetPalletMakerListRes() {
    *this = ::std::move(from);
  }

  inline SetPalletMakerListRes& operator=(const SetPalletMakerListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPalletMakerListRes& operator=(SetPalletMakerListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPalletMakerListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPalletMakerListRes* internal_default_instance() {
    return reinterpret_cast<const SetPalletMakerListRes*>(
               &_SetPalletMakerListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(SetPalletMakerListRes& a, SetPalletMakerListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPalletMakerListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPalletMakerListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPalletMakerListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPalletMakerListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPalletMakerListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPalletMakerListRes& from) {
    SetPalletMakerListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPalletMakerListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetPalletMakerListRes";
  }
  protected:
  explicit SetPalletMakerListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetPalletMakerListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 60, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetConveyorListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetConveyorListReq) */ {
 public:
  inline GetConveyorListReq() : GetConveyorListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConveyorListReq(::google::protobuf::internal::ConstantInitialized);

  GetConveyorListReq(const GetConveyorListReq& from);
  GetConveyorListReq(GetConveyorListReq&& from) noexcept
    : GetConveyorListReq() {
    *this = ::std::move(from);
  }

  inline GetConveyorListReq& operator=(const GetConveyorListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConveyorListReq& operator=(GetConveyorListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConveyorListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConveyorListReq* internal_default_instance() {
    return reinterpret_cast<const GetConveyorListReq*>(
               &_GetConveyorListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(GetConveyorListReq& a, GetConveyorListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConveyorListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConveyorListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConveyorListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConveyorListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetConveyorListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetConveyorListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetConveyorListReq";
  }
  protected:
  explicit GetConveyorListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetConveyorListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetConveyorListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetConveyorListRes) */ {
 public:
  inline GetConveyorListRes() : GetConveyorListRes(nullptr) {}
  ~GetConveyorListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConveyorListRes(::google::protobuf::internal::ConstantInitialized);

  GetConveyorListRes(const GetConveyorListRes& from);
  GetConveyorListRes(GetConveyorListRes&& from) noexcept
    : GetConveyorListRes() {
    *this = ::std::move(from);
  }

  inline GetConveyorListRes& operator=(const GetConveyorListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConveyorListRes& operator=(GetConveyorListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConveyorListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConveyorListRes* internal_default_instance() {
    return reinterpret_cast<const GetConveyorListRes*>(
               &_GetConveyorListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(GetConveyorListRes& a, GetConveyorListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConveyorListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConveyorListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConveyorListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConveyorListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConveyorListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetConveyorListRes& from) {
    GetConveyorListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConveyorListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetConveyorListRes";
  }
  protected:
  explicit GetConveyorListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConveyorListFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.HRI.Conveyor conveyor_list = 1;
  int conveyor_list_size() const;
  private:
  int _internal_conveyor_list_size() const;

  public:
  void clear_conveyor_list() ;
  ::IndyFramework::Protobuf::HRI::Conveyor* mutable_conveyor_list(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >*
      mutable_conveyor_list();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>& _internal_conveyor_list() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>* _internal_mutable_conveyor_list();
  public:
  const ::IndyFramework::Protobuf::HRI::Conveyor& conveyor_list(int index) const;
  ::IndyFramework::Protobuf::HRI::Conveyor* add_conveyor_list();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >&
      conveyor_list() const;
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetConveyorListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor > conveyor_list_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetConveyorListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetConveyorListReq) */ {
 public:
  inline SetConveyorListReq() : SetConveyorListReq(nullptr) {}
  ~SetConveyorListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetConveyorListReq(::google::protobuf::internal::ConstantInitialized);

  SetConveyorListReq(const SetConveyorListReq& from);
  SetConveyorListReq(SetConveyorListReq&& from) noexcept
    : SetConveyorListReq() {
    *this = ::std::move(from);
  }

  inline SetConveyorListReq& operator=(const SetConveyorListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetConveyorListReq& operator=(SetConveyorListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetConveyorListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetConveyorListReq* internal_default_instance() {
    return reinterpret_cast<const SetConveyorListReq*>(
               &_SetConveyorListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(SetConveyorListReq& a, SetConveyorListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetConveyorListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetConveyorListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetConveyorListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetConveyorListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetConveyorListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetConveyorListReq& from) {
    SetConveyorListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetConveyorListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetConveyorListReq";
  }
  protected:
  explicit SetConveyorListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConveyorListFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.Conveyor conveyor_list = 1;
  int conveyor_list_size() const;
  private:
  int _internal_conveyor_list_size() const;

  public:
  void clear_conveyor_list() ;
  ::IndyFramework::Protobuf::HRI::Conveyor* mutable_conveyor_list(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >*
      mutable_conveyor_list();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>& _internal_conveyor_list() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>* _internal_mutable_conveyor_list();
  public:
  const ::IndyFramework::Protobuf::HRI::Conveyor& conveyor_list(int index) const;
  ::IndyFramework::Protobuf::HRI::Conveyor* add_conveyor_list();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >&
      conveyor_list() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetConveyorListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor > conveyor_list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetConveyorListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetConveyorListRes) */ {
 public:
  inline SetConveyorListRes() : SetConveyorListRes(nullptr) {}
  ~SetConveyorListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetConveyorListRes(::google::protobuf::internal::ConstantInitialized);

  SetConveyorListRes(const SetConveyorListRes& from);
  SetConveyorListRes(SetConveyorListRes&& from) noexcept
    : SetConveyorListRes() {
    *this = ::std::move(from);
  }

  inline SetConveyorListRes& operator=(const SetConveyorListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetConveyorListRes& operator=(SetConveyorListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetConveyorListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetConveyorListRes* internal_default_instance() {
    return reinterpret_cast<const SetConveyorListRes*>(
               &_SetConveyorListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(SetConveyorListRes& a, SetConveyorListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetConveyorListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetConveyorListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetConveyorListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetConveyorListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetConveyorListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetConveyorListRes& from) {
    SetConveyorListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetConveyorListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetConveyorListRes";
  }
  protected:
  explicit SetConveyorListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetConveyorListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CheckAproachRetractValidReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq) */ {
 public:
  inline CheckAproachRetractValidReq() : CheckAproachRetractValidReq(nullptr) {}
  ~CheckAproachRetractValidReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckAproachRetractValidReq(::google::protobuf::internal::ConstantInitialized);

  CheckAproachRetractValidReq(const CheckAproachRetractValidReq& from);
  CheckAproachRetractValidReq(CheckAproachRetractValidReq&& from) noexcept
    : CheckAproachRetractValidReq() {
    *this = ::std::move(from);
  }

  inline CheckAproachRetractValidReq& operator=(const CheckAproachRetractValidReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckAproachRetractValidReq& operator=(CheckAproachRetractValidReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckAproachRetractValidReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckAproachRetractValidReq* internal_default_instance() {
    return reinterpret_cast<const CheckAproachRetractValidReq*>(
               &_CheckAproachRetractValidReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CheckAproachRetractValidReq& a, CheckAproachRetractValidReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckAproachRetractValidReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckAproachRetractValidReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckAproachRetractValidReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckAproachRetractValidReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckAproachRetractValidReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckAproachRetractValidReq& from) {
    CheckAproachRetractValidReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckAproachRetractValidReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq";
  }
  protected:
  explicit CheckAproachRetractValidReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTposFieldNumber = 1,
    kInitJposFieldNumber = 2,
    kPreTposFieldNumber = 3,
    kPostTposFieldNumber = 4,
  };
  // repeated float tpos = 1;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // repeated float init_jpos = 2;
  int init_jpos_size() const;
  private:
  int _internal_init_jpos_size() const;

  public:
  void clear_init_jpos() ;
  float init_jpos(int index) const;
  void set_init_jpos(int index, float value);
  void add_init_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& init_jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_init_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_init_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_init_jpos();

  public:
  // repeated float pre_tpos = 3;
  int pre_tpos_size() const;
  private:
  int _internal_pre_tpos_size() const;

  public:
  void clear_pre_tpos() ;
  float pre_tpos(int index) const;
  void set_pre_tpos(int index, float value);
  void add_pre_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& pre_tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_pre_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_pre_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_pre_tpos();

  public:
  // repeated float post_tpos = 4;
  int post_tpos_size() const;
  private:
  int _internal_post_tpos_size() const;

  public:
  void clear_post_tpos() ;
  float post_tpos(int index) const;
  void set_post_tpos(int index, float value);
  void add_post_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& post_tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_post_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_post_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_post_tpos();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> tpos_;
    ::google::protobuf::RepeatedField<float> init_jpos_;
    ::google::protobuf::RepeatedField<float> pre_tpos_;
    ::google::protobuf::RepeatedField<float> post_tpos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CheckAproachRetractValidRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes) */ {
 public:
  inline CheckAproachRetractValidRes() : CheckAproachRetractValidRes(nullptr) {}
  ~CheckAproachRetractValidRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckAproachRetractValidRes(::google::protobuf::internal::ConstantInitialized);

  CheckAproachRetractValidRes(const CheckAproachRetractValidRes& from);
  CheckAproachRetractValidRes(CheckAproachRetractValidRes&& from) noexcept
    : CheckAproachRetractValidRes() {
    *this = ::std::move(from);
  }

  inline CheckAproachRetractValidRes& operator=(const CheckAproachRetractValidRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckAproachRetractValidRes& operator=(CheckAproachRetractValidRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckAproachRetractValidRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckAproachRetractValidRes* internal_default_instance() {
    return reinterpret_cast<const CheckAproachRetractValidRes*>(
               &_CheckAproachRetractValidRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CheckAproachRetractValidRes& a, CheckAproachRetractValidRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckAproachRetractValidRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckAproachRetractValidRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckAproachRetractValidRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckAproachRetractValidRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckAproachRetractValidRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckAproachRetractValidRes& from) {
    CheckAproachRetractValidRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckAproachRetractValidRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes";
  }
  protected:
  explicit CheckAproachRetractValidRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTarPosFieldNumber = 2,
    kApproachPosFieldNumber = 3,
    kRetractPosFieldNumber = 4,
    kMsgFieldNumber = 100,
    kIsValidFieldNumber = 1,
  };
  // repeated float tar_pos = 2;
  int tar_pos_size() const;
  private:
  int _internal_tar_pos_size() const;

  public:
  void clear_tar_pos() ;
  float tar_pos(int index) const;
  void set_tar_pos(int index, float value);
  void add_tar_pos(float value);
  const ::google::protobuf::RepeatedField<float>& tar_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tar_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tar_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tar_pos();

  public:
  // repeated float approach_pos = 3;
  int approach_pos_size() const;
  private:
  int _internal_approach_pos_size() const;

  public:
  void clear_approach_pos() ;
  float approach_pos(int index) const;
  void set_approach_pos(int index, float value);
  void add_approach_pos(float value);
  const ::google::protobuf::RepeatedField<float>& approach_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_approach_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_approach_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_approach_pos();

  public:
  // repeated float retract_pos = 4;
  int retract_pos_size() const;
  private:
  int _internal_retract_pos_size() const;

  public:
  void clear_retract_pos() ;
  float retract_pos(int index) const;
  void set_retract_pos(int index, float value);
  void add_retract_pos(float value);
  const ::google::protobuf::RepeatedField<float>& retract_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_retract_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_retract_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_retract_pos();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bool is_valid = 1;
  void clear_is_valid() ;
  bool is_valid() const;
  void set_is_valid(bool value);

  private:
  bool _internal_is_valid() const;
  void _internal_set_is_valid(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 0, 66, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> tar_pos_;
    ::google::protobuf::RepeatedField<float> approach_pos_;
    ::google::protobuf::RepeatedField<float> retract_pos_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    bool is_valid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetPalletPointListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetPalletPointListReq) */ {
 public:
  inline GetPalletPointListReq() : GetPalletPointListReq(nullptr) {}
  ~GetPalletPointListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPalletPointListReq(::google::protobuf::internal::ConstantInitialized);

  GetPalletPointListReq(const GetPalletPointListReq& from);
  GetPalletPointListReq(GetPalletPointListReq&& from) noexcept
    : GetPalletPointListReq() {
    *this = ::std::move(from);
  }

  inline GetPalletPointListReq& operator=(const GetPalletPointListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPalletPointListReq& operator=(GetPalletPointListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPalletPointListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPalletPointListReq* internal_default_instance() {
    return reinterpret_cast<const GetPalletPointListReq*>(
               &_GetPalletPointListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(GetPalletPointListReq& a, GetPalletPointListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPalletPointListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPalletPointListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPalletPointListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPalletPointListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPalletPointListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPalletPointListReq& from) {
    GetPalletPointListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPalletPointListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetPalletPointListReq";
  }
  protected:
  explicit GetPalletPointListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreTposFieldNumber = 2,
    kPostTposFieldNumber = 3,
    kNameFieldNumber = 1,
  };
  // repeated float pre_tpos = 2;
  int pre_tpos_size() const;
  private:
  int _internal_pre_tpos_size() const;

  public:
  void clear_pre_tpos() ;
  float pre_tpos(int index) const;
  void set_pre_tpos(int index, float value);
  void add_pre_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& pre_tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_pre_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_pre_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_pre_tpos();

  public:
  // repeated float post_tpos = 3;
  int post_tpos_size() const;
  private:
  int _internal_post_tpos_size() const;

  public:
  void clear_post_tpos() ;
  float post_tpos(int index) const;
  void set_post_tpos(int index, float value);
  void add_post_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& post_tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_post_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_post_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_post_tpos();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetPalletPointListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> pre_tpos_;
    ::google::protobuf::RepeatedField<float> post_tpos_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetPalletPointListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetPalletPointListRes) */ {
 public:
  inline GetPalletPointListRes() : GetPalletPointListRes(nullptr) {}
  ~GetPalletPointListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPalletPointListRes(::google::protobuf::internal::ConstantInitialized);

  GetPalletPointListRes(const GetPalletPointListRes& from);
  GetPalletPointListRes(GetPalletPointListRes&& from) noexcept
    : GetPalletPointListRes() {
    *this = ::std::move(from);
  }

  inline GetPalletPointListRes& operator=(const GetPalletPointListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPalletPointListRes& operator=(GetPalletPointListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPalletPointListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPalletPointListRes* internal_default_instance() {
    return reinterpret_cast<const GetPalletPointListRes*>(
               &_GetPalletPointListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(GetPalletPointListRes& a, GetPalletPointListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPalletPointListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPalletPointListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPalletPointListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPalletPointListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPalletPointListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPalletPointListRes& from) {
    GetPalletPointListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPalletPointListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetPalletPointListRes";
  }
  protected:
  explicit GetPalletPointListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPalletPointsFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.Shared.PalletPoint pallet_points = 1;
  int pallet_points_size() const;
  private:
  int _internal_pallet_points_size() const;

  public:
  void clear_pallet_points() ;
  ::IndyFramework::Protobuf::Shared::PalletPoint* mutable_pallet_points(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >*
      mutable_pallet_points();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>& _internal_pallet_points() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>* _internal_mutable_pallet_points();
  public:
  const ::IndyFramework::Protobuf::Shared::PalletPoint& pallet_points(int index) const;
  ::IndyFramework::Protobuf::Shared::PalletPoint* add_pallet_points();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >&
      pallet_points() const;
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetPalletPointListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 60, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint > pallet_points_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetPalletPointListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetPalletPointListReq) */ {
 public:
  inline SetPalletPointListReq() : SetPalletPointListReq(nullptr) {}
  ~SetPalletPointListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPalletPointListReq(::google::protobuf::internal::ConstantInitialized);

  SetPalletPointListReq(const SetPalletPointListReq& from);
  SetPalletPointListReq(SetPalletPointListReq&& from) noexcept
    : SetPalletPointListReq() {
    *this = ::std::move(from);
  }

  inline SetPalletPointListReq& operator=(const SetPalletPointListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPalletPointListReq& operator=(SetPalletPointListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPalletPointListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPalletPointListReq* internal_default_instance() {
    return reinterpret_cast<const SetPalletPointListReq*>(
               &_SetPalletPointListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(SetPalletPointListReq& a, SetPalletPointListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPalletPointListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPalletPointListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPalletPointListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPalletPointListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPalletPointListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPalletPointListReq& from) {
    SetPalletPointListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPalletPointListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetPalletPointListReq";
  }
  protected:
  explicit SetPalletPointListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPalletPointsFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.Shared.PalletPoint pallet_points = 2;
  int pallet_points_size() const;
  private:
  int _internal_pallet_points_size() const;

  public:
  void clear_pallet_points() ;
  ::IndyFramework::Protobuf::Shared::PalletPoint* mutable_pallet_points(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >*
      mutable_pallet_points();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>& _internal_pallet_points() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>* _internal_mutable_pallet_points();
  public:
  const ::IndyFramework::Protobuf::Shared::PalletPoint& pallet_points(int index) const;
  ::IndyFramework::Protobuf::Shared::PalletPoint* add_pallet_points();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >&
      pallet_points() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetPalletPointListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint > pallet_points_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetPalletPointListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetPalletPointListRes) */ {
 public:
  inline SetPalletPointListRes() : SetPalletPointListRes(nullptr) {}
  ~SetPalletPointListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPalletPointListRes(::google::protobuf::internal::ConstantInitialized);

  SetPalletPointListRes(const SetPalletPointListRes& from);
  SetPalletPointListRes(SetPalletPointListRes&& from) noexcept
    : SetPalletPointListRes() {
    *this = ::std::move(from);
  }

  inline SetPalletPointListRes& operator=(const SetPalletPointListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPalletPointListRes& operator=(SetPalletPointListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPalletPointListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPalletPointListRes* internal_default_instance() {
    return reinterpret_cast<const SetPalletPointListRes*>(
               &_SetPalletPointListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(SetPalletPointListRes& a, SetPalletPointListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPalletPointListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPalletPointListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPalletPointListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPalletPointListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPalletPointListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPalletPointListRes& from) {
    SetPalletPointListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPalletPointListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetPalletPointListRes";
  }
  protected:
  explicit SetPalletPointListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetPalletPointListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 60, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetInchingReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetInchingReq) */ {
 public:
  inline SetInchingReq() : SetInchingReq(nullptr) {}
  ~SetInchingReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetInchingReq(::google::protobuf::internal::ConstantInitialized);

  SetInchingReq(const SetInchingReq& from);
  SetInchingReq(SetInchingReq&& from) noexcept
    : SetInchingReq() {
    *this = ::std::move(from);
  }

  inline SetInchingReq& operator=(const SetInchingReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetInchingReq& operator=(SetInchingReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetInchingReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetInchingReq* internal_default_instance() {
    return reinterpret_cast<const SetInchingReq*>(
               &_SetInchingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(SetInchingReq& a, SetInchingReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetInchingReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetInchingReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetInchingReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetInchingReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetInchingReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetInchingReq& from) {
    SetInchingReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetInchingReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetInchingReq";
  }
  protected:
  explicit SetInchingReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDirectionFieldNumber = 1,
  };
  // int32 direction = 1;
  void clear_direction() ;
  ::int32_t direction() const;
  void set_direction(::int32_t value);

  private:
  ::int32_t _internal_direction() const;
  void _internal_set_direction(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetInchingReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t direction_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetInchingRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetInchingRes) */ {
 public:
  inline SetInchingRes() : SetInchingRes(nullptr) {}
  ~SetInchingRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetInchingRes(::google::protobuf::internal::ConstantInitialized);

  SetInchingRes(const SetInchingRes& from);
  SetInchingRes(SetInchingRes&& from) noexcept
    : SetInchingRes() {
    *this = ::std::move(from);
  }

  inline SetInchingRes& operator=(const SetInchingRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetInchingRes& operator=(SetInchingRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetInchingRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetInchingRes* internal_default_instance() {
    return reinterpret_cast<const SetInchingRes*>(
               &_SetInchingRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(SetInchingRes& a, SetInchingRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetInchingRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetInchingRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetInchingRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetInchingRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetInchingRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetInchingRes& from) {
    SetInchingRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetInchingRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetInchingRes";
  }
  protected:
  explicit SetInchingRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetInchingRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 52, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class StopInchingReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.StopInchingReq) */ {
 public:
  inline StopInchingReq() : StopInchingReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopInchingReq(::google::protobuf::internal::ConstantInitialized);

  StopInchingReq(const StopInchingReq& from);
  StopInchingReq(StopInchingReq&& from) noexcept
    : StopInchingReq() {
    *this = ::std::move(from);
  }

  inline StopInchingReq& operator=(const StopInchingReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopInchingReq& operator=(StopInchingReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopInchingReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopInchingReq* internal_default_instance() {
    return reinterpret_cast<const StopInchingReq*>(
               &_StopInchingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(StopInchingReq& a, StopInchingReq& b) {
    a.Swap(&b);
  }
  inline void Swap(StopInchingReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopInchingReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopInchingReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopInchingReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopInchingReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopInchingReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.StopInchingReq";
  }
  protected:
  explicit StopInchingReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.StopInchingReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class StopInchingRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.StopInchingRes) */ {
 public:
  inline StopInchingRes() : StopInchingRes(nullptr) {}
  ~StopInchingRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopInchingRes(::google::protobuf::internal::ConstantInitialized);

  StopInchingRes(const StopInchingRes& from);
  StopInchingRes(StopInchingRes&& from) noexcept
    : StopInchingRes() {
    *this = ::std::move(from);
  }

  inline StopInchingRes& operator=(const StopInchingRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopInchingRes& operator=(StopInchingRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopInchingRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopInchingRes* internal_default_instance() {
    return reinterpret_cast<const StopInchingRes*>(
               &_StopInchingRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(StopInchingRes& a, StopInchingRes& b) {
    a.Swap(&b);
  }
  inline void Swap(StopInchingRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopInchingRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopInchingRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopInchingRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopInchingRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StopInchingRes& from) {
    StopInchingRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopInchingRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.StopInchingRes";
  }
  protected:
  explicit StopInchingRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.StopInchingRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetArcReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetArcReq) */ {
 public:
  inline SetArcReq() : SetArcReq(nullptr) {}
  ~SetArcReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetArcReq(::google::protobuf::internal::ConstantInitialized);

  SetArcReq(const SetArcReq& from);
  SetArcReq(SetArcReq&& from) noexcept
    : SetArcReq() {
    *this = ::std::move(from);
  }

  inline SetArcReq& operator=(const SetArcReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetArcReq& operator=(SetArcReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetArcReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetArcReq* internal_default_instance() {
    return reinterpret_cast<const SetArcReq*>(
               &_SetArcReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(SetArcReq& a, SetArcReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetArcReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetArcReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetArcReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetArcReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetArcReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetArcReq& from) {
    SetArcReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetArcReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetArcReq";
  }
  protected:
  explicit SetArcReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveFieldNumber = 1,
  };
  // bool active = 1;
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetArcReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool active_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetArcRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetArcRes) */ {
 public:
  inline SetArcRes() : SetArcRes(nullptr) {}
  ~SetArcRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetArcRes(::google::protobuf::internal::ConstantInitialized);

  SetArcRes(const SetArcRes& from);
  SetArcRes(SetArcRes&& from) noexcept
    : SetArcRes() {
    *this = ::std::move(from);
  }

  inline SetArcRes& operator=(const SetArcRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetArcRes& operator=(SetArcRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetArcRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetArcRes* internal_default_instance() {
    return reinterpret_cast<const SetArcRes*>(
               &_SetArcRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(SetArcRes& a, SetArcRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetArcRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetArcRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetArcRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetArcRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetArcRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetArcRes& from) {
    SetArcRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetArcRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetArcRes";
  }
  protected:
  explicit SetArcRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetArcRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 48, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetTouchReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetTouchReq) */ {
 public:
  inline SetTouchReq() : SetTouchReq(nullptr) {}
  ~SetTouchReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTouchReq(::google::protobuf::internal::ConstantInitialized);

  SetTouchReq(const SetTouchReq& from);
  SetTouchReq(SetTouchReq&& from) noexcept
    : SetTouchReq() {
    *this = ::std::move(from);
  }

  inline SetTouchReq& operator=(const SetTouchReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTouchReq& operator=(SetTouchReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTouchReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTouchReq* internal_default_instance() {
    return reinterpret_cast<const SetTouchReq*>(
               &_SetTouchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(SetTouchReq& a, SetTouchReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTouchReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTouchReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTouchReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTouchReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTouchReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetTouchReq& from) {
    SetTouchReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetTouchReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetTouchReq";
  }
  protected:
  explicit SetTouchReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveFieldNumber = 1,
  };
  // bool active = 1;
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetTouchReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool active_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetTouchRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetTouchRes) */ {
 public:
  inline SetTouchRes() : SetTouchRes(nullptr) {}
  ~SetTouchRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTouchRes(::google::protobuf::internal::ConstantInitialized);

  SetTouchRes(const SetTouchRes& from);
  SetTouchRes(SetTouchRes&& from) noexcept
    : SetTouchRes() {
    *this = ::std::move(from);
  }

  inline SetTouchRes& operator=(const SetTouchRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTouchRes& operator=(SetTouchRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTouchRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTouchRes* internal_default_instance() {
    return reinterpret_cast<const SetTouchRes*>(
               &_SetTouchRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(SetTouchRes& a, SetTouchRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTouchRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTouchRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTouchRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTouchRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTouchRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetTouchRes& from) {
    SetTouchRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetTouchRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetTouchRes";
  }
  protected:
  explicit SetTouchRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetTouchRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 50, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetGasReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetGasReq) */ {
 public:
  inline SetGasReq() : SetGasReq(nullptr) {}
  ~SetGasReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGasReq(::google::protobuf::internal::ConstantInitialized);

  SetGasReq(const SetGasReq& from);
  SetGasReq(SetGasReq&& from) noexcept
    : SetGasReq() {
    *this = ::std::move(from);
  }

  inline SetGasReq& operator=(const SetGasReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGasReq& operator=(SetGasReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGasReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGasReq* internal_default_instance() {
    return reinterpret_cast<const SetGasReq*>(
               &_SetGasReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(SetGasReq& a, SetGasReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGasReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGasReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGasReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGasReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGasReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetGasReq& from) {
    SetGasReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetGasReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetGasReq";
  }
  protected:
  explicit SetGasReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveFieldNumber = 1,
  };
  // bool active = 1;
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetGasReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool active_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetGasRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetGasRes) */ {
 public:
  inline SetGasRes() : SetGasRes(nullptr) {}
  ~SetGasRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGasRes(::google::protobuf::internal::ConstantInitialized);

  SetGasRes(const SetGasRes& from);
  SetGasRes(SetGasRes&& from) noexcept
    : SetGasRes() {
    *this = ::std::move(from);
  }

  inline SetGasRes& operator=(const SetGasRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGasRes& operator=(SetGasRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGasRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGasRes* internal_default_instance() {
    return reinterpret_cast<const SetGasRes*>(
               &_SetGasRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(SetGasRes& a, SetGasRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGasRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGasRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGasRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGasRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGasRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetGasRes& from) {
    SetGasRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetGasRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetGasRes";
  }
  protected:
  explicit SetGasRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetGasRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 48, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IsTouchedReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.IsTouchedReq) */ {
 public:
  inline IsTouchedReq() : IsTouchedReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IsTouchedReq(::google::protobuf::internal::ConstantInitialized);

  IsTouchedReq(const IsTouchedReq& from);
  IsTouchedReq(IsTouchedReq&& from) noexcept
    : IsTouchedReq() {
    *this = ::std::move(from);
  }

  inline IsTouchedReq& operator=(const IsTouchedReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline IsTouchedReq& operator=(IsTouchedReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IsTouchedReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const IsTouchedReq* internal_default_instance() {
    return reinterpret_cast<const IsTouchedReq*>(
               &_IsTouchedReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(IsTouchedReq& a, IsTouchedReq& b) {
    a.Swap(&b);
  }
  inline void Swap(IsTouchedReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IsTouchedReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IsTouchedReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IsTouchedReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const IsTouchedReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const IsTouchedReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.IsTouchedReq";
  }
  protected:
  explicit IsTouchedReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.IsTouchedReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IsTouchedRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.IsTouchedRes) */ {
 public:
  inline IsTouchedRes() : IsTouchedRes(nullptr) {}
  ~IsTouchedRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IsTouchedRes(::google::protobuf::internal::ConstantInitialized);

  IsTouchedRes(const IsTouchedRes& from);
  IsTouchedRes(IsTouchedRes&& from) noexcept
    : IsTouchedRes() {
    *this = ::std::move(from);
  }

  inline IsTouchedRes& operator=(const IsTouchedRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline IsTouchedRes& operator=(IsTouchedRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IsTouchedRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const IsTouchedRes* internal_default_instance() {
    return reinterpret_cast<const IsTouchedRes*>(
               &_IsTouchedRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(IsTouchedRes& a, IsTouchedRes& b) {
    a.Swap(&b);
  }
  inline void Swap(IsTouchedRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IsTouchedRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IsTouchedRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IsTouchedRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IsTouchedRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IsTouchedRes& from) {
    IsTouchedRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IsTouchedRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.IsTouchedRes";
  }
  protected:
  explicit IsTouchedRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTouchedFieldNumber = 1,
  };
  // bool touched = 1;
  void clear_touched() ;
  bool touched() const;
  void set_touched(bool value);

  private:
  bool _internal_touched() const;
  void _internal_set_touched(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.IsTouchedRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool touched_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetVisionServerListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetVisionServerListReq) */ {
 public:
  inline GetVisionServerListReq() : GetVisionServerListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVisionServerListReq(::google::protobuf::internal::ConstantInitialized);

  GetVisionServerListReq(const GetVisionServerListReq& from);
  GetVisionServerListReq(GetVisionServerListReq&& from) noexcept
    : GetVisionServerListReq() {
    *this = ::std::move(from);
  }

  inline GetVisionServerListReq& operator=(const GetVisionServerListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVisionServerListReq& operator=(GetVisionServerListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVisionServerListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVisionServerListReq* internal_default_instance() {
    return reinterpret_cast<const GetVisionServerListReq*>(
               &_GetVisionServerListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(GetVisionServerListReq& a, GetVisionServerListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVisionServerListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVisionServerListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVisionServerListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVisionServerListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetVisionServerListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetVisionServerListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetVisionServerListReq";
  }
  protected:
  explicit GetVisionServerListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetVisionServerListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetVisionServerListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetVisionServerListRes) */ {
 public:
  inline GetVisionServerListRes() : GetVisionServerListRes(nullptr) {}
  ~GetVisionServerListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVisionServerListRes(::google::protobuf::internal::ConstantInitialized);

  GetVisionServerListRes(const GetVisionServerListRes& from);
  GetVisionServerListRes(GetVisionServerListRes&& from) noexcept
    : GetVisionServerListRes() {
    *this = ::std::move(from);
  }

  inline GetVisionServerListRes& operator=(const GetVisionServerListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVisionServerListRes& operator=(GetVisionServerListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVisionServerListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVisionServerListRes* internal_default_instance() {
    return reinterpret_cast<const GetVisionServerListRes*>(
               &_GetVisionServerListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(GetVisionServerListRes& a, GetVisionServerListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVisionServerListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVisionServerListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVisionServerListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVisionServerListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVisionServerListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetVisionServerListRes& from) {
    GetVisionServerListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetVisionServerListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetVisionServerListRes";
  }
  protected:
  explicit GetVisionServerListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVisionServersFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.Shared.VisionServer vision_servers = 1;
  int vision_servers_size() const;
  private:
  int _internal_vision_servers_size() const;

  public:
  void clear_vision_servers() ;
  ::IndyFramework::Protobuf::Shared::VisionServer* mutable_vision_servers(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >*
      mutable_vision_servers();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>& _internal_vision_servers() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>* _internal_mutable_vision_servers();
  public:
  const ::IndyFramework::Protobuf::Shared::VisionServer& vision_servers(int index) const;
  ::IndyFramework::Protobuf::Shared::VisionServer* add_vision_servers();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >&
      vision_servers() const;
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetVisionServerListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer > vision_servers_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetVisionServerListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetVisionServerListReq) */ {
 public:
  inline SetVisionServerListReq() : SetVisionServerListReq(nullptr) {}
  ~SetVisionServerListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetVisionServerListReq(::google::protobuf::internal::ConstantInitialized);

  SetVisionServerListReq(const SetVisionServerListReq& from);
  SetVisionServerListReq(SetVisionServerListReq&& from) noexcept
    : SetVisionServerListReq() {
    *this = ::std::move(from);
  }

  inline SetVisionServerListReq& operator=(const SetVisionServerListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetVisionServerListReq& operator=(SetVisionServerListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetVisionServerListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetVisionServerListReq* internal_default_instance() {
    return reinterpret_cast<const SetVisionServerListReq*>(
               &_SetVisionServerListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(SetVisionServerListReq& a, SetVisionServerListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetVisionServerListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetVisionServerListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetVisionServerListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetVisionServerListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetVisionServerListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetVisionServerListReq& from) {
    SetVisionServerListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetVisionServerListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetVisionServerListReq";
  }
  protected:
  explicit SetVisionServerListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVisionServersFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.Shared.VisionServer vision_servers = 1;
  int vision_servers_size() const;
  private:
  int _internal_vision_servers_size() const;

  public:
  void clear_vision_servers() ;
  ::IndyFramework::Protobuf::Shared::VisionServer* mutable_vision_servers(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >*
      mutable_vision_servers();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>& _internal_vision_servers() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>* _internal_mutable_vision_servers();
  public:
  const ::IndyFramework::Protobuf::Shared::VisionServer& vision_servers(int index) const;
  ::IndyFramework::Protobuf::Shared::VisionServer* add_vision_servers();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >&
      vision_servers() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetVisionServerListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer > vision_servers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetVisionServerListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetVisionServerListRes) */ {
 public:
  inline SetVisionServerListRes() : SetVisionServerListRes(nullptr) {}
  ~SetVisionServerListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetVisionServerListRes(::google::protobuf::internal::ConstantInitialized);

  SetVisionServerListRes(const SetVisionServerListRes& from);
  SetVisionServerListRes(SetVisionServerListRes&& from) noexcept
    : SetVisionServerListRes() {
    *this = ::std::move(from);
  }

  inline SetVisionServerListRes& operator=(const SetVisionServerListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetVisionServerListRes& operator=(SetVisionServerListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetVisionServerListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetVisionServerListRes* internal_default_instance() {
    return reinterpret_cast<const SetVisionServerListRes*>(
               &_SetVisionServerListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(SetVisionServerListRes& a, SetVisionServerListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetVisionServerListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetVisionServerListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetVisionServerListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetVisionServerListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetVisionServerListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetVisionServerListRes& from) {
    SetVisionServerListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetVisionServerListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetVisionServerListRes";
  }
  protected:
  explicit SetVisionServerListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetVisionServerListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetVisionObjectListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetVisionObjectListReq) */ {
 public:
  inline GetVisionObjectListReq() : GetVisionObjectListReq(nullptr) {}
  ~GetVisionObjectListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVisionObjectListReq(::google::protobuf::internal::ConstantInitialized);

  GetVisionObjectListReq(const GetVisionObjectListReq& from);
  GetVisionObjectListReq(GetVisionObjectListReq&& from) noexcept
    : GetVisionObjectListReq() {
    *this = ::std::move(from);
  }

  inline GetVisionObjectListReq& operator=(const GetVisionObjectListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVisionObjectListReq& operator=(GetVisionObjectListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVisionObjectListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVisionObjectListReq* internal_default_instance() {
    return reinterpret_cast<const GetVisionObjectListReq*>(
               &_GetVisionObjectListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(GetVisionObjectListReq& a, GetVisionObjectListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVisionObjectListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVisionObjectListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVisionObjectListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVisionObjectListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVisionObjectListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetVisionObjectListReq& from) {
    GetVisionObjectListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetVisionObjectListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetVisionObjectListReq";
  }
  protected:
  explicit GetVisionObjectListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVisionServerFieldNumber = 1,
  };
  // .IndyFramework.Protobuf.Shared.VisionServer vision_server = 1;
  bool has_vision_server() const;
  void clear_vision_server() ;
  const ::IndyFramework::Protobuf::Shared::VisionServer& vision_server() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::Shared::VisionServer* release_vision_server();
  ::IndyFramework::Protobuf::Shared::VisionServer* mutable_vision_server();
  void set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value);
  void unsafe_arena_set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value);
  ::IndyFramework::Protobuf::Shared::VisionServer* unsafe_arena_release_vision_server();

  private:
  const ::IndyFramework::Protobuf::Shared::VisionServer& _internal_vision_server() const;
  ::IndyFramework::Protobuf::Shared::VisionServer* _internal_mutable_vision_server();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetVisionObjectListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::IndyFramework::Protobuf::Shared::VisionServer* vision_server_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetVisionObjectListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetVisionObjectListRes) */ {
 public:
  inline GetVisionObjectListRes() : GetVisionObjectListRes(nullptr) {}
  ~GetVisionObjectListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVisionObjectListRes(::google::protobuf::internal::ConstantInitialized);

  GetVisionObjectListRes(const GetVisionObjectListRes& from);
  GetVisionObjectListRes(GetVisionObjectListRes&& from) noexcept
    : GetVisionObjectListRes() {
    *this = ::std::move(from);
  }

  inline GetVisionObjectListRes& operator=(const GetVisionObjectListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVisionObjectListRes& operator=(GetVisionObjectListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVisionObjectListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVisionObjectListRes* internal_default_instance() {
    return reinterpret_cast<const GetVisionObjectListRes*>(
               &_GetVisionObjectListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(GetVisionObjectListRes& a, GetVisionObjectListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVisionObjectListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVisionObjectListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVisionObjectListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVisionObjectListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVisionObjectListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetVisionObjectListRes& from) {
    GetVisionObjectListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetVisionObjectListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetVisionObjectListRes";
  }
  protected:
  explicit GetVisionObjectListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated string objects = 1;
  int objects_size() const;
  private:
  int _internal_objects_size() const;

  public:
  void clear_objects() ;
  const std::string& objects(int index) const;
  std::string* mutable_objects(int index);
  void set_objects(int index, const std::string& value);
  void set_objects(int index, std::string&& value);
  void set_objects(int index, const char* value);
  void set_objects(int index, const char* value, std::size_t size);
  void set_objects(int index, absl::string_view value);
  std::string* add_objects();
  void add_objects(const std::string& value);
  void add_objects(std::string&& value);
  void add_objects(const char* value);
  void add_objects(const char* value, std::size_t size);
  void add_objects(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& objects() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_objects();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_objects() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_objects();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetVisionObjectListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 68, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> objects_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class VisionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.VisionRequest) */ {
 public:
  inline VisionRequest() : VisionRequest(nullptr) {}
  ~VisionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VisionRequest(::google::protobuf::internal::ConstantInitialized);

  VisionRequest(const VisionRequest& from);
  VisionRequest(VisionRequest&& from) noexcept
    : VisionRequest() {
    *this = ::std::move(from);
  }

  inline VisionRequest& operator=(const VisionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisionRequest& operator=(VisionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VisionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VisionRequest* internal_default_instance() {
    return reinterpret_cast<const VisionRequest*>(
               &_VisionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(VisionRequest& a, VisionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VisionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VisionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VisionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VisionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VisionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VisionRequest& from) {
    VisionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisionRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.VisionRequest";
  }
  protected:
  explicit VisionRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectFieldNumber = 2,
    kVisionServerFieldNumber = 1,
    kFrameTypeFieldNumber = 3,
    kSolutionIdFieldNumber = 4,
    kVisionIdFieldNumber = 5,
  };
  // string object = 2;
  void clear_object() ;
  const std::string& object() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object(Arg_&& arg, Args_... args);
  std::string* mutable_object();
  PROTOBUF_NODISCARD std::string* release_object();
  void set_allocated_object(std::string* ptr);

  private:
  const std::string& _internal_object() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object(
      const std::string& value);
  std::string* _internal_mutable_object();

  public:
  // .IndyFramework.Protobuf.Shared.VisionServer vision_server = 1;
  bool has_vision_server() const;
  void clear_vision_server() ;
  const ::IndyFramework::Protobuf::Shared::VisionServer& vision_server() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::Shared::VisionServer* release_vision_server();
  ::IndyFramework::Protobuf::Shared::VisionServer* mutable_vision_server();
  void set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value);
  void unsafe_arena_set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value);
  ::IndyFramework::Protobuf::Shared::VisionServer* unsafe_arena_release_vision_server();

  private:
  const ::IndyFramework::Protobuf::Shared::VisionServer& _internal_vision_server() const;
  ::IndyFramework::Protobuf::Shared::VisionServer* _internal_mutable_vision_server();

  public:
  // .IndyFramework.Protobuf.Shared.VisionFrameType frame_type = 3;
  void clear_frame_type() ;
  ::IndyFramework::Protobuf::Shared::VisionFrameType frame_type() const;
  void set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value);

  private:
  ::IndyFramework::Protobuf::Shared::VisionFrameType _internal_frame_type() const;
  void _internal_set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value);

  public:
  // uint32 solution_id = 4;
  void clear_solution_id() ;
  ::uint32_t solution_id() const;
  void set_solution_id(::uint32_t value);

  private:
  ::uint32_t _internal_solution_id() const;
  void _internal_set_solution_id(::uint32_t value);

  public:
  // uint32 vision_id = 5;
  void clear_vision_id() ;
  ::uint32_t vision_id() const;
  void set_vision_id(::uint32_t value);

  private:
  ::uint32_t _internal_vision_id() const;
  void _internal_set_vision_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.VisionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr object_;
    ::IndyFramework::Protobuf::Shared::VisionServer* vision_server_;
    int frame_type_;
    ::uint32_t solution_id_;
    ::uint32_t vision_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class VisionResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.VisionResult) */ {
 public:
  inline VisionResult() : VisionResult(nullptr) {}
  ~VisionResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VisionResult(::google::protobuf::internal::ConstantInitialized);

  VisionResult(const VisionResult& from);
  VisionResult(VisionResult&& from) noexcept
    : VisionResult() {
    *this = ::std::move(from);
  }

  inline VisionResult& operator=(const VisionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisionResult& operator=(VisionResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VisionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const VisionResult* internal_default_instance() {
    return reinterpret_cast<const VisionResult*>(
               &_VisionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(VisionResult& a, VisionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(VisionResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VisionResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VisionResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VisionResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VisionResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VisionResult& from) {
    VisionResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisionResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.VisionResult";
  }
  protected:
  explicit VisionResult(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 1,
    kObjectFieldNumber = 3,
    kMsgFieldNumber = 100,
    kFrameTypeFieldNumber = 2,
    kDetectedFieldNumber = 4,
    kPassedFieldNumber = 5,
  };
  // repeated float frame = 1;
  int frame_size() const;
  private:
  int _internal_frame_size() const;

  public:
  void clear_frame() ;
  float frame(int index) const;
  void set_frame(int index, float value);
  void add_frame(float value);
  const ::google::protobuf::RepeatedField<float>& frame() const;
  ::google::protobuf::RepeatedField<float>* mutable_frame();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_frame() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_frame();

  public:
  // string object = 3;
  void clear_object() ;
  const std::string& object() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object(Arg_&& arg, Args_... args);
  std::string* mutable_object();
  PROTOBUF_NODISCARD std::string* release_object();
  void set_allocated_object(std::string* ptr);

  private:
  const std::string& _internal_object() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object(
      const std::string& value);
  std::string* _internal_mutable_object();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // .IndyFramework.Protobuf.Shared.VisionFrameType frame_type = 2;
  void clear_frame_type() ;
  ::IndyFramework::Protobuf::Shared::VisionFrameType frame_type() const;
  void set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value);

  private:
  ::IndyFramework::Protobuf::Shared::VisionFrameType _internal_frame_type() const;
  void _internal_set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value);

  public:
  // bool detected = 4;
  void clear_detected() ;
  bool detected() const;
  void set_detected(bool value);

  private:
  bool _internal_detected() const;
  void _internal_set_detected(bool value);

  public:
  // bool passed = 5;
  void clear_passed() ;
  bool passed() const;
  void set_passed(bool value);

  private:
  bool _internal_passed() const;
  void _internal_set_passed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.VisionResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> frame_;
    ::google::protobuf::internal::ArenaStringPtr object_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    int frame_type_;
    bool detected_;
    bool passed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetGcodeMotionListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetGcodeMotionListReq) */ {
 public:
  inline GetGcodeMotionListReq() : GetGcodeMotionListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetGcodeMotionListReq(::google::protobuf::internal::ConstantInitialized);

  GetGcodeMotionListReq(const GetGcodeMotionListReq& from);
  GetGcodeMotionListReq(GetGcodeMotionListReq&& from) noexcept
    : GetGcodeMotionListReq() {
    *this = ::std::move(from);
  }

  inline GetGcodeMotionListReq& operator=(const GetGcodeMotionListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGcodeMotionListReq& operator=(GetGcodeMotionListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGcodeMotionListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGcodeMotionListReq* internal_default_instance() {
    return reinterpret_cast<const GetGcodeMotionListReq*>(
               &_GetGcodeMotionListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(GetGcodeMotionListReq& a, GetGcodeMotionListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetGcodeMotionListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGcodeMotionListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGcodeMotionListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetGcodeMotionListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetGcodeMotionListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetGcodeMotionListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetGcodeMotionListReq";
  }
  protected:
  explicit GetGcodeMotionListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetGcodeMotionListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetGcodeMotionListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes) */ {
 public:
  inline GetGcodeMotionListRes() : GetGcodeMotionListRes(nullptr) {}
  ~GetGcodeMotionListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetGcodeMotionListRes(::google::protobuf::internal::ConstantInitialized);

  GetGcodeMotionListRes(const GetGcodeMotionListRes& from);
  GetGcodeMotionListRes(GetGcodeMotionListRes&& from) noexcept
    : GetGcodeMotionListRes() {
    *this = ::std::move(from);
  }

  inline GetGcodeMotionListRes& operator=(const GetGcodeMotionListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGcodeMotionListRes& operator=(GetGcodeMotionListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGcodeMotionListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGcodeMotionListRes* internal_default_instance() {
    return reinterpret_cast<const GetGcodeMotionListRes*>(
               &_GetGcodeMotionListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(GetGcodeMotionListRes& a, GetGcodeMotionListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetGcodeMotionListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGcodeMotionListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGcodeMotionListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetGcodeMotionListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGcodeMotionListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetGcodeMotionListRes& from) {
    GetGcodeMotionListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetGcodeMotionListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetGcodeMotionListRes";
  }
  protected:
  explicit GetGcodeMotionListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGcodeFileNameFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated string gcode_file_name = 1;
  int gcode_file_name_size() const;
  private:
  int _internal_gcode_file_name_size() const;

  public:
  void clear_gcode_file_name() ;
  const std::string& gcode_file_name(int index) const;
  std::string* mutable_gcode_file_name(int index);
  void set_gcode_file_name(int index, const std::string& value);
  void set_gcode_file_name(int index, std::string&& value);
  void set_gcode_file_name(int index, const char* value);
  void set_gcode_file_name(int index, const char* value, std::size_t size);
  void set_gcode_file_name(int index, absl::string_view value);
  std::string* add_gcode_file_name();
  void add_gcode_file_name(const std::string& value);
  void add_gcode_file_name(std::string&& value);
  void add_gcode_file_name(const char* value);
  void add_gcode_file_name(const char* value, std::size_t size);
  void add_gcode_file_name(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& gcode_file_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_gcode_file_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_gcode_file_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_gcode_file_name();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 75, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> gcode_file_name_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetModbusServerListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetModbusServerListReq) */ {
 public:
  inline GetModbusServerListReq() : GetModbusServerListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetModbusServerListReq(::google::protobuf::internal::ConstantInitialized);

  GetModbusServerListReq(const GetModbusServerListReq& from);
  GetModbusServerListReq(GetModbusServerListReq&& from) noexcept
    : GetModbusServerListReq() {
    *this = ::std::move(from);
  }

  inline GetModbusServerListReq& operator=(const GetModbusServerListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModbusServerListReq& operator=(GetModbusServerListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModbusServerListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModbusServerListReq* internal_default_instance() {
    return reinterpret_cast<const GetModbusServerListReq*>(
               &_GetModbusServerListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(GetModbusServerListReq& a, GetModbusServerListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetModbusServerListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModbusServerListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModbusServerListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetModbusServerListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetModbusServerListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetModbusServerListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetModbusServerListReq";
  }
  protected:
  explicit GetModbusServerListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetModbusServerListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetModbusServerListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetModbusServerListRes) */ {
 public:
  inline GetModbusServerListRes() : GetModbusServerListRes(nullptr) {}
  ~GetModbusServerListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetModbusServerListRes(::google::protobuf::internal::ConstantInitialized);

  GetModbusServerListRes(const GetModbusServerListRes& from);
  GetModbusServerListRes(GetModbusServerListRes&& from) noexcept
    : GetModbusServerListRes() {
    *this = ::std::move(from);
  }

  inline GetModbusServerListRes& operator=(const GetModbusServerListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModbusServerListRes& operator=(GetModbusServerListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModbusServerListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModbusServerListRes* internal_default_instance() {
    return reinterpret_cast<const GetModbusServerListRes*>(
               &_GetModbusServerListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(GetModbusServerListRes& a, GetModbusServerListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetModbusServerListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModbusServerListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModbusServerListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetModbusServerListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetModbusServerListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetModbusServerListRes& from) {
    GetModbusServerListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetModbusServerListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetModbusServerListRes";
  }
  protected:
  explicit GetModbusServerListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModbusServersFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.Shared.ModbusServer modbus_servers = 1;
  int modbus_servers_size() const;
  private:
  int _internal_modbus_servers_size() const;

  public:
  void clear_modbus_servers() ;
  ::IndyFramework::Protobuf::Shared::ModbusServer* mutable_modbus_servers(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >*
      mutable_modbus_servers();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>& _internal_modbus_servers() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>* _internal_mutable_modbus_servers();
  public:
  const ::IndyFramework::Protobuf::Shared::ModbusServer& modbus_servers(int index) const;
  ::IndyFramework::Protobuf::Shared::ModbusServer* add_modbus_servers();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >&
      modbus_servers() const;
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetModbusServerListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer > modbus_servers_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetModbusServerListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetModbusServerListReq) */ {
 public:
  inline SetModbusServerListReq() : SetModbusServerListReq(nullptr) {}
  ~SetModbusServerListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetModbusServerListReq(::google::protobuf::internal::ConstantInitialized);

  SetModbusServerListReq(const SetModbusServerListReq& from);
  SetModbusServerListReq(SetModbusServerListReq&& from) noexcept
    : SetModbusServerListReq() {
    *this = ::std::move(from);
  }

  inline SetModbusServerListReq& operator=(const SetModbusServerListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModbusServerListReq& operator=(SetModbusServerListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModbusServerListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModbusServerListReq* internal_default_instance() {
    return reinterpret_cast<const SetModbusServerListReq*>(
               &_SetModbusServerListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(SetModbusServerListReq& a, SetModbusServerListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetModbusServerListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModbusServerListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModbusServerListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetModbusServerListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetModbusServerListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetModbusServerListReq& from) {
    SetModbusServerListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetModbusServerListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetModbusServerListReq";
  }
  protected:
  explicit SetModbusServerListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModbusServersFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.Shared.ModbusServer modbus_servers = 1;
  int modbus_servers_size() const;
  private:
  int _internal_modbus_servers_size() const;

  public:
  void clear_modbus_servers() ;
  ::IndyFramework::Protobuf::Shared::ModbusServer* mutable_modbus_servers(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >*
      mutable_modbus_servers();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>& _internal_modbus_servers() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>* _internal_mutable_modbus_servers();
  public:
  const ::IndyFramework::Protobuf::Shared::ModbusServer& modbus_servers(int index) const;
  ::IndyFramework::Protobuf::Shared::ModbusServer* add_modbus_servers();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >&
      modbus_servers() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetModbusServerListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer > modbus_servers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetModbusServerListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetModbusServerListRes) */ {
 public:
  inline SetModbusServerListRes() : SetModbusServerListRes(nullptr) {}
  ~SetModbusServerListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetModbusServerListRes(::google::protobuf::internal::ConstantInitialized);

  SetModbusServerListRes(const SetModbusServerListRes& from);
  SetModbusServerListRes(SetModbusServerListRes&& from) noexcept
    : SetModbusServerListRes() {
    *this = ::std::move(from);
  }

  inline SetModbusServerListRes& operator=(const SetModbusServerListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModbusServerListRes& operator=(SetModbusServerListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModbusServerListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModbusServerListRes* internal_default_instance() {
    return reinterpret_cast<const SetModbusServerListRes*>(
               &_SetModbusServerListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(SetModbusServerListRes& a, SetModbusServerListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetModbusServerListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModbusServerListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModbusServerListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetModbusServerListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetModbusServerListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetModbusServerListRes& from) {
    SetModbusServerListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetModbusServerListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetModbusServerListRes";
  }
  protected:
  explicit SetModbusServerListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetModbusServerListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CheckModbusConnectionReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CheckModbusConnectionReq) */ {
 public:
  inline CheckModbusConnectionReq() : CheckModbusConnectionReq(nullptr) {}
  ~CheckModbusConnectionReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckModbusConnectionReq(::google::protobuf::internal::ConstantInitialized);

  CheckModbusConnectionReq(const CheckModbusConnectionReq& from);
  CheckModbusConnectionReq(CheckModbusConnectionReq&& from) noexcept
    : CheckModbusConnectionReq() {
    *this = ::std::move(from);
  }

  inline CheckModbusConnectionReq& operator=(const CheckModbusConnectionReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckModbusConnectionReq& operator=(CheckModbusConnectionReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckModbusConnectionReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckModbusConnectionReq* internal_default_instance() {
    return reinterpret_cast<const CheckModbusConnectionReq*>(
               &_CheckModbusConnectionReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(CheckModbusConnectionReq& a, CheckModbusConnectionReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckModbusConnectionReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckModbusConnectionReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckModbusConnectionReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckModbusConnectionReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckModbusConnectionReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckModbusConnectionReq& from) {
    CheckModbusConnectionReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckModbusConnectionReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CheckModbusConnectionReq";
  }
  protected:
  explicit CheckModbusConnectionReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModbusServersFieldNumber = 1,
  };
  // .IndyFramework.Protobuf.Shared.ModbusServer modbus_servers = 1;
  bool has_modbus_servers() const;
  void clear_modbus_servers() ;
  const ::IndyFramework::Protobuf::Shared::ModbusServer& modbus_servers() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::Shared::ModbusServer* release_modbus_servers();
  ::IndyFramework::Protobuf::Shared::ModbusServer* mutable_modbus_servers();
  void set_allocated_modbus_servers(::IndyFramework::Protobuf::Shared::ModbusServer* value);
  void unsafe_arena_set_allocated_modbus_servers(::IndyFramework::Protobuf::Shared::ModbusServer* value);
  ::IndyFramework::Protobuf::Shared::ModbusServer* unsafe_arena_release_modbus_servers();

  private:
  const ::IndyFramework::Protobuf::Shared::ModbusServer& _internal_modbus_servers() const;
  ::IndyFramework::Protobuf::Shared::ModbusServer* _internal_mutable_modbus_servers();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CheckModbusConnectionReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::IndyFramework::Protobuf::Shared::ModbusServer* modbus_servers_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CheckModbusConnectionRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CheckModbusConnectionRes) */ {
 public:
  inline CheckModbusConnectionRes() : CheckModbusConnectionRes(nullptr) {}
  ~CheckModbusConnectionRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckModbusConnectionRes(::google::protobuf::internal::ConstantInitialized);

  CheckModbusConnectionRes(const CheckModbusConnectionRes& from);
  CheckModbusConnectionRes(CheckModbusConnectionRes&& from) noexcept
    : CheckModbusConnectionRes() {
    *this = ::std::move(from);
  }

  inline CheckModbusConnectionRes& operator=(const CheckModbusConnectionRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckModbusConnectionRes& operator=(CheckModbusConnectionRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckModbusConnectionRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckModbusConnectionRes* internal_default_instance() {
    return reinterpret_cast<const CheckModbusConnectionRes*>(
               &_CheckModbusConnectionRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CheckModbusConnectionRes& a, CheckModbusConnectionRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckModbusConnectionRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckModbusConnectionRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckModbusConnectionRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckModbusConnectionRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckModbusConnectionRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckModbusConnectionRes& from) {
    CheckModbusConnectionRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckModbusConnectionRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CheckModbusConnectionRes";
  }
  protected:
  explicit CheckModbusConnectionRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CheckModbusConnectionRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 63, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetToolFrameListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetToolFrameListReq) */ {
 public:
  inline GetToolFrameListReq() : GetToolFrameListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetToolFrameListReq(::google::protobuf::internal::ConstantInitialized);

  GetToolFrameListReq(const GetToolFrameListReq& from);
  GetToolFrameListReq(GetToolFrameListReq&& from) noexcept
    : GetToolFrameListReq() {
    *this = ::std::move(from);
  }

  inline GetToolFrameListReq& operator=(const GetToolFrameListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetToolFrameListReq& operator=(GetToolFrameListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetToolFrameListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetToolFrameListReq* internal_default_instance() {
    return reinterpret_cast<const GetToolFrameListReq*>(
               &_GetToolFrameListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(GetToolFrameListReq& a, GetToolFrameListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetToolFrameListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetToolFrameListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetToolFrameListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetToolFrameListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetToolFrameListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetToolFrameListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetToolFrameListReq";
  }
  protected:
  explicit GetToolFrameListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetToolFrameListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetToolFrameListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetToolFrameListRes) */ {
 public:
  inline GetToolFrameListRes() : GetToolFrameListRes(nullptr) {}
  ~GetToolFrameListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetToolFrameListRes(::google::protobuf::internal::ConstantInitialized);

  GetToolFrameListRes(const GetToolFrameListRes& from);
  GetToolFrameListRes(GetToolFrameListRes&& from) noexcept
    : GetToolFrameListRes() {
    *this = ::std::move(from);
  }

  inline GetToolFrameListRes& operator=(const GetToolFrameListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetToolFrameListRes& operator=(GetToolFrameListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetToolFrameListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetToolFrameListRes* internal_default_instance() {
    return reinterpret_cast<const GetToolFrameListRes*>(
               &_GetToolFrameListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(GetToolFrameListRes& a, GetToolFrameListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetToolFrameListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetToolFrameListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetToolFrameListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetToolFrameListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetToolFrameListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetToolFrameListRes& from) {
    GetToolFrameListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetToolFrameListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetToolFrameListRes";
  }
  protected:
  explicit GetToolFrameListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolFramesFieldNumber = 1,
    kDefaultNameFieldNumber = 2,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.Shared.NamedTaskPosition tool_frames = 1;
  int tool_frames_size() const;
  private:
  int _internal_tool_frames_size() const;

  public:
  void clear_tool_frames() ;
  ::IndyFramework::Protobuf::Shared::NamedTaskPosition* mutable_tool_frames(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >*
      mutable_tool_frames();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>& _internal_tool_frames() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>* _internal_mutable_tool_frames();
  public:
  const ::IndyFramework::Protobuf::Shared::NamedTaskPosition& tool_frames(int index) const;
  ::IndyFramework::Protobuf::Shared::NamedTaskPosition* add_tool_frames();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >&
      tool_frames() const;
  // string default_name = 2;
  void clear_default_name() ;
  const std::string& default_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_name(Arg_&& arg, Args_... args);
  std::string* mutable_default_name();
  PROTOBUF_NODISCARD std::string* release_default_name();
  void set_allocated_default_name(std::string* ptr);

  private:
  const std::string& _internal_default_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_name(
      const std::string& value);
  std::string* _internal_mutable_default_name();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetToolFrameListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 70, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition > tool_frames_;
    ::google::protobuf::internal::ArenaStringPtr default_name_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetToolFrameListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetToolFrameListReq) */ {
 public:
  inline SetToolFrameListReq() : SetToolFrameListReq(nullptr) {}
  ~SetToolFrameListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetToolFrameListReq(::google::protobuf::internal::ConstantInitialized);

  SetToolFrameListReq(const SetToolFrameListReq& from);
  SetToolFrameListReq(SetToolFrameListReq&& from) noexcept
    : SetToolFrameListReq() {
    *this = ::std::move(from);
  }

  inline SetToolFrameListReq& operator=(const SetToolFrameListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetToolFrameListReq& operator=(SetToolFrameListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetToolFrameListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetToolFrameListReq* internal_default_instance() {
    return reinterpret_cast<const SetToolFrameListReq*>(
               &_SetToolFrameListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(SetToolFrameListReq& a, SetToolFrameListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetToolFrameListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetToolFrameListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetToolFrameListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetToolFrameListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetToolFrameListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetToolFrameListReq& from) {
    SetToolFrameListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetToolFrameListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetToolFrameListReq";
  }
  protected:
  explicit SetToolFrameListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolFramesFieldNumber = 1,
    kDefaultNameFieldNumber = 2,
  };
  // repeated .IndyFramework.Protobuf.Shared.NamedTaskPosition tool_frames = 1;
  int tool_frames_size() const;
  private:
  int _internal_tool_frames_size() const;

  public:
  void clear_tool_frames() ;
  ::IndyFramework::Protobuf::Shared::NamedTaskPosition* mutable_tool_frames(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >*
      mutable_tool_frames();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>& _internal_tool_frames() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>* _internal_mutable_tool_frames();
  public:
  const ::IndyFramework::Protobuf::Shared::NamedTaskPosition& tool_frames(int index) const;
  ::IndyFramework::Protobuf::Shared::NamedTaskPosition* add_tool_frames();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >&
      tool_frames() const;
  // string default_name = 2;
  void clear_default_name() ;
  const std::string& default_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_name(Arg_&& arg, Args_... args);
  std::string* mutable_default_name();
  PROTOBUF_NODISCARD std::string* release_default_name();
  void set_allocated_default_name(std::string* ptr);

  private:
  const std::string& _internal_default_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_name(
      const std::string& value);
  std::string* _internal_mutable_default_name();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetToolFrameListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 67, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition > tool_frames_;
    ::google::protobuf::internal::ArenaStringPtr default_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetToolFrameListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetToolFrameListRes) */ {
 public:
  inline SetToolFrameListRes() : SetToolFrameListRes(nullptr) {}
  ~SetToolFrameListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetToolFrameListRes(::google::protobuf::internal::ConstantInitialized);

  SetToolFrameListRes(const SetToolFrameListRes& from);
  SetToolFrameListRes(SetToolFrameListRes&& from) noexcept
    : SetToolFrameListRes() {
    *this = ::std::move(from);
  }

  inline SetToolFrameListRes& operator=(const SetToolFrameListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetToolFrameListRes& operator=(SetToolFrameListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetToolFrameListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetToolFrameListRes* internal_default_instance() {
    return reinterpret_cast<const SetToolFrameListRes*>(
               &_SetToolFrameListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(SetToolFrameListRes& a, SetToolFrameListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetToolFrameListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetToolFrameListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetToolFrameListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetToolFrameListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetToolFrameListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetToolFrameListRes& from) {
    SetToolFrameListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetToolFrameListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetToolFrameListRes";
  }
  protected:
  explicit SetToolFrameListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetToolFrameListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 58, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetRefFrameListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetRefFrameListReq) */ {
 public:
  inline GetRefFrameListReq() : GetRefFrameListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRefFrameListReq(::google::protobuf::internal::ConstantInitialized);

  GetRefFrameListReq(const GetRefFrameListReq& from);
  GetRefFrameListReq(GetRefFrameListReq&& from) noexcept
    : GetRefFrameListReq() {
    *this = ::std::move(from);
  }

  inline GetRefFrameListReq& operator=(const GetRefFrameListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRefFrameListReq& operator=(GetRefFrameListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRefFrameListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRefFrameListReq* internal_default_instance() {
    return reinterpret_cast<const GetRefFrameListReq*>(
               &_GetRefFrameListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(GetRefFrameListReq& a, GetRefFrameListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRefFrameListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRefFrameListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRefFrameListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRefFrameListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRefFrameListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRefFrameListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetRefFrameListReq";
  }
  protected:
  explicit GetRefFrameListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetRefFrameListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetRefFrameListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetRefFrameListRes) */ {
 public:
  inline GetRefFrameListRes() : GetRefFrameListRes(nullptr) {}
  ~GetRefFrameListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRefFrameListRes(::google::protobuf::internal::ConstantInitialized);

  GetRefFrameListRes(const GetRefFrameListRes& from);
  GetRefFrameListRes(GetRefFrameListRes&& from) noexcept
    : GetRefFrameListRes() {
    *this = ::std::move(from);
  }

  inline GetRefFrameListRes& operator=(const GetRefFrameListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRefFrameListRes& operator=(GetRefFrameListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRefFrameListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRefFrameListRes* internal_default_instance() {
    return reinterpret_cast<const GetRefFrameListRes*>(
               &_GetRefFrameListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(GetRefFrameListRes& a, GetRefFrameListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRefFrameListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRefFrameListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRefFrameListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRefFrameListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRefFrameListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetRefFrameListRes& from) {
    GetRefFrameListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRefFrameListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetRefFrameListRes";
  }
  protected:
  explicit GetRefFrameListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRefFramesFieldNumber = 1,
    kDefaultNameFieldNumber = 2,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.Shared.NamedReferencePosition ref_frames = 1;
  int ref_frames_size() const;
  private:
  int _internal_ref_frames_size() const;

  public:
  void clear_ref_frames() ;
  ::IndyFramework::Protobuf::Shared::NamedReferencePosition* mutable_ref_frames(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >*
      mutable_ref_frames();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>& _internal_ref_frames() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>* _internal_mutable_ref_frames();
  public:
  const ::IndyFramework::Protobuf::Shared::NamedReferencePosition& ref_frames(int index) const;
  ::IndyFramework::Protobuf::Shared::NamedReferencePosition* add_ref_frames();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >&
      ref_frames() const;
  // string default_name = 2;
  void clear_default_name() ;
  const std::string& default_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_name(Arg_&& arg, Args_... args);
  std::string* mutable_default_name();
  PROTOBUF_NODISCARD std::string* release_default_name();
  void set_allocated_default_name(std::string* ptr);

  private:
  const std::string& _internal_default_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_name(
      const std::string& value);
  std::string* _internal_mutable_default_name();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetRefFrameListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 69, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition > ref_frames_;
    ::google::protobuf::internal::ArenaStringPtr default_name_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetRefFrameListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetRefFrameListReq) */ {
 public:
  inline SetRefFrameListReq() : SetRefFrameListReq(nullptr) {}
  ~SetRefFrameListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRefFrameListReq(::google::protobuf::internal::ConstantInitialized);

  SetRefFrameListReq(const SetRefFrameListReq& from);
  SetRefFrameListReq(SetRefFrameListReq&& from) noexcept
    : SetRefFrameListReq() {
    *this = ::std::move(from);
  }

  inline SetRefFrameListReq& operator=(const SetRefFrameListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRefFrameListReq& operator=(SetRefFrameListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRefFrameListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRefFrameListReq* internal_default_instance() {
    return reinterpret_cast<const SetRefFrameListReq*>(
               &_SetRefFrameListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(SetRefFrameListReq& a, SetRefFrameListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRefFrameListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRefFrameListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRefFrameListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRefFrameListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRefFrameListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRefFrameListReq& from) {
    SetRefFrameListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRefFrameListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetRefFrameListReq";
  }
  protected:
  explicit SetRefFrameListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRefFramesFieldNumber = 1,
    kDefaultNameFieldNumber = 2,
  };
  // repeated .IndyFramework.Protobuf.Shared.NamedReferencePosition ref_frames = 1;
  int ref_frames_size() const;
  private:
  int _internal_ref_frames_size() const;

  public:
  void clear_ref_frames() ;
  ::IndyFramework::Protobuf::Shared::NamedReferencePosition* mutable_ref_frames(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >*
      mutable_ref_frames();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>& _internal_ref_frames() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>* _internal_mutable_ref_frames();
  public:
  const ::IndyFramework::Protobuf::Shared::NamedReferencePosition& ref_frames(int index) const;
  ::IndyFramework::Protobuf::Shared::NamedReferencePosition* add_ref_frames();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >&
      ref_frames() const;
  // string default_name = 2;
  void clear_default_name() ;
  const std::string& default_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_name(Arg_&& arg, Args_... args);
  std::string* mutable_default_name();
  PROTOBUF_NODISCARD std::string* release_default_name();
  void set_allocated_default_name(std::string* ptr);

  private:
  const std::string& _internal_default_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_name(
      const std::string& value);
  std::string* _internal_mutable_default_name();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetRefFrameListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 66, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition > ref_frames_;
    ::google::protobuf::internal::ArenaStringPtr default_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetRefFrameListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetRefFrameListRes) */ {
 public:
  inline SetRefFrameListRes() : SetRefFrameListRes(nullptr) {}
  ~SetRefFrameListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRefFrameListRes(::google::protobuf::internal::ConstantInitialized);

  SetRefFrameListRes(const SetRefFrameListRes& from);
  SetRefFrameListRes(SetRefFrameListRes&& from) noexcept
    : SetRefFrameListRes() {
    *this = ::std::move(from);
  }

  inline SetRefFrameListRes& operator=(const SetRefFrameListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRefFrameListRes& operator=(SetRefFrameListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRefFrameListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRefFrameListRes* internal_default_instance() {
    return reinterpret_cast<const SetRefFrameListRes*>(
               &_SetRefFrameListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(SetRefFrameListRes& a, SetRefFrameListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRefFrameListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRefFrameListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRefFrameListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRefFrameListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRefFrameListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRefFrameListRes& from) {
    SetRefFrameListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRefFrameListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetRefFrameListRes";
  }
  protected:
  explicit SetRefFrameListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetRefFrameListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetCustomPosListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetCustomPosListReq) */ {
 public:
  inline GetCustomPosListReq() : GetCustomPosListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCustomPosListReq(::google::protobuf::internal::ConstantInitialized);

  GetCustomPosListReq(const GetCustomPosListReq& from);
  GetCustomPosListReq(GetCustomPosListReq&& from) noexcept
    : GetCustomPosListReq() {
    *this = ::std::move(from);
  }

  inline GetCustomPosListReq& operator=(const GetCustomPosListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCustomPosListReq& operator=(GetCustomPosListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCustomPosListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCustomPosListReq* internal_default_instance() {
    return reinterpret_cast<const GetCustomPosListReq*>(
               &_GetCustomPosListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(GetCustomPosListReq& a, GetCustomPosListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCustomPosListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCustomPosListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCustomPosListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCustomPosListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetCustomPosListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetCustomPosListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetCustomPosListReq";
  }
  protected:
  explicit GetCustomPosListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetCustomPosListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetCustomPosListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetCustomPosListRes) */ {
 public:
  inline GetCustomPosListRes() : GetCustomPosListRes(nullptr) {}
  ~GetCustomPosListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCustomPosListRes(::google::protobuf::internal::ConstantInitialized);

  GetCustomPosListRes(const GetCustomPosListRes& from);
  GetCustomPosListRes(GetCustomPosListRes&& from) noexcept
    : GetCustomPosListRes() {
    *this = ::std::move(from);
  }

  inline GetCustomPosListRes& operator=(const GetCustomPosListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCustomPosListRes& operator=(GetCustomPosListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCustomPosListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCustomPosListRes* internal_default_instance() {
    return reinterpret_cast<const GetCustomPosListRes*>(
               &_GetCustomPosListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(GetCustomPosListRes& a, GetCustomPosListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCustomPosListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCustomPosListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCustomPosListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCustomPosListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCustomPosListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetCustomPosListRes& from) {
    GetCustomPosListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCustomPosListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetCustomPosListRes";
  }
  protected:
  explicit GetCustomPosListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomPosFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.Shared.NamedJointPosition custom_pos = 1;
  int custom_pos_size() const;
  private:
  int _internal_custom_pos_size() const;

  public:
  void clear_custom_pos() ;
  ::IndyFramework::Protobuf::Shared::NamedJointPosition* mutable_custom_pos(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >*
      mutable_custom_pos();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>& _internal_custom_pos() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>* _internal_mutable_custom_pos();
  public:
  const ::IndyFramework::Protobuf::Shared::NamedJointPosition& custom_pos(int index) const;
  ::IndyFramework::Protobuf::Shared::NamedJointPosition* add_custom_pos();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >&
      custom_pos() const;
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetCustomPosListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 58, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition > custom_pos_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetCustomPosListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetCustomPosListReq) */ {
 public:
  inline SetCustomPosListReq() : SetCustomPosListReq(nullptr) {}
  ~SetCustomPosListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetCustomPosListReq(::google::protobuf::internal::ConstantInitialized);

  SetCustomPosListReq(const SetCustomPosListReq& from);
  SetCustomPosListReq(SetCustomPosListReq&& from) noexcept
    : SetCustomPosListReq() {
    *this = ::std::move(from);
  }

  inline SetCustomPosListReq& operator=(const SetCustomPosListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCustomPosListReq& operator=(SetCustomPosListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetCustomPosListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetCustomPosListReq* internal_default_instance() {
    return reinterpret_cast<const SetCustomPosListReq*>(
               &_SetCustomPosListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(SetCustomPosListReq& a, SetCustomPosListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCustomPosListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetCustomPosListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetCustomPosListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetCustomPosListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetCustomPosListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetCustomPosListReq& from) {
    SetCustomPosListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCustomPosListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetCustomPosListReq";
  }
  protected:
  explicit SetCustomPosListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomPosFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.Shared.NamedJointPosition custom_pos = 1;
  int custom_pos_size() const;
  private:
  int _internal_custom_pos_size() const;

  public:
  void clear_custom_pos() ;
  ::IndyFramework::Protobuf::Shared::NamedJointPosition* mutable_custom_pos(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >*
      mutable_custom_pos();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>& _internal_custom_pos() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>* _internal_mutable_custom_pos();
  public:
  const ::IndyFramework::Protobuf::Shared::NamedJointPosition& custom_pos(int index) const;
  ::IndyFramework::Protobuf::Shared::NamedJointPosition* add_custom_pos();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >&
      custom_pos() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetCustomPosListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition > custom_pos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetCustomPosListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetCustomPosListRes) */ {
 public:
  inline SetCustomPosListRes() : SetCustomPosListRes(nullptr) {}
  ~SetCustomPosListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetCustomPosListRes(::google::protobuf::internal::ConstantInitialized);

  SetCustomPosListRes(const SetCustomPosListRes& from);
  SetCustomPosListRes(SetCustomPosListRes&& from) noexcept
    : SetCustomPosListRes() {
    *this = ::std::move(from);
  }

  inline SetCustomPosListRes& operator=(const SetCustomPosListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCustomPosListRes& operator=(SetCustomPosListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetCustomPosListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetCustomPosListRes* internal_default_instance() {
    return reinterpret_cast<const SetCustomPosListRes*>(
               &_SetCustomPosListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(SetCustomPosListRes& a, SetCustomPosListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCustomPosListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetCustomPosListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetCustomPosListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetCustomPosListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetCustomPosListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetCustomPosListRes& from) {
    SetCustomPosListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCustomPosListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetCustomPosListRes";
  }
  protected:
  explicit SetCustomPosListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetCustomPosListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 58, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetCollSensLevelReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetCollSensLevelReq) */ {
 public:
  inline SetCollSensLevelReq() : SetCollSensLevelReq(nullptr) {}
  ~SetCollSensLevelReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetCollSensLevelReq(::google::protobuf::internal::ConstantInitialized);

  SetCollSensLevelReq(const SetCollSensLevelReq& from);
  SetCollSensLevelReq(SetCollSensLevelReq&& from) noexcept
    : SetCollSensLevelReq() {
    *this = ::std::move(from);
  }

  inline SetCollSensLevelReq& operator=(const SetCollSensLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCollSensLevelReq& operator=(SetCollSensLevelReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetCollSensLevelReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetCollSensLevelReq* internal_default_instance() {
    return reinterpret_cast<const SetCollSensLevelReq*>(
               &_SetCollSensLevelReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(SetCollSensLevelReq& a, SetCollSensLevelReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCollSensLevelReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetCollSensLevelReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetCollSensLevelReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetCollSensLevelReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetCollSensLevelReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetCollSensLevelReq& from) {
    SetCollSensLevelReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCollSensLevelReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetCollSensLevelReq";
  }
  protected:
  explicit SetCollSensLevelReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelFieldNumber = 1,
  };
  // int32 level = 1;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetCollSensLevelReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetCollSensLevelRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetCollSensLevelRes) */ {
 public:
  inline GetCollSensLevelRes() : GetCollSensLevelRes(nullptr) {}
  ~GetCollSensLevelRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCollSensLevelRes(::google::protobuf::internal::ConstantInitialized);

  GetCollSensLevelRes(const GetCollSensLevelRes& from);
  GetCollSensLevelRes(GetCollSensLevelRes&& from) noexcept
    : GetCollSensLevelRes() {
    *this = ::std::move(from);
  }

  inline GetCollSensLevelRes& operator=(const GetCollSensLevelRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCollSensLevelRes& operator=(GetCollSensLevelRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCollSensLevelRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCollSensLevelRes* internal_default_instance() {
    return reinterpret_cast<const GetCollSensLevelRes*>(
               &_GetCollSensLevelRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(GetCollSensLevelRes& a, GetCollSensLevelRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCollSensLevelRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCollSensLevelRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCollSensLevelRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCollSensLevelRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCollSensLevelRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetCollSensLevelRes& from) {
    GetCollSensLevelRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCollSensLevelRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetCollSensLevelRes";
  }
  protected:
  explicit GetCollSensLevelRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kLevelFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // int32 level = 1;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetCollSensLevelRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 58, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::int32_t level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class InitCollSensParamReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.InitCollSensParamReq) */ {
 public:
  inline InitCollSensParamReq() : InitCollSensParamReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InitCollSensParamReq(::google::protobuf::internal::ConstantInitialized);

  InitCollSensParamReq(const InitCollSensParamReq& from);
  InitCollSensParamReq(InitCollSensParamReq&& from) noexcept
    : InitCollSensParamReq() {
    *this = ::std::move(from);
  }

  inline InitCollSensParamReq& operator=(const InitCollSensParamReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitCollSensParamReq& operator=(InitCollSensParamReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitCollSensParamReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitCollSensParamReq* internal_default_instance() {
    return reinterpret_cast<const InitCollSensParamReq*>(
               &_InitCollSensParamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(InitCollSensParamReq& a, InitCollSensParamReq& b) {
    a.Swap(&b);
  }
  inline void Swap(InitCollSensParamReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitCollSensParamReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitCollSensParamReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitCollSensParamReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const InitCollSensParamReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const InitCollSensParamReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.InitCollSensParamReq";
  }
  protected:
  explicit InitCollSensParamReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.InitCollSensParamReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class InitCollSensParamRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.InitCollSensParamRes) */ {
 public:
  inline InitCollSensParamRes() : InitCollSensParamRes(nullptr) {}
  ~InitCollSensParamRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InitCollSensParamRes(::google::protobuf::internal::ConstantInitialized);

  InitCollSensParamRes(const InitCollSensParamRes& from);
  InitCollSensParamRes(InitCollSensParamRes&& from) noexcept
    : InitCollSensParamRes() {
    *this = ::std::move(from);
  }

  inline InitCollSensParamRes& operator=(const InitCollSensParamRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitCollSensParamRes& operator=(InitCollSensParamRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitCollSensParamRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitCollSensParamRes* internal_default_instance() {
    return reinterpret_cast<const InitCollSensParamRes*>(
               &_InitCollSensParamRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(InitCollSensParamRes& a, InitCollSensParamRes& b) {
    a.Swap(&b);
  }
  inline void Swap(InitCollSensParamRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitCollSensParamRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitCollSensParamRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitCollSensParamRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitCollSensParamRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InitCollSensParamRes& from) {
    InitCollSensParamRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitCollSensParamRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.InitCollSensParamRes";
  }
  protected:
  explicit InitCollSensParamRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.InitCollSensParamRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 59, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogReq) */ {
 public:
  inline GetLogReq() : GetLogReq(nullptr) {}
  ~GetLogReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogReq(::google::protobuf::internal::ConstantInitialized);

  GetLogReq(const GetLogReq& from);
  GetLogReq(GetLogReq&& from) noexcept
    : GetLogReq() {
    *this = ::std::move(from);
  }

  inline GetLogReq& operator=(const GetLogReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogReq& operator=(GetLogReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogReq* internal_default_instance() {
    return reinterpret_cast<const GetLogReq*>(
               &_GetLogReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(GetLogReq& a, GetLogReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLogReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLogReq& from) {
    GetLogReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLogReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogReq";
  }
  protected:
  explicit GetLogReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogLengthFieldNumber = 1,
  };
  // int32 log_length = 1;
  void clear_log_length() ;
  ::int32_t log_length() const;
  void set_log_length(::int32_t value);

  private:
  ::int32_t _internal_log_length() const;
  void _internal_set_log_length(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t log_length_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogRes) */ {
 public:
  inline GetLogRes() : GetLogRes(nullptr) {}
  ~GetLogRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogRes(::google::protobuf::internal::ConstantInitialized);

  GetLogRes(const GetLogRes& from);
  GetLogRes(GetLogRes&& from) noexcept
    : GetLogRes() {
    *this = ::std::move(from);
  }

  inline GetLogRes& operator=(const GetLogRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogRes& operator=(GetLogRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogRes* internal_default_instance() {
    return reinterpret_cast<const GetLogRes*>(
               &_GetLogRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(GetLogRes& a, GetLogRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLogRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLogRes& from) {
    GetLogRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLogRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogRes";
  }
  protected:
  explicit GetLogRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogFieldNumber = 1,
  };
  // string log = 1;
  void clear_log() ;
  const std::string& log() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log(Arg_&& arg, Args_... args);
  std::string* mutable_log();
  PROTOBUF_NODISCARD std::string* release_log();
  void set_allocated_log(std::string* ptr);

  private:
  const std::string& _internal_log() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log(
      const std::string& value);
  std::string* _internal_mutable_log();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 48, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr log_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogListReq) */ {
 public:
  inline GetLogListReq() : GetLogListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogListReq(::google::protobuf::internal::ConstantInitialized);

  GetLogListReq(const GetLogListReq& from);
  GetLogListReq(GetLogListReq&& from) noexcept
    : GetLogListReq() {
    *this = ::std::move(from);
  }

  inline GetLogListReq& operator=(const GetLogListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogListReq& operator=(GetLogListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogListReq* internal_default_instance() {
    return reinterpret_cast<const GetLogListReq*>(
               &_GetLogListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(GetLogListReq& a, GetLogListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetLogListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetLogListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogListReq";
  }
  protected:
  explicit GetLogListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogListRes) */ {
 public:
  inline GetLogListRes() : GetLogListRes(nullptr) {}
  ~GetLogListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogListRes(::google::protobuf::internal::ConstantInitialized);

  GetLogListRes(const GetLogListRes& from);
  GetLogListRes(GetLogListRes&& from) noexcept
    : GetLogListRes() {
    *this = ::std::move(from);
  }

  inline GetLogListRes& operator=(const GetLogListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogListRes& operator=(GetLogListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogListRes* internal_default_instance() {
    return reinterpret_cast<const GetLogListRes*>(
               &_GetLogListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(GetLogListRes& a, GetLogListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLogListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLogListRes& from) {
    GetLogListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLogListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogListRes";
  }
  protected:
  explicit GetLogListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogFileNamesFieldNumber = 1,
    kSizesFieldNumber = 2,
    kModifiedDatesFieldNumber = 3,
    kMsgFieldNumber = 100,
  };
  // repeated string log_file_names = 1;
  int log_file_names_size() const;
  private:
  int _internal_log_file_names_size() const;

  public:
  void clear_log_file_names() ;
  const std::string& log_file_names(int index) const;
  std::string* mutable_log_file_names(int index);
  void set_log_file_names(int index, const std::string& value);
  void set_log_file_names(int index, std::string&& value);
  void set_log_file_names(int index, const char* value);
  void set_log_file_names(int index, const char* value, std::size_t size);
  void set_log_file_names(int index, absl::string_view value);
  std::string* add_log_file_names();
  void add_log_file_names(const std::string& value);
  void add_log_file_names(std::string&& value);
  void add_log_file_names(const char* value);
  void add_log_file_names(const char* value, std::size_t size);
  void add_log_file_names(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& log_file_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_log_file_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_log_file_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_log_file_names();

  public:
  // repeated string sizes = 2;
  int sizes_size() const;
  private:
  int _internal_sizes_size() const;

  public:
  void clear_sizes() ;
  const std::string& sizes(int index) const;
  std::string* mutable_sizes(int index);
  void set_sizes(int index, const std::string& value);
  void set_sizes(int index, std::string&& value);
  void set_sizes(int index, const char* value);
  void set_sizes(int index, const char* value, std::size_t size);
  void set_sizes(int index, absl::string_view value);
  std::string* add_sizes();
  void add_sizes(const std::string& value);
  void add_sizes(std::string&& value);
  void add_sizes(const char* value);
  void add_sizes(const char* value, std::size_t size);
  void add_sizes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& sizes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_sizes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sizes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_sizes();

  public:
  // repeated string modified_dates = 3;
  int modified_dates_size() const;
  private:
  int _internal_modified_dates_size() const;

  public:
  void clear_modified_dates() ;
  const std::string& modified_dates(int index) const;
  std::string* mutable_modified_dates(int index);
  void set_modified_dates(int index, const std::string& value);
  void set_modified_dates(int index, std::string&& value);
  void set_modified_dates(int index, const char* value);
  void set_modified_dates(int index, const char* value, std::size_t size);
  void set_modified_dates(int index, absl::string_view value);
  std::string* add_modified_dates();
  void add_modified_dates(const std::string& value);
  void add_modified_dates(std::string&& value);
  void add_modified_dates(const char* value);
  void add_modified_dates(const char* value, std::size_t size);
  void add_modified_dates(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& modified_dates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_modified_dates();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_modified_dates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_modified_dates();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 85, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> log_file_names_;
    ::google::protobuf::RepeatedPtrField<std::string> sizes_;
    ::google::protobuf::RepeatedPtrField<std::string> modified_dates_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogContentReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogContentReq) */ {
 public:
  inline GetLogContentReq() : GetLogContentReq(nullptr) {}
  ~GetLogContentReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogContentReq(::google::protobuf::internal::ConstantInitialized);

  GetLogContentReq(const GetLogContentReq& from);
  GetLogContentReq(GetLogContentReq&& from) noexcept
    : GetLogContentReq() {
    *this = ::std::move(from);
  }

  inline GetLogContentReq& operator=(const GetLogContentReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogContentReq& operator=(GetLogContentReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogContentReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogContentReq* internal_default_instance() {
    return reinterpret_cast<const GetLogContentReq*>(
               &_GetLogContentReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(GetLogContentReq& a, GetLogContentReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogContentReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogContentReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogContentReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogContentReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLogContentReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLogContentReq& from) {
    GetLogContentReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLogContentReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogContentReq";
  }
  protected:
  explicit GetLogContentReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileNameFieldNumber = 1,
  };
  // string file_name = 1;
  void clear_file_name() ;
  const std::string& file_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  std::string* mutable_file_name();
  PROTOBUF_NODISCARD std::string* release_file_name();
  void set_allocated_file_name(std::string* ptr);

  private:
  const std::string& _internal_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(
      const std::string& value);
  std::string* _internal_mutable_file_name();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogContentReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogContentRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogContentRes) */ {
 public:
  inline GetLogContentRes() : GetLogContentRes(nullptr) {}
  ~GetLogContentRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogContentRes(::google::protobuf::internal::ConstantInitialized);

  GetLogContentRes(const GetLogContentRes& from);
  GetLogContentRes(GetLogContentRes&& from) noexcept
    : GetLogContentRes() {
    *this = ::std::move(from);
  }

  inline GetLogContentRes& operator=(const GetLogContentRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogContentRes& operator=(GetLogContentRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogContentRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogContentRes* internal_default_instance() {
    return reinterpret_cast<const GetLogContentRes*>(
               &_GetLogContentRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(GetLogContentRes& a, GetLogContentRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogContentRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogContentRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogContentRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogContentRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLogContentRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLogContentRes& from) {
    GetLogContentRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLogContentRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogContentRes";
  }
  protected:
  explicit GetLogContentRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // bytes content = 1;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* ptr);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogContentRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 55, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogContentListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogContentListReq) */ {
 public:
  inline GetLogContentListReq() : GetLogContentListReq(nullptr) {}
  ~GetLogContentListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogContentListReq(::google::protobuf::internal::ConstantInitialized);

  GetLogContentListReq(const GetLogContentListReq& from);
  GetLogContentListReq(GetLogContentListReq&& from) noexcept
    : GetLogContentListReq() {
    *this = ::std::move(from);
  }

  inline GetLogContentListReq& operator=(const GetLogContentListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogContentListReq& operator=(GetLogContentListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogContentListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogContentListReq* internal_default_instance() {
    return reinterpret_cast<const GetLogContentListReq*>(
               &_GetLogContentListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(GetLogContentListReq& a, GetLogContentListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogContentListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogContentListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogContentListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogContentListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLogContentListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLogContentListReq& from) {
    GetLogContentListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLogContentListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogContentListReq";
  }
  protected:
  explicit GetLogContentListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileNameListFieldNumber = 1,
  };
  // repeated string file_name_list = 1;
  int file_name_list_size() const;
  private:
  int _internal_file_name_list_size() const;

  public:
  void clear_file_name_list() ;
  const std::string& file_name_list(int index) const;
  std::string* mutable_file_name_list(int index);
  void set_file_name_list(int index, const std::string& value);
  void set_file_name_list(int index, std::string&& value);
  void set_file_name_list(int index, const char* value);
  void set_file_name_list(int index, const char* value, std::size_t size);
  void set_file_name_list(int index, absl::string_view value);
  std::string* add_file_name_list();
  void add_file_name_list(const std::string& value);
  void add_file_name_list(std::string&& value);
  void add_file_name_list(const char* value);
  void add_file_name_list(const char* value, std::size_t size);
  void add_file_name_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& file_name_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_file_name_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_file_name_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_file_name_list();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogContentListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 70, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> file_name_list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLogContentListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLogContentListRes) */ {
 public:
  inline GetLogContentListRes() : GetLogContentListRes(nullptr) {}
  ~GetLogContentListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLogContentListRes(::google::protobuf::internal::ConstantInitialized);

  GetLogContentListRes(const GetLogContentListRes& from);
  GetLogContentListRes(GetLogContentListRes&& from) noexcept
    : GetLogContentListRes() {
    *this = ::std::move(from);
  }

  inline GetLogContentListRes& operator=(const GetLogContentListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLogContentListRes& operator=(GetLogContentListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLogContentListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLogContentListRes* internal_default_instance() {
    return reinterpret_cast<const GetLogContentListRes*>(
               &_GetLogContentListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(GetLogContentListRes& a, GetLogContentListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLogContentListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLogContentListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLogContentListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLogContentListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLogContentListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLogContentListRes& from) {
    GetLogContentListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLogContentListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLogContentListRes";
  }
  protected:
  explicit GetLogContentListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentListFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated bytes content_list = 1;
  int content_list_size() const;
  private:
  int _internal_content_list_size() const;

  public:
  void clear_content_list() ;
  const std::string& content_list(int index) const;
  std::string* mutable_content_list(int index);
  void set_content_list(int index, const std::string& value);
  void set_content_list(int index, std::string&& value);
  void set_content_list(int index, const char* value);
  void set_content_list(int index, const void* value, std::size_t size);
  void set_content_list(int index, absl::string_view value);
  std::string* add_content_list();
  void add_content_list(const std::string& value);
  void add_content_list(std::string&& value);
  void add_content_list(const char* value);
  void add_content_list(const void* value, std::size_t size);
  void add_content_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& content_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_content_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_content_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_content_list();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLogContentListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 59, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> content_list_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetIndexProgramListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetIndexProgramListReq) */ {
 public:
  inline GetIndexProgramListReq() : GetIndexProgramListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetIndexProgramListReq(::google::protobuf::internal::ConstantInitialized);

  GetIndexProgramListReq(const GetIndexProgramListReq& from);
  GetIndexProgramListReq(GetIndexProgramListReq&& from) noexcept
    : GetIndexProgramListReq() {
    *this = ::std::move(from);
  }

  inline GetIndexProgramListReq& operator=(const GetIndexProgramListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetIndexProgramListReq& operator=(GetIndexProgramListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetIndexProgramListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetIndexProgramListReq* internal_default_instance() {
    return reinterpret_cast<const GetIndexProgramListReq*>(
               &_GetIndexProgramListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(GetIndexProgramListReq& a, GetIndexProgramListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetIndexProgramListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetIndexProgramListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetIndexProgramListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetIndexProgramListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetIndexProgramListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetIndexProgramListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetIndexProgramListReq";
  }
  protected:
  explicit GetIndexProgramListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetIndexProgramListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetIndexProgramListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetIndexProgramListRes) */ {
 public:
  inline GetIndexProgramListRes() : GetIndexProgramListRes(nullptr) {}
  ~GetIndexProgramListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetIndexProgramListRes(::google::protobuf::internal::ConstantInitialized);

  GetIndexProgramListRes(const GetIndexProgramListRes& from);
  GetIndexProgramListRes(GetIndexProgramListRes&& from) noexcept
    : GetIndexProgramListRes() {
    *this = ::std::move(from);
  }

  inline GetIndexProgramListRes& operator=(const GetIndexProgramListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetIndexProgramListRes& operator=(GetIndexProgramListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetIndexProgramListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetIndexProgramListRes* internal_default_instance() {
    return reinterpret_cast<const GetIndexProgramListRes*>(
               &_GetIndexProgramListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(GetIndexProgramListRes& a, GetIndexProgramListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetIndexProgramListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetIndexProgramListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetIndexProgramListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetIndexProgramListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetIndexProgramListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetIndexProgramListRes& from) {
    GetIndexProgramListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetIndexProgramListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetIndexProgramListRes";
  }
  protected:
  explicit GetIndexProgramListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndicesFieldNumber = 1,
    kProgramDirsFieldNumber = 2,
    kSizesFieldNumber = 3,
    kModifiedDatesFieldNumber = 4,
    kMsgFieldNumber = 100,
  };
  // repeated int32 indices = 1;
  int indices_size() const;
  private:
  int _internal_indices_size() const;

  public:
  void clear_indices() ;
  ::int32_t indices(int index) const;
  void set_indices(int index, ::int32_t value);
  void add_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_indices();

  public:
  // repeated string program_dirs = 2;
  int program_dirs_size() const;
  private:
  int _internal_program_dirs_size() const;

  public:
  void clear_program_dirs() ;
  const std::string& program_dirs(int index) const;
  std::string* mutable_program_dirs(int index);
  void set_program_dirs(int index, const std::string& value);
  void set_program_dirs(int index, std::string&& value);
  void set_program_dirs(int index, const char* value);
  void set_program_dirs(int index, const char* value, std::size_t size);
  void set_program_dirs(int index, absl::string_view value);
  std::string* add_program_dirs();
  void add_program_dirs(const std::string& value);
  void add_program_dirs(std::string&& value);
  void add_program_dirs(const char* value);
  void add_program_dirs(const char* value, std::size_t size);
  void add_program_dirs(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& program_dirs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_program_dirs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_program_dirs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_program_dirs();

  public:
  // repeated string sizes = 3;
  int sizes_size() const;
  private:
  int _internal_sizes_size() const;

  public:
  void clear_sizes() ;
  const std::string& sizes(int index) const;
  std::string* mutable_sizes(int index);
  void set_sizes(int index, const std::string& value);
  void set_sizes(int index, std::string&& value);
  void set_sizes(int index, const char* value);
  void set_sizes(int index, const char* value, std::size_t size);
  void set_sizes(int index, absl::string_view value);
  std::string* add_sizes();
  void add_sizes(const std::string& value);
  void add_sizes(std::string&& value);
  void add_sizes(const char* value);
  void add_sizes(const char* value, std::size_t size);
  void add_sizes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& sizes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_sizes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sizes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_sizes();

  public:
  // repeated string modified_dates = 4;
  int modified_dates_size() const;
  private:
  int _internal_modified_dates_size() const;

  public:
  void clear_modified_dates() ;
  const std::string& modified_dates(int index) const;
  std::string* mutable_modified_dates(int index);
  void set_modified_dates(int index, const std::string& value);
  void set_modified_dates(int index, std::string&& value);
  void set_modified_dates(int index, const char* value);
  void set_modified_dates(int index, const char* value, std::size_t size);
  void set_modified_dates(int index, absl::string_view value);
  std::string* add_modified_dates();
  void add_modified_dates(const std::string& value);
  void add_modified_dates(std::string&& value);
  void add_modified_dates(const char* value);
  void add_modified_dates(const char* value, std::size_t size);
  void add_modified_dates(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& modified_dates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_modified_dates();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_modified_dates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_modified_dates();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetIndexProgramListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 0, 92, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> indices_;
    mutable ::google::protobuf::internal::CachedSize _indices_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> program_dirs_;
    ::google::protobuf::RepeatedPtrField<std::string> sizes_;
    ::google::protobuf::RepeatedPtrField<std::string> modified_dates_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetProgramListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetProgramListReq) */ {
 public:
  inline GetProgramListReq() : GetProgramListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetProgramListReq(::google::protobuf::internal::ConstantInitialized);

  GetProgramListReq(const GetProgramListReq& from);
  GetProgramListReq(GetProgramListReq&& from) noexcept
    : GetProgramListReq() {
    *this = ::std::move(from);
  }

  inline GetProgramListReq& operator=(const GetProgramListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProgramListReq& operator=(GetProgramListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProgramListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProgramListReq* internal_default_instance() {
    return reinterpret_cast<const GetProgramListReq*>(
               &_GetProgramListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(GetProgramListReq& a, GetProgramListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetProgramListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProgramListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProgramListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetProgramListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetProgramListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetProgramListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetProgramListReq";
  }
  protected:
  explicit GetProgramListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetProgramListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetProgramListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetProgramListRes) */ {
 public:
  inline GetProgramListRes() : GetProgramListRes(nullptr) {}
  ~GetProgramListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetProgramListRes(::google::protobuf::internal::ConstantInitialized);

  GetProgramListRes(const GetProgramListRes& from);
  GetProgramListRes(GetProgramListRes&& from) noexcept
    : GetProgramListRes() {
    *this = ::std::move(from);
  }

  inline GetProgramListRes& operator=(const GetProgramListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProgramListRes& operator=(GetProgramListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProgramListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProgramListRes* internal_default_instance() {
    return reinterpret_cast<const GetProgramListRes*>(
               &_GetProgramListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(GetProgramListRes& a, GetProgramListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetProgramListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProgramListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProgramListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetProgramListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProgramListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetProgramListRes& from) {
    GetProgramListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetProgramListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetProgramListRes";
  }
  protected:
  explicit GetProgramListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramDirsFieldNumber = 1,
    kSizesFieldNumber = 2,
    kModifiedDatesFieldNumber = 3,
    kMsgFieldNumber = 100,
  };
  // repeated string program_dirs = 1;
  int program_dirs_size() const;
  private:
  int _internal_program_dirs_size() const;

  public:
  void clear_program_dirs() ;
  const std::string& program_dirs(int index) const;
  std::string* mutable_program_dirs(int index);
  void set_program_dirs(int index, const std::string& value);
  void set_program_dirs(int index, std::string&& value);
  void set_program_dirs(int index, const char* value);
  void set_program_dirs(int index, const char* value, std::size_t size);
  void set_program_dirs(int index, absl::string_view value);
  std::string* add_program_dirs();
  void add_program_dirs(const std::string& value);
  void add_program_dirs(std::string&& value);
  void add_program_dirs(const char* value);
  void add_program_dirs(const char* value, std::size_t size);
  void add_program_dirs(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& program_dirs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_program_dirs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_program_dirs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_program_dirs();

  public:
  // repeated string sizes = 2;
  int sizes_size() const;
  private:
  int _internal_sizes_size() const;

  public:
  void clear_sizes() ;
  const std::string& sizes(int index) const;
  std::string* mutable_sizes(int index);
  void set_sizes(int index, const std::string& value);
  void set_sizes(int index, std::string&& value);
  void set_sizes(int index, const char* value);
  void set_sizes(int index, const char* value, std::size_t size);
  void set_sizes(int index, absl::string_view value);
  std::string* add_sizes();
  void add_sizes(const std::string& value);
  void add_sizes(std::string&& value);
  void add_sizes(const char* value);
  void add_sizes(const char* value, std::size_t size);
  void add_sizes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& sizes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_sizes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sizes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_sizes();

  public:
  // repeated string modified_dates = 3;
  int modified_dates_size() const;
  private:
  int _internal_modified_dates_size() const;

  public:
  void clear_modified_dates() ;
  const std::string& modified_dates(int index) const;
  std::string* mutable_modified_dates(int index);
  void set_modified_dates(int index, const std::string& value);
  void set_modified_dates(int index, std::string&& value);
  void set_modified_dates(int index, const char* value);
  void set_modified_dates(int index, const char* value, std::size_t size);
  void set_modified_dates(int index, absl::string_view value);
  std::string* add_modified_dates();
  void add_modified_dates(const std::string& value);
  void add_modified_dates(std::string&& value);
  void add_modified_dates(const char* value);
  void add_modified_dates(const char* value, std::size_t size);
  void add_modified_dates(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& modified_dates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_modified_dates();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_modified_dates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_modified_dates();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetProgramListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 87, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> program_dirs_;
    ::google::protobuf::RepeatedPtrField<std::string> sizes_;
    ::google::protobuf::RepeatedPtrField<std::string> modified_dates_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PlayProgramReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PlayProgramReq) */ {
 public:
  inline PlayProgramReq() : PlayProgramReq(nullptr) {}
  ~PlayProgramReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayProgramReq(::google::protobuf::internal::ConstantInitialized);

  PlayProgramReq(const PlayProgramReq& from);
  PlayProgramReq(PlayProgramReq&& from) noexcept
    : PlayProgramReq() {
    *this = ::std::move(from);
  }

  inline PlayProgramReq& operator=(const PlayProgramReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayProgramReq& operator=(PlayProgramReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayProgramReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayProgramReq* internal_default_instance() {
    return reinterpret_cast<const PlayProgramReq*>(
               &_PlayProgramReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(PlayProgramReq& a, PlayProgramReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayProgramReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayProgramReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayProgramReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayProgramReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayProgramReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayProgramReq& from) {
    PlayProgramReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayProgramReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PlayProgramReq";
  }
  protected:
  explicit PlayProgramReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 1,
  };
  // string file_dir = 1;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PlayProgramReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 58, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PlayProgramRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PlayProgramRes) */ {
 public:
  inline PlayProgramRes() : PlayProgramRes(nullptr) {}
  ~PlayProgramRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayProgramRes(::google::protobuf::internal::ConstantInitialized);

  PlayProgramRes(const PlayProgramRes& from);
  PlayProgramRes(PlayProgramRes&& from) noexcept
    : PlayProgramRes() {
    *this = ::std::move(from);
  }

  inline PlayProgramRes& operator=(const PlayProgramRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayProgramRes& operator=(PlayProgramRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayProgramRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayProgramRes* internal_default_instance() {
    return reinterpret_cast<const PlayProgramRes*>(
               &_PlayProgramRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(PlayProgramRes& a, PlayProgramRes& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayProgramRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayProgramRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayProgramRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayProgramRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayProgramRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayProgramRes& from) {
    PlayProgramRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayProgramRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PlayProgramRes";
  }
  protected:
  explicit PlayProgramRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PlayProgramRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PlayIndexProgramReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PlayIndexProgramReq) */ {
 public:
  inline PlayIndexProgramReq() : PlayIndexProgramReq(nullptr) {}
  ~PlayIndexProgramReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayIndexProgramReq(::google::protobuf::internal::ConstantInitialized);

  PlayIndexProgramReq(const PlayIndexProgramReq& from);
  PlayIndexProgramReq(PlayIndexProgramReq&& from) noexcept
    : PlayIndexProgramReq() {
    *this = ::std::move(from);
  }

  inline PlayIndexProgramReq& operator=(const PlayIndexProgramReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayIndexProgramReq& operator=(PlayIndexProgramReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayIndexProgramReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayIndexProgramReq* internal_default_instance() {
    return reinterpret_cast<const PlayIndexProgramReq*>(
               &_PlayIndexProgramReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(PlayIndexProgramReq& a, PlayIndexProgramReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayIndexProgramReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayIndexProgramReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayIndexProgramReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayIndexProgramReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayIndexProgramReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayIndexProgramReq& from) {
    PlayIndexProgramReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayIndexProgramReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PlayIndexProgramReq";
  }
  protected:
  explicit PlayIndexProgramReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // int32 index = 1;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PlayIndexProgramReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PlayIndexProgramRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PlayIndexProgramRes) */ {
 public:
  inline PlayIndexProgramRes() : PlayIndexProgramRes(nullptr) {}
  ~PlayIndexProgramRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayIndexProgramRes(::google::protobuf::internal::ConstantInitialized);

  PlayIndexProgramRes(const PlayIndexProgramRes& from);
  PlayIndexProgramRes(PlayIndexProgramRes&& from) noexcept
    : PlayIndexProgramRes() {
    *this = ::std::move(from);
  }

  inline PlayIndexProgramRes& operator=(const PlayIndexProgramRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayIndexProgramRes& operator=(PlayIndexProgramRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayIndexProgramRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayIndexProgramRes* internal_default_instance() {
    return reinterpret_cast<const PlayIndexProgramRes*>(
               &_PlayIndexProgramRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(PlayIndexProgramRes& a, PlayIndexProgramRes& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayIndexProgramRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayIndexProgramRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayIndexProgramRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayIndexProgramRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayIndexProgramRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayIndexProgramRes& from) {
    PlayIndexProgramRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayIndexProgramRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PlayIndexProgramRes";
  }
  protected:
  explicit PlayIndexProgramRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PlayIndexProgramRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 58, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PlayProgramLineReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PlayProgramLineReq) */ {
 public:
  inline PlayProgramLineReq() : PlayProgramLineReq(nullptr) {}
  ~PlayProgramLineReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayProgramLineReq(::google::protobuf::internal::ConstantInitialized);

  PlayProgramLineReq(const PlayProgramLineReq& from);
  PlayProgramLineReq(PlayProgramLineReq&& from) noexcept
    : PlayProgramLineReq() {
    *this = ::std::move(from);
  }

  inline PlayProgramLineReq& operator=(const PlayProgramLineReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayProgramLineReq& operator=(PlayProgramLineReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayProgramLineReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayProgramLineReq* internal_default_instance() {
    return reinterpret_cast<const PlayProgramLineReq*>(
               &_PlayProgramLineReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(PlayProgramLineReq& a, PlayProgramLineReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayProgramLineReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayProgramLineReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayProgramLineReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayProgramLineReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayProgramLineReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayProgramLineReq& from) {
    PlayProgramLineReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayProgramLineReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PlayProgramLineReq";
  }
  protected:
  explicit PlayProgramLineReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 1,
    kStartLineFieldNumber = 2,
  };
  // string file_dir = 1;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // string start_line = 2;
  void clear_start_line() ;
  const std::string& start_line() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start_line(Arg_&& arg, Args_... args);
  std::string* mutable_start_line();
  PROTOBUF_NODISCARD std::string* release_start_line();
  void set_allocated_start_line(std::string* ptr);

  private:
  const std::string& _internal_start_line() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_start_line(
      const std::string& value);
  std::string* _internal_mutable_start_line();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PlayProgramLineReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 72, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    ::google::protobuf::internal::ArenaStringPtr start_line_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PlayProgramLineRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PlayProgramLineRes) */ {
 public:
  inline PlayProgramLineRes() : PlayProgramLineRes(nullptr) {}
  ~PlayProgramLineRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayProgramLineRes(::google::protobuf::internal::ConstantInitialized);

  PlayProgramLineRes(const PlayProgramLineRes& from);
  PlayProgramLineRes(PlayProgramLineRes&& from) noexcept
    : PlayProgramLineRes() {
    *this = ::std::move(from);
  }

  inline PlayProgramLineRes& operator=(const PlayProgramLineRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayProgramLineRes& operator=(PlayProgramLineRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayProgramLineRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayProgramLineRes* internal_default_instance() {
    return reinterpret_cast<const PlayProgramLineRes*>(
               &_PlayProgramLineRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(PlayProgramLineRes& a, PlayProgramLineRes& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayProgramLineRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayProgramLineRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayProgramLineRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayProgramLineRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayProgramLineRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayProgramLineRes& from) {
    PlayProgramLineRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayProgramLineRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PlayProgramLineRes";
  }
  protected:
  explicit PlayProgramLineRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PlayProgramLineRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ResumeProgramReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ResumeProgramReq) */ {
 public:
  inline ResumeProgramReq() : ResumeProgramReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResumeProgramReq(::google::protobuf::internal::ConstantInitialized);

  ResumeProgramReq(const ResumeProgramReq& from);
  ResumeProgramReq(ResumeProgramReq&& from) noexcept
    : ResumeProgramReq() {
    *this = ::std::move(from);
  }

  inline ResumeProgramReq& operator=(const ResumeProgramReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResumeProgramReq& operator=(ResumeProgramReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResumeProgramReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResumeProgramReq* internal_default_instance() {
    return reinterpret_cast<const ResumeProgramReq*>(
               &_ResumeProgramReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(ResumeProgramReq& a, ResumeProgramReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ResumeProgramReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResumeProgramReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResumeProgramReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResumeProgramReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResumeProgramReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResumeProgramReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ResumeProgramReq";
  }
  protected:
  explicit ResumeProgramReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ResumeProgramReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ResumeProgramRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ResumeProgramRes) */ {
 public:
  inline ResumeProgramRes() : ResumeProgramRes(nullptr) {}
  ~ResumeProgramRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResumeProgramRes(::google::protobuf::internal::ConstantInitialized);

  ResumeProgramRes(const ResumeProgramRes& from);
  ResumeProgramRes(ResumeProgramRes&& from) noexcept
    : ResumeProgramRes() {
    *this = ::std::move(from);
  }

  inline ResumeProgramRes& operator=(const ResumeProgramRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResumeProgramRes& operator=(ResumeProgramRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResumeProgramRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResumeProgramRes* internal_default_instance() {
    return reinterpret_cast<const ResumeProgramRes*>(
               &_ResumeProgramRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(ResumeProgramRes& a, ResumeProgramRes& b) {
    a.Swap(&b);
  }
  inline void Swap(ResumeProgramRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResumeProgramRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResumeProgramRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResumeProgramRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResumeProgramRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResumeProgramRes& from) {
    ResumeProgramRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResumeProgramRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ResumeProgramRes";
  }
  protected:
  explicit ResumeProgramRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ResumeProgramRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 55, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class StopProgramReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.StopProgramReq) */ {
 public:
  inline StopProgramReq() : StopProgramReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopProgramReq(::google::protobuf::internal::ConstantInitialized);

  StopProgramReq(const StopProgramReq& from);
  StopProgramReq(StopProgramReq&& from) noexcept
    : StopProgramReq() {
    *this = ::std::move(from);
  }

  inline StopProgramReq& operator=(const StopProgramReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopProgramReq& operator=(StopProgramReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopProgramReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopProgramReq* internal_default_instance() {
    return reinterpret_cast<const StopProgramReq*>(
               &_StopProgramReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(StopProgramReq& a, StopProgramReq& b) {
    a.Swap(&b);
  }
  inline void Swap(StopProgramReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopProgramReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopProgramReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopProgramReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopProgramReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopProgramReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.StopProgramReq";
  }
  protected:
  explicit StopProgramReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.StopProgramReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class StopProgramRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.StopProgramRes) */ {
 public:
  inline StopProgramRes() : StopProgramRes(nullptr) {}
  ~StopProgramRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopProgramRes(::google::protobuf::internal::ConstantInitialized);

  StopProgramRes(const StopProgramRes& from);
  StopProgramRes(StopProgramRes&& from) noexcept
    : StopProgramRes() {
    *this = ::std::move(from);
  }

  inline StopProgramRes& operator=(const StopProgramRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopProgramRes& operator=(StopProgramRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopProgramRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopProgramRes* internal_default_instance() {
    return reinterpret_cast<const StopProgramRes*>(
               &_StopProgramRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(StopProgramRes& a, StopProgramRes& b) {
    a.Swap(&b);
  }
  inline void Swap(StopProgramRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopProgramRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopProgramRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopProgramRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopProgramRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StopProgramRes& from) {
    StopProgramRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopProgramRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.StopProgramRes";
  }
  protected:
  explicit StopProgramRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.StopProgramRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PauseProgramReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PauseProgramReq) */ {
 public:
  inline PauseProgramReq() : PauseProgramReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PauseProgramReq(::google::protobuf::internal::ConstantInitialized);

  PauseProgramReq(const PauseProgramReq& from);
  PauseProgramReq(PauseProgramReq&& from) noexcept
    : PauseProgramReq() {
    *this = ::std::move(from);
  }

  inline PauseProgramReq& operator=(const PauseProgramReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PauseProgramReq& operator=(PauseProgramReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PauseProgramReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PauseProgramReq* internal_default_instance() {
    return reinterpret_cast<const PauseProgramReq*>(
               &_PauseProgramReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  friend void swap(PauseProgramReq& a, PauseProgramReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PauseProgramReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PauseProgramReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PauseProgramReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PauseProgramReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PauseProgramReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PauseProgramReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PauseProgramReq";
  }
  protected:
  explicit PauseProgramReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PauseProgramReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PauseProgramRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PauseProgramRes) */ {
 public:
  inline PauseProgramRes() : PauseProgramRes(nullptr) {}
  ~PauseProgramRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PauseProgramRes(::google::protobuf::internal::ConstantInitialized);

  PauseProgramRes(const PauseProgramRes& from);
  PauseProgramRes(PauseProgramRes&& from) noexcept
    : PauseProgramRes() {
    *this = ::std::move(from);
  }

  inline PauseProgramRes& operator=(const PauseProgramRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline PauseProgramRes& operator=(PauseProgramRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PauseProgramRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const PauseProgramRes* internal_default_instance() {
    return reinterpret_cast<const PauseProgramRes*>(
               &_PauseProgramRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  friend void swap(PauseProgramRes& a, PauseProgramRes& b) {
    a.Swap(&b);
  }
  inline void Swap(PauseProgramRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PauseProgramRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PauseProgramRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PauseProgramRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PauseProgramRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PauseProgramRes& from) {
    PauseProgramRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PauseProgramRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PauseProgramRes";
  }
  protected:
  explicit PauseProgramRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PauseProgramRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 54, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetJointControlGainReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetJointControlGainReq) */ {
 public:
  inline SetJointControlGainReq() : SetJointControlGainReq(nullptr) {}
  ~SetJointControlGainReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetJointControlGainReq(::google::protobuf::internal::ConstantInitialized);

  SetJointControlGainReq(const SetJointControlGainReq& from);
  SetJointControlGainReq(SetJointControlGainReq&& from) noexcept
    : SetJointControlGainReq() {
    *this = ::std::move(from);
  }

  inline SetJointControlGainReq& operator=(const SetJointControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetJointControlGainReq& operator=(SetJointControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetJointControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetJointControlGainReq* internal_default_instance() {
    return reinterpret_cast<const SetJointControlGainReq*>(
               &_SetJointControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  friend void swap(SetJointControlGainReq& a, SetJointControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetJointControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetJointControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetJointControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetJointControlGainReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetJointControlGainReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetJointControlGainReq& from) {
    SetJointControlGainReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetJointControlGainReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetJointControlGainReq";
  }
  protected:
  explicit SetJointControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetJointControlGainReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetJointControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetJointControlGainRes) */ {
 public:
  inline SetJointControlGainRes() : SetJointControlGainRes(nullptr) {}
  ~SetJointControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetJointControlGainRes(::google::protobuf::internal::ConstantInitialized);

  SetJointControlGainRes(const SetJointControlGainRes& from);
  SetJointControlGainRes(SetJointControlGainRes&& from) noexcept
    : SetJointControlGainRes() {
    *this = ::std::move(from);
  }

  inline SetJointControlGainRes& operator=(const SetJointControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetJointControlGainRes& operator=(SetJointControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetJointControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetJointControlGainRes* internal_default_instance() {
    return reinterpret_cast<const SetJointControlGainRes*>(
               &_SetJointControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  friend void swap(SetJointControlGainRes& a, SetJointControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetJointControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetJointControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetJointControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetJointControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetJointControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetJointControlGainRes& from) {
    SetJointControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetJointControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetJointControlGainRes";
  }
  protected:
  explicit SetJointControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetJointControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetJointControlGainReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetJointControlGainReq) */ {
 public:
  inline GetJointControlGainReq() : GetJointControlGainReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetJointControlGainReq(::google::protobuf::internal::ConstantInitialized);

  GetJointControlGainReq(const GetJointControlGainReq& from);
  GetJointControlGainReq(GetJointControlGainReq&& from) noexcept
    : GetJointControlGainReq() {
    *this = ::std::move(from);
  }

  inline GetJointControlGainReq& operator=(const GetJointControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJointControlGainReq& operator=(GetJointControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJointControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJointControlGainReq* internal_default_instance() {
    return reinterpret_cast<const GetJointControlGainReq*>(
               &_GetJointControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  friend void swap(GetJointControlGainReq& a, GetJointControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetJointControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJointControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJointControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetJointControlGainReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetJointControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetJointControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetJointControlGainReq";
  }
  protected:
  explicit GetJointControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetJointControlGainReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetJointControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetJointControlGainRes) */ {
 public:
  inline GetJointControlGainRes() : GetJointControlGainRes(nullptr) {}
  ~GetJointControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetJointControlGainRes(::google::protobuf::internal::ConstantInitialized);

  GetJointControlGainRes(const GetJointControlGainRes& from);
  GetJointControlGainRes(GetJointControlGainRes&& from) noexcept
    : GetJointControlGainRes() {
    *this = ::std::move(from);
  }

  inline GetJointControlGainRes& operator=(const GetJointControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJointControlGainRes& operator=(GetJointControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJointControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJointControlGainRes* internal_default_instance() {
    return reinterpret_cast<const GetJointControlGainRes*>(
               &_GetJointControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  friend void swap(GetJointControlGainRes& a, GetJointControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetJointControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJointControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJointControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetJointControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJointControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetJointControlGainRes& from) {
    GetJointControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetJointControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetJointControlGainRes";
  }
  protected:
  explicit GetJointControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetJointControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetTaskControlGainReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetTaskControlGainReq) */ {
 public:
  inline SetTaskControlGainReq() : SetTaskControlGainReq(nullptr) {}
  ~SetTaskControlGainReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTaskControlGainReq(::google::protobuf::internal::ConstantInitialized);

  SetTaskControlGainReq(const SetTaskControlGainReq& from);
  SetTaskControlGainReq(SetTaskControlGainReq&& from) noexcept
    : SetTaskControlGainReq() {
    *this = ::std::move(from);
  }

  inline SetTaskControlGainReq& operator=(const SetTaskControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTaskControlGainReq& operator=(SetTaskControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTaskControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTaskControlGainReq* internal_default_instance() {
    return reinterpret_cast<const SetTaskControlGainReq*>(
               &_SetTaskControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  friend void swap(SetTaskControlGainReq& a, SetTaskControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTaskControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTaskControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTaskControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTaskControlGainReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTaskControlGainReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetTaskControlGainReq& from) {
    SetTaskControlGainReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetTaskControlGainReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetTaskControlGainReq";
  }
  protected:
  explicit SetTaskControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetTaskControlGainReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetTaskControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetTaskControlGainRes) */ {
 public:
  inline SetTaskControlGainRes() : SetTaskControlGainRes(nullptr) {}
  ~SetTaskControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTaskControlGainRes(::google::protobuf::internal::ConstantInitialized);

  SetTaskControlGainRes(const SetTaskControlGainRes& from);
  SetTaskControlGainRes(SetTaskControlGainRes&& from) noexcept
    : SetTaskControlGainRes() {
    *this = ::std::move(from);
  }

  inline SetTaskControlGainRes& operator=(const SetTaskControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTaskControlGainRes& operator=(SetTaskControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTaskControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTaskControlGainRes* internal_default_instance() {
    return reinterpret_cast<const SetTaskControlGainRes*>(
               &_SetTaskControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  friend void swap(SetTaskControlGainRes& a, SetTaskControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTaskControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTaskControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTaskControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTaskControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTaskControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetTaskControlGainRes& from) {
    SetTaskControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetTaskControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetTaskControlGainRes";
  }
  protected:
  explicit SetTaskControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetTaskControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 60, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetTaskControlGainReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetTaskControlGainReq) */ {
 public:
  inline GetTaskControlGainReq() : GetTaskControlGainReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetTaskControlGainReq(::google::protobuf::internal::ConstantInitialized);

  GetTaskControlGainReq(const GetTaskControlGainReq& from);
  GetTaskControlGainReq(GetTaskControlGainReq&& from) noexcept
    : GetTaskControlGainReq() {
    *this = ::std::move(from);
  }

  inline GetTaskControlGainReq& operator=(const GetTaskControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTaskControlGainReq& operator=(GetTaskControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTaskControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTaskControlGainReq* internal_default_instance() {
    return reinterpret_cast<const GetTaskControlGainReq*>(
               &_GetTaskControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  friend void swap(GetTaskControlGainReq& a, GetTaskControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTaskControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTaskControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTaskControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTaskControlGainReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetTaskControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetTaskControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetTaskControlGainReq";
  }
  protected:
  explicit GetTaskControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetTaskControlGainReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetTaskControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetTaskControlGainRes) */ {
 public:
  inline GetTaskControlGainRes() : GetTaskControlGainRes(nullptr) {}
  ~GetTaskControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetTaskControlGainRes(::google::protobuf::internal::ConstantInitialized);

  GetTaskControlGainRes(const GetTaskControlGainRes& from);
  GetTaskControlGainRes(GetTaskControlGainRes&& from) noexcept
    : GetTaskControlGainRes() {
    *this = ::std::move(from);
  }

  inline GetTaskControlGainRes& operator=(const GetTaskControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTaskControlGainRes& operator=(GetTaskControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTaskControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTaskControlGainRes* internal_default_instance() {
    return reinterpret_cast<const GetTaskControlGainRes*>(
               &_GetTaskControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  friend void swap(GetTaskControlGainRes& a, GetTaskControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTaskControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTaskControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTaskControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTaskControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTaskControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetTaskControlGainRes& from) {
    GetTaskControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTaskControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetTaskControlGainRes";
  }
  protected:
  explicit GetTaskControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetTaskControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 60, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetImpedanceControlGainReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq) */ {
 public:
  inline SetImpedanceControlGainReq() : SetImpedanceControlGainReq(nullptr) {}
  ~SetImpedanceControlGainReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetImpedanceControlGainReq(::google::protobuf::internal::ConstantInitialized);

  SetImpedanceControlGainReq(const SetImpedanceControlGainReq& from);
  SetImpedanceControlGainReq(SetImpedanceControlGainReq&& from) noexcept
    : SetImpedanceControlGainReq() {
    *this = ::std::move(from);
  }

  inline SetImpedanceControlGainReq& operator=(const SetImpedanceControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetImpedanceControlGainReq& operator=(SetImpedanceControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetImpedanceControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetImpedanceControlGainReq* internal_default_instance() {
    return reinterpret_cast<const SetImpedanceControlGainReq*>(
               &_SetImpedanceControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  friend void swap(SetImpedanceControlGainReq& a, SetImpedanceControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetImpedanceControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetImpedanceControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetImpedanceControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetImpedanceControlGainReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetImpedanceControlGainReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetImpedanceControlGainReq& from) {
    SetImpedanceControlGainReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetImpedanceControlGainReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq";
  }
  protected:
  explicit SetImpedanceControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMassFieldNumber = 1,
    kDampingFieldNumber = 2,
    kStiffnessFieldNumber = 3,
    kKl2FieldNumber = 4,
    kMsgFieldNumber = 100,
  };
  // repeated float mass = 1;
  int mass_size() const;
  private:
  int _internal_mass_size() const;

  public:
  void clear_mass() ;
  float mass(int index) const;
  void set_mass(int index, float value);
  void add_mass(float value);
  const ::google::protobuf::RepeatedField<float>& mass() const;
  ::google::protobuf::RepeatedField<float>* mutable_mass();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_mass() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_mass();

  public:
  // repeated float damping = 2;
  int damping_size() const;
  private:
  int _internal_damping_size() const;

  public:
  void clear_damping() ;
  float damping(int index) const;
  void set_damping(int index, float value);
  void add_damping(float value);
  const ::google::protobuf::RepeatedField<float>& damping() const;
  ::google::protobuf::RepeatedField<float>* mutable_damping();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_damping() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_damping();

  public:
  // repeated float stiffness = 3;
  int stiffness_size() const;
  private:
  int _internal_stiffness_size() const;

  public:
  void clear_stiffness() ;
  float stiffness(int index) const;
  void set_stiffness(int index, float value);
  void add_stiffness(float value);
  const ::google::protobuf::RepeatedField<float>& stiffness() const;
  ::google::protobuf::RepeatedField<float>* mutable_stiffness();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_stiffness() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_stiffness();

  public:
  // repeated float kl2 = 4;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 0, 65, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> mass_;
    ::google::protobuf::RepeatedField<float> damping_;
    ::google::protobuf::RepeatedField<float> stiffness_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetImpedanceControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes) */ {
 public:
  inline SetImpedanceControlGainRes() : SetImpedanceControlGainRes(nullptr) {}
  ~SetImpedanceControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetImpedanceControlGainRes(::google::protobuf::internal::ConstantInitialized);

  SetImpedanceControlGainRes(const SetImpedanceControlGainRes& from);
  SetImpedanceControlGainRes(SetImpedanceControlGainRes&& from) noexcept
    : SetImpedanceControlGainRes() {
    *this = ::std::move(from);
  }

  inline SetImpedanceControlGainRes& operator=(const SetImpedanceControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetImpedanceControlGainRes& operator=(SetImpedanceControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetImpedanceControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetImpedanceControlGainRes* internal_default_instance() {
    return reinterpret_cast<const SetImpedanceControlGainRes*>(
               &_SetImpedanceControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  friend void swap(SetImpedanceControlGainRes& a, SetImpedanceControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetImpedanceControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetImpedanceControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetImpedanceControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetImpedanceControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetImpedanceControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetImpedanceControlGainRes& from) {
    SetImpedanceControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetImpedanceControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes";
  }
  protected:
  explicit SetImpedanceControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 65, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetImpedanceControlGainReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetImpedanceControlGainReq) */ {
 public:
  inline GetImpedanceControlGainReq() : GetImpedanceControlGainReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetImpedanceControlGainReq(::google::protobuf::internal::ConstantInitialized);

  GetImpedanceControlGainReq(const GetImpedanceControlGainReq& from);
  GetImpedanceControlGainReq(GetImpedanceControlGainReq&& from) noexcept
    : GetImpedanceControlGainReq() {
    *this = ::std::move(from);
  }

  inline GetImpedanceControlGainReq& operator=(const GetImpedanceControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetImpedanceControlGainReq& operator=(GetImpedanceControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetImpedanceControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetImpedanceControlGainReq* internal_default_instance() {
    return reinterpret_cast<const GetImpedanceControlGainReq*>(
               &_GetImpedanceControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  friend void swap(GetImpedanceControlGainReq& a, GetImpedanceControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetImpedanceControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetImpedanceControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetImpedanceControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetImpedanceControlGainReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetImpedanceControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetImpedanceControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetImpedanceControlGainReq";
  }
  protected:
  explicit GetImpedanceControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetImpedanceControlGainReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetImpedanceControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes) */ {
 public:
  inline GetImpedanceControlGainRes() : GetImpedanceControlGainRes(nullptr) {}
  ~GetImpedanceControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetImpedanceControlGainRes(::google::protobuf::internal::ConstantInitialized);

  GetImpedanceControlGainRes(const GetImpedanceControlGainRes& from);
  GetImpedanceControlGainRes(GetImpedanceControlGainRes&& from) noexcept
    : GetImpedanceControlGainRes() {
    *this = ::std::move(from);
  }

  inline GetImpedanceControlGainRes& operator=(const GetImpedanceControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetImpedanceControlGainRes& operator=(GetImpedanceControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetImpedanceControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetImpedanceControlGainRes* internal_default_instance() {
    return reinterpret_cast<const GetImpedanceControlGainRes*>(
               &_GetImpedanceControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  friend void swap(GetImpedanceControlGainRes& a, GetImpedanceControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetImpedanceControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetImpedanceControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetImpedanceControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetImpedanceControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetImpedanceControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetImpedanceControlGainRes& from) {
    GetImpedanceControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetImpedanceControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes";
  }
  protected:
  explicit GetImpedanceControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMassFieldNumber = 1,
    kDampingFieldNumber = 2,
    kStiffnessFieldNumber = 3,
    kKl2FieldNumber = 4,
    kMsgFieldNumber = 100,
  };
  // repeated float mass = 1;
  int mass_size() const;
  private:
  int _internal_mass_size() const;

  public:
  void clear_mass() ;
  float mass(int index) const;
  void set_mass(int index, float value);
  void add_mass(float value);
  const ::google::protobuf::RepeatedField<float>& mass() const;
  ::google::protobuf::RepeatedField<float>* mutable_mass();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_mass() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_mass();

  public:
  // repeated float damping = 2;
  int damping_size() const;
  private:
  int _internal_damping_size() const;

  public:
  void clear_damping() ;
  float damping(int index) const;
  void set_damping(int index, float value);
  void add_damping(float value);
  const ::google::protobuf::RepeatedField<float>& damping() const;
  ::google::protobuf::RepeatedField<float>* mutable_damping();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_damping() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_damping();

  public:
  // repeated float stiffness = 3;
  int stiffness_size() const;
  private:
  int _internal_stiffness_size() const;

  public:
  void clear_stiffness() ;
  float stiffness(int index) const;
  void set_stiffness(int index, float value);
  void add_stiffness(float value);
  const ::google::protobuf::RepeatedField<float>& stiffness() const;
  ::google::protobuf::RepeatedField<float>* mutable_stiffness();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_stiffness() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_stiffness();

  public:
  // repeated float kl2 = 4;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 0, 65, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> mass_;
    ::google::protobuf::RepeatedField<float> damping_;
    ::google::protobuf::RepeatedField<float> stiffness_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetForceControlGainReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetForceControlGainReq) */ {
 public:
  inline SetForceControlGainReq() : SetForceControlGainReq(nullptr) {}
  ~SetForceControlGainReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetForceControlGainReq(::google::protobuf::internal::ConstantInitialized);

  SetForceControlGainReq(const SetForceControlGainReq& from);
  SetForceControlGainReq(SetForceControlGainReq&& from) noexcept
    : SetForceControlGainReq() {
    *this = ::std::move(from);
  }

  inline SetForceControlGainReq& operator=(const SetForceControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetForceControlGainReq& operator=(SetForceControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetForceControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetForceControlGainReq* internal_default_instance() {
    return reinterpret_cast<const SetForceControlGainReq*>(
               &_SetForceControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  friend void swap(SetForceControlGainReq& a, SetForceControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetForceControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetForceControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetForceControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetForceControlGainReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetForceControlGainReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetForceControlGainReq& from) {
    SetForceControlGainReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetForceControlGainReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetForceControlGainReq";
  }
  protected:
  explicit SetForceControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kMassFieldNumber = 4,
    kDampingFieldNumber = 5,
    kStiffnessFieldNumber = 6,
    kKpfFieldNumber = 7,
    kKifFieldNumber = 8,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // repeated float mass = 4;
  int mass_size() const;
  private:
  int _internal_mass_size() const;

  public:
  void clear_mass() ;
  float mass(int index) const;
  void set_mass(int index, float value);
  void add_mass(float value);
  const ::google::protobuf::RepeatedField<float>& mass() const;
  ::google::protobuf::RepeatedField<float>* mutable_mass();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_mass() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_mass();

  public:
  // repeated float damping = 5;
  int damping_size() const;
  private:
  int _internal_damping_size() const;

  public:
  void clear_damping() ;
  float damping(int index) const;
  void set_damping(int index, float value);
  void add_damping(float value);
  const ::google::protobuf::RepeatedField<float>& damping() const;
  ::google::protobuf::RepeatedField<float>* mutable_damping();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_damping() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_damping();

  public:
  // repeated float stiffness = 6;
  int stiffness_size() const;
  private:
  int _internal_stiffness_size() const;

  public:
  void clear_stiffness() ;
  float stiffness(int index) const;
  void set_stiffness(int index, float value);
  void add_stiffness(float value);
  const ::google::protobuf::RepeatedField<float>& stiffness() const;
  ::google::protobuf::RepeatedField<float>* mutable_stiffness();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_stiffness() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_stiffness();

  public:
  // repeated float kpf = 7;
  int kpf_size() const;
  private:
  int _internal_kpf_size() const;

  public:
  void clear_kpf() ;
  float kpf(int index) const;
  void set_kpf(int index, float value);
  void add_kpf(float value);
  const ::google::protobuf::RepeatedField<float>& kpf() const;
  ::google::protobuf::RepeatedField<float>* mutable_kpf();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kpf() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kpf();

  public:
  // repeated float kif = 8;
  int kif_size() const;
  private:
  int _internal_kif_size() const;

  public:
  void clear_kif() ;
  float kif(int index) const;
  void set_kif(int index, float value);
  void add_kif(float value);
  const ::google::protobuf::RepeatedField<float>& kif() const;
  ::google::protobuf::RepeatedField<float>* mutable_kif();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kif() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kif();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetForceControlGainReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 9, 0, 69, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::RepeatedField<float> mass_;
    ::google::protobuf::RepeatedField<float> damping_;
    ::google::protobuf::RepeatedField<float> stiffness_;
    ::google::protobuf::RepeatedField<float> kpf_;
    ::google::protobuf::RepeatedField<float> kif_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetForceControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetForceControlGainRes) */ {
 public:
  inline SetForceControlGainRes() : SetForceControlGainRes(nullptr) {}
  ~SetForceControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetForceControlGainRes(::google::protobuf::internal::ConstantInitialized);

  SetForceControlGainRes(const SetForceControlGainRes& from);
  SetForceControlGainRes(SetForceControlGainRes&& from) noexcept
    : SetForceControlGainRes() {
    *this = ::std::move(from);
  }

  inline SetForceControlGainRes& operator=(const SetForceControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetForceControlGainRes& operator=(SetForceControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetForceControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetForceControlGainRes* internal_default_instance() {
    return reinterpret_cast<const SetForceControlGainRes*>(
               &_SetForceControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  friend void swap(SetForceControlGainRes& a, SetForceControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetForceControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetForceControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetForceControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetForceControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetForceControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetForceControlGainRes& from) {
    SetForceControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetForceControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetForceControlGainRes";
  }
  protected:
  explicit SetForceControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetForceControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetExtAxisControlGainReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq) */ {
 public:
  inline SetExtAxisControlGainReq() : SetExtAxisControlGainReq(nullptr) {}
  ~SetExtAxisControlGainReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetExtAxisControlGainReq(::google::protobuf::internal::ConstantInitialized);

  SetExtAxisControlGainReq(const SetExtAxisControlGainReq& from);
  SetExtAxisControlGainReq(SetExtAxisControlGainReq&& from) noexcept
    : SetExtAxisControlGainReq() {
    *this = ::std::move(from);
  }

  inline SetExtAxisControlGainReq& operator=(const SetExtAxisControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetExtAxisControlGainReq& operator=(SetExtAxisControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetExtAxisControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetExtAxisControlGainReq* internal_default_instance() {
    return reinterpret_cast<const SetExtAxisControlGainReq*>(
               &_SetExtAxisControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  friend void swap(SetExtAxisControlGainReq& a, SetExtAxisControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetExtAxisControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetExtAxisControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetExtAxisControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetExtAxisControlGainReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetExtAxisControlGainReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetExtAxisControlGainReq& from) {
    SetExtAxisControlGainReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetExtAxisControlGainReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq";
  }
  protected:
  explicit SetExtAxisControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 63, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetExtAxisControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes) */ {
 public:
  inline SetExtAxisControlGainRes() : SetExtAxisControlGainRes(nullptr) {}
  ~SetExtAxisControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetExtAxisControlGainRes(::google::protobuf::internal::ConstantInitialized);

  SetExtAxisControlGainRes(const SetExtAxisControlGainRes& from);
  SetExtAxisControlGainRes(SetExtAxisControlGainRes&& from) noexcept
    : SetExtAxisControlGainRes() {
    *this = ::std::move(from);
  }

  inline SetExtAxisControlGainRes& operator=(const SetExtAxisControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetExtAxisControlGainRes& operator=(SetExtAxisControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetExtAxisControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetExtAxisControlGainRes* internal_default_instance() {
    return reinterpret_cast<const SetExtAxisControlGainRes*>(
               &_SetExtAxisControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  friend void swap(SetExtAxisControlGainRes& a, SetExtAxisControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetExtAxisControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetExtAxisControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetExtAxisControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetExtAxisControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetExtAxisControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetExtAxisControlGainRes& from) {
    SetExtAxisControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetExtAxisControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes";
  }
  protected:
  explicit SetExtAxisControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 63, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetForceControlGainReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetForceControlGainReq) */ {
 public:
  inline GetForceControlGainReq() : GetForceControlGainReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetForceControlGainReq(::google::protobuf::internal::ConstantInitialized);

  GetForceControlGainReq(const GetForceControlGainReq& from);
  GetForceControlGainReq(GetForceControlGainReq&& from) noexcept
    : GetForceControlGainReq() {
    *this = ::std::move(from);
  }

  inline GetForceControlGainReq& operator=(const GetForceControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetForceControlGainReq& operator=(GetForceControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetForceControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetForceControlGainReq* internal_default_instance() {
    return reinterpret_cast<const GetForceControlGainReq*>(
               &_GetForceControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  friend void swap(GetForceControlGainReq& a, GetForceControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetForceControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetForceControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetForceControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetForceControlGainReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetForceControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetForceControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetForceControlGainReq";
  }
  protected:
  explicit GetForceControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetForceControlGainReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetForceControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetForceControlGainRes) */ {
 public:
  inline GetForceControlGainRes() : GetForceControlGainRes(nullptr) {}
  ~GetForceControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetForceControlGainRes(::google::protobuf::internal::ConstantInitialized);

  GetForceControlGainRes(const GetForceControlGainRes& from);
  GetForceControlGainRes(GetForceControlGainRes&& from) noexcept
    : GetForceControlGainRes() {
    *this = ::std::move(from);
  }

  inline GetForceControlGainRes& operator=(const GetForceControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetForceControlGainRes& operator=(GetForceControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetForceControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetForceControlGainRes* internal_default_instance() {
    return reinterpret_cast<const GetForceControlGainRes*>(
               &_GetForceControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  friend void swap(GetForceControlGainRes& a, GetForceControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetForceControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetForceControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetForceControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetForceControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetForceControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetForceControlGainRes& from) {
    GetForceControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetForceControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetForceControlGainRes";
  }
  protected:
  explicit GetForceControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kMassFieldNumber = 4,
    kDampingFieldNumber = 5,
    kStiffnessFieldNumber = 6,
    kKpfFieldNumber = 7,
    kKifFieldNumber = 8,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // repeated float mass = 4;
  int mass_size() const;
  private:
  int _internal_mass_size() const;

  public:
  void clear_mass() ;
  float mass(int index) const;
  void set_mass(int index, float value);
  void add_mass(float value);
  const ::google::protobuf::RepeatedField<float>& mass() const;
  ::google::protobuf::RepeatedField<float>* mutable_mass();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_mass() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_mass();

  public:
  // repeated float damping = 5;
  int damping_size() const;
  private:
  int _internal_damping_size() const;

  public:
  void clear_damping() ;
  float damping(int index) const;
  void set_damping(int index, float value);
  void add_damping(float value);
  const ::google::protobuf::RepeatedField<float>& damping() const;
  ::google::protobuf::RepeatedField<float>* mutable_damping();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_damping() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_damping();

  public:
  // repeated float stiffness = 6;
  int stiffness_size() const;
  private:
  int _internal_stiffness_size() const;

  public:
  void clear_stiffness() ;
  float stiffness(int index) const;
  void set_stiffness(int index, float value);
  void add_stiffness(float value);
  const ::google::protobuf::RepeatedField<float>& stiffness() const;
  ::google::protobuf::RepeatedField<float>* mutable_stiffness();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_stiffness() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_stiffness();

  public:
  // repeated float kpf = 7;
  int kpf_size() const;
  private:
  int _internal_kpf_size() const;

  public:
  void clear_kpf() ;
  float kpf(int index) const;
  void set_kpf(int index, float value);
  void add_kpf(float value);
  const ::google::protobuf::RepeatedField<float>& kpf() const;
  ::google::protobuf::RepeatedField<float>* mutable_kpf();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kpf() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kpf();

  public:
  // repeated float kif = 8;
  int kif_size() const;
  private:
  int _internal_kif_size() const;

  public:
  void clear_kif() ;
  float kif(int index) const;
  void set_kif(int index, float value);
  void add_kif(float value);
  const ::google::protobuf::RepeatedField<float>& kif() const;
  ::google::protobuf::RepeatedField<float>* mutable_kif();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kif() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kif();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetForceControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 9, 0, 69, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::RepeatedField<float> mass_;
    ::google::protobuf::RepeatedField<float> damping_;
    ::google::protobuf::RepeatedField<float> stiffness_;
    ::google::protobuf::RepeatedField<float> kpf_;
    ::google::protobuf::RepeatedField<float> kif_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetExtAxisControlGainReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetExtAxisControlGainReq) */ {
 public:
  inline GetExtAxisControlGainReq() : GetExtAxisControlGainReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetExtAxisControlGainReq(::google::protobuf::internal::ConstantInitialized);

  GetExtAxisControlGainReq(const GetExtAxisControlGainReq& from);
  GetExtAxisControlGainReq(GetExtAxisControlGainReq&& from) noexcept
    : GetExtAxisControlGainReq() {
    *this = ::std::move(from);
  }

  inline GetExtAxisControlGainReq& operator=(const GetExtAxisControlGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExtAxisControlGainReq& operator=(GetExtAxisControlGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExtAxisControlGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExtAxisControlGainReq* internal_default_instance() {
    return reinterpret_cast<const GetExtAxisControlGainReq*>(
               &_GetExtAxisControlGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  friend void swap(GetExtAxisControlGainReq& a, GetExtAxisControlGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExtAxisControlGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExtAxisControlGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExtAxisControlGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExtAxisControlGainReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetExtAxisControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetExtAxisControlGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetExtAxisControlGainReq";
  }
  protected:
  explicit GetExtAxisControlGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetExtAxisControlGainReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetExtAxisControlGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes) */ {
 public:
  inline GetExtAxisControlGainRes() : GetExtAxisControlGainRes(nullptr) {}
  ~GetExtAxisControlGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetExtAxisControlGainRes(::google::protobuf::internal::ConstantInitialized);

  GetExtAxisControlGainRes(const GetExtAxisControlGainRes& from);
  GetExtAxisControlGainRes(GetExtAxisControlGainRes&& from) noexcept
    : GetExtAxisControlGainRes() {
    *this = ::std::move(from);
  }

  inline GetExtAxisControlGainRes& operator=(const GetExtAxisControlGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExtAxisControlGainRes& operator=(GetExtAxisControlGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExtAxisControlGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExtAxisControlGainRes* internal_default_instance() {
    return reinterpret_cast<const GetExtAxisControlGainRes*>(
               &_GetExtAxisControlGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  friend void swap(GetExtAxisControlGainRes& a, GetExtAxisControlGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExtAxisControlGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExtAxisControlGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExtAxisControlGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExtAxisControlGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetExtAxisControlGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetExtAxisControlGainRes& from) {
    GetExtAxisControlGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExtAxisControlGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes";
  }
  protected:
  explicit GetExtAxisControlGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 63, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSensorlessComplianceGainReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq) */ {
 public:
  inline SetSensorlessComplianceGainReq() : SetSensorlessComplianceGainReq(nullptr) {}
  ~SetSensorlessComplianceGainReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSensorlessComplianceGainReq(::google::protobuf::internal::ConstantInitialized);

  SetSensorlessComplianceGainReq(const SetSensorlessComplianceGainReq& from);
  SetSensorlessComplianceGainReq(SetSensorlessComplianceGainReq&& from) noexcept
    : SetSensorlessComplianceGainReq() {
    *this = ::std::move(from);
  }

  inline SetSensorlessComplianceGainReq& operator=(const SetSensorlessComplianceGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSensorlessComplianceGainReq& operator=(SetSensorlessComplianceGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSensorlessComplianceGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSensorlessComplianceGainReq* internal_default_instance() {
    return reinterpret_cast<const SetSensorlessComplianceGainReq*>(
               &_SetSensorlessComplianceGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  friend void swap(SetSensorlessComplianceGainReq& a, SetSensorlessComplianceGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSensorlessComplianceGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSensorlessComplianceGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSensorlessComplianceGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSensorlessComplianceGainReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSensorlessComplianceGainReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSensorlessComplianceGainReq& from) {
    SetSensorlessComplianceGainReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSensorlessComplianceGainReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq";
  }
  protected:
  explicit SetSensorlessComplianceGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kKdFieldNumber = 4,
    kBdFieldNumber = 5,
    kRateFieldNumber = 6,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // repeated float kd = 4;
  int kd_size() const;
  private:
  int _internal_kd_size() const;

  public:
  void clear_kd() ;
  float kd(int index) const;
  void set_kd(int index, float value);
  void add_kd(float value);
  const ::google::protobuf::RepeatedField<float>& kd() const;
  ::google::protobuf::RepeatedField<float>* mutable_kd();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kd() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kd();

  public:
  // repeated float bd = 5;
  int bd_size() const;
  private:
  int _internal_bd_size() const;

  public:
  void clear_bd() ;
  float bd(int index) const;
  void set_bd(int index, float value);
  void add_bd(float value);
  const ::google::protobuf::RepeatedField<float>& bd() const;
  ::google::protobuf::RepeatedField<float>* mutable_bd();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_bd() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_bd();

  public:
  // repeated float rate = 6;
  int rate_size() const;
  private:
  int _internal_rate_size() const;

  public:
  void clear_rate() ;
  float rate(int index) const;
  void set_rate(int index, float value);
  void add_rate(float value);
  const ::google::protobuf::RepeatedField<float>& rate() const;
  ::google::protobuf::RepeatedField<float>* mutable_rate();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_rate() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_rate();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 69, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::RepeatedField<float> kd_;
    ::google::protobuf::RepeatedField<float> bd_;
    ::google::protobuf::RepeatedField<float> rate_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSensorlessComplianceGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes) */ {
 public:
  inline SetSensorlessComplianceGainRes() : SetSensorlessComplianceGainRes(nullptr) {}
  ~SetSensorlessComplianceGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSensorlessComplianceGainRes(::google::protobuf::internal::ConstantInitialized);

  SetSensorlessComplianceGainRes(const SetSensorlessComplianceGainRes& from);
  SetSensorlessComplianceGainRes(SetSensorlessComplianceGainRes&& from) noexcept
    : SetSensorlessComplianceGainRes() {
    *this = ::std::move(from);
  }

  inline SetSensorlessComplianceGainRes& operator=(const SetSensorlessComplianceGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSensorlessComplianceGainRes& operator=(SetSensorlessComplianceGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSensorlessComplianceGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSensorlessComplianceGainRes* internal_default_instance() {
    return reinterpret_cast<const SetSensorlessComplianceGainRes*>(
               &_SetSensorlessComplianceGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  friend void swap(SetSensorlessComplianceGainRes& a, SetSensorlessComplianceGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSensorlessComplianceGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSensorlessComplianceGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSensorlessComplianceGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSensorlessComplianceGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSensorlessComplianceGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSensorlessComplianceGainRes& from) {
    SetSensorlessComplianceGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSensorlessComplianceGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes";
  }
  protected:
  explicit SetSensorlessComplianceGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 69, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSensorlessComplianceGainReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainReq) */ {
 public:
  inline GetSensorlessComplianceGainReq() : GetSensorlessComplianceGainReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSensorlessComplianceGainReq(::google::protobuf::internal::ConstantInitialized);

  GetSensorlessComplianceGainReq(const GetSensorlessComplianceGainReq& from);
  GetSensorlessComplianceGainReq(GetSensorlessComplianceGainReq&& from) noexcept
    : GetSensorlessComplianceGainReq() {
    *this = ::std::move(from);
  }

  inline GetSensorlessComplianceGainReq& operator=(const GetSensorlessComplianceGainReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSensorlessComplianceGainReq& operator=(GetSensorlessComplianceGainReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSensorlessComplianceGainReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSensorlessComplianceGainReq* internal_default_instance() {
    return reinterpret_cast<const GetSensorlessComplianceGainReq*>(
               &_GetSensorlessComplianceGainReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  friend void swap(GetSensorlessComplianceGainReq& a, GetSensorlessComplianceGainReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSensorlessComplianceGainReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSensorlessComplianceGainReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSensorlessComplianceGainReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSensorlessComplianceGainReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetSensorlessComplianceGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetSensorlessComplianceGainReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainReq";
  }
  protected:
  explicit GetSensorlessComplianceGainReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSensorlessComplianceGainRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes) */ {
 public:
  inline GetSensorlessComplianceGainRes() : GetSensorlessComplianceGainRes(nullptr) {}
  ~GetSensorlessComplianceGainRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSensorlessComplianceGainRes(::google::protobuf::internal::ConstantInitialized);

  GetSensorlessComplianceGainRes(const GetSensorlessComplianceGainRes& from);
  GetSensorlessComplianceGainRes(GetSensorlessComplianceGainRes&& from) noexcept
    : GetSensorlessComplianceGainRes() {
    *this = ::std::move(from);
  }

  inline GetSensorlessComplianceGainRes& operator=(const GetSensorlessComplianceGainRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSensorlessComplianceGainRes& operator=(GetSensorlessComplianceGainRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSensorlessComplianceGainRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSensorlessComplianceGainRes* internal_default_instance() {
    return reinterpret_cast<const GetSensorlessComplianceGainRes*>(
               &_GetSensorlessComplianceGainRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  friend void swap(GetSensorlessComplianceGainRes& a, GetSensorlessComplianceGainRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSensorlessComplianceGainRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSensorlessComplianceGainRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSensorlessComplianceGainRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSensorlessComplianceGainRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSensorlessComplianceGainRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSensorlessComplianceGainRes& from) {
    GetSensorlessComplianceGainRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSensorlessComplianceGainRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes";
  }
  protected:
  explicit GetSensorlessComplianceGainRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKpFieldNumber = 1,
    kKvFieldNumber = 2,
    kKl2FieldNumber = 3,
    kKdFieldNumber = 4,
    kBdFieldNumber = 5,
    kRateFieldNumber = 6,
    kMsgFieldNumber = 100,
  };
  // repeated float kp = 1;
  int kp_size() const;
  private:
  int _internal_kp_size() const;

  public:
  void clear_kp() ;
  float kp(int index) const;
  void set_kp(int index, float value);
  void add_kp(float value);
  const ::google::protobuf::RepeatedField<float>& kp() const;
  ::google::protobuf::RepeatedField<float>* mutable_kp();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kp() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kp();

  public:
  // repeated float kv = 2;
  int kv_size() const;
  private:
  int _internal_kv_size() const;

  public:
  void clear_kv() ;
  float kv(int index) const;
  void set_kv(int index, float value);
  void add_kv(float value);
  const ::google::protobuf::RepeatedField<float>& kv() const;
  ::google::protobuf::RepeatedField<float>* mutable_kv();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kv() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kv();

  public:
  // repeated float kl2 = 3;
  int kl2_size() const;
  private:
  int _internal_kl2_size() const;

  public:
  void clear_kl2() ;
  float kl2(int index) const;
  void set_kl2(int index, float value);
  void add_kl2(float value);
  const ::google::protobuf::RepeatedField<float>& kl2() const;
  ::google::protobuf::RepeatedField<float>* mutable_kl2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kl2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kl2();

  public:
  // repeated float kd = 4;
  int kd_size() const;
  private:
  int _internal_kd_size() const;

  public:
  void clear_kd() ;
  float kd(int index) const;
  void set_kd(int index, float value);
  void add_kd(float value);
  const ::google::protobuf::RepeatedField<float>& kd() const;
  ::google::protobuf::RepeatedField<float>* mutable_kd();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_kd() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_kd();

  public:
  // repeated float bd = 5;
  int bd_size() const;
  private:
  int _internal_bd_size() const;

  public:
  void clear_bd() ;
  float bd(int index) const;
  void set_bd(int index, float value);
  void add_bd(float value);
  const ::google::protobuf::RepeatedField<float>& bd() const;
  ::google::protobuf::RepeatedField<float>* mutable_bd();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_bd() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_bd();

  public:
  // repeated float rate = 6;
  int rate_size() const;
  private:
  int _internal_rate_size() const;

  public:
  void clear_rate() ;
  float rate(int index) const;
  void set_rate(int index, float value);
  void add_rate(float value);
  const ::google::protobuf::RepeatedField<float>& rate() const;
  ::google::protobuf::RepeatedField<float>* mutable_rate();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_rate() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_rate();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 69, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> kp_;
    ::google::protobuf::RepeatedField<float> kv_;
    ::google::protobuf::RepeatedField<float> kl2_;
    ::google::protobuf::RepeatedField<float> kd_;
    ::google::protobuf::RepeatedField<float> bd_;
    ::google::protobuf::RepeatedField<float> rate_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetFricCompReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetFricCompReq) */ {
 public:
  inline SetFricCompReq() : SetFricCompReq(nullptr) {}
  ~SetFricCompReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetFricCompReq(::google::protobuf::internal::ConstantInitialized);

  SetFricCompReq(const SetFricCompReq& from);
  SetFricCompReq(SetFricCompReq&& from) noexcept
    : SetFricCompReq() {
    *this = ::std::move(from);
  }

  inline SetFricCompReq& operator=(const SetFricCompReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetFricCompReq& operator=(SetFricCompReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetFricCompReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetFricCompReq* internal_default_instance() {
    return reinterpret_cast<const SetFricCompReq*>(
               &_SetFricCompReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  friend void swap(SetFricCompReq& a, SetFricCompReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetFricCompReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetFricCompReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetFricCompReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetFricCompReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetFricCompReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetFricCompReq& from) {
    SetFricCompReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetFricCompReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetFricCompReq";
  }
  protected:
  explicit SetFricCompReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlCompLevelsFieldNumber = 2,
    kDtCompLevelsFieldNumber = 6,
    kControlCompFieldNumber = 1,
    kDtCompFieldNumber = 5,
  };
  // repeated int32 control_comp_levels = 2;
  int control_comp_levels_size() const;
  private:
  int _internal_control_comp_levels_size() const;

  public:
  void clear_control_comp_levels() ;
  ::int32_t control_comp_levels(int index) const;
  void set_control_comp_levels(int index, ::int32_t value);
  void add_control_comp_levels(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& control_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_control_comp_levels();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_control_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_control_comp_levels();

  public:
  // repeated int32 dt_comp_levels = 6;
  int dt_comp_levels_size() const;
  private:
  int _internal_dt_comp_levels_size() const;

  public:
  void clear_dt_comp_levels() ;
  ::int32_t dt_comp_levels(int index) const;
  void set_dt_comp_levels(int index, ::int32_t value);
  void add_dt_comp_levels(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& dt_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_dt_comp_levels();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_dt_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_dt_comp_levels();

  public:
  // bool control_comp = 1;
  void clear_control_comp() ;
  bool control_comp() const;
  void set_control_comp(bool value);

  private:
  bool _internal_control_comp() const;
  void _internal_set_control_comp(bool value);

  public:
  // bool dt_comp = 5;
  void clear_dt_comp() ;
  bool dt_comp() const;
  void set_dt_comp(bool value);

  private:
  bool _internal_dt_comp() const;
  void _internal_set_dt_comp(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetFricCompReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> control_comp_levels_;
    mutable ::google::protobuf::internal::CachedSize _control_comp_levels_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> dt_comp_levels_;
    mutable ::google::protobuf::internal::CachedSize _dt_comp_levels_cached_byte_size_;
    bool control_comp_;
    bool dt_comp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetFricCompRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetFricCompRes) */ {
 public:
  inline SetFricCompRes() : SetFricCompRes(nullptr) {}
  ~SetFricCompRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetFricCompRes(::google::protobuf::internal::ConstantInitialized);

  SetFricCompRes(const SetFricCompRes& from);
  SetFricCompRes(SetFricCompRes&& from) noexcept
    : SetFricCompRes() {
    *this = ::std::move(from);
  }

  inline SetFricCompRes& operator=(const SetFricCompRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetFricCompRes& operator=(SetFricCompRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetFricCompRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetFricCompRes* internal_default_instance() {
    return reinterpret_cast<const SetFricCompRes*>(
               &_SetFricCompRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  friend void swap(SetFricCompRes& a, SetFricCompRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetFricCompRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetFricCompRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetFricCompRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetFricCompRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetFricCompRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetFricCompRes& from) {
    SetFricCompRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetFricCompRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetFricCompRes";
  }
  protected:
  explicit SetFricCompRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetFricCompRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetFricCompReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetFricCompReq) */ {
 public:
  inline GetFricCompReq() : GetFricCompReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetFricCompReq(::google::protobuf::internal::ConstantInitialized);

  GetFricCompReq(const GetFricCompReq& from);
  GetFricCompReq(GetFricCompReq&& from) noexcept
    : GetFricCompReq() {
    *this = ::std::move(from);
  }

  inline GetFricCompReq& operator=(const GetFricCompReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFricCompReq& operator=(GetFricCompReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFricCompReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFricCompReq* internal_default_instance() {
    return reinterpret_cast<const GetFricCompReq*>(
               &_GetFricCompReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  friend void swap(GetFricCompReq& a, GetFricCompReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFricCompReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFricCompReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFricCompReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetFricCompReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetFricCompReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetFricCompReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetFricCompReq";
  }
  protected:
  explicit GetFricCompReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetFricCompReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetFricCompRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetFricCompRes) */ {
 public:
  inline GetFricCompRes() : GetFricCompRes(nullptr) {}
  ~GetFricCompRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetFricCompRes(::google::protobuf::internal::ConstantInitialized);

  GetFricCompRes(const GetFricCompRes& from);
  GetFricCompRes(GetFricCompRes&& from) noexcept
    : GetFricCompRes() {
    *this = ::std::move(from);
  }

  inline GetFricCompRes& operator=(const GetFricCompRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFricCompRes& operator=(GetFricCompRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFricCompRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFricCompRes* internal_default_instance() {
    return reinterpret_cast<const GetFricCompRes*>(
               &_GetFricCompRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  friend void swap(GetFricCompRes& a, GetFricCompRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFricCompRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFricCompRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFricCompRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetFricCompRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFricCompRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetFricCompRes& from) {
    GetFricCompRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFricCompRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetFricCompRes";
  }
  protected:
  explicit GetFricCompRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlCompLevelsFieldNumber = 2,
    kDtCompLevelsFieldNumber = 6,
    kMsgFieldNumber = 100,
    kControlCompFieldNumber = 1,
    kDtCompFieldNumber = 5,
  };
  // repeated int32 control_comp_levels = 2;
  int control_comp_levels_size() const;
  private:
  int _internal_control_comp_levels_size() const;

  public:
  void clear_control_comp_levels() ;
  ::int32_t control_comp_levels(int index) const;
  void set_control_comp_levels(int index, ::int32_t value);
  void add_control_comp_levels(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& control_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_control_comp_levels();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_control_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_control_comp_levels();

  public:
  // repeated int32 dt_comp_levels = 6;
  int dt_comp_levels_size() const;
  private:
  int _internal_dt_comp_levels_size() const;

  public:
  void clear_dt_comp_levels() ;
  ::int32_t dt_comp_levels(int index) const;
  void set_dt_comp_levels(int index, ::int32_t value);
  void add_dt_comp_levels(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& dt_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_dt_comp_levels();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_dt_comp_levels() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_dt_comp_levels();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bool control_comp = 1;
  void clear_control_comp() ;
  bool control_comp() const;
  void set_control_comp(bool value);

  private:
  bool _internal_control_comp() const;
  void _internal_set_control_comp(bool value);

  public:
  // bool dt_comp = 5;
  void clear_dt_comp() ;
  bool dt_comp() const;
  void set_dt_comp(bool value);

  private:
  bool _internal_dt_comp() const;
  void _internal_set_dt_comp(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetFricCompRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> control_comp_levels_;
    mutable ::google::protobuf::internal::CachedSize _control_comp_levels_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> dt_comp_levels_;
    mutable ::google::protobuf::internal::CachedSize _dt_comp_levels_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    bool control_comp_;
    bool dt_comp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetHomePosReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetHomePosReq) */ {
 public:
  inline SetHomePosReq() : SetHomePosReq(nullptr) {}
  ~SetHomePosReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetHomePosReq(::google::protobuf::internal::ConstantInitialized);

  SetHomePosReq(const SetHomePosReq& from);
  SetHomePosReq(SetHomePosReq&& from) noexcept
    : SetHomePosReq() {
    *this = ::std::move(from);
  }

  inline SetHomePosReq& operator=(const SetHomePosReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetHomePosReq& operator=(SetHomePosReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetHomePosReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetHomePosReq* internal_default_instance() {
    return reinterpret_cast<const SetHomePosReq*>(
               &_SetHomePosReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  friend void swap(SetHomePosReq& a, SetHomePosReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetHomePosReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetHomePosReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetHomePosReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetHomePosReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetHomePosReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetHomePosReq& from) {
    SetHomePosReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetHomePosReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetHomePosReq";
  }
  protected:
  explicit SetHomePosReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 1,
  };
  // repeated float jpos = 1;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetHomePosReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetHomePosRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetHomePosRes) */ {
 public:
  inline SetHomePosRes() : SetHomePosRes(nullptr) {}
  ~SetHomePosRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetHomePosRes(::google::protobuf::internal::ConstantInitialized);

  SetHomePosRes(const SetHomePosRes& from);
  SetHomePosRes(SetHomePosRes&& from) noexcept
    : SetHomePosRes() {
    *this = ::std::move(from);
  }

  inline SetHomePosRes& operator=(const SetHomePosRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetHomePosRes& operator=(SetHomePosRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetHomePosRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetHomePosRes* internal_default_instance() {
    return reinterpret_cast<const SetHomePosRes*>(
               &_SetHomePosRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  friend void swap(SetHomePosRes& a, SetHomePosRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetHomePosRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetHomePosRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetHomePosRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetHomePosRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetHomePosRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetHomePosRes& from) {
    SetHomePosRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetHomePosRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetHomePosRes";
  }
  protected:
  explicit SetHomePosRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetHomePosRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 52, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetHomePosReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetHomePosReq) */ {
 public:
  inline GetHomePosReq() : GetHomePosReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetHomePosReq(::google::protobuf::internal::ConstantInitialized);

  GetHomePosReq(const GetHomePosReq& from);
  GetHomePosReq(GetHomePosReq&& from) noexcept
    : GetHomePosReq() {
    *this = ::std::move(from);
  }

  inline GetHomePosReq& operator=(const GetHomePosReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetHomePosReq& operator=(GetHomePosReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetHomePosReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetHomePosReq* internal_default_instance() {
    return reinterpret_cast<const GetHomePosReq*>(
               &_GetHomePosReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  friend void swap(GetHomePosReq& a, GetHomePosReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetHomePosReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetHomePosReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetHomePosReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetHomePosReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetHomePosReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetHomePosReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetHomePosReq";
  }
  protected:
  explicit GetHomePosReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetHomePosReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetHomePosRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetHomePosRes) */ {
 public:
  inline GetHomePosRes() : GetHomePosRes(nullptr) {}
  ~GetHomePosRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetHomePosRes(::google::protobuf::internal::ConstantInitialized);

  GetHomePosRes(const GetHomePosRes& from);
  GetHomePosRes(GetHomePosRes&& from) noexcept
    : GetHomePosRes() {
    *this = ::std::move(from);
  }

  inline GetHomePosRes& operator=(const GetHomePosRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetHomePosRes& operator=(GetHomePosRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetHomePosRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetHomePosRes* internal_default_instance() {
    return reinterpret_cast<const GetHomePosRes*>(
               &_GetHomePosRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  friend void swap(GetHomePosRes& a, GetHomePosRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetHomePosRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetHomePosRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetHomePosRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetHomePosRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetHomePosRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetHomePosRes& from) {
    GetHomePosRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetHomePosRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetHomePosRes";
  }
  protected:
  explicit GetHomePosRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated float jpos = 1;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetHomePosRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 52, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetMountPosReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetMountPosReq) */ {
 public:
  inline SetMountPosReq() : SetMountPosReq(nullptr) {}
  ~SetMountPosReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMountPosReq(::google::protobuf::internal::ConstantInitialized);

  SetMountPosReq(const SetMountPosReq& from);
  SetMountPosReq(SetMountPosReq&& from) noexcept
    : SetMountPosReq() {
    *this = ::std::move(from);
  }

  inline SetMountPosReq& operator=(const SetMountPosReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMountPosReq& operator=(SetMountPosReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMountPosReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMountPosReq* internal_default_instance() {
    return reinterpret_cast<const SetMountPosReq*>(
               &_SetMountPosReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    151;

  friend void swap(SetMountPosReq& a, SetMountPosReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMountPosReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMountPosReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMountPosReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMountPosReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMountPosReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMountPosReq& from) {
    SetMountPosReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMountPosReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetMountPosReq";
  }
  protected:
  explicit SetMountPosReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRyFieldNumber = 1,
    kRzFieldNumber = 2,
  };
  // float ry = 1;
  void clear_ry() ;
  float ry() const;
  void set_ry(float value);

  private:
  float _internal_ry() const;
  void _internal_set_ry(float value);

  public:
  // float rz = 2;
  void clear_rz() ;
  float rz() const;
  void set_rz(float value);

  private:
  float _internal_rz() const;
  void _internal_set_rz(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetMountPosReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float ry_;
    float rz_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetMountPosRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetMountPosRes) */ {
 public:
  inline SetMountPosRes() : SetMountPosRes(nullptr) {}
  ~SetMountPosRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMountPosRes(::google::protobuf::internal::ConstantInitialized);

  SetMountPosRes(const SetMountPosRes& from);
  SetMountPosRes(SetMountPosRes&& from) noexcept
    : SetMountPosRes() {
    *this = ::std::move(from);
  }

  inline SetMountPosRes& operator=(const SetMountPosRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMountPosRes& operator=(SetMountPosRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMountPosRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMountPosRes* internal_default_instance() {
    return reinterpret_cast<const SetMountPosRes*>(
               &_SetMountPosRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    152;

  friend void swap(SetMountPosRes& a, SetMountPosRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMountPosRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMountPosRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMountPosRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMountPosRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMountPosRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMountPosRes& from) {
    SetMountPosRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMountPosRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetMountPosRes";
  }
  protected:
  explicit SetMountPosRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetMountPosRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetMountPosReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetMountPosReq) */ {
 public:
  inline GetMountPosReq() : GetMountPosReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMountPosReq(::google::protobuf::internal::ConstantInitialized);

  GetMountPosReq(const GetMountPosReq& from);
  GetMountPosReq(GetMountPosReq&& from) noexcept
    : GetMountPosReq() {
    *this = ::std::move(from);
  }

  inline GetMountPosReq& operator=(const GetMountPosReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMountPosReq& operator=(GetMountPosReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMountPosReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMountPosReq* internal_default_instance() {
    return reinterpret_cast<const GetMountPosReq*>(
               &_GetMountPosReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    153;

  friend void swap(GetMountPosReq& a, GetMountPosReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMountPosReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMountPosReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMountPosReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMountPosReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetMountPosReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetMountPosReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetMountPosReq";
  }
  protected:
  explicit GetMountPosReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetMountPosReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetMountPosRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetMountPosRes) */ {
 public:
  inline GetMountPosRes() : GetMountPosRes(nullptr) {}
  ~GetMountPosRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMountPosRes(::google::protobuf::internal::ConstantInitialized);

  GetMountPosRes(const GetMountPosRes& from);
  GetMountPosRes(GetMountPosRes&& from) noexcept
    : GetMountPosRes() {
    *this = ::std::move(from);
  }

  inline GetMountPosRes& operator=(const GetMountPosRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMountPosRes& operator=(GetMountPosRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMountPosRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMountPosRes* internal_default_instance() {
    return reinterpret_cast<const GetMountPosRes*>(
               &_GetMountPosRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    154;

  friend void swap(GetMountPosRes& a, GetMountPosRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMountPosRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMountPosRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMountPosRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMountPosRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMountPosRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetMountPosRes& from) {
    GetMountPosRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMountPosRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetMountPosRes";
  }
  protected:
  explicit GetMountPosRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kRyFieldNumber = 1,
    kRzFieldNumber = 2,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // float ry = 1;
  void clear_ry() ;
  float ry() const;
  void set_ry(float value);

  private:
  float _internal_ry() const;
  void _internal_set_ry(float value);

  public:
  // float rz = 2;
  void clear_rz() ;
  float rz() const;
  void set_rz(float value);

  private:
  float _internal_rz() const;
  void _internal_set_rz(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetMountPosRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    float ry_;
    float rz_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetPackagingPosReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetPackagingPosReq) */ {
 public:
  inline GetPackagingPosReq() : GetPackagingPosReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPackagingPosReq(::google::protobuf::internal::ConstantInitialized);

  GetPackagingPosReq(const GetPackagingPosReq& from);
  GetPackagingPosReq(GetPackagingPosReq&& from) noexcept
    : GetPackagingPosReq() {
    *this = ::std::move(from);
  }

  inline GetPackagingPosReq& operator=(const GetPackagingPosReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPackagingPosReq& operator=(GetPackagingPosReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPackagingPosReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPackagingPosReq* internal_default_instance() {
    return reinterpret_cast<const GetPackagingPosReq*>(
               &_GetPackagingPosReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    155;

  friend void swap(GetPackagingPosReq& a, GetPackagingPosReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPackagingPosReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPackagingPosReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPackagingPosReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPackagingPosReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetPackagingPosReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetPackagingPosReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetPackagingPosReq";
  }
  protected:
  explicit GetPackagingPosReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetPackagingPosReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetPackagingPosRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetPackagingPosRes) */ {
 public:
  inline GetPackagingPosRes() : GetPackagingPosRes(nullptr) {}
  ~GetPackagingPosRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPackagingPosRes(::google::protobuf::internal::ConstantInitialized);

  GetPackagingPosRes(const GetPackagingPosRes& from);
  GetPackagingPosRes(GetPackagingPosRes&& from) noexcept
    : GetPackagingPosRes() {
    *this = ::std::move(from);
  }

  inline GetPackagingPosRes& operator=(const GetPackagingPosRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPackagingPosRes& operator=(GetPackagingPosRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPackagingPosRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPackagingPosRes* internal_default_instance() {
    return reinterpret_cast<const GetPackagingPosRes*>(
               &_GetPackagingPosRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    156;

  friend void swap(GetPackagingPosRes& a, GetPackagingPosRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPackagingPosRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPackagingPosRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPackagingPosRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPackagingPosRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPackagingPosRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPackagingPosRes& from) {
    GetPackagingPosRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPackagingPosRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetPackagingPosRes";
  }
  protected:
  explicit GetPackagingPosRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated float jpos = 1;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetPackagingPosRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetToolPropertyReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetToolPropertyReq) */ {
 public:
  inline SetToolPropertyReq() : SetToolPropertyReq(nullptr) {}
  ~SetToolPropertyReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetToolPropertyReq(::google::protobuf::internal::ConstantInitialized);

  SetToolPropertyReq(const SetToolPropertyReq& from);
  SetToolPropertyReq(SetToolPropertyReq&& from) noexcept
    : SetToolPropertyReq() {
    *this = ::std::move(from);
  }

  inline SetToolPropertyReq& operator=(const SetToolPropertyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetToolPropertyReq& operator=(SetToolPropertyReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetToolPropertyReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetToolPropertyReq* internal_default_instance() {
    return reinterpret_cast<const SetToolPropertyReq*>(
               &_SetToolPropertyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    157;

  friend void swap(SetToolPropertyReq& a, SetToolPropertyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetToolPropertyReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetToolPropertyReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetToolPropertyReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetToolPropertyReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetToolPropertyReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetToolPropertyReq& from) {
    SetToolPropertyReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetToolPropertyReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetToolPropertyReq";
  }
  protected:
  explicit SetToolPropertyReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCenterOfMassFieldNumber = 2,
    kInertiaFieldNumber = 3,
    kMassFieldNumber = 1,
  };
  // repeated float center_of_mass = 2;
  int center_of_mass_size() const;
  private:
  int _internal_center_of_mass_size() const;

  public:
  void clear_center_of_mass() ;
  float center_of_mass(int index) const;
  void set_center_of_mass(int index, float value);
  void add_center_of_mass(float value);
  const ::google::protobuf::RepeatedField<float>& center_of_mass() const;
  ::google::protobuf::RepeatedField<float>* mutable_center_of_mass();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_center_of_mass() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_center_of_mass();

  public:
  // repeated float inertia = 3;
  int inertia_size() const;
  private:
  int _internal_inertia_size() const;

  public:
  void clear_inertia() ;
  float inertia(int index) const;
  void set_inertia(int index, float value);
  void add_inertia(float value);
  const ::google::protobuf::RepeatedField<float>& inertia() const;
  ::google::protobuf::RepeatedField<float>* mutable_inertia();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_inertia() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_inertia();

  public:
  // float mass = 1;
  void clear_mass() ;
  float mass() const;
  void set_mass(float value);

  private:
  float _internal_mass() const;
  void _internal_set_mass(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetToolPropertyReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> center_of_mass_;
    ::google::protobuf::RepeatedField<float> inertia_;
    float mass_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetToolPropertyRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetToolPropertyRes) */ {
 public:
  inline SetToolPropertyRes() : SetToolPropertyRes(nullptr) {}
  ~SetToolPropertyRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetToolPropertyRes(::google::protobuf::internal::ConstantInitialized);

  SetToolPropertyRes(const SetToolPropertyRes& from);
  SetToolPropertyRes(SetToolPropertyRes&& from) noexcept
    : SetToolPropertyRes() {
    *this = ::std::move(from);
  }

  inline SetToolPropertyRes& operator=(const SetToolPropertyRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetToolPropertyRes& operator=(SetToolPropertyRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetToolPropertyRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetToolPropertyRes* internal_default_instance() {
    return reinterpret_cast<const SetToolPropertyRes*>(
               &_SetToolPropertyRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    158;

  friend void swap(SetToolPropertyRes& a, SetToolPropertyRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetToolPropertyRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetToolPropertyRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetToolPropertyRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetToolPropertyRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetToolPropertyRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetToolPropertyRes& from) {
    SetToolPropertyRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetToolPropertyRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetToolPropertyRes";
  }
  protected:
  explicit SetToolPropertyRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetToolPropertyRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetToolPropertyReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetToolPropertyReq) */ {
 public:
  inline GetToolPropertyReq() : GetToolPropertyReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetToolPropertyReq(::google::protobuf::internal::ConstantInitialized);

  GetToolPropertyReq(const GetToolPropertyReq& from);
  GetToolPropertyReq(GetToolPropertyReq&& from) noexcept
    : GetToolPropertyReq() {
    *this = ::std::move(from);
  }

  inline GetToolPropertyReq& operator=(const GetToolPropertyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetToolPropertyReq& operator=(GetToolPropertyReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetToolPropertyReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetToolPropertyReq* internal_default_instance() {
    return reinterpret_cast<const GetToolPropertyReq*>(
               &_GetToolPropertyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    159;

  friend void swap(GetToolPropertyReq& a, GetToolPropertyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetToolPropertyReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetToolPropertyReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetToolPropertyReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetToolPropertyReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetToolPropertyReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetToolPropertyReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetToolPropertyReq";
  }
  protected:
  explicit GetToolPropertyReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetToolPropertyReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetToolPropertyRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetToolPropertyRes) */ {
 public:
  inline GetToolPropertyRes() : GetToolPropertyRes(nullptr) {}
  ~GetToolPropertyRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetToolPropertyRes(::google::protobuf::internal::ConstantInitialized);

  GetToolPropertyRes(const GetToolPropertyRes& from);
  GetToolPropertyRes(GetToolPropertyRes&& from) noexcept
    : GetToolPropertyRes() {
    *this = ::std::move(from);
  }

  inline GetToolPropertyRes& operator=(const GetToolPropertyRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetToolPropertyRes& operator=(GetToolPropertyRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetToolPropertyRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetToolPropertyRes* internal_default_instance() {
    return reinterpret_cast<const GetToolPropertyRes*>(
               &_GetToolPropertyRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    160;

  friend void swap(GetToolPropertyRes& a, GetToolPropertyRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetToolPropertyRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetToolPropertyRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetToolPropertyRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetToolPropertyRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetToolPropertyRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetToolPropertyRes& from) {
    GetToolPropertyRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetToolPropertyRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetToolPropertyRes";
  }
  protected:
  explicit GetToolPropertyRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCenterOfMassFieldNumber = 2,
    kInertiaFieldNumber = 3,
    kMsgFieldNumber = 100,
    kMassFieldNumber = 1,
  };
  // repeated float center_of_mass = 2;
  int center_of_mass_size() const;
  private:
  int _internal_center_of_mass_size() const;

  public:
  void clear_center_of_mass() ;
  float center_of_mass(int index) const;
  void set_center_of_mass(int index, float value);
  void add_center_of_mass(float value);
  const ::google::protobuf::RepeatedField<float>& center_of_mass() const;
  ::google::protobuf::RepeatedField<float>* mutable_center_of_mass();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_center_of_mass() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_center_of_mass();

  public:
  // repeated float inertia = 3;
  int inertia_size() const;
  private:
  int _internal_inertia_size() const;

  public:
  void clear_inertia() ;
  float inertia(int index) const;
  void set_inertia(int index, float value);
  void add_inertia(float value);
  const ::google::protobuf::RepeatedField<float>& inertia() const;
  ::google::protobuf::RepeatedField<float>* mutable_inertia();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_inertia() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_inertia();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // float mass = 1;
  void clear_mass() ;
  float mass() const;
  void set_mass(float value);

  private:
  float _internal_mass() const;
  void _internal_set_mass(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetToolPropertyRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> center_of_mass_;
    ::google::protobuf::RepeatedField<float> inertia_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    float mass_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RebootReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RebootReq) */ {
 public:
  inline RebootReq() : RebootReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RebootReq(::google::protobuf::internal::ConstantInitialized);

  RebootReq(const RebootReq& from);
  RebootReq(RebootReq&& from) noexcept
    : RebootReq() {
    *this = ::std::move(from);
  }

  inline RebootReq& operator=(const RebootReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RebootReq& operator=(RebootReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RebootReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RebootReq* internal_default_instance() {
    return reinterpret_cast<const RebootReq*>(
               &_RebootReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    161;

  friend void swap(RebootReq& a, RebootReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RebootReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RebootReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RebootReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RebootReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RebootReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RebootReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RebootReq";
  }
  protected:
  explicit RebootReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RebootReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class RebootRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.RebootRes) */ {
 public:
  inline RebootRes() : RebootRes(nullptr) {}
  ~RebootRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RebootRes(::google::protobuf::internal::ConstantInitialized);

  RebootRes(const RebootRes& from);
  RebootRes(RebootRes&& from) noexcept
    : RebootRes() {
    *this = ::std::move(from);
  }

  inline RebootRes& operator=(const RebootRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline RebootRes& operator=(RebootRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RebootRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const RebootRes* internal_default_instance() {
    return reinterpret_cast<const RebootRes*>(
               &_RebootRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    162;

  friend void swap(RebootRes& a, RebootRes& b) {
    a.Swap(&b);
  }
  inline void Swap(RebootRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RebootRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RebootRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RebootRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RebootRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RebootRes& from) {
    RebootRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RebootRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.RebootRes";
  }
  protected:
  explicit RebootRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.RebootRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 48, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PowerOffReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PowerOffReq) */ {
 public:
  inline PowerOffReq() : PowerOffReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PowerOffReq(::google::protobuf::internal::ConstantInitialized);

  PowerOffReq(const PowerOffReq& from);
  PowerOffReq(PowerOffReq&& from) noexcept
    : PowerOffReq() {
    *this = ::std::move(from);
  }

  inline PowerOffReq& operator=(const PowerOffReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerOffReq& operator=(PowerOffReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerOffReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerOffReq* internal_default_instance() {
    return reinterpret_cast<const PowerOffReq*>(
               &_PowerOffReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    163;

  friend void swap(PowerOffReq& a, PowerOffReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PowerOffReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerOffReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerOffReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PowerOffReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PowerOffReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PowerOffReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PowerOffReq";
  }
  protected:
  explicit PowerOffReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PowerOffReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PowerOffRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PowerOffRes) */ {
 public:
  inline PowerOffRes() : PowerOffRes(nullptr) {}
  ~PowerOffRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PowerOffRes(::google::protobuf::internal::ConstantInitialized);

  PowerOffRes(const PowerOffRes& from);
  PowerOffRes(PowerOffRes&& from) noexcept
    : PowerOffRes() {
    *this = ::std::move(from);
  }

  inline PowerOffRes& operator=(const PowerOffRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerOffRes& operator=(PowerOffRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerOffRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerOffRes* internal_default_instance() {
    return reinterpret_cast<const PowerOffRes*>(
               &_PowerOffRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    164;

  friend void swap(PowerOffRes& a, PowerOffRes& b) {
    a.Swap(&b);
  }
  inline void Swap(PowerOffRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerOffRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerOffRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PowerOffRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PowerOffRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PowerOffRes& from) {
    PowerOffRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PowerOffRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PowerOffRes";
  }
  protected:
  explicit PowerOffRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PowerOffRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 50, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetRefFrameReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetRefFrameReq) */ {
 public:
  inline SetRefFrameReq() : SetRefFrameReq(nullptr) {}
  ~SetRefFrameReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRefFrameReq(::google::protobuf::internal::ConstantInitialized);

  SetRefFrameReq(const SetRefFrameReq& from);
  SetRefFrameReq(SetRefFrameReq&& from) noexcept
    : SetRefFrameReq() {
    *this = ::std::move(from);
  }

  inline SetRefFrameReq& operator=(const SetRefFrameReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRefFrameReq& operator=(SetRefFrameReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRefFrameReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRefFrameReq* internal_default_instance() {
    return reinterpret_cast<const SetRefFrameReq*>(
               &_SetRefFrameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    165;

  friend void swap(SetRefFrameReq& a, SetRefFrameReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRefFrameReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRefFrameReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRefFrameReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRefFrameReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRefFrameReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRefFrameReq& from) {
    SetRefFrameReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRefFrameReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetRefFrameReq";
  }
  protected:
  explicit SetRefFrameReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRefFrameFieldNumber = 1,
  };
  // repeated float ref_frame = 1;
  int ref_frame_size() const;
  private:
  int _internal_ref_frame_size() const;

  public:
  void clear_ref_frame() ;
  float ref_frame(int index) const;
  void set_ref_frame(int index, float value);
  void add_ref_frame(float value);
  const ::google::protobuf::RepeatedField<float>& ref_frame() const;
  ::google::protobuf::RepeatedField<float>* mutable_ref_frame();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_ref_frame() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_ref_frame();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetRefFrameReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> ref_frame_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetRefFrameRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetRefFrameRes) */ {
 public:
  inline SetRefFrameRes() : SetRefFrameRes(nullptr) {}
  ~SetRefFrameRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRefFrameRes(::google::protobuf::internal::ConstantInitialized);

  SetRefFrameRes(const SetRefFrameRes& from);
  SetRefFrameRes(SetRefFrameRes&& from) noexcept
    : SetRefFrameRes() {
    *this = ::std::move(from);
  }

  inline SetRefFrameRes& operator=(const SetRefFrameRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRefFrameRes& operator=(SetRefFrameRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRefFrameRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRefFrameRes* internal_default_instance() {
    return reinterpret_cast<const SetRefFrameRes*>(
               &_SetRefFrameRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    166;

  friend void swap(SetRefFrameRes& a, SetRefFrameRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRefFrameRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRefFrameRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRefFrameRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRefFrameRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRefFrameRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRefFrameRes& from) {
    SetRefFrameRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRefFrameRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetRefFrameRes";
  }
  protected:
  explicit SetRefFrameRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetRefFrameRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 53, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetRefFramePlanarReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq) */ {
 public:
  inline SetRefFramePlanarReq() : SetRefFramePlanarReq(nullptr) {}
  ~SetRefFramePlanarReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRefFramePlanarReq(::google::protobuf::internal::ConstantInitialized);

  SetRefFramePlanarReq(const SetRefFramePlanarReq& from);
  SetRefFramePlanarReq(SetRefFramePlanarReq&& from) noexcept
    : SetRefFramePlanarReq() {
    *this = ::std::move(from);
  }

  inline SetRefFramePlanarReq& operator=(const SetRefFramePlanarReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRefFramePlanarReq& operator=(SetRefFramePlanarReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRefFramePlanarReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRefFramePlanarReq* internal_default_instance() {
    return reinterpret_cast<const SetRefFramePlanarReq*>(
               &_SetRefFramePlanarReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    167;

  friend void swap(SetRefFramePlanarReq& a, SetRefFramePlanarReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRefFramePlanarReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRefFramePlanarReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRefFramePlanarReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRefFramePlanarReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRefFramePlanarReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRefFramePlanarReq& from) {
    SetRefFramePlanarReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRefFramePlanarReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetRefFramePlanarReq";
  }
  protected:
  explicit SetRefFramePlanarReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTpos0FieldNumber = 1,
    kTpos1FieldNumber = 2,
    kTpos2FieldNumber = 3,
  };
  // repeated float tpos0 = 1;
  int tpos0_size() const;
  private:
  int _internal_tpos0_size() const;

  public:
  void clear_tpos0() ;
  float tpos0(int index) const;
  void set_tpos0(int index, float value);
  void add_tpos0(float value);
  const ::google::protobuf::RepeatedField<float>& tpos0() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos0();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos0() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos0();

  public:
  // repeated float tpos1 = 2;
  int tpos1_size() const;
  private:
  int _internal_tpos1_size() const;

  public:
  void clear_tpos1() ;
  float tpos1(int index) const;
  void set_tpos1(int index, float value);
  void add_tpos1(float value);
  const ::google::protobuf::RepeatedField<float>& tpos1() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos1();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos1() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos1();

  public:
  // repeated float tpos2 = 3;
  int tpos2_size() const;
  private:
  int _internal_tpos2_size() const;

  public:
  void clear_tpos2() ;
  float tpos2(int index) const;
  void set_tpos2(int index, float value);
  void add_tpos2(float value);
  const ::google::protobuf::RepeatedField<float>& tpos2() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos2();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos2() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos2();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> tpos0_;
    ::google::protobuf::RepeatedField<float> tpos1_;
    ::google::protobuf::RepeatedField<float> tpos2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetRefFramePlanarRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes) */ {
 public:
  inline SetRefFramePlanarRes() : SetRefFramePlanarRes(nullptr) {}
  ~SetRefFramePlanarRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRefFramePlanarRes(::google::protobuf::internal::ConstantInitialized);

  SetRefFramePlanarRes(const SetRefFramePlanarRes& from);
  SetRefFramePlanarRes(SetRefFramePlanarRes&& from) noexcept
    : SetRefFramePlanarRes() {
    *this = ::std::move(from);
  }

  inline SetRefFramePlanarRes& operator=(const SetRefFramePlanarRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRefFramePlanarRes& operator=(SetRefFramePlanarRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRefFramePlanarRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRefFramePlanarRes* internal_default_instance() {
    return reinterpret_cast<const SetRefFramePlanarRes*>(
               &_SetRefFramePlanarRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    168;

  friend void swap(SetRefFramePlanarRes& a, SetRefFramePlanarRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRefFramePlanarRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRefFramePlanarRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRefFramePlanarRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRefFramePlanarRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRefFramePlanarRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRefFramePlanarRes& from) {
    SetRefFramePlanarRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRefFramePlanarRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetRefFramePlanarRes";
  }
  protected:
  explicit SetRefFramePlanarRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRefFrameFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated float ref_frame = 1;
  int ref_frame_size() const;
  private:
  int _internal_ref_frame_size() const;

  public:
  void clear_ref_frame() ;
  float ref_frame(int index) const;
  void set_ref_frame(int index, float value);
  void add_ref_frame(float value);
  const ::google::protobuf::RepeatedField<float>& ref_frame() const;
  ::google::protobuf::RepeatedField<float>* mutable_ref_frame();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_ref_frame() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_ref_frame();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 59, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> ref_frame_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetToolFrameReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetToolFrameReq) */ {
 public:
  inline SetToolFrameReq() : SetToolFrameReq(nullptr) {}
  ~SetToolFrameReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetToolFrameReq(::google::protobuf::internal::ConstantInitialized);

  SetToolFrameReq(const SetToolFrameReq& from);
  SetToolFrameReq(SetToolFrameReq&& from) noexcept
    : SetToolFrameReq() {
    *this = ::std::move(from);
  }

  inline SetToolFrameReq& operator=(const SetToolFrameReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetToolFrameReq& operator=(SetToolFrameReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetToolFrameReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetToolFrameReq* internal_default_instance() {
    return reinterpret_cast<const SetToolFrameReq*>(
               &_SetToolFrameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    169;

  friend void swap(SetToolFrameReq& a, SetToolFrameReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetToolFrameReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetToolFrameReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetToolFrameReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetToolFrameReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetToolFrameReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetToolFrameReq& from) {
    SetToolFrameReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetToolFrameReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetToolFrameReq";
  }
  protected:
  explicit SetToolFrameReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolFrameFieldNumber = 1,
  };
  // repeated float tool_frame = 1;
  int tool_frame_size() const;
  private:
  int _internal_tool_frame_size() const;

  public:
  void clear_tool_frame() ;
  float tool_frame(int index) const;
  void set_tool_frame(int index, float value);
  void add_tool_frame(float value);
  const ::google::protobuf::RepeatedField<float>& tool_frame() const;
  ::google::protobuf::RepeatedField<float>* mutable_tool_frame();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tool_frame() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tool_frame();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetToolFrameReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> tool_frame_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetToolFrameRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetToolFrameRes) */ {
 public:
  inline SetToolFrameRes() : SetToolFrameRes(nullptr) {}
  ~SetToolFrameRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetToolFrameRes(::google::protobuf::internal::ConstantInitialized);

  SetToolFrameRes(const SetToolFrameRes& from);
  SetToolFrameRes(SetToolFrameRes&& from) noexcept
    : SetToolFrameRes() {
    *this = ::std::move(from);
  }

  inline SetToolFrameRes& operator=(const SetToolFrameRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetToolFrameRes& operator=(SetToolFrameRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetToolFrameRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetToolFrameRes* internal_default_instance() {
    return reinterpret_cast<const SetToolFrameRes*>(
               &_SetToolFrameRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    170;

  friend void swap(SetToolFrameRes& a, SetToolFrameRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetToolFrameRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetToolFrameRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetToolFrameRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetToolFrameRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetToolFrameRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetToolFrameRes& from) {
    SetToolFrameRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetToolFrameRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetToolFrameRes";
  }
  protected:
  explicit SetToolFrameRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetToolFrameRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSpeedRatioReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSpeedRatioReq) */ {
 public:
  inline SetSpeedRatioReq() : SetSpeedRatioReq(nullptr) {}
  ~SetSpeedRatioReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSpeedRatioReq(::google::protobuf::internal::ConstantInitialized);

  SetSpeedRatioReq(const SetSpeedRatioReq& from);
  SetSpeedRatioReq(SetSpeedRatioReq&& from) noexcept
    : SetSpeedRatioReq() {
    *this = ::std::move(from);
  }

  inline SetSpeedRatioReq& operator=(const SetSpeedRatioReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSpeedRatioReq& operator=(SetSpeedRatioReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSpeedRatioReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSpeedRatioReq* internal_default_instance() {
    return reinterpret_cast<const SetSpeedRatioReq*>(
               &_SetSpeedRatioReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    171;

  friend void swap(SetSpeedRatioReq& a, SetSpeedRatioReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSpeedRatioReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSpeedRatioReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSpeedRatioReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSpeedRatioReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSpeedRatioReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSpeedRatioReq& from) {
    SetSpeedRatioReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSpeedRatioReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSpeedRatioReq";
  }
  protected:
  explicit SetSpeedRatioReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRatioFieldNumber = 1,
  };
  // int32 ratio = 1;
  void clear_ratio() ;
  ::int32_t ratio() const;
  void set_ratio(::int32_t value);

  private:
  ::int32_t _internal_ratio() const;
  void _internal_set_ratio(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSpeedRatioReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t ratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSpeedRatioRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSpeedRatioRes) */ {
 public:
  inline SetSpeedRatioRes() : SetSpeedRatioRes(nullptr) {}
  ~SetSpeedRatioRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSpeedRatioRes(::google::protobuf::internal::ConstantInitialized);

  SetSpeedRatioRes(const SetSpeedRatioRes& from);
  SetSpeedRatioRes(SetSpeedRatioRes&& from) noexcept
    : SetSpeedRatioRes() {
    *this = ::std::move(from);
  }

  inline SetSpeedRatioRes& operator=(const SetSpeedRatioRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSpeedRatioRes& operator=(SetSpeedRatioRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSpeedRatioRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSpeedRatioRes* internal_default_instance() {
    return reinterpret_cast<const SetSpeedRatioRes*>(
               &_SetSpeedRatioRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    172;

  friend void swap(SetSpeedRatioRes& a, SetSpeedRatioRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSpeedRatioRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSpeedRatioRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSpeedRatioRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSpeedRatioRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSpeedRatioRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSpeedRatioRes& from) {
    SetSpeedRatioRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSpeedRatioRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSpeedRatioRes";
  }
  protected:
  explicit SetSpeedRatioRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSpeedRatioRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class BrakeControlStyle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.BrakeControlStyle) */ {
 public:
  inline BrakeControlStyle() : BrakeControlStyle(nullptr) {}
  ~BrakeControlStyle() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BrakeControlStyle(::google::protobuf::internal::ConstantInitialized);

  BrakeControlStyle(const BrakeControlStyle& from);
  BrakeControlStyle(BrakeControlStyle&& from) noexcept
    : BrakeControlStyle() {
    *this = ::std::move(from);
  }

  inline BrakeControlStyle& operator=(const BrakeControlStyle& from) {
    CopyFrom(from);
    return *this;
  }
  inline BrakeControlStyle& operator=(BrakeControlStyle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BrakeControlStyle& default_instance() {
    return *internal_default_instance();
  }
  static inline const BrakeControlStyle* internal_default_instance() {
    return reinterpret_cast<const BrakeControlStyle*>(
               &_BrakeControlStyle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    173;

  friend void swap(BrakeControlStyle& a, BrakeControlStyle& b) {
    a.Swap(&b);
  }
  inline void Swap(BrakeControlStyle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BrakeControlStyle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BrakeControlStyle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BrakeControlStyle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BrakeControlStyle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BrakeControlStyle& from) {
    BrakeControlStyle::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BrakeControlStyle* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.BrakeControlStyle";
  }
  protected:
  explicit BrakeControlStyle(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ControlStyle = BrakeControlStyle_ControlStyle;
  static constexpr ControlStyle UNAVAILABLE = BrakeControlStyle_ControlStyle_UNAVAILABLE;
  static constexpr ControlStyle CONCURRENT = BrakeControlStyle_ControlStyle_CONCURRENT;
  static constexpr ControlStyle INDIVIDUAL = BrakeControlStyle_ControlStyle_INDIVIDUAL;
  static inline bool ControlStyle_IsValid(int value) {
    return BrakeControlStyle_ControlStyle_IsValid(value);
  }
  static constexpr ControlStyle ControlStyle_MIN = BrakeControlStyle_ControlStyle_ControlStyle_MIN;
  static constexpr ControlStyle ControlStyle_MAX = BrakeControlStyle_ControlStyle_ControlStyle_MAX;
  static constexpr int ControlStyle_ARRAYSIZE = BrakeControlStyle_ControlStyle_ControlStyle_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ControlStyle_descriptor() {
    return BrakeControlStyle_ControlStyle_descriptor();
  }
  template <typename T>
  static inline const std::string& ControlStyle_Name(T value) {
    return BrakeControlStyle_ControlStyle_Name(value);
  }
  static inline bool ControlStyle_Parse(absl::string_view name, ControlStyle* value) {
    return BrakeControlStyle_ControlStyle_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 100,
    kStyleFieldNumber = 1,
  };
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // .IndyFramework.Protobuf.HRI.BrakeControlStyle.ControlStyle style = 1;
  void clear_style() ;
  ::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle style() const;
  void set_style(::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle value);

  private:
  ::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle _internal_style() const;
  void _internal_set_style(::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.BrakeControlStyle)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    int style_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetBrakeReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetBrakeReq) */ {
 public:
  inline SetBrakeReq() : SetBrakeReq(nullptr) {}
  ~SetBrakeReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetBrakeReq(::google::protobuf::internal::ConstantInitialized);

  SetBrakeReq(const SetBrakeReq& from);
  SetBrakeReq(SetBrakeReq&& from) noexcept
    : SetBrakeReq() {
    *this = ::std::move(from);
  }

  inline SetBrakeReq& operator=(const SetBrakeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBrakeReq& operator=(SetBrakeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetBrakeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBrakeReq* internal_default_instance() {
    return reinterpret_cast<const SetBrakeReq*>(
               &_SetBrakeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    174;

  friend void swap(SetBrakeReq& a, SetBrakeReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBrakeReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBrakeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetBrakeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetBrakeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetBrakeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetBrakeReq& from) {
    SetBrakeReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBrakeReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetBrakeReq";
  }
  protected:
  explicit SetBrakeReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnFieldNumber = 1,
  };
  // repeated bool on = 1;
  int on_size() const;
  private:
  int _internal_on_size() const;

  public:
  void clear_on() ;
  bool on(int index) const;
  void set_on(int index, bool value);
  void add_on(bool value);
  const ::google::protobuf::RepeatedField<bool>& on() const;
  ::google::protobuf::RepeatedField<bool>* mutable_on();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_on() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_on();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetBrakeReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<bool> on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetBrakeRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetBrakeRes) */ {
 public:
  inline SetBrakeRes() : SetBrakeRes(nullptr) {}
  ~SetBrakeRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetBrakeRes(::google::protobuf::internal::ConstantInitialized);

  SetBrakeRes(const SetBrakeRes& from);
  SetBrakeRes(SetBrakeRes&& from) noexcept
    : SetBrakeRes() {
    *this = ::std::move(from);
  }

  inline SetBrakeRes& operator=(const SetBrakeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBrakeRes& operator=(SetBrakeRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetBrakeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBrakeRes* internal_default_instance() {
    return reinterpret_cast<const SetBrakeRes*>(
               &_SetBrakeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    175;

  friend void swap(SetBrakeRes& a, SetBrakeRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBrakeRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBrakeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetBrakeRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetBrakeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetBrakeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetBrakeRes& from) {
    SetBrakeRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBrakeRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetBrakeRes";
  }
  protected:
  explicit SetBrakeRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetBrakeRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 50, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetServoReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetServoReq) */ {
 public:
  inline SetServoReq() : SetServoReq(nullptr) {}
  ~SetServoReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetServoReq(::google::protobuf::internal::ConstantInitialized);

  SetServoReq(const SetServoReq& from);
  SetServoReq(SetServoReq&& from) noexcept
    : SetServoReq() {
    *this = ::std::move(from);
  }

  inline SetServoReq& operator=(const SetServoReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetServoReq& operator=(SetServoReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetServoReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetServoReq* internal_default_instance() {
    return reinterpret_cast<const SetServoReq*>(
               &_SetServoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    176;

  friend void swap(SetServoReq& a, SetServoReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetServoReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetServoReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetServoReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetServoReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetServoReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetServoReq& from) {
    SetServoReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetServoReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetServoReq";
  }
  protected:
  explicit SetServoReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnFieldNumber = 1,
  };
  // bool on = 1;
  void clear_on() ;
  bool on() const;
  void set_on(bool value);

  private:
  bool _internal_on() const;
  void _internal_set_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetServoReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetServoRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetServoRes) */ {
 public:
  inline SetServoRes() : SetServoRes(nullptr) {}
  ~SetServoRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetServoRes(::google::protobuf::internal::ConstantInitialized);

  SetServoRes(const SetServoRes& from);
  SetServoRes(SetServoRes&& from) noexcept
    : SetServoRes() {
    *this = ::std::move(from);
  }

  inline SetServoRes& operator=(const SetServoRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetServoRes& operator=(SetServoRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetServoRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetServoRes* internal_default_instance() {
    return reinterpret_cast<const SetServoRes*>(
               &_SetServoRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    177;

  friend void swap(SetServoRes& a, SetServoRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetServoRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetServoRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetServoRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetServoRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetServoRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetServoRes& from) {
    SetServoRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetServoRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetServoRes";
  }
  protected:
  explicit SetServoRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetServoRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 50, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetAutoServoOffReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetAutoServoOffReq) */ {
 public:
  inline SetAutoServoOffReq() : SetAutoServoOffReq(nullptr) {}
  ~SetAutoServoOffReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetAutoServoOffReq(::google::protobuf::internal::ConstantInitialized);

  SetAutoServoOffReq(const SetAutoServoOffReq& from);
  SetAutoServoOffReq(SetAutoServoOffReq&& from) noexcept
    : SetAutoServoOffReq() {
    *this = ::std::move(from);
  }

  inline SetAutoServoOffReq& operator=(const SetAutoServoOffReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetAutoServoOffReq& operator=(SetAutoServoOffReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetAutoServoOffReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetAutoServoOffReq* internal_default_instance() {
    return reinterpret_cast<const SetAutoServoOffReq*>(
               &_SetAutoServoOffReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    178;

  friend void swap(SetAutoServoOffReq& a, SetAutoServoOffReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetAutoServoOffReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetAutoServoOffReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetAutoServoOffReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetAutoServoOffReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetAutoServoOffReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetAutoServoOffReq& from) {
    SetAutoServoOffReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetAutoServoOffReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetAutoServoOffReq";
  }
  protected:
  explicit SetAutoServoOffReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableFieldNumber = 1,
    kTimeFieldNumber = 2,
  };
  // bool enable = 1;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // float time = 2;
  void clear_time() ;
  float time() const;
  void set_time(float value);

  private:
  float _internal_time() const;
  void _internal_set_time(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetAutoServoOffReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool enable_;
    float time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetAutoServoOffRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetAutoServoOffRes) */ {
 public:
  inline SetAutoServoOffRes() : SetAutoServoOffRes(nullptr) {}
  ~SetAutoServoOffRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetAutoServoOffRes(::google::protobuf::internal::ConstantInitialized);

  SetAutoServoOffRes(const SetAutoServoOffRes& from);
  SetAutoServoOffRes(SetAutoServoOffRes&& from) noexcept
    : SetAutoServoOffRes() {
    *this = ::std::move(from);
  }

  inline SetAutoServoOffRes& operator=(const SetAutoServoOffRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetAutoServoOffRes& operator=(SetAutoServoOffRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetAutoServoOffRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetAutoServoOffRes* internal_default_instance() {
    return reinterpret_cast<const SetAutoServoOffRes*>(
               &_SetAutoServoOffRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    179;

  friend void swap(SetAutoServoOffRes& a, SetAutoServoOffRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetAutoServoOffRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetAutoServoOffRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetAutoServoOffRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetAutoServoOffRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetAutoServoOffRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetAutoServoOffRes& from) {
    SetAutoServoOffRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetAutoServoOffRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetAutoServoOffRes";
  }
  protected:
  explicit SetAutoServoOffRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetAutoServoOffRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetAutoServoOffReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetAutoServoOffReq) */ {
 public:
  inline GetAutoServoOffReq() : GetAutoServoOffReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAutoServoOffReq(::google::protobuf::internal::ConstantInitialized);

  GetAutoServoOffReq(const GetAutoServoOffReq& from);
  GetAutoServoOffReq(GetAutoServoOffReq&& from) noexcept
    : GetAutoServoOffReq() {
    *this = ::std::move(from);
  }

  inline GetAutoServoOffReq& operator=(const GetAutoServoOffReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAutoServoOffReq& operator=(GetAutoServoOffReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAutoServoOffReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAutoServoOffReq* internal_default_instance() {
    return reinterpret_cast<const GetAutoServoOffReq*>(
               &_GetAutoServoOffReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    180;

  friend void swap(GetAutoServoOffReq& a, GetAutoServoOffReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAutoServoOffReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAutoServoOffReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAutoServoOffReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAutoServoOffReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetAutoServoOffReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetAutoServoOffReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetAutoServoOffReq";
  }
  protected:
  explicit GetAutoServoOffReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetAutoServoOffReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetAutoServoOffRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetAutoServoOffRes) */ {
 public:
  inline GetAutoServoOffRes() : GetAutoServoOffRes(nullptr) {}
  ~GetAutoServoOffRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAutoServoOffRes(::google::protobuf::internal::ConstantInitialized);

  GetAutoServoOffRes(const GetAutoServoOffRes& from);
  GetAutoServoOffRes(GetAutoServoOffRes&& from) noexcept
    : GetAutoServoOffRes() {
    *this = ::std::move(from);
  }

  inline GetAutoServoOffRes& operator=(const GetAutoServoOffRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAutoServoOffRes& operator=(GetAutoServoOffRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAutoServoOffRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAutoServoOffRes* internal_default_instance() {
    return reinterpret_cast<const GetAutoServoOffRes*>(
               &_GetAutoServoOffRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    181;

  friend void swap(GetAutoServoOffRes& a, GetAutoServoOffRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAutoServoOffRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAutoServoOffRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAutoServoOffRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAutoServoOffRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAutoServoOffRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAutoServoOffRes& from) {
    GetAutoServoOffRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAutoServoOffRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetAutoServoOffRes";
  }
  protected:
  explicit GetAutoServoOffRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kEnableFieldNumber = 1,
    kTimeFieldNumber = 2,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bool enable = 1;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // float time = 2;
  void clear_time() ;
  float time() const;
  void set_time(float value);

  private:
  float _internal_time() const;
  void _internal_set_time(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetAutoServoOffRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    bool enable_;
    float time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetModbusVarReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetModbusVarReq) */ {
 public:
  inline SetModbusVarReq() : SetModbusVarReq(nullptr) {}
  ~SetModbusVarReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetModbusVarReq(::google::protobuf::internal::ConstantInitialized);

  SetModbusVarReq(const SetModbusVarReq& from);
  SetModbusVarReq(SetModbusVarReq&& from) noexcept
    : SetModbusVarReq() {
    *this = ::std::move(from);
  }

  inline SetModbusVarReq& operator=(const SetModbusVarReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModbusVarReq& operator=(SetModbusVarReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModbusVarReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModbusVarReq* internal_default_instance() {
    return reinterpret_cast<const SetModbusVarReq*>(
               &_SetModbusVarReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    182;

  friend void swap(SetModbusVarReq& a, SetModbusVarReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetModbusVarReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModbusVarReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModbusVarReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetModbusVarReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetModbusVarReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetModbusVarReq& from) {
    SetModbusVarReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetModbusVarReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetModbusVarReq";
  }
  protected:
  explicit SetModbusVarReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // int32 addr = 1;
  void clear_addr() ;
  ::int32_t addr() const;
  void set_addr(::int32_t value);

  private:
  ::int32_t _internal_addr() const;
  void _internal_set_addr(::int32_t value);

  public:
  // int32 value = 2;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetModbusVarReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t addr_;
    ::int32_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetModbusVarRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetModbusVarRes) */ {
 public:
  inline SetModbusVarRes() : SetModbusVarRes(nullptr) {}
  ~SetModbusVarRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetModbusVarRes(::google::protobuf::internal::ConstantInitialized);

  SetModbusVarRes(const SetModbusVarRes& from);
  SetModbusVarRes(SetModbusVarRes&& from) noexcept
    : SetModbusVarRes() {
    *this = ::std::move(from);
  }

  inline SetModbusVarRes& operator=(const SetModbusVarRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModbusVarRes& operator=(SetModbusVarRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModbusVarRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModbusVarRes* internal_default_instance() {
    return reinterpret_cast<const SetModbusVarRes*>(
               &_SetModbusVarRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    183;

  friend void swap(SetModbusVarRes& a, SetModbusVarRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetModbusVarRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModbusVarRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModbusVarRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetModbusVarRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetModbusVarRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetModbusVarRes& from) {
    SetModbusVarRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetModbusVarRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetModbusVarRes";
  }
  protected:
  explicit SetModbusVarRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetModbusVarRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetVariableListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetVariableListReq) */ {
 public:
  inline GetVariableListReq() : GetVariableListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVariableListReq(::google::protobuf::internal::ConstantInitialized);

  GetVariableListReq(const GetVariableListReq& from);
  GetVariableListReq(GetVariableListReq&& from) noexcept
    : GetVariableListReq() {
    *this = ::std::move(from);
  }

  inline GetVariableListReq& operator=(const GetVariableListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVariableListReq& operator=(GetVariableListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVariableListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVariableListReq* internal_default_instance() {
    return reinterpret_cast<const GetVariableListReq*>(
               &_GetVariableListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    184;

  friend void swap(GetVariableListReq& a, GetVariableListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVariableListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVariableListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVariableListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVariableListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetVariableListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetVariableListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetVariableListReq";
  }
  protected:
  explicit GetVariableListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetVariableListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetVariableListRes_Variable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable) */ {
 public:
  inline GetVariableListRes_Variable() : GetVariableListRes_Variable(nullptr) {}
  ~GetVariableListRes_Variable() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVariableListRes_Variable(::google::protobuf::internal::ConstantInitialized);

  GetVariableListRes_Variable(const GetVariableListRes_Variable& from);
  GetVariableListRes_Variable(GetVariableListRes_Variable&& from) noexcept
    : GetVariableListRes_Variable() {
    *this = ::std::move(from);
  }

  inline GetVariableListRes_Variable& operator=(const GetVariableListRes_Variable& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVariableListRes_Variable& operator=(GetVariableListRes_Variable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVariableListRes_Variable& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVariableListRes_Variable* internal_default_instance() {
    return reinterpret_cast<const GetVariableListRes_Variable*>(
               &_GetVariableListRes_Variable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    185;

  friend void swap(GetVariableListRes_Variable& a, GetVariableListRes_Variable& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVariableListRes_Variable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVariableListRes_Variable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVariableListRes_Variable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVariableListRes_Variable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVariableListRes_Variable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetVariableListRes_Variable& from) {
    GetVariableListRes_Variable::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetVariableListRes_Variable* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetVariableListRes.Variable";
  }
  protected:
  explicit GetVariableListRes_Variable(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 14,
    kTposFieldNumber = 15,
    kNameFieldNumber = 1,
    kTypeFieldNumber = 3,
    kAddrFieldNumber = 2,
    kIvarFieldNumber = 10,
    kFvarFieldNumber = 11,
    kBvarFieldNumber = 12,
    kMvarFieldNumber = 13,
  };
  // repeated float jpos = 14;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // repeated float tpos = 15;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string type = 3;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // int32 addr = 2;
  void clear_addr() ;
  ::int32_t addr() const;
  void set_addr(::int32_t value);

  private:
  ::int32_t _internal_addr() const;
  void _internal_set_addr(::int32_t value);

  public:
  // int32 ivar = 10;
  void clear_ivar() ;
  ::int32_t ivar() const;
  void set_ivar(::int32_t value);

  private:
  ::int32_t _internal_ivar() const;
  void _internal_set_ivar(::int32_t value);

  public:
  // float fvar = 11;
  void clear_fvar() ;
  float fvar() const;
  void set_fvar(float value);

  private:
  float _internal_fvar() const;
  void _internal_set_fvar(float value);

  public:
  // bool bvar = 12;
  void clear_bvar() ;
  bool bvar() const;
  void set_bvar(bool value);

  private:
  bool _internal_bvar() const;
  void _internal_set_bvar(bool value);

  public:
  // int32 mvar = 13;
  void clear_mvar() ;
  ::int32_t mvar() const;
  void set_mvar(::int32_t value);

  private:
  ::int32_t _internal_mvar() const;
  void _internal_set_mvar(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 0, 79, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    ::google::protobuf::RepeatedField<float> tpos_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int32_t addr_;
    ::int32_t ivar_;
    float fvar_;
    bool bvar_;
    ::int32_t mvar_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetVariableListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetVariableListRes) */ {
 public:
  inline GetVariableListRes() : GetVariableListRes(nullptr) {}
  ~GetVariableListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVariableListRes(::google::protobuf::internal::ConstantInitialized);

  GetVariableListRes(const GetVariableListRes& from);
  GetVariableListRes(GetVariableListRes&& from) noexcept
    : GetVariableListRes() {
    *this = ::std::move(from);
  }

  inline GetVariableListRes& operator=(const GetVariableListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVariableListRes& operator=(GetVariableListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVariableListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVariableListRes* internal_default_instance() {
    return reinterpret_cast<const GetVariableListRes*>(
               &_GetVariableListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    186;

  friend void swap(GetVariableListRes& a, GetVariableListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVariableListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVariableListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVariableListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVariableListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVariableListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetVariableListRes& from) {
    GetVariableListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetVariableListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetVariableListRes";
  }
  protected:
  explicit GetVariableListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetVariableListRes_Variable Variable;

  // accessors -------------------------------------------------------

  enum : int {
    kVariablesFieldNumber = 4,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.HRI.GetVariableListRes.Variable variables = 4;
  int variables_size() const;
  private:
  int _internal_variables_size() const;

  public:
  void clear_variables() ;
  ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable* mutable_variables(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable >*
      mutable_variables();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable>& _internal_variables() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable>* _internal_mutable_variables();
  public:
  const ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable& variables(int index) const;
  ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable* add_variables();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable >&
      variables() const;
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetVariableListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2, 1, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable > variables_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetMonitoringVariableListReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetMonitoringVariableListReq) */ {
 public:
  inline GetMonitoringVariableListReq() : GetMonitoringVariableListReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMonitoringVariableListReq(::google::protobuf::internal::ConstantInitialized);

  GetMonitoringVariableListReq(const GetMonitoringVariableListReq& from);
  GetMonitoringVariableListReq(GetMonitoringVariableListReq&& from) noexcept
    : GetMonitoringVariableListReq() {
    *this = ::std::move(from);
  }

  inline GetMonitoringVariableListReq& operator=(const GetMonitoringVariableListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMonitoringVariableListReq& operator=(GetMonitoringVariableListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMonitoringVariableListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMonitoringVariableListReq* internal_default_instance() {
    return reinterpret_cast<const GetMonitoringVariableListReq*>(
               &_GetMonitoringVariableListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    187;

  friend void swap(GetMonitoringVariableListReq& a, GetMonitoringVariableListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMonitoringVariableListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMonitoringVariableListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMonitoringVariableListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMonitoringVariableListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetMonitoringVariableListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetMonitoringVariableListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetMonitoringVariableListReq";
  }
  protected:
  explicit GetMonitoringVariableListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetMonitoringVariableListReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetMonitoringVariableListRes_MonitorVariable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable) */ {
 public:
  inline GetMonitoringVariableListRes_MonitorVariable() : GetMonitoringVariableListRes_MonitorVariable(nullptr) {}
  ~GetMonitoringVariableListRes_MonitorVariable() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMonitoringVariableListRes_MonitorVariable(::google::protobuf::internal::ConstantInitialized);

  GetMonitoringVariableListRes_MonitorVariable(const GetMonitoringVariableListRes_MonitorVariable& from);
  GetMonitoringVariableListRes_MonitorVariable(GetMonitoringVariableListRes_MonitorVariable&& from) noexcept
    : GetMonitoringVariableListRes_MonitorVariable() {
    *this = ::std::move(from);
  }

  inline GetMonitoringVariableListRes_MonitorVariable& operator=(const GetMonitoringVariableListRes_MonitorVariable& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMonitoringVariableListRes_MonitorVariable& operator=(GetMonitoringVariableListRes_MonitorVariable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMonitoringVariableListRes_MonitorVariable& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMonitoringVariableListRes_MonitorVariable* internal_default_instance() {
    return reinterpret_cast<const GetMonitoringVariableListRes_MonitorVariable*>(
               &_GetMonitoringVariableListRes_MonitorVariable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    188;

  friend void swap(GetMonitoringVariableListRes_MonitorVariable& a, GetMonitoringVariableListRes_MonitorVariable& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMonitoringVariableListRes_MonitorVariable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMonitoringVariableListRes_MonitorVariable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMonitoringVariableListRes_MonitorVariable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMonitoringVariableListRes_MonitorVariable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMonitoringVariableListRes_MonitorVariable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetMonitoringVariableListRes_MonitorVariable& from) {
    GetMonitoringVariableListRes_MonitorVariable::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMonitoringVariableListRes_MonitorVariable* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable";
  }
  protected:
  explicit GetMonitoringVariableListRes_MonitorVariable(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 14,
    kTposFieldNumber = 15,
    kTypeFieldNumber = 2,
    kAddrFieldNumber = 1,
    kIvarFieldNumber = 10,
    kFvarFieldNumber = 11,
    kBvarFieldNumber = 12,
    kMvarFieldNumber = 13,
  };
  // repeated float jpos = 14;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // repeated float tpos = 15;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // string type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // int32 addr = 1;
  void clear_addr() ;
  ::int32_t addr() const;
  void set_addr(::int32_t value);

  private:
  ::int32_t _internal_addr() const;
  void _internal_set_addr(::int32_t value);

  public:
  // int32 ivar = 10;
  void clear_ivar() ;
  ::int32_t ivar() const;
  void set_ivar(::int32_t value);

  private:
  ::int32_t _internal_ivar() const;
  void _internal_set_ivar(::int32_t value);

  public:
  // float fvar = 11;
  void clear_fvar() ;
  float fvar() const;
  void set_fvar(float value);

  private:
  float _internal_fvar() const;
  void _internal_set_fvar(float value);

  public:
  // bool bvar = 12;
  void clear_bvar() ;
  bool bvar() const;
  void set_bvar(bool value);

  private:
  bool _internal_bvar() const;
  void _internal_set_bvar(bool value);

  public:
  // int32 mvar = 13;
  void clear_mvar() ;
  ::int32_t mvar() const;
  void set_mvar(::int32_t value);

  private:
  ::int32_t _internal_mvar() const;
  void _internal_set_mvar(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 8, 0, 92, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    ::google::protobuf::RepeatedField<float> tpos_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int32_t addr_;
    ::int32_t ivar_;
    float fvar_;
    bool bvar_;
    ::int32_t mvar_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetMonitoringVariableListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes) */ {
 public:
  inline GetMonitoringVariableListRes() : GetMonitoringVariableListRes(nullptr) {}
  ~GetMonitoringVariableListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMonitoringVariableListRes(::google::protobuf::internal::ConstantInitialized);

  GetMonitoringVariableListRes(const GetMonitoringVariableListRes& from);
  GetMonitoringVariableListRes(GetMonitoringVariableListRes&& from) noexcept
    : GetMonitoringVariableListRes() {
    *this = ::std::move(from);
  }

  inline GetMonitoringVariableListRes& operator=(const GetMonitoringVariableListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMonitoringVariableListRes& operator=(GetMonitoringVariableListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMonitoringVariableListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMonitoringVariableListRes* internal_default_instance() {
    return reinterpret_cast<const GetMonitoringVariableListRes*>(
               &_GetMonitoringVariableListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    189;

  friend void swap(GetMonitoringVariableListRes& a, GetMonitoringVariableListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMonitoringVariableListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMonitoringVariableListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMonitoringVariableListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMonitoringVariableListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMonitoringVariableListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetMonitoringVariableListRes& from) {
    GetMonitoringVariableListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMonitoringVariableListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes";
  }
  protected:
  explicit GetMonitoringVariableListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetMonitoringVariableListRes_MonitorVariable MonitorVariable;

  // accessors -------------------------------------------------------

  enum : int {
    kVariablesFieldNumber = 3,
    kMsgFieldNumber = 100,
  };
  // repeated .IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable variables = 3;
  int variables_size() const;
  private:
  int _internal_variables_size() const;

  public:
  void clear_variables() ;
  ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable* mutable_variables(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable >*
      mutable_variables();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable>& _internal_variables() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable>* _internal_mutable_variables();
  public:
  const ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable& variables(int index) const;
  ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable* add_variables();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable >&
      variables() const;
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 67, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable > variables_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetMonitoringVariableListReq_MonitorVariable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable) */ {
 public:
  inline SetMonitoringVariableListReq_MonitorVariable() : SetMonitoringVariableListReq_MonitorVariable(nullptr) {}
  ~SetMonitoringVariableListReq_MonitorVariable() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMonitoringVariableListReq_MonitorVariable(::google::protobuf::internal::ConstantInitialized);

  SetMonitoringVariableListReq_MonitorVariable(const SetMonitoringVariableListReq_MonitorVariable& from);
  SetMonitoringVariableListReq_MonitorVariable(SetMonitoringVariableListReq_MonitorVariable&& from) noexcept
    : SetMonitoringVariableListReq_MonitorVariable() {
    *this = ::std::move(from);
  }

  inline SetMonitoringVariableListReq_MonitorVariable& operator=(const SetMonitoringVariableListReq_MonitorVariable& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMonitoringVariableListReq_MonitorVariable& operator=(SetMonitoringVariableListReq_MonitorVariable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMonitoringVariableListReq_MonitorVariable& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMonitoringVariableListReq_MonitorVariable* internal_default_instance() {
    return reinterpret_cast<const SetMonitoringVariableListReq_MonitorVariable*>(
               &_SetMonitoringVariableListReq_MonitorVariable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    190;

  friend void swap(SetMonitoringVariableListReq_MonitorVariable& a, SetMonitoringVariableListReq_MonitorVariable& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMonitoringVariableListReq_MonitorVariable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMonitoringVariableListReq_MonitorVariable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMonitoringVariableListReq_MonitorVariable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMonitoringVariableListReq_MonitorVariable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMonitoringVariableListReq_MonitorVariable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMonitoringVariableListReq_MonitorVariable& from) {
    SetMonitoringVariableListReq_MonitorVariable::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMonitoringVariableListReq_MonitorVariable* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable";
  }
  protected:
  explicit SetMonitoringVariableListReq_MonitorVariable(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 14,
    kTposFieldNumber = 15,
    kTypeFieldNumber = 2,
    kAddrFieldNumber = 1,
    kIvarFieldNumber = 10,
    kFvarFieldNumber = 11,
    kBvarFieldNumber = 12,
    kMvarFieldNumber = 13,
  };
  // repeated float jpos = 14;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // repeated float tpos = 15;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // string type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // int32 addr = 1;
  void clear_addr() ;
  ::int32_t addr() const;
  void set_addr(::int32_t value);

  private:
  ::int32_t _internal_addr() const;
  void _internal_set_addr(::int32_t value);

  public:
  // int32 ivar = 10;
  void clear_ivar() ;
  ::int32_t ivar() const;
  void set_ivar(::int32_t value);

  private:
  ::int32_t _internal_ivar() const;
  void _internal_set_ivar(::int32_t value);

  public:
  // float fvar = 11;
  void clear_fvar() ;
  float fvar() const;
  void set_fvar(float value);

  private:
  float _internal_fvar() const;
  void _internal_set_fvar(float value);

  public:
  // bool bvar = 12;
  void clear_bvar() ;
  bool bvar() const;
  void set_bvar(bool value);

  private:
  bool _internal_bvar() const;
  void _internal_set_bvar(bool value);

  public:
  // int32 mvar = 13;
  void clear_mvar() ;
  ::int32_t mvar() const;
  void set_mvar(::int32_t value);

  private:
  ::int32_t _internal_mvar() const;
  void _internal_set_mvar(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 8, 0, 92, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    ::google::protobuf::RepeatedField<float> tpos_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int32_t addr_;
    ::int32_t ivar_;
    float fvar_;
    bool bvar_;
    ::int32_t mvar_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetMonitoringVariableListReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq) */ {
 public:
  inline SetMonitoringVariableListReq() : SetMonitoringVariableListReq(nullptr) {}
  ~SetMonitoringVariableListReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMonitoringVariableListReq(::google::protobuf::internal::ConstantInitialized);

  SetMonitoringVariableListReq(const SetMonitoringVariableListReq& from);
  SetMonitoringVariableListReq(SetMonitoringVariableListReq&& from) noexcept
    : SetMonitoringVariableListReq() {
    *this = ::std::move(from);
  }

  inline SetMonitoringVariableListReq& operator=(const SetMonitoringVariableListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMonitoringVariableListReq& operator=(SetMonitoringVariableListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMonitoringVariableListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMonitoringVariableListReq* internal_default_instance() {
    return reinterpret_cast<const SetMonitoringVariableListReq*>(
               &_SetMonitoringVariableListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    191;

  friend void swap(SetMonitoringVariableListReq& a, SetMonitoringVariableListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMonitoringVariableListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMonitoringVariableListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMonitoringVariableListReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMonitoringVariableListReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMonitoringVariableListReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMonitoringVariableListReq& from) {
    SetMonitoringVariableListReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMonitoringVariableListReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq";
  }
  protected:
  explicit SetMonitoringVariableListReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SetMonitoringVariableListReq_MonitorVariable MonitorVariable;

  // accessors -------------------------------------------------------

  enum : int {
    kVariablesFieldNumber = 3,
  };
  // repeated .IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable variables = 3;
  int variables_size() const;
  private:
  int _internal_variables_size() const;

  public:
  void clear_variables() ;
  ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable* mutable_variables(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable >*
      mutable_variables();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable>& _internal_variables() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable>* _internal_mutable_variables();
  public:
  const ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable& variables(int index) const;
  ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable* add_variables();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable >&
      variables() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable > variables_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetMonitoringVariableListRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes) */ {
 public:
  inline SetMonitoringVariableListRes() : SetMonitoringVariableListRes(nullptr) {}
  ~SetMonitoringVariableListRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMonitoringVariableListRes(::google::protobuf::internal::ConstantInitialized);

  SetMonitoringVariableListRes(const SetMonitoringVariableListRes& from);
  SetMonitoringVariableListRes(SetMonitoringVariableListRes&& from) noexcept
    : SetMonitoringVariableListRes() {
    *this = ::std::move(from);
  }

  inline SetMonitoringVariableListRes& operator=(const SetMonitoringVariableListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMonitoringVariableListRes& operator=(SetMonitoringVariableListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMonitoringVariableListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMonitoringVariableListRes* internal_default_instance() {
    return reinterpret_cast<const SetMonitoringVariableListRes*>(
               &_SetMonitoringVariableListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    192;

  friend void swap(SetMonitoringVariableListRes& a, SetMonitoringVariableListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMonitoringVariableListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMonitoringVariableListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMonitoringVariableListRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMonitoringVariableListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMonitoringVariableListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMonitoringVariableListRes& from) {
    SetMonitoringVariableListRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMonitoringVariableListRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes";
  }
  protected:
  explicit SetMonitoringVariableListRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 67, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class InverseKinematicsReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.InverseKinematicsReq) */ {
 public:
  inline InverseKinematicsReq() : InverseKinematicsReq(nullptr) {}
  ~InverseKinematicsReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InverseKinematicsReq(::google::protobuf::internal::ConstantInitialized);

  InverseKinematicsReq(const InverseKinematicsReq& from);
  InverseKinematicsReq(InverseKinematicsReq&& from) noexcept
    : InverseKinematicsReq() {
    *this = ::std::move(from);
  }

  inline InverseKinematicsReq& operator=(const InverseKinematicsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline InverseKinematicsReq& operator=(InverseKinematicsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InverseKinematicsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const InverseKinematicsReq* internal_default_instance() {
    return reinterpret_cast<const InverseKinematicsReq*>(
               &_InverseKinematicsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    193;

  friend void swap(InverseKinematicsReq& a, InverseKinematicsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(InverseKinematicsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InverseKinematicsReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InverseKinematicsReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InverseKinematicsReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InverseKinematicsReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InverseKinematicsReq& from) {
    InverseKinematicsReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InverseKinematicsReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.InverseKinematicsReq";
  }
  protected:
  explicit InverseKinematicsReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTposFieldNumber = 1,
    kInitJposFieldNumber = 2,
  };
  // repeated float tpos = 1;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // repeated float init_jpos = 2;
  int init_jpos_size() const;
  private:
  int _internal_init_jpos_size() const;

  public:
  void clear_init_jpos() ;
  float init_jpos(int index) const;
  void set_init_jpos(int index, float value);
  void add_init_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& init_jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_init_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_init_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_init_jpos();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.InverseKinematicsReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> tpos_;
    ::google::protobuf::RepeatedField<float> init_jpos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class InverseKinematicsRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.InverseKinematicsRes) */ {
 public:
  inline InverseKinematicsRes() : InverseKinematicsRes(nullptr) {}
  ~InverseKinematicsRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InverseKinematicsRes(::google::protobuf::internal::ConstantInitialized);

  InverseKinematicsRes(const InverseKinematicsRes& from);
  InverseKinematicsRes(InverseKinematicsRes&& from) noexcept
    : InverseKinematicsRes() {
    *this = ::std::move(from);
  }

  inline InverseKinematicsRes& operator=(const InverseKinematicsRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline InverseKinematicsRes& operator=(InverseKinematicsRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InverseKinematicsRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const InverseKinematicsRes* internal_default_instance() {
    return reinterpret_cast<const InverseKinematicsRes*>(
               &_InverseKinematicsRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    194;

  friend void swap(InverseKinematicsRes& a, InverseKinematicsRes& b) {
    a.Swap(&b);
  }
  inline void Swap(InverseKinematicsRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InverseKinematicsRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InverseKinematicsRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InverseKinematicsRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InverseKinematicsRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InverseKinematicsRes& from) {
    InverseKinematicsRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InverseKinematicsRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.InverseKinematicsRes";
  }
  protected:
  explicit InverseKinematicsRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated float jpos = 1;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.InverseKinematicsRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 59, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CalculateRelativePoseReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq) */ {
 public:
  inline CalculateRelativePoseReq() : CalculateRelativePoseReq(nullptr) {}
  ~CalculateRelativePoseReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CalculateRelativePoseReq(::google::protobuf::internal::ConstantInitialized);

  CalculateRelativePoseReq(const CalculateRelativePoseReq& from);
  CalculateRelativePoseReq(CalculateRelativePoseReq&& from) noexcept
    : CalculateRelativePoseReq() {
    *this = ::std::move(from);
  }

  inline CalculateRelativePoseReq& operator=(const CalculateRelativePoseReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculateRelativePoseReq& operator=(CalculateRelativePoseReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculateRelativePoseReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculateRelativePoseReq* internal_default_instance() {
    return reinterpret_cast<const CalculateRelativePoseReq*>(
               &_CalculateRelativePoseReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    195;

  friend void swap(CalculateRelativePoseReq& a, CalculateRelativePoseReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CalculateRelativePoseReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculateRelativePoseReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculateRelativePoseReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CalculateRelativePoseReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculateRelativePoseReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CalculateRelativePoseReq& from) {
    CalculateRelativePoseReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalculateRelativePoseReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CalculateRelativePoseReq";
  }
  protected:
  explicit CalculateRelativePoseReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartPosFieldNumber = 1,
    kEndPosFieldNumber = 2,
    kBaseTypeFieldNumber = 3,
  };
  // repeated float start_pos = 1;
  int start_pos_size() const;
  private:
  int _internal_start_pos_size() const;

  public:
  void clear_start_pos() ;
  float start_pos(int index) const;
  void set_start_pos(int index, float value);
  void add_start_pos(float value);
  const ::google::protobuf::RepeatedField<float>& start_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_start_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_start_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_start_pos();

  public:
  // repeated float end_pos = 2;
  int end_pos_size() const;
  private:
  int _internal_end_pos_size() const;

  public:
  void clear_end_pos() ;
  float end_pos(int index) const;
  void set_end_pos(int index, float value);
  void add_end_pos(float value);
  const ::google::protobuf::RepeatedField<float>& end_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_end_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_end_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_end_pos();

  public:
  // .IndyFramework.Protobuf.Shared.TaskBaseType base_type = 3;
  void clear_base_type() ;
  ::IndyFramework::Protobuf::Shared::TaskBaseType base_type() const;
  void set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value);

  private:
  ::IndyFramework::Protobuf::Shared::TaskBaseType _internal_base_type() const;
  void _internal_set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> start_pos_;
    ::google::protobuf::RepeatedField<float> end_pos_;
    int base_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CalculateRelativePoseRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes) */ {
 public:
  inline CalculateRelativePoseRes() : CalculateRelativePoseRes(nullptr) {}
  ~CalculateRelativePoseRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CalculateRelativePoseRes(::google::protobuf::internal::ConstantInitialized);

  CalculateRelativePoseRes(const CalculateRelativePoseRes& from);
  CalculateRelativePoseRes(CalculateRelativePoseRes&& from) noexcept
    : CalculateRelativePoseRes() {
    *this = ::std::move(from);
  }

  inline CalculateRelativePoseRes& operator=(const CalculateRelativePoseRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculateRelativePoseRes& operator=(CalculateRelativePoseRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculateRelativePoseRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculateRelativePoseRes* internal_default_instance() {
    return reinterpret_cast<const CalculateRelativePoseRes*>(
               &_CalculateRelativePoseRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    196;

  friend void swap(CalculateRelativePoseRes& a, CalculateRelativePoseRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CalculateRelativePoseRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculateRelativePoseRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculateRelativePoseRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CalculateRelativePoseRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculateRelativePoseRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CalculateRelativePoseRes& from) {
    CalculateRelativePoseRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalculateRelativePoseRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CalculateRelativePoseRes";
  }
  protected:
  explicit CalculateRelativePoseRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRelativePosFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated float relative_pos = 1;
  int relative_pos_size() const;
  private:
  int _internal_relative_pos_size() const;

  public:
  void clear_relative_pos() ;
  float relative_pos(int index) const;
  void set_relative_pos(int index, float value);
  void add_relative_pos(float value);
  const ::google::protobuf::RepeatedField<float>& relative_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_relative_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_relative_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_relative_pos();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 63, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> relative_pos_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CalculateCurrentPoseRelReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq) */ {
 public:
  inline CalculateCurrentPoseRelReq() : CalculateCurrentPoseRelReq(nullptr) {}
  ~CalculateCurrentPoseRelReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CalculateCurrentPoseRelReq(::google::protobuf::internal::ConstantInitialized);

  CalculateCurrentPoseRelReq(const CalculateCurrentPoseRelReq& from);
  CalculateCurrentPoseRelReq(CalculateCurrentPoseRelReq&& from) noexcept
    : CalculateCurrentPoseRelReq() {
    *this = ::std::move(from);
  }

  inline CalculateCurrentPoseRelReq& operator=(const CalculateCurrentPoseRelReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculateCurrentPoseRelReq& operator=(CalculateCurrentPoseRelReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculateCurrentPoseRelReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculateCurrentPoseRelReq* internal_default_instance() {
    return reinterpret_cast<const CalculateCurrentPoseRelReq*>(
               &_CalculateCurrentPoseRelReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    197;

  friend void swap(CalculateCurrentPoseRelReq& a, CalculateCurrentPoseRelReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CalculateCurrentPoseRelReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculateCurrentPoseRelReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculateCurrentPoseRelReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CalculateCurrentPoseRelReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculateCurrentPoseRelReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CalculateCurrentPoseRelReq& from) {
    CalculateCurrentPoseRelReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalculateCurrentPoseRelReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq";
  }
  protected:
  explicit CalculateCurrentPoseRelReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentPosFieldNumber = 1,
    kRelativePosFieldNumber = 2,
    kBaseTypeFieldNumber = 3,
  };
  // repeated float current_pos = 1;
  int current_pos_size() const;
  private:
  int _internal_current_pos_size() const;

  public:
  void clear_current_pos() ;
  float current_pos(int index) const;
  void set_current_pos(int index, float value);
  void add_current_pos(float value);
  const ::google::protobuf::RepeatedField<float>& current_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_current_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_current_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_current_pos();

  public:
  // repeated float relative_pos = 2;
  int relative_pos_size() const;
  private:
  int _internal_relative_pos_size() const;

  public:
  void clear_relative_pos() ;
  float relative_pos(int index) const;
  void set_relative_pos(int index, float value);
  void add_relative_pos(float value);
  const ::google::protobuf::RepeatedField<float>& relative_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_relative_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_relative_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_relative_pos();

  public:
  // .IndyFramework.Protobuf.Shared.TaskBaseType base_type = 3;
  void clear_base_type() ;
  ::IndyFramework::Protobuf::Shared::TaskBaseType base_type() const;
  void set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value);

  private:
  ::IndyFramework::Protobuf::Shared::TaskBaseType _internal_base_type() const;
  void _internal_set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> current_pos_;
    ::google::protobuf::RepeatedField<float> relative_pos_;
    int base_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CalculateCurrentPoseRelRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes) */ {
 public:
  inline CalculateCurrentPoseRelRes() : CalculateCurrentPoseRelRes(nullptr) {}
  ~CalculateCurrentPoseRelRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CalculateCurrentPoseRelRes(::google::protobuf::internal::ConstantInitialized);

  CalculateCurrentPoseRelRes(const CalculateCurrentPoseRelRes& from);
  CalculateCurrentPoseRelRes(CalculateCurrentPoseRelRes&& from) noexcept
    : CalculateCurrentPoseRelRes() {
    *this = ::std::move(from);
  }

  inline CalculateCurrentPoseRelRes& operator=(const CalculateCurrentPoseRelRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculateCurrentPoseRelRes& operator=(CalculateCurrentPoseRelRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculateCurrentPoseRelRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculateCurrentPoseRelRes* internal_default_instance() {
    return reinterpret_cast<const CalculateCurrentPoseRelRes*>(
               &_CalculateCurrentPoseRelRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    198;

  friend void swap(CalculateCurrentPoseRelRes& a, CalculateCurrentPoseRelRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CalculateCurrentPoseRelRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculateCurrentPoseRelRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculateCurrentPoseRelRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CalculateCurrentPoseRelRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculateCurrentPoseRelRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CalculateCurrentPoseRelRes& from) {
    CalculateCurrentPoseRelRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalculateCurrentPoseRelRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes";
  }
  protected:
  explicit CalculateCurrentPoseRelRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCalculatedPosFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated float calculated_pos = 1;
  int calculated_pos_size() const;
  private:
  int _internal_calculated_pos_size() const;

  public:
  void clear_calculated_pos() ;
  float calculated_pos(int index) const;
  void set_calculated_pos(int index, float value);
  void add_calculated_pos(float value);
  const ::google::protobuf::RepeatedField<float>& calculated_pos() const;
  ::google::protobuf::RepeatedField<float>* mutable_calculated_pos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_calculated_pos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_calculated_pos();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 65, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> calculated_pos_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DIConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.DIConfig) */ {
 public:
  inline DIConfig() : DIConfig(nullptr) {}
  ~DIConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DIConfig(::google::protobuf::internal::ConstantInitialized);

  DIConfig(const DIConfig& from);
  DIConfig(DIConfig&& from) noexcept
    : DIConfig() {
    *this = ::std::move(from);
  }

  inline DIConfig& operator=(const DIConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DIConfig& operator=(DIConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DIConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const DIConfig* internal_default_instance() {
    return reinterpret_cast<const DIConfig*>(
               &_DIConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    199;

  friend void swap(DIConfig& a, DIConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(DIConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DIConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DIConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DIConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DIConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DIConfig& from) {
    DIConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DIConfig* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.DIConfig";
  }
  protected:
  explicit DIConfig(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTriggerSignalsFieldNumber = 3,
    kSuccessSignalsFieldNumber = 4,
    kFailureSignalsFieldNumber = 5,
    kFunctionNameFieldNumber = 2,
    kFunctionCodeFieldNumber = 1,
  };
  // repeated .Nrmk.IndyFramework.DigitalSignal triggerSignals = 3;
  int triggersignals_size() const;
  private:
  int _internal_triggersignals_size() const;

  public:
  void clear_triggersignals() ;
  ::Nrmk::IndyFramework::DigitalSignal* mutable_triggersignals(int index);
  ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
      mutable_triggersignals();
  private:
  const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>& _internal_triggersignals() const;
  ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>* _internal_mutable_triggersignals();
  public:
  const ::Nrmk::IndyFramework::DigitalSignal& triggersignals(int index) const;
  ::Nrmk::IndyFramework::DigitalSignal* add_triggersignals();
  const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
      triggersignals() const;
  // repeated .Nrmk.IndyFramework.DigitalSignal successSignals = 4;
  int successsignals_size() const;
  private:
  int _internal_successsignals_size() const;

  public:
  void clear_successsignals() ;
  ::Nrmk::IndyFramework::DigitalSignal* mutable_successsignals(int index);
  ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
      mutable_successsignals();
  private:
  const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>& _internal_successsignals() const;
  ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>* _internal_mutable_successsignals();
  public:
  const ::Nrmk::IndyFramework::DigitalSignal& successsignals(int index) const;
  ::Nrmk::IndyFramework::DigitalSignal* add_successsignals();
  const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
      successsignals() const;
  // repeated .Nrmk.IndyFramework.DigitalSignal failureSignals = 5;
  int failuresignals_size() const;
  private:
  int _internal_failuresignals_size() const;

  public:
  void clear_failuresignals() ;
  ::Nrmk::IndyFramework::DigitalSignal* mutable_failuresignals(int index);
  ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
      mutable_failuresignals();
  private:
  const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>& _internal_failuresignals() const;
  ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>* _internal_mutable_failuresignals();
  public:
  const ::Nrmk::IndyFramework::DigitalSignal& failuresignals(int index) const;
  ::Nrmk::IndyFramework::DigitalSignal* add_failuresignals();
  const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
      failuresignals() const;
  // string function_name = 2;
  void clear_function_name() ;
  const std::string& function_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_function_name(Arg_&& arg, Args_... args);
  std::string* mutable_function_name();
  PROTOBUF_NODISCARD std::string* release_function_name();
  void set_allocated_function_name(std::string* ptr);

  private:
  const std::string& _internal_function_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_function_name(
      const std::string& value);
  std::string* _internal_mutable_function_name();

  public:
  // int32 function_code = 1;
  void clear_function_code() ;
  ::int32_t function_code() const;
  void set_function_code(::int32_t value);

  private:
  ::int32_t _internal_function_code() const;
  void _internal_set_function_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.DIConfig)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 3, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal > triggersignals_;
    ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal > successsignals_;
    ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal > failuresignals_;
    ::google::protobuf::internal::ArenaStringPtr function_name_;
    ::int32_t function_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DIConfigList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.DIConfigList) */ {
 public:
  inline DIConfigList() : DIConfigList(nullptr) {}
  ~DIConfigList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DIConfigList(::google::protobuf::internal::ConstantInitialized);

  DIConfigList(const DIConfigList& from);
  DIConfigList(DIConfigList&& from) noexcept
    : DIConfigList() {
    *this = ::std::move(from);
  }

  inline DIConfigList& operator=(const DIConfigList& from) {
    CopyFrom(from);
    return *this;
  }
  inline DIConfigList& operator=(DIConfigList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DIConfigList& default_instance() {
    return *internal_default_instance();
  }
  static inline const DIConfigList* internal_default_instance() {
    return reinterpret_cast<const DIConfigList*>(
               &_DIConfigList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    200;

  friend void swap(DIConfigList& a, DIConfigList& b) {
    a.Swap(&b);
  }
  inline void Swap(DIConfigList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DIConfigList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DIConfigList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DIConfigList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DIConfigList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DIConfigList& from) {
    DIConfigList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DIConfigList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.DIConfigList";
  }
  protected:
  explicit DIConfigList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDiConfigsFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.DIConfig di_configs = 1;
  int di_configs_size() const;
  private:
  int _internal_di_configs_size() const;

  public:
  void clear_di_configs() ;
  ::IndyFramework::Protobuf::HRI::DIConfig* mutable_di_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DIConfig >*
      mutable_di_configs();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DIConfig>& _internal_di_configs() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DIConfig>* _internal_mutable_di_configs();
  public:
  const ::IndyFramework::Protobuf::HRI::DIConfig& di_configs(int index) const;
  ::IndyFramework::Protobuf::HRI::DIConfig* add_di_configs();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DIConfig >&
      di_configs() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.DIConfigList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DIConfig > di_configs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DOConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.DOConfig) */ {
 public:
  inline DOConfig() : DOConfig(nullptr) {}
  ~DOConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DOConfig(::google::protobuf::internal::ConstantInitialized);

  DOConfig(const DOConfig& from);
  DOConfig(DOConfig&& from) noexcept
    : DOConfig() {
    *this = ::std::move(from);
  }

  inline DOConfig& operator=(const DOConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DOConfig& operator=(DOConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DOConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const DOConfig* internal_default_instance() {
    return reinterpret_cast<const DOConfig*>(
               &_DOConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    201;

  friend void swap(DOConfig& a, DOConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(DOConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DOConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DOConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DOConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DOConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DOConfig& from) {
    DOConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DOConfig* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.DOConfig";
  }
  protected:
  explicit DOConfig(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnSignalsFieldNumber = 3,
    kOffSignalsFieldNumber = 4,
    kStateNameFieldNumber = 2,
    kStateCodeFieldNumber = 1,
  };
  // repeated .Nrmk.IndyFramework.DigitalSignal onSignals = 3;
  int onsignals_size() const;
  private:
  int _internal_onsignals_size() const;

  public:
  void clear_onsignals() ;
  ::Nrmk::IndyFramework::DigitalSignal* mutable_onsignals(int index);
  ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
      mutable_onsignals();
  private:
  const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>& _internal_onsignals() const;
  ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>* _internal_mutable_onsignals();
  public:
  const ::Nrmk::IndyFramework::DigitalSignal& onsignals(int index) const;
  ::Nrmk::IndyFramework::DigitalSignal* add_onsignals();
  const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
      onsignals() const;
  // repeated .Nrmk.IndyFramework.DigitalSignal offSignals = 4;
  int offsignals_size() const;
  private:
  int _internal_offsignals_size() const;

  public:
  void clear_offsignals() ;
  ::Nrmk::IndyFramework::DigitalSignal* mutable_offsignals(int index);
  ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
      mutable_offsignals();
  private:
  const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>& _internal_offsignals() const;
  ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>* _internal_mutable_offsignals();
  public:
  const ::Nrmk::IndyFramework::DigitalSignal& offsignals(int index) const;
  ::Nrmk::IndyFramework::DigitalSignal* add_offsignals();
  const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
      offsignals() const;
  // string state_name = 2;
  void clear_state_name() ;
  const std::string& state_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state_name(Arg_&& arg, Args_... args);
  std::string* mutable_state_name();
  PROTOBUF_NODISCARD std::string* release_state_name();
  void set_allocated_state_name(std::string* ptr);

  private:
  const std::string& _internal_state_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_name(
      const std::string& value);
  std::string* _internal_mutable_state_name();

  public:
  // int32 state_code = 1;
  void clear_state_code() ;
  ::int32_t state_code() const;
  void set_state_code(::int32_t value);

  private:
  ::int32_t _internal_state_code() const;
  void _internal_set_state_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.DOConfig)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 2, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal > onsignals_;
    ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal > offsignals_;
    ::google::protobuf::internal::ArenaStringPtr state_name_;
    ::int32_t state_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DOConfigList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.DOConfigList) */ {
 public:
  inline DOConfigList() : DOConfigList(nullptr) {}
  ~DOConfigList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DOConfigList(::google::protobuf::internal::ConstantInitialized);

  DOConfigList(const DOConfigList& from);
  DOConfigList(DOConfigList&& from) noexcept
    : DOConfigList() {
    *this = ::std::move(from);
  }

  inline DOConfigList& operator=(const DOConfigList& from) {
    CopyFrom(from);
    return *this;
  }
  inline DOConfigList& operator=(DOConfigList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DOConfigList& default_instance() {
    return *internal_default_instance();
  }
  static inline const DOConfigList* internal_default_instance() {
    return reinterpret_cast<const DOConfigList*>(
               &_DOConfigList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    202;

  friend void swap(DOConfigList& a, DOConfigList& b) {
    a.Swap(&b);
  }
  inline void Swap(DOConfigList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DOConfigList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DOConfigList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DOConfigList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DOConfigList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DOConfigList& from) {
    DOConfigList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DOConfigList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.DOConfigList";
  }
  protected:
  explicit DOConfigList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoConfigsFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.DOConfig do_configs = 1;
  int do_configs_size() const;
  private:
  int _internal_do_configs_size() const;

  public:
  void clear_do_configs() ;
  ::IndyFramework::Protobuf::HRI::DOConfig* mutable_do_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DOConfig >*
      mutable_do_configs();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DOConfig>& _internal_do_configs() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DOConfig>* _internal_mutable_do_configs();
  public:
  const ::IndyFramework::Protobuf::HRI::DOConfig& do_configs(int index) const;
  ::IndyFramework::Protobuf::HRI::DOConfig* add_do_configs();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DOConfig >&
      do_configs() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.DOConfigList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DOConfig > do_configs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetAutoModeConfigRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes) */ {
 public:
  inline GetAutoModeConfigRes() : GetAutoModeConfigRes(nullptr) {}
  ~GetAutoModeConfigRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAutoModeConfigRes(::google::protobuf::internal::ConstantInitialized);

  GetAutoModeConfigRes(const GetAutoModeConfigRes& from);
  GetAutoModeConfigRes(GetAutoModeConfigRes&& from) noexcept
    : GetAutoModeConfigRes() {
    *this = ::std::move(from);
  }

  inline GetAutoModeConfigRes& operator=(const GetAutoModeConfigRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAutoModeConfigRes& operator=(GetAutoModeConfigRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAutoModeConfigRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAutoModeConfigRes* internal_default_instance() {
    return reinterpret_cast<const GetAutoModeConfigRes*>(
               &_GetAutoModeConfigRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    203;

  friend void swap(GetAutoModeConfigRes& a, GetAutoModeConfigRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAutoModeConfigRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAutoModeConfigRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAutoModeConfigRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAutoModeConfigRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAutoModeConfigRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAutoModeConfigRes& from) {
    GetAutoModeConfigRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAutoModeConfigRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetAutoModeConfigRes";
  }
  protected:
  explicit GetAutoModeConfigRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using AutoModeConfig = GetAutoModeConfigRes_AutoModeConfig;
  static constexpr AutoModeConfig AUTO_MODE_NOT_USED = GetAutoModeConfigRes_AutoModeConfig_AUTO_MODE_NOT_USED;
  static constexpr AutoModeConfig AUTO_MODE_BY_CONTY = GetAutoModeConfigRes_AutoModeConfig_AUTO_MODE_BY_CONTY;
  static constexpr AutoModeConfig AUTO_MODE_BY_INDYKEY = GetAutoModeConfigRes_AutoModeConfig_AUTO_MODE_BY_INDYKEY;
  static inline bool AutoModeConfig_IsValid(int value) {
    return GetAutoModeConfigRes_AutoModeConfig_IsValid(value);
  }
  static constexpr AutoModeConfig AutoModeConfig_MIN = GetAutoModeConfigRes_AutoModeConfig_AutoModeConfig_MIN;
  static constexpr AutoModeConfig AutoModeConfig_MAX = GetAutoModeConfigRes_AutoModeConfig_AutoModeConfig_MAX;
  static constexpr int AutoModeConfig_ARRAYSIZE = GetAutoModeConfigRes_AutoModeConfig_AutoModeConfig_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AutoModeConfig_descriptor() {
    return GetAutoModeConfigRes_AutoModeConfig_descriptor();
  }
  template <typename T>
  static inline const std::string& AutoModeConfig_Name(T value) {
    return GetAutoModeConfigRes_AutoModeConfig_Name(value);
  }
  static inline bool AutoModeConfig_Parse(absl::string_view name, AutoModeConfig* value) {
    return GetAutoModeConfigRes_AutoModeConfig_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kConfigFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // .IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.AutoModeConfig config = 1;
  void clear_config() ;
  ::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig config() const;
  void set_config(::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig value);

  private:
  ::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig _internal_config() const;
  void _internal_set_config(::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 59, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    int config_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetAutoModeReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetAutoModeReq) */ {
 public:
  inline SetAutoModeReq() : SetAutoModeReq(nullptr) {}
  ~SetAutoModeReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetAutoModeReq(::google::protobuf::internal::ConstantInitialized);

  SetAutoModeReq(const SetAutoModeReq& from);
  SetAutoModeReq(SetAutoModeReq&& from) noexcept
    : SetAutoModeReq() {
    *this = ::std::move(from);
  }

  inline SetAutoModeReq& operator=(const SetAutoModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetAutoModeReq& operator=(SetAutoModeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetAutoModeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetAutoModeReq* internal_default_instance() {
    return reinterpret_cast<const SetAutoModeReq*>(
               &_SetAutoModeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    204;

  friend void swap(SetAutoModeReq& a, SetAutoModeReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetAutoModeReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetAutoModeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetAutoModeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetAutoModeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetAutoModeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetAutoModeReq& from) {
    SetAutoModeReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetAutoModeReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetAutoModeReq";
  }
  protected:
  explicit SetAutoModeReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnFieldNumber = 1,
  };
  // bool on = 1;
  void clear_on() ;
  bool on() const;
  void set_on(bool value);

  private:
  bool _internal_on() const;
  void _internal_set_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetAutoModeReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetAutoModeRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetAutoModeRes) */ {
 public:
  inline SetAutoModeRes() : SetAutoModeRes(nullptr) {}
  ~SetAutoModeRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetAutoModeRes(::google::protobuf::internal::ConstantInitialized);

  SetAutoModeRes(const SetAutoModeRes& from);
  SetAutoModeRes(SetAutoModeRes&& from) noexcept
    : SetAutoModeRes() {
    *this = ::std::move(from);
  }

  inline SetAutoModeRes& operator=(const SetAutoModeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetAutoModeRes& operator=(SetAutoModeRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetAutoModeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetAutoModeRes* internal_default_instance() {
    return reinterpret_cast<const SetAutoModeRes*>(
               &_SetAutoModeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    205;

  friend void swap(SetAutoModeRes& a, SetAutoModeRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetAutoModeRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetAutoModeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetAutoModeRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetAutoModeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetAutoModeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetAutoModeRes& from) {
    SetAutoModeRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetAutoModeRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetAutoModeRes";
  }
  protected:
  explicit SetAutoModeRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetAutoModeRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 53, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CheckAutoModeRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CheckAutoModeRes) */ {
 public:
  inline CheckAutoModeRes() : CheckAutoModeRes(nullptr) {}
  ~CheckAutoModeRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckAutoModeRes(::google::protobuf::internal::ConstantInitialized);

  CheckAutoModeRes(const CheckAutoModeRes& from);
  CheckAutoModeRes(CheckAutoModeRes&& from) noexcept
    : CheckAutoModeRes() {
    *this = ::std::move(from);
  }

  inline CheckAutoModeRes& operator=(const CheckAutoModeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckAutoModeRes& operator=(CheckAutoModeRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckAutoModeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckAutoModeRes* internal_default_instance() {
    return reinterpret_cast<const CheckAutoModeRes*>(
               &_CheckAutoModeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    206;

  friend void swap(CheckAutoModeRes& a, CheckAutoModeRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckAutoModeRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckAutoModeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckAutoModeRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckAutoModeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckAutoModeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckAutoModeRes& from) {
    CheckAutoModeRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckAutoModeRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CheckAutoModeRes";
  }
  protected:
  explicit CheckAutoModeRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kOnFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bool on = 1;
  void clear_on() ;
  bool on() const;
  void set_on(bool value);

  private:
  bool _internal_on() const;
  void _internal_set_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CheckAutoModeRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 55, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    bool on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CheckReducedModeRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CheckReducedModeRes) */ {
 public:
  inline CheckReducedModeRes() : CheckReducedModeRes(nullptr) {}
  ~CheckReducedModeRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckReducedModeRes(::google::protobuf::internal::ConstantInitialized);

  CheckReducedModeRes(const CheckReducedModeRes& from);
  CheckReducedModeRes(CheckReducedModeRes&& from) noexcept
    : CheckReducedModeRes() {
    *this = ::std::move(from);
  }

  inline CheckReducedModeRes& operator=(const CheckReducedModeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckReducedModeRes& operator=(CheckReducedModeRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckReducedModeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckReducedModeRes* internal_default_instance() {
    return reinterpret_cast<const CheckReducedModeRes*>(
               &_CheckReducedModeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    207;

  friend void swap(CheckReducedModeRes& a, CheckReducedModeRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckReducedModeRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckReducedModeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckReducedModeRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckReducedModeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckReducedModeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckReducedModeRes& from) {
    CheckReducedModeRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckReducedModeRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CheckReducedModeRes";
  }
  protected:
  explicit CheckReducedModeRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kOnFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bool on = 1;
  void clear_on() ;
  bool on() const;
  void set_on(bool value);

  private:
  bool _internal_on() const;
  void _internal_set_on(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CheckReducedModeRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 58, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    bool on_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetReducedRatioRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetReducedRatioRes) */ {
 public:
  inline GetReducedRatioRes() : GetReducedRatioRes(nullptr) {}
  ~GetReducedRatioRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetReducedRatioRes(::google::protobuf::internal::ConstantInitialized);

  GetReducedRatioRes(const GetReducedRatioRes& from);
  GetReducedRatioRes(GetReducedRatioRes&& from) noexcept
    : GetReducedRatioRes() {
    *this = ::std::move(from);
  }

  inline GetReducedRatioRes& operator=(const GetReducedRatioRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReducedRatioRes& operator=(GetReducedRatioRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReducedRatioRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReducedRatioRes* internal_default_instance() {
    return reinterpret_cast<const GetReducedRatioRes*>(
               &_GetReducedRatioRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    208;

  friend void swap(GetReducedRatioRes& a, GetReducedRatioRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReducedRatioRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReducedRatioRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetReducedRatioRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetReducedRatioRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetReducedRatioRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetReducedRatioRes& from) {
    GetReducedRatioRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReducedRatioRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetReducedRatioRes";
  }
  protected:
  explicit GetReducedRatioRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kRatioFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // float ratio = 1;
  void clear_ratio() ;
  float ratio() const;
  void set_ratio(float value);

  private:
  float _internal_ratio() const;
  void _internal_set_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetReducedRatioRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    float ratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetReducedSpeedRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetReducedSpeedRes) */ {
 public:
  inline GetReducedSpeedRes() : GetReducedSpeedRes(nullptr) {}
  ~GetReducedSpeedRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetReducedSpeedRes(::google::protobuf::internal::ConstantInitialized);

  GetReducedSpeedRes(const GetReducedSpeedRes& from);
  GetReducedSpeedRes(GetReducedSpeedRes&& from) noexcept
    : GetReducedSpeedRes() {
    *this = ::std::move(from);
  }

  inline GetReducedSpeedRes& operator=(const GetReducedSpeedRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReducedSpeedRes& operator=(GetReducedSpeedRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReducedSpeedRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReducedSpeedRes* internal_default_instance() {
    return reinterpret_cast<const GetReducedSpeedRes*>(
               &_GetReducedSpeedRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    209;

  friend void swap(GetReducedSpeedRes& a, GetReducedSpeedRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReducedSpeedRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReducedSpeedRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetReducedSpeedRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetReducedSpeedRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetReducedSpeedRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetReducedSpeedRes& from) {
    GetReducedSpeedRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReducedSpeedRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetReducedSpeedRes";
  }
  protected:
  explicit GetReducedSpeedRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kSpeedFieldNumber = 1,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // float speed = 1;
  void clear_speed() ;
  float speed() const;
  void set_speed(float value);

  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetReducedSpeedRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 57, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    float speed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetReducedSpeedReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetReducedSpeedReq) */ {
 public:
  inline SetReducedSpeedReq() : SetReducedSpeedReq(nullptr) {}
  ~SetReducedSpeedReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetReducedSpeedReq(::google::protobuf::internal::ConstantInitialized);

  SetReducedSpeedReq(const SetReducedSpeedReq& from);
  SetReducedSpeedReq(SetReducedSpeedReq&& from) noexcept
    : SetReducedSpeedReq() {
    *this = ::std::move(from);
  }

  inline SetReducedSpeedReq& operator=(const SetReducedSpeedReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetReducedSpeedReq& operator=(SetReducedSpeedReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetReducedSpeedReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetReducedSpeedReq* internal_default_instance() {
    return reinterpret_cast<const SetReducedSpeedReq*>(
               &_SetReducedSpeedReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    210;

  friend void swap(SetReducedSpeedReq& a, SetReducedSpeedReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetReducedSpeedReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetReducedSpeedReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetReducedSpeedReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetReducedSpeedReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetReducedSpeedReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetReducedSpeedReq& from) {
    SetReducedSpeedReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetReducedSpeedReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetReducedSpeedReq";
  }
  protected:
  explicit SetReducedSpeedReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpeedFieldNumber = 1,
  };
  // float speed = 1;
  void clear_speed() ;
  float speed() const;
  void set_speed(float value);

  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetReducedSpeedReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float speed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class StopState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.StopState) */ {
 public:
  inline StopState() : StopState(nullptr) {}
  ~StopState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopState(::google::protobuf::internal::ConstantInitialized);

  StopState(const StopState& from);
  StopState(StopState&& from) noexcept
    : StopState() {
    *this = ::std::move(from);
  }

  inline StopState& operator=(const StopState& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopState& operator=(StopState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopState& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopState* internal_default_instance() {
    return reinterpret_cast<const StopState*>(
               &_StopState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    211;

  friend void swap(StopState& a, StopState& b) {
    a.Swap(&b);
  }
  inline void Swap(StopState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StopState& from) {
    StopState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.StopState";
  }
  protected:
  explicit StopState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using StopCategory = StopState_StopCategory;
  static constexpr StopCategory STOP_CAT_0 = StopState_StopCategory_STOP_CAT_0;
  static constexpr StopCategory STOP_CAT_1 = StopState_StopCategory_STOP_CAT_1;
  static constexpr StopCategory STOP_CAT_2 = StopState_StopCategory_STOP_CAT_2;
  static constexpr StopCategory STOP_CAT_NONE = StopState_StopCategory_STOP_CAT_NONE;
  static inline bool StopCategory_IsValid(int value) {
    return StopState_StopCategory_IsValid(value);
  }
  static constexpr StopCategory StopCategory_MIN = StopState_StopCategory_StopCategory_MIN;
  static constexpr StopCategory StopCategory_MAX = StopState_StopCategory_StopCategory_MAX;
  static constexpr int StopCategory_ARRAYSIZE = StopState_StopCategory_StopCategory_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* StopCategory_descriptor() {
    return StopState_StopCategory_descriptor();
  }
  template <typename T>
  static inline const std::string& StopCategory_Name(T value) {
    return StopState_StopCategory_Name(value);
  }
  static inline bool StopCategory_Parse(absl::string_view name, StopCategory* value) {
    return StopState_StopCategory_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 100,
    kCategoryFieldNumber = 1,
  };
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // .IndyFramework.Protobuf.HRI.StopState.StopCategory category = 1;
  void clear_category() ;
  ::IndyFramework::Protobuf::HRI::StopState_StopCategory category() const;
  void set_category(::IndyFramework::Protobuf::HRI::StopState_StopCategory value);

  private:
  ::IndyFramework::Protobuf::HRI::StopState_StopCategory _internal_category() const;
  void _internal_set_category(::IndyFramework::Protobuf::HRI::StopState_StopCategory value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.StopState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    int category_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SafetyFunctionState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SafetyFunctionState) */ {
 public:
  inline SafetyFunctionState() : SafetyFunctionState(nullptr) {}
  ~SafetyFunctionState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SafetyFunctionState(::google::protobuf::internal::ConstantInitialized);

  SafetyFunctionState(const SafetyFunctionState& from);
  SafetyFunctionState(SafetyFunctionState&& from) noexcept
    : SafetyFunctionState() {
    *this = ::std::move(from);
  }

  inline SafetyFunctionState& operator=(const SafetyFunctionState& from) {
    CopyFrom(from);
    return *this;
  }
  inline SafetyFunctionState& operator=(SafetyFunctionState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SafetyFunctionState& default_instance() {
    return *internal_default_instance();
  }
  static inline const SafetyFunctionState* internal_default_instance() {
    return reinterpret_cast<const SafetyFunctionState*>(
               &_SafetyFunctionState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    212;

  friend void swap(SafetyFunctionState& a, SafetyFunctionState& b) {
    a.Swap(&b);
  }
  inline void Swap(SafetyFunctionState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SafetyFunctionState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SafetyFunctionState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SafetyFunctionState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SafetyFunctionState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SafetyFunctionState& from) {
    SafetyFunctionState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SafetyFunctionState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SafetyFunctionState";
  }
  protected:
  explicit SafetyFunctionState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 100,
    kIdFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 state = 2;
  void clear_state() ;
  ::uint32_t state() const;
  void set_state(::uint32_t value);

  private:
  ::uint32_t _internal_state() const;
  void _internal_set_state(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SafetyFunctionState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    ::uint32_t id_;
    ::uint32_t state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetOnStartProgramConfigReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigReq) */ {
 public:
  inline GetOnStartProgramConfigReq() : GetOnStartProgramConfigReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOnStartProgramConfigReq(::google::protobuf::internal::ConstantInitialized);

  GetOnStartProgramConfigReq(const GetOnStartProgramConfigReq& from);
  GetOnStartProgramConfigReq(GetOnStartProgramConfigReq&& from) noexcept
    : GetOnStartProgramConfigReq() {
    *this = ::std::move(from);
  }

  inline GetOnStartProgramConfigReq& operator=(const GetOnStartProgramConfigReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOnStartProgramConfigReq& operator=(GetOnStartProgramConfigReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOnStartProgramConfigReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOnStartProgramConfigReq* internal_default_instance() {
    return reinterpret_cast<const GetOnStartProgramConfigReq*>(
               &_GetOnStartProgramConfigReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    213;

  friend void swap(GetOnStartProgramConfigReq& a, GetOnStartProgramConfigReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOnStartProgramConfigReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOnStartProgramConfigReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOnStartProgramConfigReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOnStartProgramConfigReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetOnStartProgramConfigReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetOnStartProgramConfigReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetOnStartProgramConfigReq";
  }
  protected:
  explicit GetOnStartProgramConfigReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetOnStartProgramConfigRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes) */ {
 public:
  inline GetOnStartProgramConfigRes() : GetOnStartProgramConfigRes(nullptr) {}
  ~GetOnStartProgramConfigRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOnStartProgramConfigRes(::google::protobuf::internal::ConstantInitialized);

  GetOnStartProgramConfigRes(const GetOnStartProgramConfigRes& from);
  GetOnStartProgramConfigRes(GetOnStartProgramConfigRes&& from) noexcept
    : GetOnStartProgramConfigRes() {
    *this = ::std::move(from);
  }

  inline GetOnStartProgramConfigRes& operator=(const GetOnStartProgramConfigRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOnStartProgramConfigRes& operator=(GetOnStartProgramConfigRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOnStartProgramConfigRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOnStartProgramConfigRes* internal_default_instance() {
    return reinterpret_cast<const GetOnStartProgramConfigRes*>(
               &_GetOnStartProgramConfigRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    214;

  friend void swap(GetOnStartProgramConfigRes& a, GetOnStartProgramConfigRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOnStartProgramConfigRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOnStartProgramConfigRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOnStartProgramConfigRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOnStartProgramConfigRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOnStartProgramConfigRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetOnStartProgramConfigRes& from) {
    GetOnStartProgramConfigRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOnStartProgramConfigRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes";
  }
  protected:
  explicit GetOnStartProgramConfigRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 3,
    kMsgFieldNumber = 100,
    kAutoRunFieldNumber = 1,
    kIndexFieldNumber = 2,
  };
  // string file_dir = 3;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bool auto_run = 1;
  void clear_auto_run() ;
  bool auto_run() const;
  void set_auto_run(bool value);

  private:
  bool _internal_auto_run() const;
  void _internal_set_auto_run(bool value);

  public:
  // int32 index = 2;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 73, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    bool auto_run_;
    ::int32_t index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetOnStartProgramConfigReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigReq) */ {
 public:
  inline SetOnStartProgramConfigReq() : SetOnStartProgramConfigReq(nullptr) {}
  ~SetOnStartProgramConfigReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetOnStartProgramConfigReq(::google::protobuf::internal::ConstantInitialized);

  SetOnStartProgramConfigReq(const SetOnStartProgramConfigReq& from);
  SetOnStartProgramConfigReq(SetOnStartProgramConfigReq&& from) noexcept
    : SetOnStartProgramConfigReq() {
    *this = ::std::move(from);
  }

  inline SetOnStartProgramConfigReq& operator=(const SetOnStartProgramConfigReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetOnStartProgramConfigReq& operator=(SetOnStartProgramConfigReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetOnStartProgramConfigReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetOnStartProgramConfigReq* internal_default_instance() {
    return reinterpret_cast<const SetOnStartProgramConfigReq*>(
               &_SetOnStartProgramConfigReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    215;

  friend void swap(SetOnStartProgramConfigReq& a, SetOnStartProgramConfigReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetOnStartProgramConfigReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetOnStartProgramConfigReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetOnStartProgramConfigReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetOnStartProgramConfigReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetOnStartProgramConfigReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetOnStartProgramConfigReq& from) {
    SetOnStartProgramConfigReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetOnStartProgramConfigReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetOnStartProgramConfigReq";
  }
  protected:
  explicit SetOnStartProgramConfigReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutoRunFieldNumber = 1,
    kIndexFieldNumber = 2,
  };
  // bool auto_run = 1;
  void clear_auto_run() ;
  bool auto_run() const;
  void set_auto_run(bool value);

  private:
  bool _internal_auto_run() const;
  void _internal_set_auto_run(bool value);

  public:
  // int32 index = 2;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool auto_run_;
    ::int32_t index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetOnStartProgramConfigRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes) */ {
 public:
  inline SetOnStartProgramConfigRes() : SetOnStartProgramConfigRes(nullptr) {}
  ~SetOnStartProgramConfigRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetOnStartProgramConfigRes(::google::protobuf::internal::ConstantInitialized);

  SetOnStartProgramConfigRes(const SetOnStartProgramConfigRes& from);
  SetOnStartProgramConfigRes(SetOnStartProgramConfigRes&& from) noexcept
    : SetOnStartProgramConfigRes() {
    *this = ::std::move(from);
  }

  inline SetOnStartProgramConfigRes& operator=(const SetOnStartProgramConfigRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetOnStartProgramConfigRes& operator=(SetOnStartProgramConfigRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetOnStartProgramConfigRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetOnStartProgramConfigRes* internal_default_instance() {
    return reinterpret_cast<const SetOnStartProgramConfigRes*>(
               &_SetOnStartProgramConfigRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    216;

  friend void swap(SetOnStartProgramConfigRes& a, SetOnStartProgramConfigRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetOnStartProgramConfigRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetOnStartProgramConfigRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetOnStartProgramConfigRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetOnStartProgramConfigRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetOnStartProgramConfigRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetOnStartProgramConfigRes& from) {
    SetOnStartProgramConfigRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetOnStartProgramConfigRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes";
  }
  protected:
  explicit SetOnStartProgramConfigRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 65, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSafetyLimitConfigReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigReq) */ {
 public:
  inline GetSafetyLimitConfigReq() : GetSafetyLimitConfigReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSafetyLimitConfigReq(::google::protobuf::internal::ConstantInitialized);

  GetSafetyLimitConfigReq(const GetSafetyLimitConfigReq& from);
  GetSafetyLimitConfigReq(GetSafetyLimitConfigReq&& from) noexcept
    : GetSafetyLimitConfigReq() {
    *this = ::std::move(from);
  }

  inline GetSafetyLimitConfigReq& operator=(const GetSafetyLimitConfigReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSafetyLimitConfigReq& operator=(GetSafetyLimitConfigReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSafetyLimitConfigReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSafetyLimitConfigReq* internal_default_instance() {
    return reinterpret_cast<const GetSafetyLimitConfigReq*>(
               &_GetSafetyLimitConfigReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    217;

  friend void swap(GetSafetyLimitConfigReq& a, GetSafetyLimitConfigReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSafetyLimitConfigReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSafetyLimitConfigReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSafetyLimitConfigReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSafetyLimitConfigReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetSafetyLimitConfigReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetSafetyLimitConfigReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSafetyLimitConfigReq";
  }
  protected:
  explicit GetSafetyLimitConfigReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSafetyLimitConfigRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes) */ {
 public:
  inline GetSafetyLimitConfigRes() : GetSafetyLimitConfigRes(nullptr) {}
  ~GetSafetyLimitConfigRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSafetyLimitConfigRes(::google::protobuf::internal::ConstantInitialized);

  GetSafetyLimitConfigRes(const GetSafetyLimitConfigRes& from);
  GetSafetyLimitConfigRes(GetSafetyLimitConfigRes&& from) noexcept
    : GetSafetyLimitConfigRes() {
    *this = ::std::move(from);
  }

  inline GetSafetyLimitConfigRes& operator=(const GetSafetyLimitConfigRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSafetyLimitConfigRes& operator=(GetSafetyLimitConfigRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSafetyLimitConfigRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSafetyLimitConfigRes* internal_default_instance() {
    return reinterpret_cast<const GetSafetyLimitConfigRes*>(
               &_GetSafetyLimitConfigRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    218;

  friend void swap(GetSafetyLimitConfigRes& a, GetSafetyLimitConfigRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSafetyLimitConfigRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSafetyLimitConfigRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSafetyLimitConfigRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSafetyLimitConfigRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSafetyLimitConfigRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSafetyLimitConfigRes& from) {
    GetSafetyLimitConfigRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSafetyLimitConfigRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes";
  }
  protected:
  explicit GetSafetyLimitConfigRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kPowerLimitFieldNumber = 1,
    kPowerLimitRatioFieldNumber = 2,
    kTcpForceLimitFieldNumber = 3,
    kTcpForceLimitRatioFieldNumber = 4,
    kTcpSpeedLimitFieldNumber = 5,
    kTcpSpeedLimitRatioFieldNumber = 6,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // float power_limit = 1;
  void clear_power_limit() ;
  float power_limit() const;
  void set_power_limit(float value);

  private:
  float _internal_power_limit() const;
  void _internal_set_power_limit(float value);

  public:
  // float power_limit_ratio = 2;
  void clear_power_limit_ratio() ;
  float power_limit_ratio() const;
  void set_power_limit_ratio(float value);

  private:
  float _internal_power_limit_ratio() const;
  void _internal_set_power_limit_ratio(float value);

  public:
  // float tcp_force_limit = 3;
  void clear_tcp_force_limit() ;
  float tcp_force_limit() const;
  void set_tcp_force_limit(float value);

  private:
  float _internal_tcp_force_limit() const;
  void _internal_set_tcp_force_limit(float value);

  public:
  // float tcp_force_limit_ratio = 4;
  void clear_tcp_force_limit_ratio() ;
  float tcp_force_limit_ratio() const;
  void set_tcp_force_limit_ratio(float value);

  private:
  float _internal_tcp_force_limit_ratio() const;
  void _internal_set_tcp_force_limit_ratio(float value);

  public:
  // float tcp_speed_limit = 5;
  void clear_tcp_speed_limit() ;
  float tcp_speed_limit() const;
  void set_tcp_speed_limit(float value);

  private:
  float _internal_tcp_speed_limit() const;
  void _internal_set_tcp_speed_limit(float value);

  public:
  // float tcp_speed_limit_ratio = 6;
  void clear_tcp_speed_limit_ratio() ;
  float tcp_speed_limit_ratio() const;
  void set_tcp_speed_limit_ratio(float value);

  private:
  float _internal_tcp_speed_limit_ratio() const;
  void _internal_set_tcp_speed_limit_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 62, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    float power_limit_;
    float power_limit_ratio_;
    float tcp_force_limit_;
    float tcp_force_limit_ratio_;
    float tcp_speed_limit_;
    float tcp_speed_limit_ratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSafetyLimitConfigReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq) */ {
 public:
  inline SetSafetyLimitConfigReq() : SetSafetyLimitConfigReq(nullptr) {}
  ~SetSafetyLimitConfigReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSafetyLimitConfigReq(::google::protobuf::internal::ConstantInitialized);

  SetSafetyLimitConfigReq(const SetSafetyLimitConfigReq& from);
  SetSafetyLimitConfigReq(SetSafetyLimitConfigReq&& from) noexcept
    : SetSafetyLimitConfigReq() {
    *this = ::std::move(from);
  }

  inline SetSafetyLimitConfigReq& operator=(const SetSafetyLimitConfigReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSafetyLimitConfigReq& operator=(SetSafetyLimitConfigReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSafetyLimitConfigReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSafetyLimitConfigReq* internal_default_instance() {
    return reinterpret_cast<const SetSafetyLimitConfigReq*>(
               &_SetSafetyLimitConfigReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    219;

  friend void swap(SetSafetyLimitConfigReq& a, SetSafetyLimitConfigReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSafetyLimitConfigReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSafetyLimitConfigReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSafetyLimitConfigReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSafetyLimitConfigReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSafetyLimitConfigReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSafetyLimitConfigReq& from) {
    SetSafetyLimitConfigReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSafetyLimitConfigReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq";
  }
  protected:
  explicit SetSafetyLimitConfigReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPowerLimitFieldNumber = 1,
    kPowerLimitRatioFieldNumber = 2,
    kTcpForceLimitFieldNumber = 3,
    kTcpForceLimitRatioFieldNumber = 4,
    kTcpSpeedLimitFieldNumber = 5,
    kTcpSpeedLimitRatioFieldNumber = 6,
  };
  // float power_limit = 1;
  void clear_power_limit() ;
  float power_limit() const;
  void set_power_limit(float value);

  private:
  float _internal_power_limit() const;
  void _internal_set_power_limit(float value);

  public:
  // float power_limit_ratio = 2;
  void clear_power_limit_ratio() ;
  float power_limit_ratio() const;
  void set_power_limit_ratio(float value);

  private:
  float _internal_power_limit_ratio() const;
  void _internal_set_power_limit_ratio(float value);

  public:
  // float tcp_force_limit = 3;
  void clear_tcp_force_limit() ;
  float tcp_force_limit() const;
  void set_tcp_force_limit(float value);

  private:
  float _internal_tcp_force_limit() const;
  void _internal_set_tcp_force_limit(float value);

  public:
  // float tcp_force_limit_ratio = 4;
  void clear_tcp_force_limit_ratio() ;
  float tcp_force_limit_ratio() const;
  void set_tcp_force_limit_ratio(float value);

  private:
  float _internal_tcp_force_limit_ratio() const;
  void _internal_set_tcp_force_limit_ratio(float value);

  public:
  // float tcp_speed_limit = 5;
  void clear_tcp_speed_limit() ;
  float tcp_speed_limit() const;
  void set_tcp_speed_limit(float value);

  private:
  float _internal_tcp_speed_limit() const;
  void _internal_set_tcp_speed_limit(float value);

  public:
  // float tcp_speed_limit_ratio = 6;
  void clear_tcp_speed_limit_ratio() ;
  float tcp_speed_limit_ratio() const;
  void set_tcp_speed_limit_ratio(float value);

  private:
  float _internal_tcp_speed_limit_ratio() const;
  void _internal_set_tcp_speed_limit_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float power_limit_;
    float power_limit_ratio_;
    float tcp_force_limit_;
    float tcp_force_limit_ratio_;
    float tcp_speed_limit_;
    float tcp_speed_limit_ratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSafetyLimitConfigRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes) */ {
 public:
  inline SetSafetyLimitConfigRes() : SetSafetyLimitConfigRes(nullptr) {}
  ~SetSafetyLimitConfigRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSafetyLimitConfigRes(::google::protobuf::internal::ConstantInitialized);

  SetSafetyLimitConfigRes(const SetSafetyLimitConfigRes& from);
  SetSafetyLimitConfigRes(SetSafetyLimitConfigRes&& from) noexcept
    : SetSafetyLimitConfigRes() {
    *this = ::std::move(from);
  }

  inline SetSafetyLimitConfigRes& operator=(const SetSafetyLimitConfigRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSafetyLimitConfigRes& operator=(SetSafetyLimitConfigRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSafetyLimitConfigRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSafetyLimitConfigRes* internal_default_instance() {
    return reinterpret_cast<const SetSafetyLimitConfigRes*>(
               &_SetSafetyLimitConfigRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    220;

  friend void swap(SetSafetyLimitConfigRes& a, SetSafetyLimitConfigRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSafetyLimitConfigRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSafetyLimitConfigRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSafetyLimitConfigRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSafetyLimitConfigRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSafetyLimitConfigRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSafetyLimitConfigRes& from) {
    SetSafetyLimitConfigRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSafetyLimitConfigRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes";
  }
  protected:
  explicit SetSafetyLimitConfigRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 62, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSafetyStopConfigReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq) */ {
 public:
  inline SetSafetyStopConfigReq() : SetSafetyStopConfigReq(nullptr) {}
  ~SetSafetyStopConfigReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSafetyStopConfigReq(::google::protobuf::internal::ConstantInitialized);

  SetSafetyStopConfigReq(const SetSafetyStopConfigReq& from);
  SetSafetyStopConfigReq(SetSafetyStopConfigReq&& from) noexcept
    : SetSafetyStopConfigReq() {
    *this = ::std::move(from);
  }

  inline SetSafetyStopConfigReq& operator=(const SetSafetyStopConfigReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSafetyStopConfigReq& operator=(SetSafetyStopConfigReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSafetyStopConfigReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSafetyStopConfigReq* internal_default_instance() {
    return reinterpret_cast<const SetSafetyStopConfigReq*>(
               &_SetSafetyStopConfigReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    221;

  friend void swap(SetSafetyStopConfigReq& a, SetSafetyStopConfigReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSafetyStopConfigReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSafetyStopConfigReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSafetyStopConfigReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSafetyStopConfigReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSafetyStopConfigReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSafetyStopConfigReq& from) {
    SetSafetyStopConfigReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSafetyStopConfigReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq";
  }
  protected:
  explicit SetSafetyStopConfigReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJointPositionLimitStopCatFieldNumber = 1,
    kJointSpeedLimitStopCatFieldNumber = 2,
    kJointTorqueLimitStopCatFieldNumber = 3,
    kTcpSpeedLimitStopCatFieldNumber = 4,
    kTcpForceLimitStopCatFieldNumber = 5,
    kPowerLimitStopCatFieldNumber = 6,
  };
  // .IndyFramework.Protobuf.Shared.StopCategory joint_position_limit_stop_cat = 1;
  void clear_joint_position_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory joint_position_limit_stop_cat() const;
  void set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_joint_position_limit_stop_cat() const;
  void _internal_set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory joint_speed_limit_stop_cat = 2;
  void clear_joint_speed_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory joint_speed_limit_stop_cat() const;
  void set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_joint_speed_limit_stop_cat() const;
  void _internal_set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory joint_torque_limit_stop_cat = 3;
  void clear_joint_torque_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory joint_torque_limit_stop_cat() const;
  void set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_joint_torque_limit_stop_cat() const;
  void _internal_set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory tcp_speed_limit_stop_cat = 4;
  void clear_tcp_speed_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory tcp_speed_limit_stop_cat() const;
  void set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_tcp_speed_limit_stop_cat() const;
  void _internal_set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory tcp_force_limit_stop_cat = 5;
  void clear_tcp_force_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory tcp_force_limit_stop_cat() const;
  void set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_tcp_force_limit_stop_cat() const;
  void _internal_set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory power_limit_stop_cat = 6;
  void clear_power_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory power_limit_stop_cat() const;
  void set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_power_limit_stop_cat() const;
  void _internal_set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int joint_position_limit_stop_cat_;
    int joint_speed_limit_stop_cat_;
    int joint_torque_limit_stop_cat_;
    int tcp_speed_limit_stop_cat_;
    int tcp_force_limit_stop_cat_;
    int power_limit_stop_cat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SetSafetyStopConfigRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes) */ {
 public:
  inline SetSafetyStopConfigRes() : SetSafetyStopConfigRes(nullptr) {}
  ~SetSafetyStopConfigRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSafetyStopConfigRes(::google::protobuf::internal::ConstantInitialized);

  SetSafetyStopConfigRes(const SetSafetyStopConfigRes& from);
  SetSafetyStopConfigRes(SetSafetyStopConfigRes&& from) noexcept
    : SetSafetyStopConfigRes() {
    *this = ::std::move(from);
  }

  inline SetSafetyStopConfigRes& operator=(const SetSafetyStopConfigRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSafetyStopConfigRes& operator=(SetSafetyStopConfigRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSafetyStopConfigRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSafetyStopConfigRes* internal_default_instance() {
    return reinterpret_cast<const SetSafetyStopConfigRes*>(
               &_SetSafetyStopConfigRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    222;

  friend void swap(SetSafetyStopConfigRes& a, SetSafetyStopConfigRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSafetyStopConfigRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSafetyStopConfigRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSafetyStopConfigRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSafetyStopConfigRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSafetyStopConfigRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSafetyStopConfigRes& from) {
    SetSafetyStopConfigRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSafetyStopConfigRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes";
  }
  protected:
  explicit SetSafetyStopConfigRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSafetyStopConfigReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSafetyStopConfigReq) */ {
 public:
  inline GetSafetyStopConfigReq() : GetSafetyStopConfigReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSafetyStopConfigReq(::google::protobuf::internal::ConstantInitialized);

  GetSafetyStopConfigReq(const GetSafetyStopConfigReq& from);
  GetSafetyStopConfigReq(GetSafetyStopConfigReq&& from) noexcept
    : GetSafetyStopConfigReq() {
    *this = ::std::move(from);
  }

  inline GetSafetyStopConfigReq& operator=(const GetSafetyStopConfigReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSafetyStopConfigReq& operator=(GetSafetyStopConfigReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSafetyStopConfigReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSafetyStopConfigReq* internal_default_instance() {
    return reinterpret_cast<const GetSafetyStopConfigReq*>(
               &_GetSafetyStopConfigReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    223;

  friend void swap(GetSafetyStopConfigReq& a, GetSafetyStopConfigReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSafetyStopConfigReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSafetyStopConfigReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSafetyStopConfigReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSafetyStopConfigReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetSafetyStopConfigReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetSafetyStopConfigReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSafetyStopConfigReq";
  }
  protected:
  explicit GetSafetyStopConfigReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSafetyStopConfigReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSafetyStopConfigRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes) */ {
 public:
  inline GetSafetyStopConfigRes() : GetSafetyStopConfigRes(nullptr) {}
  ~GetSafetyStopConfigRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSafetyStopConfigRes(::google::protobuf::internal::ConstantInitialized);

  GetSafetyStopConfigRes(const GetSafetyStopConfigRes& from);
  GetSafetyStopConfigRes(GetSafetyStopConfigRes&& from) noexcept
    : GetSafetyStopConfigRes() {
    *this = ::std::move(from);
  }

  inline GetSafetyStopConfigRes& operator=(const GetSafetyStopConfigRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSafetyStopConfigRes& operator=(GetSafetyStopConfigRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSafetyStopConfigRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSafetyStopConfigRes* internal_default_instance() {
    return reinterpret_cast<const GetSafetyStopConfigRes*>(
               &_GetSafetyStopConfigRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    224;

  friend void swap(GetSafetyStopConfigRes& a, GetSafetyStopConfigRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSafetyStopConfigRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSafetyStopConfigRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSafetyStopConfigRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSafetyStopConfigRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSafetyStopConfigRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSafetyStopConfigRes& from) {
    GetSafetyStopConfigRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSafetyStopConfigRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes";
  }
  protected:
  explicit GetSafetyStopConfigRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
    kJointPositionLimitStopCatFieldNumber = 1,
    kJointSpeedLimitStopCatFieldNumber = 2,
    kJointTorqueLimitStopCatFieldNumber = 3,
    kTcpSpeedLimitStopCatFieldNumber = 4,
    kTcpForceLimitStopCatFieldNumber = 5,
    kPowerLimitStopCatFieldNumber = 6,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory joint_position_limit_stop_cat = 1;
  void clear_joint_position_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory joint_position_limit_stop_cat() const;
  void set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_joint_position_limit_stop_cat() const;
  void _internal_set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory joint_speed_limit_stop_cat = 2;
  void clear_joint_speed_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory joint_speed_limit_stop_cat() const;
  void set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_joint_speed_limit_stop_cat() const;
  void _internal_set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory joint_torque_limit_stop_cat = 3;
  void clear_joint_torque_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory joint_torque_limit_stop_cat() const;
  void set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_joint_torque_limit_stop_cat() const;
  void _internal_set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory tcp_speed_limit_stop_cat = 4;
  void clear_tcp_speed_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory tcp_speed_limit_stop_cat() const;
  void set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_tcp_speed_limit_stop_cat() const;
  void _internal_set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory tcp_force_limit_stop_cat = 5;
  void clear_tcp_force_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory tcp_force_limit_stop_cat() const;
  void set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_tcp_force_limit_stop_cat() const;
  void _internal_set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // .IndyFramework.Protobuf.Shared.StopCategory power_limit_stop_cat = 6;
  void clear_power_limit_stop_cat() ;
  ::IndyFramework::Protobuf::Shared::StopCategory power_limit_stop_cat() const;
  void set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  private:
  ::IndyFramework::Protobuf::Shared::StopCategory _internal_power_limit_stop_cat() const;
  void _internal_set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 61, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    int joint_position_limit_stop_cat_;
    int joint_speed_limit_stop_cat_;
    int joint_torque_limit_stop_cat_;
    int tcp_speed_limit_stop_cat_;
    int tcp_force_limit_stop_cat_;
    int power_limit_stop_cat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSafetyConfigHashReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSafetyConfigHashReq) */ {
 public:
  inline GetSafetyConfigHashReq() : GetSafetyConfigHashReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSafetyConfigHashReq(::google::protobuf::internal::ConstantInitialized);

  GetSafetyConfigHashReq(const GetSafetyConfigHashReq& from);
  GetSafetyConfigHashReq(GetSafetyConfigHashReq&& from) noexcept
    : GetSafetyConfigHashReq() {
    *this = ::std::move(from);
  }

  inline GetSafetyConfigHashReq& operator=(const GetSafetyConfigHashReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSafetyConfigHashReq& operator=(GetSafetyConfigHashReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSafetyConfigHashReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSafetyConfigHashReq* internal_default_instance() {
    return reinterpret_cast<const GetSafetyConfigHashReq*>(
               &_GetSafetyConfigHashReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    225;

  friend void swap(GetSafetyConfigHashReq& a, GetSafetyConfigHashReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSafetyConfigHashReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSafetyConfigHashReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSafetyConfigHashReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSafetyConfigHashReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetSafetyConfigHashReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetSafetyConfigHashReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSafetyConfigHashReq";
  }
  protected:
  explicit GetSafetyConfigHashReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSafetyConfigHashReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetSafetyConfigHashRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes) */ {
 public:
  inline GetSafetyConfigHashRes() : GetSafetyConfigHashRes(nullptr) {}
  ~GetSafetyConfigHashRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSafetyConfigHashRes(::google::protobuf::internal::ConstantInitialized);

  GetSafetyConfigHashRes(const GetSafetyConfigHashRes& from);
  GetSafetyConfigHashRes(GetSafetyConfigHashRes&& from) noexcept
    : GetSafetyConfigHashRes() {
    *this = ::std::move(from);
  }

  inline GetSafetyConfigHashRes& operator=(const GetSafetyConfigHashRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSafetyConfigHashRes& operator=(GetSafetyConfigHashRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSafetyConfigHashRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSafetyConfigHashRes* internal_default_instance() {
    return reinterpret_cast<const GetSafetyConfigHashRes*>(
               &_GetSafetyConfigHashRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    226;

  friend void swap(GetSafetyConfigHashRes& a, GetSafetyConfigHashRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSafetyConfigHashRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSafetyConfigHashRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSafetyConfigHashRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSafetyConfigHashRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSafetyConfigHashRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSafetyConfigHashRes& from) {
    GetSafetyConfigHashRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSafetyConfigHashRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes";
  }
  protected:
  explicit GetSafetyConfigHashRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // string hash = 1;
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* ptr);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 65, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class KinematicsParams_MDH final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.KinematicsParams.MDH) */ {
 public:
  inline KinematicsParams_MDH() : KinematicsParams_MDH(nullptr) {}
  ~KinematicsParams_MDH() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR KinematicsParams_MDH(::google::protobuf::internal::ConstantInitialized);

  KinematicsParams_MDH(const KinematicsParams_MDH& from);
  KinematicsParams_MDH(KinematicsParams_MDH&& from) noexcept
    : KinematicsParams_MDH() {
    *this = ::std::move(from);
  }

  inline KinematicsParams_MDH& operator=(const KinematicsParams_MDH& from) {
    CopyFrom(from);
    return *this;
  }
  inline KinematicsParams_MDH& operator=(KinematicsParams_MDH&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KinematicsParams_MDH& default_instance() {
    return *internal_default_instance();
  }
  static inline const KinematicsParams_MDH* internal_default_instance() {
    return reinterpret_cast<const KinematicsParams_MDH*>(
               &_KinematicsParams_MDH_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    227;

  friend void swap(KinematicsParams_MDH& a, KinematicsParams_MDH& b) {
    a.Swap(&b);
  }
  inline void Swap(KinematicsParams_MDH* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KinematicsParams_MDH* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KinematicsParams_MDH* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<KinematicsParams_MDH>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KinematicsParams_MDH& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const KinematicsParams_MDH& from) {
    KinematicsParams_MDH::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KinematicsParams_MDH* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.KinematicsParams.MDH";
  }
  protected:
  explicit KinematicsParams_MDH(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAFieldNumber = 1,
    kAlphaFieldNumber = 2,
    kD0FieldNumber = 3,
    kTheta0FieldNumber = 4,
    kTypeFieldNumber = 5,
    kIndexFieldNumber = 10,
    kParentFieldNumber = 11,
  };
  // float a = 1;
  void clear_a() ;
  float a() const;
  void set_a(float value);

  private:
  float _internal_a() const;
  void _internal_set_a(float value);

  public:
  // float alpha = 2;
  void clear_alpha() ;
  float alpha() const;
  void set_alpha(float value);

  private:
  float _internal_alpha() const;
  void _internal_set_alpha(float value);

  public:
  // float d0 = 3;
  void clear_d0() ;
  float d0() const;
  void set_d0(float value);

  private:
  float _internal_d0() const;
  void _internal_set_d0(float value);

  public:
  // float theta0 = 4;
  void clear_theta0() ;
  float theta0() const;
  void set_theta0(float value);

  private:
  float _internal_theta0() const;
  void _internal_set_theta0(float value);

  public:
  // .IndyFramework.Protobuf.HRI.KinematicsParams.JointType type = 5;
  void clear_type() ;
  ::IndyFramework::Protobuf::HRI::KinematicsParams_JointType type() const;
  void set_type(::IndyFramework::Protobuf::HRI::KinematicsParams_JointType value);

  private:
  ::IndyFramework::Protobuf::HRI::KinematicsParams_JointType _internal_type() const;
  void _internal_set_type(::IndyFramework::Protobuf::HRI::KinematicsParams_JointType value);

  public:
  // int32 index = 10;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // int32 parent = 11;
  void clear_parent() ;
  ::int32_t parent() const;
  void set_parent(::int32_t value);

  private:
  ::int32_t _internal_parent() const;
  void _internal_set_parent(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.KinematicsParams.MDH)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float a_;
    float alpha_;
    float d0_;
    float theta0_;
    int type_;
    ::int32_t index_;
    ::int32_t parent_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class KinematicsParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.KinematicsParams) */ {
 public:
  inline KinematicsParams() : KinematicsParams(nullptr) {}
  ~KinematicsParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR KinematicsParams(::google::protobuf::internal::ConstantInitialized);

  KinematicsParams(const KinematicsParams& from);
  KinematicsParams(KinematicsParams&& from) noexcept
    : KinematicsParams() {
    *this = ::std::move(from);
  }

  inline KinematicsParams& operator=(const KinematicsParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline KinematicsParams& operator=(KinematicsParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KinematicsParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const KinematicsParams* internal_default_instance() {
    return reinterpret_cast<const KinematicsParams*>(
               &_KinematicsParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    228;

  friend void swap(KinematicsParams& a, KinematicsParams& b) {
    a.Swap(&b);
  }
  inline void Swap(KinematicsParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KinematicsParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KinematicsParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<KinematicsParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KinematicsParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const KinematicsParams& from) {
    KinematicsParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KinematicsParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.KinematicsParams";
  }
  protected:
  explicit KinematicsParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef KinematicsParams_MDH MDH;

  using JointType = KinematicsParams_JointType;
  static constexpr JointType REVOLUTE = KinematicsParams_JointType_REVOLUTE;
  static constexpr JointType PRISMATIC = KinematicsParams_JointType_PRISMATIC;
  static constexpr JointType FIXED = KinematicsParams_JointType_FIXED;
  static inline bool JointType_IsValid(int value) {
    return KinematicsParams_JointType_IsValid(value);
  }
  static constexpr JointType JointType_MIN = KinematicsParams_JointType_JointType_MIN;
  static constexpr JointType JointType_MAX = KinematicsParams_JointType_JointType_MAX;
  static constexpr int JointType_ARRAYSIZE = KinematicsParams_JointType_JointType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* JointType_descriptor() {
    return KinematicsParams_JointType_descriptor();
  }
  template <typename T>
  static inline const std::string& JointType_Name(T value) {
    return KinematicsParams_JointType_Name(value);
  }
  static inline bool JointType_Parse(absl::string_view name, JointType* value) {
    return KinematicsParams_JointType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMdhFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.KinematicsParams.MDH mdh = 1;
  int mdh_size() const;
  private:
  int _internal_mdh_size() const;

  public:
  void clear_mdh() ;
  ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH* mutable_mdh(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH >*
      mutable_mdh();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::KinematicsParams_MDH>& _internal_mdh() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::KinematicsParams_MDH>* _internal_mutable_mdh();
  public:
  const ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH& mdh(int index) const;
  ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH* add_mdh();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH >&
      mdh() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.KinematicsParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH > mdh_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class KeyInitReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.KeyInitReq) */ {
 public:
  inline KeyInitReq() : KeyInitReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR KeyInitReq(::google::protobuf::internal::ConstantInitialized);

  KeyInitReq(const KeyInitReq& from);
  KeyInitReq(KeyInitReq&& from) noexcept
    : KeyInitReq() {
    *this = ::std::move(from);
  }

  inline KeyInitReq& operator=(const KeyInitReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyInitReq& operator=(KeyInitReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyInitReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyInitReq* internal_default_instance() {
    return reinterpret_cast<const KeyInitReq*>(
               &_KeyInitReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    229;

  friend void swap(KeyInitReq& a, KeyInitReq& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyInitReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyInitReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyInitReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<KeyInitReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const KeyInitReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const KeyInitReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.KeyInitReq";
  }
  protected:
  explicit KeyInitReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.KeyInitReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class KeyInitRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.KeyInitRes) */ {
 public:
  inline KeyInitRes() : KeyInitRes(nullptr) {}
  ~KeyInitRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR KeyInitRes(::google::protobuf::internal::ConstantInitialized);

  KeyInitRes(const KeyInitRes& from);
  KeyInitRes(KeyInitRes&& from) noexcept
    : KeyInitRes() {
    *this = ::std::move(from);
  }

  inline KeyInitRes& operator=(const KeyInitRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyInitRes& operator=(KeyInitRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyInitRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyInitRes* internal_default_instance() {
    return reinterpret_cast<const KeyInitRes*>(
               &_KeyInitRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    230;

  friend void swap(KeyInitRes& a, KeyInitRes& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyInitRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyInitRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyInitRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<KeyInitRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeyInitRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const KeyInitRes& from) {
    KeyInitRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyInitRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.KeyInitRes";
  }
  protected:
  explicit KeyInitRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.KeyInitRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 49, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class KeyDataReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.KeyDataReq) */ {
 public:
  inline KeyDataReq() : KeyDataReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR KeyDataReq(::google::protobuf::internal::ConstantInitialized);

  KeyDataReq(const KeyDataReq& from);
  KeyDataReq(KeyDataReq&& from) noexcept
    : KeyDataReq() {
    *this = ::std::move(from);
  }

  inline KeyDataReq& operator=(const KeyDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyDataReq& operator=(KeyDataReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyDataReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyDataReq* internal_default_instance() {
    return reinterpret_cast<const KeyDataReq*>(
               &_KeyDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    231;

  friend void swap(KeyDataReq& a, KeyDataReq& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyDataReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyDataReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyDataReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<KeyDataReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const KeyDataReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const KeyDataReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.KeyDataReq";
  }
  protected:
  explicit KeyDataReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.KeyDataReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class KeyDataRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.KeyDataRes) */ {
 public:
  inline KeyDataRes() : KeyDataRes(nullptr) {}
  ~KeyDataRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR KeyDataRes(::google::protobuf::internal::ConstantInitialized);

  KeyDataRes(const KeyDataRes& from);
  KeyDataRes(KeyDataRes&& from) noexcept
    : KeyDataRes() {
    *this = ::std::move(from);
  }

  inline KeyDataRes& operator=(const KeyDataRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyDataRes& operator=(KeyDataRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyDataRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyDataRes* internal_default_instance() {
    return reinterpret_cast<const KeyDataRes*>(
               &_KeyDataRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    232;

  friend void swap(KeyDataRes& a, KeyDataRes& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyDataRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyDataRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyDataRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<KeyDataRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeyDataRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const KeyDataRes& from) {
    KeyDataRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyDataRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.KeyDataRes";
  }
  protected:
  explicit KeyDataRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndicesFieldNumber = 1,
    kMsgFieldNumber = 100,
  };
  // repeated int32 indices = 1;
  int indices_size() const;
  private:
  int _internal_indices_size() const;

  public:
  void clear_indices() ;
  ::int32_t indices(int index) const;
  void set_indices(int index, ::int32_t value);
  void add_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_indices();

  public:
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.KeyDataRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 49, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> indices_;
    mutable ::google::protobuf::internal::CachedSize _indices_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Empty final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(::google::protobuf::internal::ConstantInitialized);

  Empty(const Empty& from);
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    233;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Empty";
  }
  protected:
  explicit Empty(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Empty)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Name final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Name) */ {
 public:
  inline Name() : Name(nullptr) {}
  ~Name() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Name(::google::protobuf::internal::ConstantInitialized);

  Name(const Name& from);
  Name(Name&& from) noexcept
    : Name() {
    *this = ::std::move(from);
  }

  inline Name& operator=(const Name& from) {
    CopyFrom(from);
    return *this;
  }
  inline Name& operator=(Name&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Name& default_instance() {
    return *internal_default_instance();
  }
  static inline const Name* internal_default_instance() {
    return reinterpret_cast<const Name*>(
               &_Name_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    234;

  friend void swap(Name& a, Name& b) {
    a.Swap(&b);
  }
  inline void Swap(Name* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Name* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Name* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Name>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Name& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Name& from) {
    Name::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Name* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Name";
  }
  protected:
  explicit Name(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Name)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 44, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Float final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Float) */ {
 public:
  inline Float() : Float(nullptr) {}
  ~Float() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Float(::google::protobuf::internal::ConstantInitialized);

  Float(const Float& from);
  Float(Float&& from) noexcept
    : Float() {
    *this = ::std::move(from);
  }

  inline Float& operator=(const Float& from) {
    CopyFrom(from);
    return *this;
  }
  inline Float& operator=(Float&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Float& default_instance() {
    return *internal_default_instance();
  }
  static inline const Float* internal_default_instance() {
    return reinterpret_cast<const Float*>(
               &_Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    235;

  friend void swap(Float& a, Float& b) {
    a.Swap(&b);
  }
  inline void Swap(Float* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Float* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Float* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Float>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Float& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Float& from) {
    Float::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Float* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Float";
  }
  protected:
  explicit Float(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // float value = 1;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Float)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class State final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.State) */ {
 public:
  inline State() : State(nullptr) {}
  ~State() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR State(::google::protobuf::internal::ConstantInitialized);

  State(const State& from);
  State(State&& from) noexcept
    : State() {
    *this = ::std::move(from);
  }

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }
  inline State& operator=(State&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const State& default_instance() {
    return *internal_default_instance();
  }
  static inline const State* internal_default_instance() {
    return reinterpret_cast<const State*>(
               &_State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    236;

  friend void swap(State& a, State& b) {
    a.Swap(&b);
  }
  inline void Swap(State* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(State* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  State* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<State>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const State& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const State& from) {
    State::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(State* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.State";
  }
  protected:
  explicit State(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableFieldNumber = 1,
  };
  // bool enable = 1;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.State)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool enable_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class IntMode final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.IntMode) */ {
 public:
  inline IntMode() : IntMode(nullptr) {}
  ~IntMode() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IntMode(::google::protobuf::internal::ConstantInitialized);

  IntMode(const IntMode& from);
  IntMode(IntMode&& from) noexcept
    : IntMode() {
    *this = ::std::move(from);
  }

  inline IntMode& operator=(const IntMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntMode& operator=(IntMode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntMode* internal_default_instance() {
    return reinterpret_cast<const IntMode*>(
               &_IntMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    237;

  friend void swap(IntMode& a, IntMode& b) {
    a.Swap(&b);
  }
  inline void Swap(IntMode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntMode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntMode* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IntMode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntMode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IntMode& from) {
    IntMode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntMode* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.IntMode";
  }
  protected:
  explicit IntMode(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
  };
  // uint64 mode = 1;
  void clear_mode() ;
  ::uint64_t mode() const;
  void set_mode(::uint64_t value);

  private:
  ::uint64_t _internal_mode() const;
  void _internal_set_mode(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.IntMode)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint64_t mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Response) */ {
 public:
  inline Response() : Response(nullptr) {}
  ~Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Response(::google::protobuf::internal::ConstantInitialized);

  Response(const Response& from);
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    238;

  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }
  inline void Swap(Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Response& from) {
    Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Response";
  }
  protected:
  explicit Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // int64 code = 1;
  void clear_code() ;
  ::int64_t code() const;
  void set_code(::int64_t value);

  private:
  ::int64_t _internal_code() const;
  void _internal_set_code(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 47, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::int64_t code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Servo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Servo) */ {
 public:
  inline Servo() : Servo(nullptr) {}
  ~Servo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Servo(::google::protobuf::internal::ConstantInitialized);

  Servo(const Servo& from);
  Servo(Servo&& from) noexcept
    : Servo() {
    *this = ::std::move(from);
  }

  inline Servo& operator=(const Servo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Servo& operator=(Servo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Servo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Servo* internal_default_instance() {
    return reinterpret_cast<const Servo*>(
               &_Servo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    239;

  friend void swap(Servo& a, Servo& b) {
    a.Swap(&b);
  }
  inline void Swap(Servo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Servo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Servo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Servo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Servo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Servo& from) {
    Servo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Servo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Servo";
  }
  protected:
  explicit Servo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kEnableFieldNumber = 2,
  };
  // uint32 index = 1;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // bool enable = 2;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Servo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t index_;
    bool enable_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class JogJTar final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.JogJTar) */ {
 public:
  inline JogJTar() : JogJTar(nullptr) {}
  ~JogJTar() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JogJTar(::google::protobuf::internal::ConstantInitialized);

  JogJTar(const JogJTar& from);
  JogJTar(JogJTar&& from) noexcept
    : JogJTar() {
    *this = ::std::move(from);
  }

  inline JogJTar& operator=(const JogJTar& from) {
    CopyFrom(from);
    return *this;
  }
  inline JogJTar& operator=(JogJTar&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JogJTar& default_instance() {
    return *internal_default_instance();
  }
  static inline const JogJTar* internal_default_instance() {
    return reinterpret_cast<const JogJTar*>(
               &_JogJTar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    240;

  friend void swap(JogJTar& a, JogJTar& b) {
    a.Swap(&b);
  }
  inline void Swap(JogJTar* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JogJTar* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JogJTar* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JogJTar>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JogJTar& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JogJTar& from) {
    JogJTar::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JogJTar* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.JogJTar";
  }
  protected:
  explicit JogJTar(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJointNumFieldNumber = 1,
    kVelLevelFieldNumber = 2,
    kDistanceFieldNumber = 3,
  };
  // int32 joint_num = 1;
  void clear_joint_num() ;
  ::int32_t joint_num() const;
  void set_joint_num(::int32_t value);

  private:
  ::int32_t _internal_joint_num() const;
  void _internal_set_joint_num(::int32_t value);

  public:
  // int32 vel_level = 2;
  void clear_vel_level() ;
  ::int32_t vel_level() const;
  void set_vel_level(::int32_t value);

  private:
  ::int32_t _internal_vel_level() const;
  void _internal_set_vel_level(::int32_t value);

  public:
  // float distance = 3;
  void clear_distance() ;
  float distance() const;
  void set_distance(float value);

  private:
  float _internal_distance() const;
  void _internal_set_distance(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.JogJTar)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t joint_num_;
    ::int32_t vel_level_;
    float distance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PlayTuningReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PlayTuningReq) */ {
 public:
  inline PlayTuningReq() : PlayTuningReq(nullptr) {}
  ~PlayTuningReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayTuningReq(::google::protobuf::internal::ConstantInitialized);

  PlayTuningReq(const PlayTuningReq& from);
  PlayTuningReq(PlayTuningReq&& from) noexcept
    : PlayTuningReq() {
    *this = ::std::move(from);
  }

  inline PlayTuningReq& operator=(const PlayTuningReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayTuningReq& operator=(PlayTuningReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayTuningReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayTuningReq* internal_default_instance() {
    return reinterpret_cast<const PlayTuningReq*>(
               &_PlayTuningReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    241;

  friend void swap(PlayTuningReq& a, PlayTuningReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayTuningReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayTuningReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayTuningReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayTuningReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayTuningReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayTuningReq& from) {
    PlayTuningReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayTuningReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PlayTuningReq";
  }
  protected:
  explicit PlayTuningReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 1,
  };
  // string file_dir = 1;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PlayTuningReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TuningProgram final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TuningProgram) */ {
 public:
  inline TuningProgram() : TuningProgram(nullptr) {}
  ~TuningProgram() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TuningProgram(::google::protobuf::internal::ConstantInitialized);

  TuningProgram(const TuningProgram& from);
  TuningProgram(TuningProgram&& from) noexcept
    : TuningProgram() {
    *this = ::std::move(from);
  }

  inline TuningProgram& operator=(const TuningProgram& from) {
    CopyFrom(from);
    return *this;
  }
  inline TuningProgram& operator=(TuningProgram&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TuningProgram& default_instance() {
    return *internal_default_instance();
  }
  static inline const TuningProgram* internal_default_instance() {
    return reinterpret_cast<const TuningProgram*>(
               &_TuningProgram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    242;

  friend void swap(TuningProgram& a, TuningProgram& b) {
    a.Swap(&b);
  }
  inline void Swap(TuningProgram* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TuningProgram* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TuningProgram* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TuningProgram>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TuningProgram& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TuningProgram& from) {
    TuningProgram::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TuningProgram* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TuningProgram";
  }
  protected:
  explicit TuningProgram(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDirFieldNumber = 1,
    kTuningSpaceFieldNumber = 2,
    kPrecisionFieldNumber = 3,
    kVelLevelMaxFieldNumber = 4,
  };
  // string file_dir = 1;
  void clear_file_dir() ;
  const std::string& file_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_dir(Arg_&& arg, Args_... args);
  std::string* mutable_file_dir();
  PROTOBUF_NODISCARD std::string* release_file_dir();
  void set_allocated_file_dir(std::string* ptr);

  private:
  const std::string& _internal_file_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_dir(
      const std::string& value);
  std::string* _internal_mutable_file_dir();

  public:
  // .Nrmk.IndyFramework.TuningSpace tuning_space = 2;
  void clear_tuning_space() ;
  ::Nrmk::IndyFramework::TuningSpace tuning_space() const;
  void set_tuning_space(::Nrmk::IndyFramework::TuningSpace value);

  private:
  ::Nrmk::IndyFramework::TuningSpace _internal_tuning_space() const;
  void _internal_set_tuning_space(::Nrmk::IndyFramework::TuningSpace value);

  public:
  // .Nrmk.IndyFramework.TuningPrecision precision = 3;
  void clear_precision() ;
  ::Nrmk::IndyFramework::TuningPrecision precision() const;
  void set_precision(::Nrmk::IndyFramework::TuningPrecision value);

  private:
  ::Nrmk::IndyFramework::TuningPrecision _internal_precision() const;
  void _internal_set_precision(::Nrmk::IndyFramework::TuningPrecision value);

  public:
  // uint32 vel_level_max = 4;
  void clear_vel_level_max() ;
  ::uint32_t vel_level_max() const;
  void set_vel_level_max(::uint32_t value);

  private:
  ::uint32_t _internal_vel_level_max() const;
  void _internal_set_vel_level_max(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TuningProgram)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr file_dir_;
    int tuning_space_;
    int precision_;
    ::uint32_t vel_level_max_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CollisionSensLevel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CollisionSensLevel) */ {
 public:
  inline CollisionSensLevel() : CollisionSensLevel(nullptr) {}
  ~CollisionSensLevel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollisionSensLevel(::google::protobuf::internal::ConstantInitialized);

  CollisionSensLevel(const CollisionSensLevel& from);
  CollisionSensLevel(CollisionSensLevel&& from) noexcept
    : CollisionSensLevel() {
    *this = ::std::move(from);
  }

  inline CollisionSensLevel& operator=(const CollisionSensLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollisionSensLevel& operator=(CollisionSensLevel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollisionSensLevel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollisionSensLevel* internal_default_instance() {
    return reinterpret_cast<const CollisionSensLevel*>(
               &_CollisionSensLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    243;

  friend void swap(CollisionSensLevel& a, CollisionSensLevel& b) {
    a.Swap(&b);
  }
  inline void Swap(CollisionSensLevel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollisionSensLevel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollisionSensLevel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollisionSensLevel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollisionSensLevel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollisionSensLevel& from) {
    CollisionSensLevel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollisionSensLevel* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CollisionSensLevel";
  }
  protected:
  explicit CollisionSensLevel(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelFieldNumber = 1,
  };
  // uint32 level = 1;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CollisionSensLevel)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CollisionPolicy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CollisionPolicy) */ {
 public:
  inline CollisionPolicy() : CollisionPolicy(nullptr) {}
  ~CollisionPolicy() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollisionPolicy(::google::protobuf::internal::ConstantInitialized);

  CollisionPolicy(const CollisionPolicy& from);
  CollisionPolicy(CollisionPolicy&& from) noexcept
    : CollisionPolicy() {
    *this = ::std::move(from);
  }

  inline CollisionPolicy& operator=(const CollisionPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollisionPolicy& operator=(CollisionPolicy&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollisionPolicy& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollisionPolicy* internal_default_instance() {
    return reinterpret_cast<const CollisionPolicy*>(
               &_CollisionPolicy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    244;

  friend void swap(CollisionPolicy& a, CollisionPolicy& b) {
    a.Swap(&b);
  }
  inline void Swap(CollisionPolicy* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollisionPolicy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollisionPolicy* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollisionPolicy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollisionPolicy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollisionPolicy& from) {
    CollisionPolicy::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollisionPolicy* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CollisionPolicy";
  }
  protected:
  explicit CollisionPolicy(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPolicyFieldNumber = 1,
    kSleepTimeFieldNumber = 2,
  };
  // .IndyFramework.Protobuf.HRI.CollisionPolicyType policy = 1;
  void clear_policy() ;
  ::IndyFramework::Protobuf::HRI::CollisionPolicyType policy() const;
  void set_policy(::IndyFramework::Protobuf::HRI::CollisionPolicyType value);

  private:
  ::IndyFramework::Protobuf::HRI::CollisionPolicyType _internal_policy() const;
  void _internal_set_policy(::IndyFramework::Protobuf::HRI::CollisionPolicyType value);

  public:
  // float sleep_time = 2;
  void clear_sleep_time() ;
  float sleep_time() const;
  void set_sleep_time(float value);

  private:
  float _internal_sleep_time() const;
  void _internal_set_sleep_time(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CollisionPolicy)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int policy_;
    float sleep_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class CollisionThresholds final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.CollisionThresholds) */ {
 public:
  inline CollisionThresholds() : CollisionThresholds(nullptr) {}
  ~CollisionThresholds() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollisionThresholds(::google::protobuf::internal::ConstantInitialized);

  CollisionThresholds(const CollisionThresholds& from);
  CollisionThresholds(CollisionThresholds&& from) noexcept
    : CollisionThresholds() {
    *this = ::std::move(from);
  }

  inline CollisionThresholds& operator=(const CollisionThresholds& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollisionThresholds& operator=(CollisionThresholds&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollisionThresholds& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollisionThresholds* internal_default_instance() {
    return reinterpret_cast<const CollisionThresholds*>(
               &_CollisionThresholds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    245;

  friend void swap(CollisionThresholds& a, CollisionThresholds& b) {
    a.Swap(&b);
  }
  inline void Swap(CollisionThresholds* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollisionThresholds* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollisionThresholds* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollisionThresholds>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollisionThresholds& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollisionThresholds& from) {
    CollisionThresholds::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollisionThresholds* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.CollisionThresholds";
  }
  protected:
  explicit CollisionThresholds(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJTorqueBasesFieldNumber = 1,
    kJTorqueTangentsFieldNumber = 2,
    kTTorqueBasesFieldNumber = 3,
    kTTorqueTangentsFieldNumber = 4,
    kErrorBasesFieldNumber = 5,
    kErrorTangentsFieldNumber = 6,
    kTConstvelTorqueBasesFieldNumber = 7,
    kTConstvelTorqueTangentsFieldNumber = 8,
    kTConveyorTorqueBasesFieldNumber = 9,
    kTConveyorTorqueTangentsFieldNumber = 10,
  };
  // repeated float j_torque_bases = 1;
  int j_torque_bases_size() const;
  private:
  int _internal_j_torque_bases_size() const;

  public:
  void clear_j_torque_bases() ;
  float j_torque_bases(int index) const;
  void set_j_torque_bases(int index, float value);
  void add_j_torque_bases(float value);
  const ::google::protobuf::RepeatedField<float>& j_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* mutable_j_torque_bases();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_j_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_j_torque_bases();

  public:
  // repeated float j_torque_tangents = 2;
  int j_torque_tangents_size() const;
  private:
  int _internal_j_torque_tangents_size() const;

  public:
  void clear_j_torque_tangents() ;
  float j_torque_tangents(int index) const;
  void set_j_torque_tangents(int index, float value);
  void add_j_torque_tangents(float value);
  const ::google::protobuf::RepeatedField<float>& j_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* mutable_j_torque_tangents();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_j_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_j_torque_tangents();

  public:
  // repeated float t_torque_bases = 3;
  int t_torque_bases_size() const;
  private:
  int _internal_t_torque_bases_size() const;

  public:
  void clear_t_torque_bases() ;
  float t_torque_bases(int index) const;
  void set_t_torque_bases(int index, float value);
  void add_t_torque_bases(float value);
  const ::google::protobuf::RepeatedField<float>& t_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_torque_bases();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_torque_bases();

  public:
  // repeated float t_torque_tangents = 4;
  int t_torque_tangents_size() const;
  private:
  int _internal_t_torque_tangents_size() const;

  public:
  void clear_t_torque_tangents() ;
  float t_torque_tangents(int index) const;
  void set_t_torque_tangents(int index, float value);
  void add_t_torque_tangents(float value);
  const ::google::protobuf::RepeatedField<float>& t_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_torque_tangents();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_torque_tangents();

  public:
  // repeated float error_bases = 5;
  int error_bases_size() const;
  private:
  int _internal_error_bases_size() const;

  public:
  void clear_error_bases() ;
  float error_bases(int index) const;
  void set_error_bases(int index, float value);
  void add_error_bases(float value);
  const ::google::protobuf::RepeatedField<float>& error_bases() const;
  ::google::protobuf::RepeatedField<float>* mutable_error_bases();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_error_bases() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_error_bases();

  public:
  // repeated float error_tangents = 6;
  int error_tangents_size() const;
  private:
  int _internal_error_tangents_size() const;

  public:
  void clear_error_tangents() ;
  float error_tangents(int index) const;
  void set_error_tangents(int index, float value);
  void add_error_tangents(float value);
  const ::google::protobuf::RepeatedField<float>& error_tangents() const;
  ::google::protobuf::RepeatedField<float>* mutable_error_tangents();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_error_tangents() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_error_tangents();

  public:
  // repeated float t_constvel_torque_bases = 7;
  int t_constvel_torque_bases_size() const;
  private:
  int _internal_t_constvel_torque_bases_size() const;

  public:
  void clear_t_constvel_torque_bases() ;
  float t_constvel_torque_bases(int index) const;
  void set_t_constvel_torque_bases(int index, float value);
  void add_t_constvel_torque_bases(float value);
  const ::google::protobuf::RepeatedField<float>& t_constvel_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_constvel_torque_bases();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_constvel_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_constvel_torque_bases();

  public:
  // repeated float t_constvel_torque_tangents = 8;
  int t_constvel_torque_tangents_size() const;
  private:
  int _internal_t_constvel_torque_tangents_size() const;

  public:
  void clear_t_constvel_torque_tangents() ;
  float t_constvel_torque_tangents(int index) const;
  void set_t_constvel_torque_tangents(int index, float value);
  void add_t_constvel_torque_tangents(float value);
  const ::google::protobuf::RepeatedField<float>& t_constvel_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_constvel_torque_tangents();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_constvel_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_constvel_torque_tangents();

  public:
  // repeated float t_conveyor_torque_bases = 9;
  int t_conveyor_torque_bases_size() const;
  private:
  int _internal_t_conveyor_torque_bases_size() const;

  public:
  void clear_t_conveyor_torque_bases() ;
  float t_conveyor_torque_bases(int index) const;
  void set_t_conveyor_torque_bases(int index, float value);
  void add_t_conveyor_torque_bases(float value);
  const ::google::protobuf::RepeatedField<float>& t_conveyor_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_conveyor_torque_bases();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_conveyor_torque_bases() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_conveyor_torque_bases();

  public:
  // repeated float t_conveyor_torque_tangents = 10;
  int t_conveyor_torque_tangents_size() const;
  private:
  int _internal_t_conveyor_torque_tangents_size() const;

  public:
  void clear_t_conveyor_torque_tangents() ;
  float t_conveyor_torque_tangents(int index) const;
  void set_t_conveyor_torque_tangents(int index, float value);
  void add_t_conveyor_torque_tangents(float value);
  const ::google::protobuf::RepeatedField<float>& t_conveyor_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* mutable_t_conveyor_torque_tangents();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_t_conveyor_torque_tangents() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_t_conveyor_torque_tangents();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.CollisionThresholds)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> j_torque_bases_;
    ::google::protobuf::RepeatedField<float> j_torque_tangents_;
    ::google::protobuf::RepeatedField<float> t_torque_bases_;
    ::google::protobuf::RepeatedField<float> t_torque_tangents_;
    ::google::protobuf::RepeatedField<float> error_bases_;
    ::google::protobuf::RepeatedField<float> error_tangents_;
    ::google::protobuf::RepeatedField<float> t_constvel_torque_bases_;
    ::google::protobuf::RepeatedField<float> t_constvel_torque_tangents_;
    ::google::protobuf::RepeatedField<float> t_conveyor_torque_bases_;
    ::google::protobuf::RepeatedField<float> t_conveyor_torque_tangents_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DigitalSignal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.DigitalSignal) */ {
 public:
  inline DigitalSignal() : DigitalSignal(nullptr) {}
  ~DigitalSignal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DigitalSignal(::google::protobuf::internal::ConstantInitialized);

  DigitalSignal(const DigitalSignal& from);
  DigitalSignal(DigitalSignal&& from) noexcept
    : DigitalSignal() {
    *this = ::std::move(from);
  }

  inline DigitalSignal& operator=(const DigitalSignal& from) {
    CopyFrom(from);
    return *this;
  }
  inline DigitalSignal& operator=(DigitalSignal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DigitalSignal& default_instance() {
    return *internal_default_instance();
  }
  static inline const DigitalSignal* internal_default_instance() {
    return reinterpret_cast<const DigitalSignal*>(
               &_DigitalSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    246;

  friend void swap(DigitalSignal& a, DigitalSignal& b) {
    a.Swap(&b);
  }
  inline void Swap(DigitalSignal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DigitalSignal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DigitalSignal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DigitalSignal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DigitalSignal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DigitalSignal& from) {
    DigitalSignal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigitalSignal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.DigitalSignal";
  }
  protected:
  explicit DigitalSignal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // int32 address = 1;
  void clear_address() ;
  ::int32_t address() const;
  void set_address(::int32_t value);

  private:
  ::int32_t _internal_address() const;
  void _internal_set_address(::int32_t value);

  public:
  // int32 state = 2;
  void clear_state() ;
  ::int32_t state() const;
  void set_state(::int32_t value);

  private:
  ::int32_t _internal_state() const;
  void _internal_set_state(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.DigitalSignal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t address_;
    ::int32_t state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class AnalogSignal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.AnalogSignal) */ {
 public:
  inline AnalogSignal() : AnalogSignal(nullptr) {}
  ~AnalogSignal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AnalogSignal(::google::protobuf::internal::ConstantInitialized);

  AnalogSignal(const AnalogSignal& from);
  AnalogSignal(AnalogSignal&& from) noexcept
    : AnalogSignal() {
    *this = ::std::move(from);
  }

  inline AnalogSignal& operator=(const AnalogSignal& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnalogSignal& operator=(AnalogSignal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AnalogSignal& default_instance() {
    return *internal_default_instance();
  }
  static inline const AnalogSignal* internal_default_instance() {
    return reinterpret_cast<const AnalogSignal*>(
               &_AnalogSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    247;

  friend void swap(AnalogSignal& a, AnalogSignal& b) {
    a.Swap(&b);
  }
  inline void Swap(AnalogSignal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnalogSignal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AnalogSignal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AnalogSignal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AnalogSignal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AnalogSignal& from) {
    AnalogSignal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnalogSignal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.AnalogSignal";
  }
  protected:
  explicit AnalogSignal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 1,
    kVoltageFieldNumber = 2,
  };
  // int32 address = 1;
  void clear_address() ;
  ::int32_t address() const;
  void set_address(::int32_t value);

  private:
  ::int32_t _internal_address() const;
  void _internal_set_address(::int32_t value);

  public:
  // int32 voltage = 2;
  void clear_voltage() ;
  ::int32_t voltage() const;
  void set_voltage(::int32_t value);

  private:
  ::int32_t _internal_voltage() const;
  void _internal_set_voltage(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.AnalogSignal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t address_;
    ::int32_t voltage_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DOSignals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.DOSignals) */ {
 public:
  inline DOSignals() : DOSignals(nullptr) {}
  ~DOSignals() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DOSignals(::google::protobuf::internal::ConstantInitialized);

  DOSignals(const DOSignals& from);
  DOSignals(DOSignals&& from) noexcept
    : DOSignals() {
    *this = ::std::move(from);
  }

  inline DOSignals& operator=(const DOSignals& from) {
    CopyFrom(from);
    return *this;
  }
  inline DOSignals& operator=(DOSignals&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DOSignals& default_instance() {
    return *internal_default_instance();
  }
  static inline const DOSignals* internal_default_instance() {
    return reinterpret_cast<const DOSignals*>(
               &_DOSignals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    248;

  friend void swap(DOSignals& a, DOSignals& b) {
    a.Swap(&b);
  }
  inline void Swap(DOSignals* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DOSignals* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DOSignals* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DOSignals>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DOSignals& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DOSignals& from) {
    DOSignals::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DOSignals* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.DOSignals";
  }
  protected:
  explicit DOSignals(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignalsFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.DigitalSignal signals = 1;
  int signals_size() const;
  private:
  int _internal_signals_size() const;

  public:
  void clear_signals() ;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* mutable_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
      mutable_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>& _internal_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>* _internal_mutable_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::DigitalSignal& signals(int index) const;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* add_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
      signals() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.DOSignals)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal > signals_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class AOSignals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.AOSignals) */ {
 public:
  inline AOSignals() : AOSignals(nullptr) {}
  ~AOSignals() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AOSignals(::google::protobuf::internal::ConstantInitialized);

  AOSignals(const AOSignals& from);
  AOSignals(AOSignals&& from) noexcept
    : AOSignals() {
    *this = ::std::move(from);
  }

  inline AOSignals& operator=(const AOSignals& from) {
    CopyFrom(from);
    return *this;
  }
  inline AOSignals& operator=(AOSignals&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AOSignals& default_instance() {
    return *internal_default_instance();
  }
  static inline const AOSignals* internal_default_instance() {
    return reinterpret_cast<const AOSignals*>(
               &_AOSignals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    249;

  friend void swap(AOSignals& a, AOSignals& b) {
    a.Swap(&b);
  }
  inline void Swap(AOSignals* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AOSignals* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AOSignals* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AOSignals>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AOSignals& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AOSignals& from) {
    AOSignals::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AOSignals* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.AOSignals";
  }
  protected:
  explicit AOSignals(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignalsFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.AnalogSignal signals = 1;
  int signals_size() const;
  private:
  int _internal_signals_size() const;

  public:
  void clear_signals() ;
  ::IndyFramework::Protobuf::HRI::AnalogSignal* mutable_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >*
      mutable_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>& _internal_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>* _internal_mutable_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::AnalogSignal& signals(int index) const;
  ::IndyFramework::Protobuf::HRI::AnalogSignal* add_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >&
      signals() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.AOSignals)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal > signals_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EndtoolSignal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.EndtoolSignal) */ {
 public:
  inline EndtoolSignal() : EndtoolSignal(nullptr) {}
  ~EndtoolSignal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EndtoolSignal(::google::protobuf::internal::ConstantInitialized);

  EndtoolSignal(const EndtoolSignal& from);
  EndtoolSignal(EndtoolSignal&& from) noexcept
    : EndtoolSignal() {
    *this = ::std::move(from);
  }

  inline EndtoolSignal& operator=(const EndtoolSignal& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolSignal& operator=(EndtoolSignal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EndtoolSignal& default_instance() {
    return *internal_default_instance();
  }
  static inline const EndtoolSignal* internal_default_instance() {
    return reinterpret_cast<const EndtoolSignal*>(
               &_EndtoolSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    250;

  friend void swap(EndtoolSignal& a, EndtoolSignal& b) {
    a.Swap(&b);
  }
  inline void Swap(EndtoolSignal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EndtoolSignal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EndtoolSignal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EndtoolSignal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EndtoolSignal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EndtoolSignal& from) {
    EndtoolSignal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolSignal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.EndtoolSignal";
  }
  protected:
  explicit EndtoolSignal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 2,
    kPortFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.EndtoolState states = 2;
  int states_size() const;
  private:
  int _internal_states_size() const;

  public:
  void clear_states() ;
  public:
  ::IndyFramework::Protobuf::HRI::EndtoolState states(int index) const;
  void set_states(int index, ::IndyFramework::Protobuf::HRI::EndtoolState value);
  void add_states(::IndyFramework::Protobuf::HRI::EndtoolState value);
  const ::google::protobuf::RepeatedField<int>& states() const;
  ::google::protobuf::RepeatedField<int>* mutable_states();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_states() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_states();

  public:
  // string port = 1;
  void clear_port() ;
  const std::string& port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port(Arg_&& arg, Args_... args);
  std::string* mutable_port();
  PROTOBUF_NODISCARD std::string* release_port();
  void set_allocated_port(std::string* ptr);

  private:
  const std::string& _internal_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port(
      const std::string& value);
  std::string* _internal_mutable_port();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.EndtoolSignal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 53, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<int> states_;
    mutable ::google::protobuf::internal::CachedSize _states_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr port_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class EndtoolSignalList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.EndtoolSignalList) */ {
 public:
  inline EndtoolSignalList() : EndtoolSignalList(nullptr) {}
  ~EndtoolSignalList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EndtoolSignalList(::google::protobuf::internal::ConstantInitialized);

  EndtoolSignalList(const EndtoolSignalList& from);
  EndtoolSignalList(EndtoolSignalList&& from) noexcept
    : EndtoolSignalList() {
    *this = ::std::move(from);
  }

  inline EndtoolSignalList& operator=(const EndtoolSignalList& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolSignalList& operator=(EndtoolSignalList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EndtoolSignalList& default_instance() {
    return *internal_default_instance();
  }
  static inline const EndtoolSignalList* internal_default_instance() {
    return reinterpret_cast<const EndtoolSignalList*>(
               &_EndtoolSignalList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    251;

  friend void swap(EndtoolSignalList& a, EndtoolSignalList& b) {
    a.Swap(&b);
  }
  inline void Swap(EndtoolSignalList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EndtoolSignalList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EndtoolSignalList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EndtoolSignalList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EndtoolSignalList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EndtoolSignalList& from) {
    EndtoolSignalList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolSignalList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.EndtoolSignalList";
  }
  protected:
  explicit EndtoolSignalList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignalsFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.EndtoolSignal signals = 1;
  int signals_size() const;
  private:
  int _internal_signals_size() const;

  public:
  void clear_signals() ;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* mutable_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
      mutable_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>& _internal_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>* _internal_mutable_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::EndtoolSignal& signals(int index) const;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* add_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
      signals() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.EndtoolSignalList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal > signals_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ModbusCommand final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ModbusCommand) */ {
 public:
  inline ModbusCommand() : ModbusCommand(nullptr) {}
  ~ModbusCommand() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModbusCommand(::google::protobuf::internal::ConstantInitialized);

  ModbusCommand(const ModbusCommand& from);
  ModbusCommand(ModbusCommand&& from) noexcept
    : ModbusCommand() {
    *this = ::std::move(from);
  }

  inline ModbusCommand& operator=(const ModbusCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModbusCommand& operator=(ModbusCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModbusCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModbusCommand* internal_default_instance() {
    return reinterpret_cast<const ModbusCommand*>(
               &_ModbusCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    252;

  friend void swap(ModbusCommand& a, ModbusCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ModbusCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModbusCommand* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModbusCommand* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModbusCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModbusCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ModbusCommand& from) {
    ModbusCommand::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModbusCommand* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ModbusCommand";
  }
  protected:
  explicit ModbusCommand(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignalsFieldNumber = 2,
    kServerFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.ModbusSignal signals = 2;
  int signals_size() const;
  private:
  int _internal_signals_size() const;

  public:
  void clear_signals() ;
  ::IndyFramework::Protobuf::HRI::ModbusSignal* mutable_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusSignal >*
      mutable_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusSignal>& _internal_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusSignal>* _internal_mutable_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::ModbusSignal& signals(int index) const;
  ::IndyFramework::Protobuf::HRI::ModbusSignal* add_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusSignal >&
      signals() const;
  // string server = 1;
  void clear_server() ;
  const std::string& server() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server(Arg_&& arg, Args_... args);
  std::string* mutable_server();
  PROTOBUF_NODISCARD std::string* release_server();
  void set_allocated_server(std::string* ptr);

  private:
  const std::string& _internal_server() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server(
      const std::string& value);
  std::string* _internal_mutable_server();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ModbusCommand)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusSignal > signals_;
    ::google::protobuf::internal::ArenaStringPtr server_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ModbusSignal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ModbusSignal) */ {
 public:
  inline ModbusSignal() : ModbusSignal(nullptr) {}
  ~ModbusSignal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModbusSignal(::google::protobuf::internal::ConstantInitialized);

  ModbusSignal(const ModbusSignal& from);
  ModbusSignal(ModbusSignal&& from) noexcept
    : ModbusSignal() {
    *this = ::std::move(from);
  }

  inline ModbusSignal& operator=(const ModbusSignal& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModbusSignal& operator=(ModbusSignal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModbusSignal& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModbusSignal* internal_default_instance() {
    return reinterpret_cast<const ModbusSignal*>(
               &_ModbusSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    253;

  friend void swap(ModbusSignal& a, ModbusSignal& b) {
    a.Swap(&b);
  }
  inline void Swap(ModbusSignal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModbusSignal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModbusSignal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModbusSignal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModbusSignal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ModbusSignal& from) {
    ModbusSignal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModbusSignal* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ModbusSignal";
  }
  protected:
  explicit ModbusSignal(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // int32 addr = 1;
  void clear_addr() ;
  ::int32_t addr() const;
  void set_addr(::int32_t value);

  private:
  ::int32_t _internal_addr() const;
  void _internal_set_addr(::int32_t value);

  public:
  // int32 value = 2;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ModbusSignal)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t addr_;
    ::int32_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Tool final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Tool) */ {
 public:
  inline Tool() : Tool(nullptr) {}
  ~Tool() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Tool(::google::protobuf::internal::ConstantInitialized);

  Tool(const Tool& from);
  Tool(Tool&& from) noexcept
    : Tool() {
    *this = ::std::move(from);
  }

  inline Tool& operator=(const Tool& from) {
    CopyFrom(from);
    return *this;
  }
  inline Tool& operator=(Tool&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Tool& default_instance() {
    return *internal_default_instance();
  }
  static inline const Tool* internal_default_instance() {
    return reinterpret_cast<const Tool*>(
               &_Tool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    254;

  friend void swap(Tool& a, Tool& b) {
    a.Swap(&b);
  }
  inline void Swap(Tool* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Tool* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Tool* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Tool>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Tool& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Tool& from) {
    Tool::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Tool* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Tool";
  }
  protected:
  explicit Tool(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoSignalsFieldNumber = 3,
    kEnddoSignalsFieldNumber = 4,
    kAoSignalsFieldNumber = 5,
    kEndaoSignalsFieldNumber = 6,
    kExpressionFieldNumber = 7,
    kGripperSignalsFieldNumber = 8,
    kModbusSignalsFieldNumber = 9,
    kNameFieldNumber = 1,
    kExecuteTimeFieldNumber = 2,
  };
  // repeated .IndyFramework.Protobuf.HRI.DigitalSignal do_signals = 3;
  int do_signals_size() const;
  private:
  int _internal_do_signals_size() const;

  public:
  void clear_do_signals() ;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* mutable_do_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
      mutable_do_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>& _internal_do_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>* _internal_mutable_do_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::DigitalSignal& do_signals(int index) const;
  ::IndyFramework::Protobuf::HRI::DigitalSignal* add_do_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
      do_signals() const;
  // repeated .IndyFramework.Protobuf.HRI.EndtoolSignal enddo_signals = 4;
  int enddo_signals_size() const;
  private:
  int _internal_enddo_signals_size() const;

  public:
  void clear_enddo_signals() ;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* mutable_enddo_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
      mutable_enddo_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>& _internal_enddo_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>* _internal_mutable_enddo_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::EndtoolSignal& enddo_signals(int index) const;
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* add_enddo_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
      enddo_signals() const;
  // repeated .IndyFramework.Protobuf.HRI.AnalogSignal ao_signals = 5;
  int ao_signals_size() const;
  private:
  int _internal_ao_signals_size() const;

  public:
  void clear_ao_signals() ;
  ::IndyFramework::Protobuf::HRI::AnalogSignal* mutable_ao_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >*
      mutable_ao_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>& _internal_ao_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>* _internal_mutable_ao_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::AnalogSignal& ao_signals(int index) const;
  ::IndyFramework::Protobuf::HRI::AnalogSignal* add_ao_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >&
      ao_signals() const;
  // repeated .IndyFramework.Protobuf.HRI.AnalogSignal endao_signals = 6;
  int endao_signals_size() const;
  private:
  int _internal_endao_signals_size() const;

  public:
  void clear_endao_signals() ;
  ::IndyFramework::Protobuf::HRI::AnalogSignal* mutable_endao_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >*
      mutable_endao_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>& _internal_endao_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>* _internal_mutable_endao_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::AnalogSignal& endao_signals(int index) const;
  ::IndyFramework::Protobuf::HRI::AnalogSignal* add_endao_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >&
      endao_signals() const;
  // repeated string expression = 7;
  int expression_size() const;
  private:
  int _internal_expression_size() const;

  public:
  void clear_expression() ;
  const std::string& expression(int index) const;
  std::string* mutable_expression(int index);
  void set_expression(int index, const std::string& value);
  void set_expression(int index, std::string&& value);
  void set_expression(int index, const char* value);
  void set_expression(int index, const char* value, std::size_t size);
  void set_expression(int index, absl::string_view value);
  std::string* add_expression();
  void add_expression(const std::string& value);
  void add_expression(std::string&& value);
  void add_expression(const char* value);
  void add_expression(const char* value, std::size_t size);
  void add_expression(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& expression() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_expression();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_expression() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_expression();

  public:
  // repeated .IndyFramework.Protobuf.HRI.GripperCommand gripper_signals = 8;
  int gripper_signals_size() const;
  private:
  int _internal_gripper_signals_size() const;

  public:
  void clear_gripper_signals() ;
  ::IndyFramework::Protobuf::HRI::GripperCommand* mutable_gripper_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GripperCommand >*
      mutable_gripper_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GripperCommand>& _internal_gripper_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GripperCommand>* _internal_mutable_gripper_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::GripperCommand& gripper_signals(int index) const;
  ::IndyFramework::Protobuf::HRI::GripperCommand* add_gripper_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GripperCommand >&
      gripper_signals() const;
  // repeated .IndyFramework.Protobuf.HRI.ModbusCommand modbus_signals = 9;
  int modbus_signals_size() const;
  private:
  int _internal_modbus_signals_size() const;

  public:
  void clear_modbus_signals() ;
  ::IndyFramework::Protobuf::HRI::ModbusCommand* mutable_modbus_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusCommand >*
      mutable_modbus_signals();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusCommand>& _internal_modbus_signals() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusCommand>* _internal_mutable_modbus_signals();
  public:
  const ::IndyFramework::Protobuf::HRI::ModbusCommand& modbus_signals(int index) const;
  ::IndyFramework::Protobuf::HRI::ModbusCommand* add_modbus_signals();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusCommand >&
      modbus_signals() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // float execute_time = 2;
  void clear_execute_time() ;
  float execute_time() const;
  void set_execute_time(float value);

  private:
  float _internal_execute_time() const;
  void _internal_set_execute_time(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Tool)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 6, 62, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal > do_signals_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal > enddo_signals_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal > ao_signals_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal > endao_signals_;
    ::google::protobuf::RepeatedPtrField<std::string> expression_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GripperCommand > gripper_signals_;
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusCommand > modbus_signals_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    float execute_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ToolList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ToolList) */ {
 public:
  inline ToolList() : ToolList(nullptr) {}
  ~ToolList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ToolList(::google::protobuf::internal::ConstantInitialized);

  ToolList(const ToolList& from);
  ToolList(ToolList&& from) noexcept
    : ToolList() {
    *this = ::std::move(from);
  }

  inline ToolList& operator=(const ToolList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ToolList& operator=(ToolList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ToolList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ToolList* internal_default_instance() {
    return reinterpret_cast<const ToolList*>(
               &_ToolList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    255;

  friend void swap(ToolList& a, ToolList& b) {
    a.Swap(&b);
  }
  inline void Swap(ToolList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ToolList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ToolList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ToolList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ToolList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ToolList& from) {
    ToolList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ToolList";
  }
  protected:
  explicit ToolList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolsFieldNumber = 1,
  };
  // repeated .IndyFramework.Protobuf.HRI.Tool tools = 1;
  int tools_size() const;
  private:
  int _internal_tools_size() const;

  public:
  void clear_tools() ;
  ::IndyFramework::Protobuf::HRI::Tool* mutable_tools(int index);
  ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Tool >*
      mutable_tools();
  private:
  const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Tool>& _internal_tools() const;
  ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Tool>* _internal_mutable_tools();
  public:
  const ::IndyFramework::Protobuf::HRI::Tool& tools(int index) const;
  ::IndyFramework::Protobuf::HRI::Tool* add_tools();
  const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Tool >&
      tools() const;
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ToolList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Tool > tools_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TeleOpDevice final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TeleOpDevice) */ {
 public:
  inline TeleOpDevice() : TeleOpDevice(nullptr) {}
  ~TeleOpDevice() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TeleOpDevice(::google::protobuf::internal::ConstantInitialized);

  TeleOpDevice(const TeleOpDevice& from);
  TeleOpDevice(TeleOpDevice&& from) noexcept
    : TeleOpDevice() {
    *this = ::std::move(from);
  }

  inline TeleOpDevice& operator=(const TeleOpDevice& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeleOpDevice& operator=(TeleOpDevice&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TeleOpDevice& default_instance() {
    return *internal_default_instance();
  }
  static inline const TeleOpDevice* internal_default_instance() {
    return reinterpret_cast<const TeleOpDevice*>(
               &_TeleOpDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    256;

  friend void swap(TeleOpDevice& a, TeleOpDevice& b) {
    a.Swap(&b);
  }
  inline void Swap(TeleOpDevice* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TeleOpDevice* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TeleOpDevice* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TeleOpDevice>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TeleOpDevice& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TeleOpDevice& from) {
    TeleOpDevice::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeleOpDevice* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TeleOpDevice";
  }
  protected:
  explicit TeleOpDevice(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using TeleOpDeviceType = TeleOpDevice_TeleOpDeviceType;
  static constexpr TeleOpDeviceType NONE = TeleOpDevice_TeleOpDeviceType_NONE;
  static constexpr TeleOpDeviceType VIVE = TeleOpDevice_TeleOpDeviceType_VIVE;
  static inline bool TeleOpDeviceType_IsValid(int value) {
    return TeleOpDevice_TeleOpDeviceType_IsValid(value);
  }
  static constexpr TeleOpDeviceType TeleOpDeviceType_MIN = TeleOpDevice_TeleOpDeviceType_TeleOpDeviceType_MIN;
  static constexpr TeleOpDeviceType TeleOpDeviceType_MAX = TeleOpDevice_TeleOpDeviceType_TeleOpDeviceType_MAX;
  static constexpr int TeleOpDeviceType_ARRAYSIZE = TeleOpDevice_TeleOpDeviceType_TeleOpDeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* TeleOpDeviceType_descriptor() {
    return TeleOpDevice_TeleOpDeviceType_descriptor();
  }
  template <typename T>
  static inline const std::string& TeleOpDeviceType_Name(T value) {
    return TeleOpDevice_TeleOpDeviceType_Name(value);
  }
  static inline bool TeleOpDeviceType_Parse(absl::string_view name, TeleOpDeviceType* value) {
    return TeleOpDevice_TeleOpDeviceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kIpFieldNumber = 3,
    kTypeFieldNumber = 2,
    kPortFieldNumber = 4,
    kConnectedFieldNumber = 5,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string ip = 3;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* ptr);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // .IndyFramework.Protobuf.HRI.TeleOpDevice.TeleOpDeviceType type = 2;
  void clear_type() ;
  ::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType type() const;
  void set_type(::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType value);

  private:
  ::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType _internal_type() const;
  void _internal_set_type(::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType value);

  public:
  // uint32 port = 4;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // bool connected = 5;
  void clear_connected() ;
  bool connected() const;
  void set_connected(bool value);

  private:
  bool _internal_connected() const;
  void _internal_set_connected(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TeleOpDevice)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    int type_;
    ::uint32_t port_;
    bool connected_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TeleOpState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TeleOpState) */ {
 public:
  inline TeleOpState() : TeleOpState(nullptr) {}
  ~TeleOpState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TeleOpState(::google::protobuf::internal::ConstantInitialized);

  TeleOpState(const TeleOpState& from);
  TeleOpState(TeleOpState&& from) noexcept
    : TeleOpState() {
    *this = ::std::move(from);
  }

  inline TeleOpState& operator=(const TeleOpState& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeleOpState& operator=(TeleOpState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TeleOpState& default_instance() {
    return *internal_default_instance();
  }
  static inline const TeleOpState* internal_default_instance() {
    return reinterpret_cast<const TeleOpState*>(
               &_TeleOpState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    257;

  friend void swap(TeleOpState& a, TeleOpState& b) {
    a.Swap(&b);
  }
  inline void Swap(TeleOpState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TeleOpState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TeleOpState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TeleOpState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TeleOpState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TeleOpState& from) {
    TeleOpState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeleOpState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TeleOpState";
  }
  protected:
  explicit TeleOpState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
    kMethodFieldNumber = 2,
  };
  // .IndyFramework.Protobuf.HRI.TeleMode mode = 1;
  void clear_mode() ;
  ::IndyFramework::Protobuf::HRI::TeleMode mode() const;
  void set_mode(::IndyFramework::Protobuf::HRI::TeleMode value);

  private:
  ::IndyFramework::Protobuf::HRI::TeleMode _internal_mode() const;
  void _internal_set_mode(::IndyFramework::Protobuf::HRI::TeleMode value);

  public:
  // .IndyFramework.Protobuf.HRI.TeleMethod method = 2;
  void clear_method() ;
  ::IndyFramework::Protobuf::HRI::TeleMethod method() const;
  void set_method(::IndyFramework::Protobuf::HRI::TeleMethod value);

  private:
  ::IndyFramework::Protobuf::HRI::TeleMethod _internal_method() const;
  void _internal_set_method(::IndyFramework::Protobuf::HRI::TeleMethod value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TeleOpState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int mode_;
    int method_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TeleP final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TeleP) */ {
 public:
  inline TeleP() : TeleP(nullptr) {}
  ~TeleP() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TeleP(::google::protobuf::internal::ConstantInitialized);

  TeleP(const TeleP& from);
  TeleP(TeleP&& from) noexcept
    : TeleP() {
    *this = ::std::move(from);
  }

  inline TeleP& operator=(const TeleP& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeleP& operator=(TeleP&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TeleP& default_instance() {
    return *internal_default_instance();
  }
  static inline const TeleP* internal_default_instance() {
    return reinterpret_cast<const TeleP*>(
               &_TeleP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    258;

  friend void swap(TeleP& a, TeleP& b) {
    a.Swap(&b);
  }
  inline void Swap(TeleP* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TeleP* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TeleP* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TeleP>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TeleP& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TeleP& from) {
    TeleP::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeleP* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TeleP";
  }
  protected:
  explicit TeleP(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTposFieldNumber = 1,
    kResponseFieldNumber = 100,
  };
  // repeated float tpos = 1;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TeleP)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> tpos_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TeleOpFileList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TeleOpFileList) */ {
 public:
  inline TeleOpFileList() : TeleOpFileList(nullptr) {}
  ~TeleOpFileList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TeleOpFileList(::google::protobuf::internal::ConstantInitialized);

  TeleOpFileList(const TeleOpFileList& from);
  TeleOpFileList(TeleOpFileList&& from) noexcept
    : TeleOpFileList() {
    *this = ::std::move(from);
  }

  inline TeleOpFileList& operator=(const TeleOpFileList& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeleOpFileList& operator=(TeleOpFileList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TeleOpFileList& default_instance() {
    return *internal_default_instance();
  }
  static inline const TeleOpFileList* internal_default_instance() {
    return reinterpret_cast<const TeleOpFileList*>(
               &_TeleOpFileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    259;

  friend void swap(TeleOpFileList& a, TeleOpFileList& b) {
    a.Swap(&b);
  }
  inline void Swap(TeleOpFileList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TeleOpFileList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TeleOpFileList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TeleOpFileList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TeleOpFileList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TeleOpFileList& from) {
    TeleOpFileList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeleOpFileList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TeleOpFileList";
  }
  protected:
  explicit TeleOpFileList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilesFieldNumber = 1,
    kResponseFieldNumber = 100,
  };
  // repeated string files = 1;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  const std::string& files(int index) const;
  std::string* mutable_files(int index);
  void set_files(int index, const std::string& value);
  void set_files(int index, std::string&& value);
  void set_files(int index, const char* value);
  void set_files(int index, const char* value, std::size_t size);
  void set_files(int index, absl::string_view value);
  std::string* add_files();
  void add_files(const std::string& value);
  void add_files(std::string&& value);
  void add_files(const char* value);
  void add_files(const char* value, std::size_t size);
  void add_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_files();

  public:
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TeleOpFileList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 55, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> files_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TeleFileReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TeleFileReq) */ {
 public:
  inline TeleFileReq() : TeleFileReq(nullptr) {}
  ~TeleFileReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TeleFileReq(::google::protobuf::internal::ConstantInitialized);

  TeleFileReq(const TeleFileReq& from);
  TeleFileReq(TeleFileReq&& from) noexcept
    : TeleFileReq() {
    *this = ::std::move(from);
  }

  inline TeleFileReq& operator=(const TeleFileReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeleFileReq& operator=(TeleFileReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TeleFileReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const TeleFileReq* internal_default_instance() {
    return reinterpret_cast<const TeleFileReq*>(
               &_TeleFileReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    260;

  friend void swap(TeleFileReq& a, TeleFileReq& b) {
    a.Swap(&b);
  }
  inline void Swap(TeleFileReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TeleFileReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TeleFileReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TeleFileReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TeleFileReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TeleFileReq& from) {
    TeleFileReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeleFileReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TeleFileReq";
  }
  protected:
  explicit TeleFileReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TeleFileReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 51, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TelePlayRate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TelePlayRate) */ {
 public:
  inline TelePlayRate() : TelePlayRate(nullptr) {}
  ~TelePlayRate() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TelePlayRate(::google::protobuf::internal::ConstantInitialized);

  TelePlayRate(const TelePlayRate& from);
  TelePlayRate(TelePlayRate&& from) noexcept
    : TelePlayRate() {
    *this = ::std::move(from);
  }

  inline TelePlayRate& operator=(const TelePlayRate& from) {
    CopyFrom(from);
    return *this;
  }
  inline TelePlayRate& operator=(TelePlayRate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TelePlayRate& default_instance() {
    return *internal_default_instance();
  }
  static inline const TelePlayRate* internal_default_instance() {
    return reinterpret_cast<const TelePlayRate*>(
               &_TelePlayRate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    261;

  friend void swap(TelePlayRate& a, TelePlayRate& b) {
    a.Swap(&b);
  }
  inline void Swap(TelePlayRate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TelePlayRate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TelePlayRate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TelePlayRate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TelePlayRate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TelePlayRate& from) {
    TelePlayRate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TelePlayRate* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TelePlayRate";
  }
  protected:
  explicit TelePlayRate(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRateFieldNumber = 1,
  };
  // float rate = 1;
  void clear_rate() ;
  float rate() const;
  void set_rate(float value);

  private:
  float _internal_rate() const;
  void _internal_set_rate(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TelePlayRate)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float rate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MoveTeleJReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.MoveTeleJReq) */ {
 public:
  inline MoveTeleJReq() : MoveTeleJReq(nullptr) {}
  ~MoveTeleJReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MoveTeleJReq(::google::protobuf::internal::ConstantInitialized);

  MoveTeleJReq(const MoveTeleJReq& from);
  MoveTeleJReq(MoveTeleJReq&& from) noexcept
    : MoveTeleJReq() {
    *this = ::std::move(from);
  }

  inline MoveTeleJReq& operator=(const MoveTeleJReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveTeleJReq& operator=(MoveTeleJReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveTeleJReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveTeleJReq* internal_default_instance() {
    return reinterpret_cast<const MoveTeleJReq*>(
               &_MoveTeleJReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    262;

  friend void swap(MoveTeleJReq& a, MoveTeleJReq& b) {
    a.Swap(&b);
  }
  inline void Swap(MoveTeleJReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveTeleJReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveTeleJReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MoveTeleJReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoveTeleJReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MoveTeleJReq& from) {
    MoveTeleJReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveTeleJReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.MoveTeleJReq";
  }
  protected:
  explicit MoveTeleJReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJposFieldNumber = 1,
    kVelRatioFieldNumber = 2,
    kAccRatioFieldNumber = 3,
  };
  // repeated float jpos = 1;
  int jpos_size() const;
  private:
  int _internal_jpos_size() const;

  public:
  void clear_jpos() ;
  float jpos(int index) const;
  void set_jpos(int index, float value);
  void add_jpos(float value);
  const ::google::protobuf::RepeatedField<float>& jpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_jpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_jpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_jpos();

  public:
  // float vel_ratio = 2;
  void clear_vel_ratio() ;
  float vel_ratio() const;
  void set_vel_ratio(float value);

  private:
  float _internal_vel_ratio() const;
  void _internal_set_vel_ratio(float value);

  public:
  // float acc_ratio = 3;
  void clear_acc_ratio() ;
  float acc_ratio() const;
  void set_acc_ratio(float value);

  private:
  float _internal_acc_ratio() const;
  void _internal_set_acc_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.MoveTeleJReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> jpos_;
    float vel_ratio_;
    float acc_ratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class MoveTeleLReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.MoveTeleLReq) */ {
 public:
  inline MoveTeleLReq() : MoveTeleLReq(nullptr) {}
  ~MoveTeleLReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MoveTeleLReq(::google::protobuf::internal::ConstantInitialized);

  MoveTeleLReq(const MoveTeleLReq& from);
  MoveTeleLReq(MoveTeleLReq&& from) noexcept
    : MoveTeleLReq() {
    *this = ::std::move(from);
  }

  inline MoveTeleLReq& operator=(const MoveTeleLReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveTeleLReq& operator=(MoveTeleLReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveTeleLReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveTeleLReq* internal_default_instance() {
    return reinterpret_cast<const MoveTeleLReq*>(
               &_MoveTeleLReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    263;

  friend void swap(MoveTeleLReq& a, MoveTeleLReq& b) {
    a.Swap(&b);
  }
  inline void Swap(MoveTeleLReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveTeleLReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveTeleLReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MoveTeleLReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoveTeleLReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MoveTeleLReq& from) {
    MoveTeleLReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveTeleLReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.MoveTeleLReq";
  }
  protected:
  explicit MoveTeleLReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTposFieldNumber = 1,
    kVelRatioFieldNumber = 2,
    kAccRatioFieldNumber = 3,
  };
  // repeated float tpos = 1;
  int tpos_size() const;
  private:
  int _internal_tpos_size() const;

  public:
  void clear_tpos() ;
  float tpos(int index) const;
  void set_tpos(int index, float value);
  void add_tpos(float value);
  const ::google::protobuf::RepeatedField<float>& tpos() const;
  ::google::protobuf::RepeatedField<float>* mutable_tpos();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_tpos() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_tpos();

  public:
  // float vel_ratio = 2;
  void clear_vel_ratio() ;
  float vel_ratio() const;
  void set_vel_ratio(float value);

  private:
  float _internal_vel_ratio() const;
  void _internal_set_vel_ratio(float value);

  public:
  // float acc_ratio = 3;
  void clear_acc_ratio() ;
  float acc_ratio() const;
  void set_acc_ratio(float value);

  private:
  float _internal_acc_ratio() const;
  void _internal_set_acc_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.MoveTeleLReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> tpos_;
    float vel_ratio_;
    float acc_ratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TeleOpParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TeleOpParams) */ {
 public:
  inline TeleOpParams() : TeleOpParams(nullptr) {}
  ~TeleOpParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TeleOpParams(::google::protobuf::internal::ConstantInitialized);

  TeleOpParams(const TeleOpParams& from);
  TeleOpParams(TeleOpParams&& from) noexcept
    : TeleOpParams() {
    *this = ::std::move(from);
  }

  inline TeleOpParams& operator=(const TeleOpParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeleOpParams& operator=(TeleOpParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TeleOpParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const TeleOpParams* internal_default_instance() {
    return reinterpret_cast<const TeleOpParams*>(
               &_TeleOpParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    264;

  friend void swap(TeleOpParams& a, TeleOpParams& b) {
    a.Swap(&b);
  }
  inline void Swap(TeleOpParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TeleOpParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TeleOpParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TeleOpParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TeleOpParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TeleOpParams& from) {
    TeleOpParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeleOpParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TeleOpParams";
  }
  protected:
  explicit TeleOpParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSmoothFactorFieldNumber = 1,
    kCutoffFreqFieldNumber = 2,
    kErrorGainFieldNumber = 3,
  };
  // float smooth_factor = 1;
  void clear_smooth_factor() ;
  float smooth_factor() const;
  void set_smooth_factor(float value);

  private:
  float _internal_smooth_factor() const;
  void _internal_set_smooth_factor(float value);

  public:
  // float cutoff_freq = 2;
  void clear_cutoff_freq() ;
  float cutoff_freq() const;
  void set_cutoff_freq(float value);

  private:
  float _internal_cutoff_freq() const;
  void _internal_set_cutoff_freq(float value);

  public:
  // float error_gain = 3;
  void clear_error_gain() ;
  float error_gain() const;
  void set_error_gain(float value);

  private:
  float _internal_error_gain() const;
  void _internal_set_error_gain(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TeleOpParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float smooth_factor_;
    float cutoff_freq_;
    float error_gain_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class FTSensorDevice final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.FTSensorDevice) */ {
 public:
  inline FTSensorDevice() : FTSensorDevice(nullptr) {}
  ~FTSensorDevice() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FTSensorDevice(::google::protobuf::internal::ConstantInitialized);

  FTSensorDevice(const FTSensorDevice& from);
  FTSensorDevice(FTSensorDevice&& from) noexcept
    : FTSensorDevice() {
    *this = ::std::move(from);
  }

  inline FTSensorDevice& operator=(const FTSensorDevice& from) {
    CopyFrom(from);
    return *this;
  }
  inline FTSensorDevice& operator=(FTSensorDevice&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FTSensorDevice& default_instance() {
    return *internal_default_instance();
  }
  static inline const FTSensorDevice* internal_default_instance() {
    return reinterpret_cast<const FTSensorDevice*>(
               &_FTSensorDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    265;

  friend void swap(FTSensorDevice& a, FTSensorDevice& b) {
    a.Swap(&b);
  }
  inline void Swap(FTSensorDevice* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FTSensorDevice* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FTSensorDevice* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FTSensorDevice>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FTSensorDevice& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FTSensorDevice& from) {
    FTSensorDevice::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FTSensorDevice* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.FTSensorDevice";
  }
  protected:
  explicit FTSensorDevice(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using FTSensorDeviceType = FTSensorDevice_FTSensorDeviceType;
  static constexpr FTSensorDeviceType NONE = FTSensorDevice_FTSensorDeviceType_NONE;
  static constexpr FTSensorDeviceType AFT200_D80 = FTSensorDevice_FTSensorDeviceType_AFT200_D80;
  static constexpr FTSensorDeviceType AFT200_D80_EC = FTSensorDevice_FTSensorDeviceType_AFT200_D80_EC;
  static constexpr FTSensorDeviceType RFT80_6A01 = FTSensorDevice_FTSensorDeviceType_RFT80_6A01;
  static constexpr FTSensorDeviceType RFT60_HA01 = FTSensorDevice_FTSensorDeviceType_RFT60_HA01;
  static constexpr FTSensorDeviceType HEX_E_H_QC = FTSensorDevice_FTSensorDeviceType_HEX_E_H_QC;
  static inline bool FTSensorDeviceType_IsValid(int value) {
    return FTSensorDevice_FTSensorDeviceType_IsValid(value);
  }
  static constexpr FTSensorDeviceType FTSensorDeviceType_MIN = FTSensorDevice_FTSensorDeviceType_FTSensorDeviceType_MIN;
  static constexpr FTSensorDeviceType FTSensorDeviceType_MAX = FTSensorDevice_FTSensorDeviceType_FTSensorDeviceType_MAX;
  static constexpr int FTSensorDeviceType_ARRAYSIZE = FTSensorDevice_FTSensorDeviceType_FTSensorDeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* FTSensorDeviceType_descriptor() {
    return FTSensorDevice_FTSensorDeviceType_descriptor();
  }
  template <typename T>
  static inline const std::string& FTSensorDeviceType_Name(T value) {
    return FTSensorDevice_FTSensorDeviceType_Name(value);
  }
  static inline bool FTSensorDeviceType_Parse(absl::string_view name, FTSensorDeviceType* value) {
    return FTSensorDevice_FTSensorDeviceType_Parse(name, value);
  }

  using FTSensorDeviceComType = FTSensorDevice_FTSensorDeviceComType;
  static constexpr FTSensorDeviceComType ENDTOOLCAN = FTSensorDevice_FTSensorDeviceComType_ENDTOOLCAN;
  static constexpr FTSensorDeviceComType CBCAN = FTSensorDevice_FTSensorDeviceComType_CBCAN;
  static constexpr FTSensorDeviceComType MODBUSCLIENT = FTSensorDevice_FTSensorDeviceComType_MODBUSCLIENT;
  static constexpr FTSensorDeviceComType ETHERCAT = FTSensorDevice_FTSensorDeviceComType_ETHERCAT;
  static inline bool FTSensorDeviceComType_IsValid(int value) {
    return FTSensorDevice_FTSensorDeviceComType_IsValid(value);
  }
  static constexpr FTSensorDeviceComType FTSensorDeviceComType_MIN = FTSensorDevice_FTSensorDeviceComType_FTSensorDeviceComType_MIN;
  static constexpr FTSensorDeviceComType FTSensorDeviceComType_MAX = FTSensorDevice_FTSensorDeviceComType_FTSensorDeviceComType_MAX;
  static constexpr int FTSensorDeviceComType_ARRAYSIZE = FTSensorDevice_FTSensorDeviceComType_FTSensorDeviceComType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* FTSensorDeviceComType_descriptor() {
    return FTSensorDevice_FTSensorDeviceComType_descriptor();
  }
  template <typename T>
  static inline const std::string& FTSensorDeviceComType_Name(T value) {
    return FTSensorDevice_FTSensorDeviceComType_Name(value);
  }
  static inline bool FTSensorDeviceComType_Parse(absl::string_view name, FTSensorDeviceComType* value) {
    return FTSensorDevice_FTSensorDeviceComType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kIpAddressFieldNumber = 3,
    kDevTypeFieldNumber = 1,
    kComTypeFieldNumber = 2,
    kFtFrameTranslationOffsetXFieldNumber = 11,
    kFtFrameTranslationOffsetYFieldNumber = 12,
    kFtFrameTranslationOffsetZFieldNumber = 13,
    kFtFrameRotationOffsetRFieldNumber = 14,
    kFtFrameRotationOffsetPFieldNumber = 15,
    kFtFrameRotationOffsetYFieldNumber = 16,
  };
  // string ip_address = 3;
  void clear_ip_address() ;
  const std::string& ip_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip_address(Arg_&& arg, Args_... args);
  std::string* mutable_ip_address();
  PROTOBUF_NODISCARD std::string* release_ip_address();
  void set_allocated_ip_address(std::string* ptr);

  private:
  const std::string& _internal_ip_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip_address(
      const std::string& value);
  std::string* _internal_mutable_ip_address();

  public:
  // .IndyFramework.Protobuf.HRI.FTSensorDevice.FTSensorDeviceType dev_type = 1;
  void clear_dev_type() ;
  ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType dev_type() const;
  void set_dev_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType value);

  private:
  ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType _internal_dev_type() const;
  void _internal_set_dev_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType value);

  public:
  // .IndyFramework.Protobuf.HRI.FTSensorDevice.FTSensorDeviceComType com_type = 2;
  void clear_com_type() ;
  ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType com_type() const;
  void set_com_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType value);

  private:
  ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType _internal_com_type() const;
  void _internal_set_com_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType value);

  public:
  // float ft_frame_translation_offset_x = 11;
  void clear_ft_frame_translation_offset_x() ;
  float ft_frame_translation_offset_x() const;
  void set_ft_frame_translation_offset_x(float value);

  private:
  float _internal_ft_frame_translation_offset_x() const;
  void _internal_set_ft_frame_translation_offset_x(float value);

  public:
  // float ft_frame_translation_offset_y = 12;
  void clear_ft_frame_translation_offset_y() ;
  float ft_frame_translation_offset_y() const;
  void set_ft_frame_translation_offset_y(float value);

  private:
  float _internal_ft_frame_translation_offset_y() const;
  void _internal_set_ft_frame_translation_offset_y(float value);

  public:
  // float ft_frame_translation_offset_z = 13;
  void clear_ft_frame_translation_offset_z() ;
  float ft_frame_translation_offset_z() const;
  void set_ft_frame_translation_offset_z(float value);

  private:
  float _internal_ft_frame_translation_offset_z() const;
  void _internal_set_ft_frame_translation_offset_z(float value);

  public:
  // float ft_frame_rotation_offset_r = 14;
  void clear_ft_frame_rotation_offset_r() ;
  float ft_frame_rotation_offset_r() const;
  void set_ft_frame_rotation_offset_r(float value);

  private:
  float _internal_ft_frame_rotation_offset_r() const;
  void _internal_set_ft_frame_rotation_offset_r(float value);

  public:
  // float ft_frame_rotation_offset_p = 15;
  void clear_ft_frame_rotation_offset_p() ;
  float ft_frame_rotation_offset_p() const;
  void set_ft_frame_rotation_offset_p(float value);

  private:
  float _internal_ft_frame_rotation_offset_p() const;
  void _internal_set_ft_frame_rotation_offset_p(float value);

  public:
  // float ft_frame_rotation_offset_y = 16;
  void clear_ft_frame_rotation_offset_y() ;
  float ft_frame_rotation_offset_y() const;
  void set_ft_frame_rotation_offset_y(float value);

  private:
  float _internal_ft_frame_rotation_offset_y() const;
  void _internal_set_ft_frame_rotation_offset_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.FTSensorDevice)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 0, 68, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr ip_address_;
    int dev_type_;
    int com_type_;
    float ft_frame_translation_offset_x_;
    float ft_frame_translation_offset_y_;
    float ft_frame_translation_offset_z_;
    float ft_frame_rotation_offset_r_;
    float ft_frame_rotation_offset_p_;
    float ft_frame_rotation_offset_y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class FTSensorDeviceRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.FTSensorDeviceRes) */ {
 public:
  inline FTSensorDeviceRes() : FTSensorDeviceRes(nullptr) {}
  ~FTSensorDeviceRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FTSensorDeviceRes(::google::protobuf::internal::ConstantInitialized);

  FTSensorDeviceRes(const FTSensorDeviceRes& from);
  FTSensorDeviceRes(FTSensorDeviceRes&& from) noexcept
    : FTSensorDeviceRes() {
    *this = ::std::move(from);
  }

  inline FTSensorDeviceRes& operator=(const FTSensorDeviceRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline FTSensorDeviceRes& operator=(FTSensorDeviceRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FTSensorDeviceRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const FTSensorDeviceRes* internal_default_instance() {
    return reinterpret_cast<const FTSensorDeviceRes*>(
               &_FTSensorDeviceRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    266;

  friend void swap(FTSensorDeviceRes& a, FTSensorDeviceRes& b) {
    a.Swap(&b);
  }
  inline void Swap(FTSensorDeviceRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FTSensorDeviceRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FTSensorDeviceRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FTSensorDeviceRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FTSensorDeviceRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FTSensorDeviceRes& from) {
    FTSensorDeviceRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FTSensorDeviceRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.FTSensorDeviceRes";
  }
  protected:
  explicit FTSensorDeviceRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 100,
  };
  // string msg = 100;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.FTSensorDeviceRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 56, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class FTSensorData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.FTSensorData) */ {
 public:
  inline FTSensorData() : FTSensorData(nullptr) {}
  ~FTSensorData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FTSensorData(::google::protobuf::internal::ConstantInitialized);

  FTSensorData(const FTSensorData& from);
  FTSensorData(FTSensorData&& from) noexcept
    : FTSensorData() {
    *this = ::std::move(from);
  }

  inline FTSensorData& operator=(const FTSensorData& from) {
    CopyFrom(from);
    return *this;
  }
  inline FTSensorData& operator=(FTSensorData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FTSensorData& default_instance() {
    return *internal_default_instance();
  }
  static inline const FTSensorData* internal_default_instance() {
    return reinterpret_cast<const FTSensorData*>(
               &_FTSensorData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    267;

  friend void swap(FTSensorData& a, FTSensorData& b) {
    a.Swap(&b);
  }
  inline void Swap(FTSensorData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FTSensorData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FTSensorData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FTSensorData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FTSensorData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FTSensorData& from) {
    FTSensorData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FTSensorData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.FTSensorData";
  }
  protected:
  explicit FTSensorData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 100,
    kFtFxFieldNumber = 1,
    kFtFyFieldNumber = 2,
    kFtFzFieldNumber = 3,
    kFtTxFieldNumber = 4,
    kFtTyFieldNumber = 5,
    kFtTzFieldNumber = 6,
  };
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // float ft_Fx = 1;
  void clear_ft_fx() ;
  float ft_fx() const;
  void set_ft_fx(float value);

  private:
  float _internal_ft_fx() const;
  void _internal_set_ft_fx(float value);

  public:
  // float ft_Fy = 2;
  void clear_ft_fy() ;
  float ft_fy() const;
  void set_ft_fy(float value);

  private:
  float _internal_ft_fy() const;
  void _internal_set_ft_fy(float value);

  public:
  // float ft_Fz = 3;
  void clear_ft_fz() ;
  float ft_fz() const;
  void set_ft_fz(float value);

  private:
  float _internal_ft_fz() const;
  void _internal_set_ft_fz(float value);

  public:
  // float ft_Tx = 4;
  void clear_ft_tx() ;
  float ft_tx() const;
  void set_ft_tx(float value);

  private:
  float _internal_ft_tx() const;
  void _internal_set_ft_tx(float value);

  public:
  // float ft_Ty = 5;
  void clear_ft_ty() ;
  float ft_ty() const;
  void set_ft_ty(float value);

  private:
  float _internal_ft_ty() const;
  void _internal_set_ft_ty(float value);

  public:
  // float ft_Tz = 6;
  void clear_ft_tz() ;
  float ft_tz() const;
  void set_ft_tz(float value);

  private:
  float _internal_ft_tz() const;
  void _internal_set_ft_tz(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.FTSensorData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 1, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    float ft_fx_;
    float ft_fy_;
    float ft_fz_;
    float ft_tx_;
    float ft_ty_;
    float ft_tz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GetLoadFactorsRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GetLoadFactorsRes) */ {
 public:
  inline GetLoadFactorsRes() : GetLoadFactorsRes(nullptr) {}
  ~GetLoadFactorsRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLoadFactorsRes(::google::protobuf::internal::ConstantInitialized);

  GetLoadFactorsRes(const GetLoadFactorsRes& from);
  GetLoadFactorsRes(GetLoadFactorsRes&& from) noexcept
    : GetLoadFactorsRes() {
    *this = ::std::move(from);
  }

  inline GetLoadFactorsRes& operator=(const GetLoadFactorsRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLoadFactorsRes& operator=(GetLoadFactorsRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLoadFactorsRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLoadFactorsRes* internal_default_instance() {
    return reinterpret_cast<const GetLoadFactorsRes*>(
               &_GetLoadFactorsRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    268;

  friend void swap(GetLoadFactorsRes& a, GetLoadFactorsRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLoadFactorsRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLoadFactorsRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLoadFactorsRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLoadFactorsRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLoadFactorsRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLoadFactorsRes& from) {
    GetLoadFactorsRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLoadFactorsRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GetLoadFactorsRes";
  }
  protected:
  explicit GetLoadFactorsRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPercentsFieldNumber = 1,
    kTorquesFieldNumber = 2,
    kResponseFieldNumber = 100,
  };
  // repeated int32 percents = 1;
  int percents_size() const;
  private:
  int _internal_percents_size() const;

  public:
  void clear_percents() ;
  ::int32_t percents(int index) const;
  void set_percents(int index, ::int32_t value);
  void add_percents(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& percents() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_percents();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_percents() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_percents();

  public:
  // repeated float torques = 2;
  int torques_size() const;
  private:
  int _internal_torques_size() const;

  public:
  void clear_torques() ;
  float torques(int index) const;
  void set_torques(int index, float value);
  void add_torques(float value);
  const ::google::protobuf::RepeatedField<float>& torques() const;
  ::google::protobuf::RepeatedField<float>* mutable_torques();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_torques() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_torques();

  public:
  // .IndyFramework.Protobuf.HRI.Response response = 100;
  bool has_response() const;
  void clear_response() ;
  const ::IndyFramework::Protobuf::HRI::Response& response() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Response* release_response();
  ::IndyFramework::Protobuf::HRI::Response* mutable_response();
  void set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  void unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value);
  ::IndyFramework::Protobuf::HRI::Response* unsafe_arena_release_response();

  private:
  const ::IndyFramework::Protobuf::HRI::Response& _internal_response() const;
  ::IndyFramework::Protobuf::HRI::Response* _internal_mutable_response();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GetLoadFactorsRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> percents_;
    mutable ::google::protobuf::internal::CachedSize _percents_cached_byte_size_;
    ::google::protobuf::RepeatedField<float> torques_;
    ::IndyFramework::Protobuf::HRI::Response* response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SandingStopConditionState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SandingStopConditionState) */ {
 public:
  inline SandingStopConditionState() : SandingStopConditionState(nullptr) {}
  ~SandingStopConditionState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SandingStopConditionState(::google::protobuf::internal::ConstantInitialized);

  SandingStopConditionState(const SandingStopConditionState& from);
  SandingStopConditionState(SandingStopConditionState&& from) noexcept
    : SandingStopConditionState() {
    *this = ::std::move(from);
  }

  inline SandingStopConditionState& operator=(const SandingStopConditionState& from) {
    CopyFrom(from);
    return *this;
  }
  inline SandingStopConditionState& operator=(SandingStopConditionState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SandingStopConditionState& default_instance() {
    return *internal_default_instance();
  }
  static inline const SandingStopConditionState* internal_default_instance() {
    return reinterpret_cast<const SandingStopConditionState*>(
               &_SandingStopConditionState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    269;

  friend void swap(SandingStopConditionState& a, SandingStopConditionState& b) {
    a.Swap(&b);
  }
  inline void Swap(SandingStopConditionState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SandingStopConditionState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SandingStopConditionState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SandingStopConditionState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SandingStopConditionState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SandingStopConditionState& from) {
    SandingStopConditionState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SandingStopConditionState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SandingStopConditionState";
  }
  protected:
  explicit SandingStopConditionState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableFieldNumber = 1,
    kFxLimFieldNumber = 2,
    kFyLimFieldNumber = 3,
    kFzLimFieldNumber = 4,
    kTxLimFieldNumber = 5,
    kTyLimFieldNumber = 6,
    kTzLimFieldNumber = 7,
  };
  // bool enable = 1;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // float fx_lim = 2;
  void clear_fx_lim() ;
  float fx_lim() const;
  void set_fx_lim(float value);

  private:
  float _internal_fx_lim() const;
  void _internal_set_fx_lim(float value);

  public:
  // float fy_lim = 3;
  void clear_fy_lim() ;
  float fy_lim() const;
  void set_fy_lim(float value);

  private:
  float _internal_fy_lim() const;
  void _internal_set_fy_lim(float value);

  public:
  // float fz_lim = 4;
  void clear_fz_lim() ;
  float fz_lim() const;
  void set_fz_lim(float value);

  private:
  float _internal_fz_lim() const;
  void _internal_set_fz_lim(float value);

  public:
  // float tx_lim = 5;
  void clear_tx_lim() ;
  float tx_lim() const;
  void set_tx_lim(float value);

  private:
  float _internal_tx_lim() const;
  void _internal_set_tx_lim(float value);

  public:
  // float ty_lim = 6;
  void clear_ty_lim() ;
  float ty_lim() const;
  void set_ty_lim(float value);

  private:
  float _internal_ty_lim() const;
  void _internal_set_ty_lim(float value);

  public:
  // float tz_lim = 7;
  void clear_tz_lim() ;
  float tz_lim() const;
  void set_tz_lim(float value);

  private:
  float _internal_tz_lim() const;
  void _internal_set_tz_lim(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SandingStopConditionState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool enable_;
    float fx_lim_;
    float fy_lim_;
    float fz_lim_;
    float tx_lim_;
    float ty_lim_;
    float tz_lim_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SanderCommand final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SanderCommand) */ {
 public:
  inline SanderCommand() : SanderCommand(nullptr) {}
  ~SanderCommand() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SanderCommand(::google::protobuf::internal::ConstantInitialized);

  SanderCommand(const SanderCommand& from);
  SanderCommand(SanderCommand&& from) noexcept
    : SanderCommand() {
    *this = ::std::move(from);
  }

  inline SanderCommand& operator=(const SanderCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline SanderCommand& operator=(SanderCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SanderCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const SanderCommand* internal_default_instance() {
    return reinterpret_cast<const SanderCommand*>(
               &_SanderCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    270;

  friend void swap(SanderCommand& a, SanderCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(SanderCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SanderCommand* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SanderCommand* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SanderCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SanderCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SanderCommand& from) {
    SanderCommand::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SanderCommand* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SanderCommand";
  }
  protected:
  explicit SanderCommand(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using SanderType = SanderCommand_SanderType;
  static constexpr SanderType SANDER_ONROBOT = SanderCommand_SanderType_SANDER_ONROBOT;
  static inline bool SanderType_IsValid(int value) {
    return SanderCommand_SanderType_IsValid(value);
  }
  static constexpr SanderType SanderType_MIN = SanderCommand_SanderType_SanderType_MIN;
  static constexpr SanderType SanderType_MAX = SanderCommand_SanderType_SanderType_MAX;
  static constexpr int SanderType_ARRAYSIZE = SanderCommand_SanderType_SanderType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SanderType_descriptor() {
    return SanderCommand_SanderType_descriptor();
  }
  template <typename T>
  static inline const std::string& SanderType_Name(T value) {
    return SanderCommand_SanderType_Name(value);
  }
  static inline bool SanderType_Parse(absl::string_view name, SanderType* value) {
    return SanderCommand_SanderType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 2,
    kTypeFieldNumber = 1,
    kSpeedFieldNumber = 3,
    kStateFieldNumber = 10,
  };
  // string ip = 2;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* ptr);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // .IndyFramework.Protobuf.HRI.SanderCommand.SanderType type = 1;
  void clear_type() ;
  ::IndyFramework::Protobuf::HRI::SanderCommand_SanderType type() const;
  void set_type(::IndyFramework::Protobuf::HRI::SanderCommand_SanderType value);

  private:
  ::IndyFramework::Protobuf::HRI::SanderCommand_SanderType _internal_type() const;
  void _internal_set_type(::IndyFramework::Protobuf::HRI::SanderCommand_SanderType value);

  public:
  // float speed = 3;
  void clear_speed() ;
  float speed() const;
  void set_speed(float value);

  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);

  public:
  // bool state = 10;
  void clear_state() ;
  bool state() const;
  void set_state(bool value);

  private:
  bool _internal_state() const;
  void _internal_set_state(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SanderCommand)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 51, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr ip_;
    int type_;
    float speed_;
    bool state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class PosePair final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.PosePair) */ {
 public:
  inline PosePair() : PosePair(nullptr) {}
  ~PosePair() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PosePair(::google::protobuf::internal::ConstantInitialized);

  PosePair(const PosePair& from);
  PosePair(PosePair&& from) noexcept
    : PosePair() {
    *this = ::std::move(from);
  }

  inline PosePair& operator=(const PosePair& from) {
    CopyFrom(from);
    return *this;
  }
  inline PosePair& operator=(PosePair&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PosePair& default_instance() {
    return *internal_default_instance();
  }
  static inline const PosePair* internal_default_instance() {
    return reinterpret_cast<const PosePair*>(
               &_PosePair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    271;

  friend void swap(PosePair& a, PosePair& b) {
    a.Swap(&b);
  }
  inline void Swap(PosePair* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PosePair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PosePair* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PosePair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PosePair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PosePair& from) {
    PosePair::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PosePair* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.PosePair";
  }
  protected:
  explicit PosePair(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQFieldNumber = 1,
    kPFieldNumber = 2,
  };
  // repeated float q = 1;
  int q_size() const;
  private:
  int _internal_q_size() const;

  public:
  void clear_q() ;
  float q(int index) const;
  void set_q(int index, float value);
  void add_q(float value);
  const ::google::protobuf::RepeatedField<float>& q() const;
  ::google::protobuf::RepeatedField<float>* mutable_q();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_q() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_q();

  public:
  // repeated float p = 2;
  int p_size() const;
  private:
  int _internal_p_size() const;

  public:
  void clear_p() ;
  float p(int index) const;
  void set_p(int index, float value);
  void add_p(float value);
  const ::google::protobuf::RepeatedField<float>& p() const;
  ::google::protobuf::RepeatedField<float>* mutable_p();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_p() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_p();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.PosePair)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> q_;
    ::google::protobuf::RepeatedField<float> p_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Encoder final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Encoder) */ {
 public:
  inline Encoder() : Encoder(nullptr) {}
  ~Encoder() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Encoder(::google::protobuf::internal::ConstantInitialized);

  Encoder(const Encoder& from);
  Encoder(Encoder&& from) noexcept
    : Encoder() {
    *this = ::std::move(from);
  }

  inline Encoder& operator=(const Encoder& from) {
    CopyFrom(from);
    return *this;
  }
  inline Encoder& operator=(Encoder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Encoder& default_instance() {
    return *internal_default_instance();
  }
  static inline const Encoder* internal_default_instance() {
    return reinterpret_cast<const Encoder*>(
               &_Encoder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    272;

  friend void swap(Encoder& a, Encoder& b) {
    a.Swap(&b);
  }
  inline void Swap(Encoder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Encoder* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Encoder* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Encoder>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Encoder& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Encoder& from) {
    Encoder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Encoder* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Encoder";
  }
  protected:
  explicit Encoder(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using EncoderType = Encoder_EncoderType;
  static constexpr EncoderType CONSTANT = Encoder_EncoderType_CONSTANT;
  static constexpr EncoderType QUADRATURE = Encoder_EncoderType_QUADRATURE;
  static constexpr EncoderType RISING = Encoder_EncoderType_RISING;
  static constexpr EncoderType FALLING = Encoder_EncoderType_FALLING;
  static constexpr EncoderType MODBUS = Encoder_EncoderType_MODBUS;
  static inline bool EncoderType_IsValid(int value) {
    return Encoder_EncoderType_IsValid(value);
  }
  static constexpr EncoderType EncoderType_MIN = Encoder_EncoderType_EncoderType_MIN;
  static constexpr EncoderType EncoderType_MAX = Encoder_EncoderType_EncoderType_MAX;
  static constexpr int EncoderType_ARRAYSIZE = Encoder_EncoderType_EncoderType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* EncoderType_descriptor() {
    return Encoder_EncoderType_descriptor();
  }
  template <typename T>
  static inline const std::string& EncoderType_Name(T value) {
    return Encoder_EncoderType_Name(value);
  }
  static inline bool EncoderType_Parse(absl::string_view name, EncoderType* value) {
    return Encoder_EncoderType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 2,
    kChannel2FieldNumber = 3,
    kTypeFieldNumber = 1,
    kMmPerTickFieldNumber = 5,
    kSampleNumFieldNumber = 4,
    kVelConstMmpsFieldNumber = 6,
    kReversedFieldNumber = 7,
  };
  // int64 channel1 = 2;
  void clear_channel1() ;
  ::int64_t channel1() const;
  void set_channel1(::int64_t value);

  private:
  ::int64_t _internal_channel1() const;
  void _internal_set_channel1(::int64_t value);

  public:
  // int64 channel2 = 3;
  void clear_channel2() ;
  ::int64_t channel2() const;
  void set_channel2(::int64_t value);

  private:
  ::int64_t _internal_channel2() const;
  void _internal_set_channel2(::int64_t value);

  public:
  // .IndyFramework.Protobuf.HRI.Encoder.EncoderType type = 1;
  void clear_type() ;
  ::IndyFramework::Protobuf::HRI::Encoder_EncoderType type() const;
  void set_type(::IndyFramework::Protobuf::HRI::Encoder_EncoderType value);

  private:
  ::IndyFramework::Protobuf::HRI::Encoder_EncoderType _internal_type() const;
  void _internal_set_type(::IndyFramework::Protobuf::HRI::Encoder_EncoderType value);

  public:
  // float mm_per_tick = 5;
  void clear_mm_per_tick() ;
  float mm_per_tick() const;
  void set_mm_per_tick(float value);

  private:
  float _internal_mm_per_tick() const;
  void _internal_set_mm_per_tick(float value);

  public:
  // int64 sample_num = 4;
  void clear_sample_num() ;
  ::int64_t sample_num() const;
  void set_sample_num(::int64_t value);

  private:
  ::int64_t _internal_sample_num() const;
  void _internal_set_sample_num(::int64_t value);

  public:
  // float vel_const_mmps = 6;
  void clear_vel_const_mmps() ;
  float vel_const_mmps() const;
  void set_vel_const_mmps(float value);

  private:
  float _internal_vel_const_mmps() const;
  void _internal_set_vel_const_mmps(float value);

  public:
  // bool reversed = 7;
  void clear_reversed() ;
  bool reversed() const;
  void set_reversed(bool value);

  private:
  bool _internal_reversed() const;
  void _internal_set_reversed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Encoder)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t channel1_;
    ::int64_t channel2_;
    int type_;
    float mm_per_tick_;
    ::int64_t sample_num_;
    float vel_const_mmps_;
    bool reversed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Trigger final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Trigger) */ {
 public:
  inline Trigger() : Trigger(nullptr) {}
  ~Trigger() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Trigger(::google::protobuf::internal::ConstantInitialized);

  Trigger(const Trigger& from);
  Trigger(Trigger&& from) noexcept
    : Trigger() {
    *this = ::std::move(from);
  }

  inline Trigger& operator=(const Trigger& from) {
    CopyFrom(from);
    return *this;
  }
  inline Trigger& operator=(Trigger&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Trigger& default_instance() {
    return *internal_default_instance();
  }
  static inline const Trigger* internal_default_instance() {
    return reinterpret_cast<const Trigger*>(
               &_Trigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    273;

  friend void swap(Trigger& a, Trigger& b) {
    a.Swap(&b);
  }
  inline void Swap(Trigger* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Trigger* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Trigger* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Trigger>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Trigger& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Trigger& from) {
    Trigger::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Trigger* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Trigger";
  }
  protected:
  explicit Trigger(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using TriggerType = Trigger_TriggerType;
  static constexpr TriggerType DIGITAL = Trigger_TriggerType_DIGITAL;
  static constexpr TriggerType MODBUS = Trigger_TriggerType_MODBUS;
  static inline bool TriggerType_IsValid(int value) {
    return Trigger_TriggerType_IsValid(value);
  }
  static constexpr TriggerType TriggerType_MIN = Trigger_TriggerType_TriggerType_MIN;
  static constexpr TriggerType TriggerType_MAX = Trigger_TriggerType_TriggerType_MAX;
  static constexpr int TriggerType_ARRAYSIZE = Trigger_TriggerType_TriggerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* TriggerType_descriptor() {
    return Trigger_TriggerType_descriptor();
  }
  template <typename T>
  static inline const std::string& TriggerType_Name(T value) {
    return Trigger_TriggerType_Name(value);
  }
  static inline bool TriggerType_Parse(absl::string_view name, TriggerType* value) {
    return Trigger_TriggerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kChannelFieldNumber = 2,
    kTypeFieldNumber = 1,
    kDetectRiseFieldNumber = 3,
  };
  // int64 channel = 2;
  void clear_channel() ;
  ::int64_t channel() const;
  void set_channel(::int64_t value);

  private:
  ::int64_t _internal_channel() const;
  void _internal_set_channel(::int64_t value);

  public:
  // .IndyFramework.Protobuf.HRI.Trigger.TriggerType type = 1;
  void clear_type() ;
  ::IndyFramework::Protobuf::HRI::Trigger_TriggerType type() const;
  void set_type(::IndyFramework::Protobuf::HRI::Trigger_TriggerType value);

  private:
  ::IndyFramework::Protobuf::HRI::Trigger_TriggerType _internal_type() const;
  void _internal_set_type(::IndyFramework::Protobuf::HRI::Trigger_TriggerType value);

  public:
  // bool detect_rise = 3;
  void clear_detect_rise() ;
  bool detect_rise() const;
  void set_detect_rise(bool value);

  private:
  bool _internal_detect_rise() const;
  void _internal_set_detect_rise(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Trigger)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t channel_;
    int type_;
    bool detect_rise_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class Conveyor final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.Conveyor) */ {
 public:
  inline Conveyor() : Conveyor(nullptr) {}
  ~Conveyor() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Conveyor(::google::protobuf::internal::ConstantInitialized);

  Conveyor(const Conveyor& from);
  Conveyor(Conveyor&& from) noexcept
    : Conveyor() {
    *this = ::std::move(from);
  }

  inline Conveyor& operator=(const Conveyor& from) {
    CopyFrom(from);
    return *this;
  }
  inline Conveyor& operator=(Conveyor&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Conveyor& default_instance() {
    return *internal_default_instance();
  }
  static inline const Conveyor* internal_default_instance() {
    return reinterpret_cast<const Conveyor*>(
               &_Conveyor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    274;

  friend void swap(Conveyor& a, Conveyor& b) {
    a.Swap(&b);
  }
  inline void Swap(Conveyor* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Conveyor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Conveyor* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Conveyor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Conveyor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Conveyor& from) {
    Conveyor::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Conveyor* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.Conveyor";
  }
  protected:
  explicit Conveyor(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kEncoderFieldNumber = 2,
    kTriggerFieldNumber = 3,
    kDirectionFieldNumber = 6,
    kStartingPoseFieldNumber = 10,
    kTerminalPoseFieldNumber = 11,
    kOffsetDistFieldNumber = 4,
    kWorkingDistFieldNumber = 5,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .IndyFramework.Protobuf.HRI.Encoder encoder = 2;
  bool has_encoder() const;
  void clear_encoder() ;
  const ::IndyFramework::Protobuf::HRI::Encoder& encoder() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Encoder* release_encoder();
  ::IndyFramework::Protobuf::HRI::Encoder* mutable_encoder();
  void set_allocated_encoder(::IndyFramework::Protobuf::HRI::Encoder* value);
  void unsafe_arena_set_allocated_encoder(::IndyFramework::Protobuf::HRI::Encoder* value);
  ::IndyFramework::Protobuf::HRI::Encoder* unsafe_arena_release_encoder();

  private:
  const ::IndyFramework::Protobuf::HRI::Encoder& _internal_encoder() const;
  ::IndyFramework::Protobuf::HRI::Encoder* _internal_mutable_encoder();

  public:
  // .IndyFramework.Protobuf.HRI.Trigger trigger = 3;
  bool has_trigger() const;
  void clear_trigger() ;
  const ::IndyFramework::Protobuf::HRI::Trigger& trigger() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::Trigger* release_trigger();
  ::IndyFramework::Protobuf::HRI::Trigger* mutable_trigger();
  void set_allocated_trigger(::IndyFramework::Protobuf::HRI::Trigger* value);
  void unsafe_arena_set_allocated_trigger(::IndyFramework::Protobuf::HRI::Trigger* value);
  ::IndyFramework::Protobuf::HRI::Trigger* unsafe_arena_release_trigger();

  private:
  const ::IndyFramework::Protobuf::HRI::Trigger& _internal_trigger() const;
  ::IndyFramework::Protobuf::HRI::Trigger* _internal_mutable_trigger();

  public:
  // .Nrmk.IndyFramework.Vector direction = 6;
  bool has_direction() const;
  void clear_direction() ;
  const ::Nrmk::IndyFramework::Vector& direction() const;
  PROTOBUF_NODISCARD ::Nrmk::IndyFramework::Vector* release_direction();
  ::Nrmk::IndyFramework::Vector* mutable_direction();
  void set_allocated_direction(::Nrmk::IndyFramework::Vector* value);
  void unsafe_arena_set_allocated_direction(::Nrmk::IndyFramework::Vector* value);
  ::Nrmk::IndyFramework::Vector* unsafe_arena_release_direction();

  private:
  const ::Nrmk::IndyFramework::Vector& _internal_direction() const;
  ::Nrmk::IndyFramework::Vector* _internal_mutable_direction();

  public:
  // .IndyFramework.Protobuf.HRI.PosePair starting_pose = 10;
  bool has_starting_pose() const;
  void clear_starting_pose() ;
  const ::IndyFramework::Protobuf::HRI::PosePair& starting_pose() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::PosePair* release_starting_pose();
  ::IndyFramework::Protobuf::HRI::PosePair* mutable_starting_pose();
  void set_allocated_starting_pose(::IndyFramework::Protobuf::HRI::PosePair* value);
  void unsafe_arena_set_allocated_starting_pose(::IndyFramework::Protobuf::HRI::PosePair* value);
  ::IndyFramework::Protobuf::HRI::PosePair* unsafe_arena_release_starting_pose();

  private:
  const ::IndyFramework::Protobuf::HRI::PosePair& _internal_starting_pose() const;
  ::IndyFramework::Protobuf::HRI::PosePair* _internal_mutable_starting_pose();

  public:
  // .IndyFramework.Protobuf.HRI.PosePair terminal_pose = 11;
  bool has_terminal_pose() const;
  void clear_terminal_pose() ;
  const ::IndyFramework::Protobuf::HRI::PosePair& terminal_pose() const;
  PROTOBUF_NODISCARD ::IndyFramework::Protobuf::HRI::PosePair* release_terminal_pose();
  ::IndyFramework::Protobuf::HRI::PosePair* mutable_terminal_pose();
  void set_allocated_terminal_pose(::IndyFramework::Protobuf::HRI::PosePair* value);
  void unsafe_arena_set_allocated_terminal_pose(::IndyFramework::Protobuf::HRI::PosePair* value);
  ::IndyFramework::Protobuf::HRI::PosePair* unsafe_arena_release_terminal_pose();

  private:
  const ::IndyFramework::Protobuf::HRI::PosePair& _internal_terminal_pose() const;
  ::IndyFramework::Protobuf::HRI::PosePair* _internal_mutable_terminal_pose();

  public:
  // float offset_dist = 4;
  void clear_offset_dist() ;
  float offset_dist() const;
  void set_offset_dist(float value);

  private:
  float _internal_offset_dist() const;
  void _internal_set_offset_dist(float value);

  public:
  // float working_dist = 5;
  void clear_working_dist() ;
  float working_dist() const;
  void set_working_dist(float value);

  private:
  float _internal_working_dist() const;
  void _internal_set_working_dist(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.Conveyor)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 8, 5, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::IndyFramework::Protobuf::HRI::Encoder* encoder_;
    ::IndyFramework::Protobuf::HRI::Trigger* trigger_;
    ::Nrmk::IndyFramework::Vector* direction_;
    ::IndyFramework::Protobuf::HRI::PosePair* starting_pose_;
    ::IndyFramework::Protobuf::HRI::PosePair* terminal_pose_;
    float offset_dist_;
    float working_dist_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class ConveyorState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.ConveyorState) */ {
 public:
  inline ConveyorState() : ConveyorState(nullptr) {}
  ~ConveyorState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ConveyorState(::google::protobuf::internal::ConstantInitialized);

  ConveyorState(const ConveyorState& from);
  ConveyorState(ConveyorState&& from) noexcept
    : ConveyorState() {
    *this = ::std::move(from);
  }

  inline ConveyorState& operator=(const ConveyorState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConveyorState& operator=(ConveyorState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConveyorState& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConveyorState* internal_default_instance() {
    return reinterpret_cast<const ConveyorState*>(
               &_ConveyorState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    275;

  friend void swap(ConveyorState& a, ConveyorState& b) {
    a.Swap(&b);
  }
  inline void Swap(ConveyorState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConveyorState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConveyorState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConveyorState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConveyorState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ConveyorState& from) {
    ConveyorState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConveyorState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.ConveyorState";
  }
  protected:
  explicit ConveyorState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVelocityFieldNumber = 1,
    kTriggeredFieldNumber = 2,
  };
  // float velocity = 1;
  void clear_velocity() ;
  float velocity() const;
  void set_velocity(float value);

  private:
  float _internal_velocity() const;
  void _internal_set_velocity(float value);

  public:
  // float triggered = 2;
  void clear_triggered() ;
  float triggered() const;
  void set_triggered(float value);

  private:
  float _internal_triggered() const;
  void _internal_set_triggered(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.ConveyorState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float velocity_;
    float triggered_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class HoldToMoveConveyorReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.HoldToMoveConveyorReq) */ {
 public:
  inline HoldToMoveConveyorReq() : HoldToMoveConveyorReq(nullptr) {}
  ~HoldToMoveConveyorReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HoldToMoveConveyorReq(::google::protobuf::internal::ConstantInitialized);

  HoldToMoveConveyorReq(const HoldToMoveConveyorReq& from);
  HoldToMoveConveyorReq(HoldToMoveConveyorReq&& from) noexcept
    : HoldToMoveConveyorReq() {
    *this = ::std::move(from);
  }

  inline HoldToMoveConveyorReq& operator=(const HoldToMoveConveyorReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline HoldToMoveConveyorReq& operator=(HoldToMoveConveyorReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HoldToMoveConveyorReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const HoldToMoveConveyorReq* internal_default_instance() {
    return reinterpret_cast<const HoldToMoveConveyorReq*>(
               &_HoldToMoveConveyorReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    276;

  friend void swap(HoldToMoveConveyorReq& a, HoldToMoveConveyorReq& b) {
    a.Swap(&b);
  }
  inline void Swap(HoldToMoveConveyorReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HoldToMoveConveyorReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HoldToMoveConveyorReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HoldToMoveConveyorReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HoldToMoveConveyorReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HoldToMoveConveyorReq& from) {
    HoldToMoveConveyorReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HoldToMoveConveyorReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.HoldToMoveConveyorReq";
  }
  protected:
  explicit HoldToMoveConveyorReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBypassSingularFieldNumber = 1,
    kAccRatioFieldNumber = 2,
  };
  // bool bypass_singular = 1;
  void clear_bypass_singular() ;
  bool bypass_singular() const;
  void set_bypass_singular(bool value);

  private:
  bool _internal_bypass_singular() const;
  void _internal_set_bypass_singular(bool value);

  public:
  // float acc_ratio = 2;
  void clear_acc_ratio() ;
  float acc_ratio() const;
  void set_acc_ratio(float value);

  private:
  float _internal_acc_ratio() const;
  void _internal_set_acc_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.HoldToMoveConveyorReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool bypass_singular_;
    float acc_ratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GripperData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GripperData) */ {
 public:
  inline GripperData() : GripperData(nullptr) {}
  ~GripperData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GripperData(::google::protobuf::internal::ConstantInitialized);

  GripperData(const GripperData& from);
  GripperData(GripperData&& from) noexcept
    : GripperData() {
    *this = ::std::move(from);
  }

  inline GripperData& operator=(const GripperData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GripperData& operator=(GripperData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GripperData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GripperData* internal_default_instance() {
    return reinterpret_cast<const GripperData*>(
               &_GripperData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    277;

  friend void swap(GripperData& a, GripperData& b) {
    a.Swap(&b);
  }
  inline void Swap(GripperData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GripperData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GripperData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GripperData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GripperData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GripperData& from) {
    GripperData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GripperData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GripperData";
  }
  protected:
  explicit GripperData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGripperTypeFieldNumber = 1,
    kGripperPositionFieldNumber = 2,
    kGripperStateFieldNumber = 3,
  };
  // .IndyFramework.Protobuf.HRI.GripperType gripper_type = 1;
  void clear_gripper_type() ;
  ::IndyFramework::Protobuf::HRI::GripperType gripper_type() const;
  void set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value);

  private:
  ::IndyFramework::Protobuf::HRI::GripperType _internal_gripper_type() const;
  void _internal_set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value);

  public:
  // int32 gripper_position = 2;
  void clear_gripper_position() ;
  ::int32_t gripper_position() const;
  void set_gripper_position(::int32_t value);

  private:
  ::int32_t _internal_gripper_position() const;
  void _internal_set_gripper_position(::int32_t value);

  public:
  // int32 gripper_state = 3;
  void clear_gripper_state() ;
  ::int32_t gripper_state() const;
  void set_gripper_state(::int32_t value);

  private:
  ::int32_t _internal_gripper_state() const;
  void _internal_set_gripper_state(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GripperData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int gripper_type_;
    ::int32_t gripper_position_;
    ::int32_t gripper_state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class GripperCommand final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.GripperCommand) */ {
 public:
  inline GripperCommand() : GripperCommand(nullptr) {}
  ~GripperCommand() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GripperCommand(::google::protobuf::internal::ConstantInitialized);

  GripperCommand(const GripperCommand& from);
  GripperCommand(GripperCommand&& from) noexcept
    : GripperCommand() {
    *this = ::std::move(from);
  }

  inline GripperCommand& operator=(const GripperCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline GripperCommand& operator=(GripperCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GripperCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const GripperCommand* internal_default_instance() {
    return reinterpret_cast<const GripperCommand*>(
               &_GripperCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    278;

  friend void swap(GripperCommand& a, GripperCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(GripperCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GripperCommand* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GripperCommand* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GripperCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GripperCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GripperCommand& from) {
    GripperCommand::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GripperCommand* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.GripperCommand";
  }
  protected:
  explicit GripperCommand(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using GripperCommandType = GripperCommand_GripperCommandType;
  static constexpr GripperCommandType AUTO_DETECT = GripperCommand_GripperCommandType_AUTO_DETECT;
  static constexpr GripperCommandType ACTIVATE = GripperCommand_GripperCommandType_ACTIVATE;
  static constexpr GripperCommandType RE_ACTIVATE = GripperCommand_GripperCommandType_RE_ACTIVATE;
  static constexpr GripperCommandType SET_PVT = GripperCommand_GripperCommandType_SET_PVT;
  static inline bool GripperCommandType_IsValid(int value) {
    return GripperCommand_GripperCommandType_IsValid(value);
  }
  static constexpr GripperCommandType GripperCommandType_MIN = GripperCommand_GripperCommandType_GripperCommandType_MIN;
  static constexpr GripperCommandType GripperCommandType_MAX = GripperCommand_GripperCommandType_GripperCommandType_MAX;
  static constexpr int GripperCommandType_ARRAYSIZE = GripperCommand_GripperCommandType_GripperCommandType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* GripperCommandType_descriptor() {
    return GripperCommand_GripperCommandType_descriptor();
  }
  template <typename T>
  static inline const std::string& GripperCommandType_Name(T value) {
    return GripperCommand_GripperCommandType_Name(value);
  }
  static inline bool GripperCommandType_Parse(absl::string_view name, GripperCommandType* value) {
    return GripperCommand_GripperCommandType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kGripperPvtDataFieldNumber = 3,
    kGripperCommandFieldNumber = 1,
    kGripperTypeFieldNumber = 2,
  };
  // repeated int32 gripper_pvt_data = 3;
  int gripper_pvt_data_size() const;
  private:
  int _internal_gripper_pvt_data_size() const;

  public:
  void clear_gripper_pvt_data() ;
  ::int32_t gripper_pvt_data(int index) const;
  void set_gripper_pvt_data(int index, ::int32_t value);
  void add_gripper_pvt_data(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& gripper_pvt_data() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_gripper_pvt_data();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_gripper_pvt_data() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_gripper_pvt_data();

  public:
  // .IndyFramework.Protobuf.HRI.GripperCommand.GripperCommandType gripper_command = 1;
  void clear_gripper_command() ;
  ::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType gripper_command() const;
  void set_gripper_command(::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType value);

  private:
  ::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType _internal_gripper_command() const;
  void _internal_set_gripper_command(::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType value);

  public:
  // .IndyFramework.Protobuf.HRI.GripperType gripper_type = 2;
  void clear_gripper_type() ;
  ::IndyFramework::Protobuf::HRI::GripperType gripper_type() const;
  void set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value);

  private:
  ::IndyFramework::Protobuf::HRI::GripperType _internal_gripper_type() const;
  void _internal_set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.GripperCommand)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> gripper_pvt_data_;
    mutable ::google::protobuf::internal::CachedSize _gripper_pvt_data_cached_byte_size_;
    int gripper_command_;
    int gripper_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SFDAccount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SFDAccount) */ {
 public:
  inline SFDAccount() : SFDAccount(nullptr) {}
  ~SFDAccount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SFDAccount(::google::protobuf::internal::ConstantInitialized);

  SFDAccount(const SFDAccount& from);
  SFDAccount(SFDAccount&& from) noexcept
    : SFDAccount() {
    *this = ::std::move(from);
  }

  inline SFDAccount& operator=(const SFDAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFDAccount& operator=(SFDAccount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFDAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFDAccount* internal_default_instance() {
    return reinterpret_cast<const SFDAccount*>(
               &_SFDAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    279;

  friend void swap(SFDAccount& a, SFDAccount& b) {
    a.Swap(&b);
  }
  inline void Swap(SFDAccount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFDAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFDAccount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SFDAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFDAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SFDAccount& from) {
    SFDAccount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SFDAccount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SFDAccount";
  }
  protected:
  explicit SFDAccount(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
    kTokenFieldNumber = 2,
  };
  // string email = 1;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* ptr);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* ptr);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SFDAccount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SFDCriTarget final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SFDCriTarget) */ {
 public:
  inline SFDCriTarget() : SFDCriTarget(nullptr) {}
  ~SFDCriTarget() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SFDCriTarget(::google::protobuf::internal::ConstantInitialized);

  SFDCriTarget(const SFDCriTarget& from);
  SFDCriTarget(SFDCriTarget&& from) noexcept
    : SFDCriTarget() {
    *this = ::std::move(from);
  }

  inline SFDCriTarget& operator=(const SFDCriTarget& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFDCriTarget& operator=(SFDCriTarget&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFDCriTarget& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFDCriTarget* internal_default_instance() {
    return reinterpret_cast<const SFDCriTarget*>(
               &_SFDCriTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    280;

  friend void swap(SFDCriTarget& a, SFDCriTarget& b) {
    a.Swap(&b);
  }
  inline void Swap(SFDCriTarget* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFDCriTarget* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFDCriTarget* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SFDCriTarget>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFDCriTarget& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SFDCriTarget& from) {
    SFDCriTarget::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SFDCriTarget* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SFDCriTarget";
  }
  protected:
  explicit SFDCriTarget(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPnFieldNumber = 1,
    kFnFieldNumber = 2,
    kRnFieldNumber = 3,
    kIsoFieldNumber = 4,
  };
  // string pn = 1;
  void clear_pn() ;
  const std::string& pn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pn(Arg_&& arg, Args_... args);
  std::string* mutable_pn();
  PROTOBUF_NODISCARD std::string* release_pn();
  void set_allocated_pn(std::string* ptr);

  private:
  const std::string& _internal_pn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pn(
      const std::string& value);
  std::string* _internal_mutable_pn();

  public:
  // string fn = 2;
  void clear_fn() ;
  const std::string& fn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fn(Arg_&& arg, Args_... args);
  std::string* mutable_fn();
  PROTOBUF_NODISCARD std::string* release_fn();
  void set_allocated_fn(std::string* ptr);

  private:
  const std::string& _internal_fn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fn(
      const std::string& value);
  std::string* _internal_mutable_fn();

  public:
  // string rn = 3;
  void clear_rn() ;
  const std::string& rn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rn(Arg_&& arg, Args_... args);
  std::string* mutable_rn();
  PROTOBUF_NODISCARD std::string* release_rn();
  void set_allocated_rn(std::string* ptr);

  private:
  const std::string& _internal_rn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rn(
      const std::string& value);
  std::string* _internal_mutable_rn();

  public:
  // bool iso = 4;
  void clear_iso() ;
  bool iso() const;
  void set_iso(bool value);

  private:
  bool _internal_iso() const;
  void _internal_set_iso(bool value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SFDCriTarget)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr pn_;
    ::google::protobuf::internal::ArenaStringPtr fn_;
    ::google::protobuf::internal::ArenaStringPtr rn_;
    bool iso_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SFDCriData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SFDCriData) */ {
 public:
  inline SFDCriData() : SFDCriData(nullptr) {}
  ~SFDCriData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SFDCriData(::google::protobuf::internal::ConstantInitialized);

  SFDCriData(const SFDCriData& from);
  SFDCriData(SFDCriData&& from) noexcept
    : SFDCriData() {
    *this = ::std::move(from);
  }

  inline SFDCriData& operator=(const SFDCriData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFDCriData& operator=(SFDCriData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFDCriData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFDCriData* internal_default_instance() {
    return reinterpret_cast<const SFDCriData*>(
               &_SFDCriData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    281;

  friend void swap(SFDCriData& a, SFDCriData& b) {
    a.Swap(&b);
  }
  inline void Swap(SFDCriData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFDCriData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFDCriData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SFDCriData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFDCriData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SFDCriData& from) {
    SFDCriData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SFDCriData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SFDCriData";
  }
  protected:
  explicit SFDCriData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeFieldNumber = 1,
    kCriFieldNumber = 2,
  };
  // double time = 1;
  void clear_time() ;
  double time() const;
  void set_time(double value);

  private:
  double _internal_time() const;
  void _internal_set_time(double value);

  public:
  // double cri = 2;
  void clear_cri() ;
  double cri() const;
  void set_cri(double value);

  private:
  double _internal_cri() const;
  void _internal_set_cri(double value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SFDCriData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double time_;
    double cri_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class SFDProjectList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.SFDProjectList) */ {
 public:
  inline SFDProjectList() : SFDProjectList(nullptr) {}
  ~SFDProjectList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SFDProjectList(::google::protobuf::internal::ConstantInitialized);

  SFDProjectList(const SFDProjectList& from);
  SFDProjectList(SFDProjectList&& from) noexcept
    : SFDProjectList() {
    *this = ::std::move(from);
  }

  inline SFDProjectList& operator=(const SFDProjectList& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFDProjectList& operator=(SFDProjectList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFDProjectList& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFDProjectList* internal_default_instance() {
    return reinterpret_cast<const SFDProjectList*>(
               &_SFDProjectList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    282;

  friend void swap(SFDProjectList& a, SFDProjectList& b) {
    a.Swap(&b);
  }
  inline void Swap(SFDProjectList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFDProjectList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFDProjectList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SFDProjectList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFDProjectList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SFDProjectList& from) {
    SFDProjectList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SFDProjectList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.SFDProjectList";
  }
  protected:
  explicit SFDProjectList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
  };
  // string list = 1;
  void clear_list() ;
  const std::string& list() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_list(Arg_&& arg, Args_... args);
  std::string* mutable_list();
  PROTOBUF_NODISCARD std::string* release_list();
  void set_allocated_list(std::string* ptr);

  private:
  const std::string& _internal_list() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_list(
      const std::string& value);
  std::string* _internal_mutable_list();

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.SFDProjectList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class DateTime final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.DateTime) */ {
 public:
  inline DateTime() : DateTime(nullptr) {}
  ~DateTime() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DateTime(::google::protobuf::internal::ConstantInitialized);

  DateTime(const DateTime& from);
  DateTime(DateTime&& from) noexcept
    : DateTime() {
    *this = ::std::move(from);
  }

  inline DateTime& operator=(const DateTime& from) {
    CopyFrom(from);
    return *this;
  }
  inline DateTime& operator=(DateTime&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DateTime& default_instance() {
    return *internal_default_instance();
  }
  static inline const DateTime* internal_default_instance() {
    return reinterpret_cast<const DateTime*>(
               &_DateTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    283;

  friend void swap(DateTime& a, DateTime& b) {
    a.Swap(&b);
  }
  inline void Swap(DateTime* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DateTime* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DateTime* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DateTime>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DateTime& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DateTime& from) {
    DateTime::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DateTime* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.DateTime";
  }
  protected:
  explicit DateTime(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYearFieldNumber = 1,
    kMonthFieldNumber = 2,
    kDayFieldNumber = 3,
    kHourFieldNumber = 4,
    kMinuteFieldNumber = 5,
    kSecondFieldNumber = 6,
  };
  // uint32 year = 1;
  void clear_year() ;
  ::uint32_t year() const;
  void set_year(::uint32_t value);

  private:
  ::uint32_t _internal_year() const;
  void _internal_set_year(::uint32_t value);

  public:
  // uint32 month = 2;
  void clear_month() ;
  ::uint32_t month() const;
  void set_month(::uint32_t value);

  private:
  ::uint32_t _internal_month() const;
  void _internal_set_month(::uint32_t value);

  public:
  // uint32 day = 3;
  void clear_day() ;
  ::uint32_t day() const;
  void set_day(::uint32_t value);

  private:
  ::uint32_t _internal_day() const;
  void _internal_set_day(::uint32_t value);

  public:
  // uint32 hour = 4;
  void clear_hour() ;
  ::uint32_t hour() const;
  void set_hour(::uint32_t value);

  private:
  ::uint32_t _internal_hour() const;
  void _internal_set_hour(::uint32_t value);

  public:
  // uint32 minute = 5;
  void clear_minute() ;
  ::uint32_t minute() const;
  void set_minute(::uint32_t value);

  private:
  ::uint32_t _internal_minute() const;
  void _internal_set_minute(::uint32_t value);

  public:
  // uint32 second = 6;
  void clear_second() ;
  ::uint32_t second() const;
  void set_second(::uint32_t value);

  private:
  ::uint32_t _internal_second() const;
  void _internal_set_second(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.DateTime)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t year_;
    ::uint32_t month_;
    ::uint32_t day_;
    ::uint32_t hour_;
    ::uint32_t minute_;
    ::uint32_t second_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class TactTime final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.TactTime) */ {
 public:
  inline TactTime() : TactTime(nullptr) {}
  ~TactTime() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TactTime(::google::protobuf::internal::ConstantInitialized);

  TactTime(const TactTime& from);
  TactTime(TactTime&& from) noexcept
    : TactTime() {
    *this = ::std::move(from);
  }

  inline TactTime& operator=(const TactTime& from) {
    CopyFrom(from);
    return *this;
  }
  inline TactTime& operator=(TactTime&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TactTime& default_instance() {
    return *internal_default_instance();
  }
  static inline const TactTime* internal_default_instance() {
    return reinterpret_cast<const TactTime*>(
               &_TactTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    284;

  friend void swap(TactTime& a, TactTime& b) {
    a.Swap(&b);
  }
  inline void Swap(TactTime* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TactTime* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TactTime* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TactTime>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TactTime& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TactTime& from) {
    TactTime::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TactTime* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.TactTime";
  }
  protected:
  explicit TactTime(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTactTimeFieldNumber = 1,
  };
  // float tact_time = 1;
  void clear_tact_time() ;
  float tact_time() const;
  void set_tact_time(float value);

  private:
  float _internal_tact_time() const;
  void _internal_set_tact_time(float value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.TactTime)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float tact_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};// -------------------------------------------------------------------

class AddPhotoneoCalibPointReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq) */ {
 public:
  inline AddPhotoneoCalibPointReq() : AddPhotoneoCalibPointReq(nullptr) {}
  ~AddPhotoneoCalibPointReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddPhotoneoCalibPointReq(::google::protobuf::internal::ConstantInitialized);

  AddPhotoneoCalibPointReq(const AddPhotoneoCalibPointReq& from);
  AddPhotoneoCalibPointReq(AddPhotoneoCalibPointReq&& from) noexcept
    : AddPhotoneoCalibPointReq() {
    *this = ::std::move(from);
  }

  inline AddPhotoneoCalibPointReq& operator=(const AddPhotoneoCalibPointReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPhotoneoCalibPointReq& operator=(AddPhotoneoCalibPointReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPhotoneoCalibPointReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPhotoneoCalibPointReq* internal_default_instance() {
    return reinterpret_cast<const AddPhotoneoCalibPointReq*>(
               &_AddPhotoneoCalibPointReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    285;

  friend void swap(AddPhotoneoCalibPointReq& a, AddPhotoneoCalibPointReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddPhotoneoCalibPointReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPhotoneoCalibPointReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPhotoneoCalibPointReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddPhotoneoCalibPointReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddPhotoneoCalibPointReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddPhotoneoCalibPointReq& from) {
    AddPhotoneoCalibPointReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddPhotoneoCalibPointReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq";
  }
  protected:
  explicit AddPhotoneoCalibPointReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVisionNameFieldNumber = 1,
    kPxFieldNumber = 2,
    kPyFieldNumber = 3,
    kPzFieldNumber = 4,
  };
  // string vision_name = 1;
  void clear_vision_name() ;
  const std::string& vision_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vision_name(Arg_&& arg, Args_... args);
  std::string* mutable_vision_name();
  PROTOBUF_NODISCARD std::string* release_vision_name();
  void set_allocated_vision_name(std::string* ptr);

  private:
  const std::string& _internal_vision_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vision_name(
      const std::string& value);
  std::string* _internal_mutable_vision_name();

  public:
  // double px = 2;
  void clear_px() ;
  double px() const;
  void set_px(double value);

  private:
  double _internal_px() const;
  void _internal_set_px(double value);

  public:
  // double py = 3;
  void clear_py() ;
  double py() const;
  void set_py(double value);

  private:
  double _internal_py() const;
  void _internal_set_py(double value);

  public:
  // double pz = 4;
  void clear_pz() ;
  double pz() const;
  void set_pz(double value);

  private:
  double _internal_pz() const;
  void _internal_set_pz(double value);

  public:
  // @@protoc_insertion_point(class_scope:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 71, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr vision_name_;
    double px_;
    double py_;
    double pz_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hri_5fmsgs_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PalletMaker

// string name = 1;
inline void PalletMaker::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& PalletMaker::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PalletMaker::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.name)
}
inline std::string* PalletMaker::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PalletMaker.name)
  return _s;
}
inline const std::string& PalletMaker::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void PalletMaker::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* PalletMaker::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* PalletMaker::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PalletMaker.name)
  return _impl_.name_.Release();
}
inline void PalletMaker::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PalletMaker.name)
}

// .IndyFramework.Protobuf.HRI.PalletMaker.PalletPattern pallet_pattern = 2;
inline void PalletMaker::clear_pallet_pattern() {
  _impl_.pallet_pattern_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern PalletMaker::pallet_pattern() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.pallet_pattern)
  return _internal_pallet_pattern();
}
inline void PalletMaker::set_pallet_pattern(::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern value) {
  _internal_set_pallet_pattern(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.pallet_pattern)
}
inline ::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern PalletMaker::_internal_pallet_pattern() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern>(_impl_.pallet_pattern_);
}
inline void PalletMaker::_internal_set_pallet_pattern(::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pallet_pattern_ = value;
}

// int32 width_num = 3;
inline void PalletMaker::clear_width_num() {
  _impl_.width_num_ = 0;
}
inline ::int32_t PalletMaker::width_num() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.width_num)
  return _internal_width_num();
}
inline void PalletMaker::set_width_num(::int32_t value) {
  _internal_set_width_num(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.width_num)
}
inline ::int32_t PalletMaker::_internal_width_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.width_num_;
}
inline void PalletMaker::_internal_set_width_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.width_num_ = value;
}

// int32 height_num = 4;
inline void PalletMaker::clear_height_num() {
  _impl_.height_num_ = 0;
}
inline ::int32_t PalletMaker::height_num() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.height_num)
  return _internal_height_num();
}
inline void PalletMaker::set_height_num(::int32_t value) {
  _internal_set_height_num(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.height_num)
}
inline ::int32_t PalletMaker::_internal_height_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.height_num_;
}
inline void PalletMaker::_internal_set_height_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.height_num_ = value;
}

// repeated float tpos0 = 5;
inline int PalletMaker::_internal_tpos0_size() const {
  return _internal_tpos0().size();
}
inline int PalletMaker::tpos0_size() const {
  return _internal_tpos0_size();
}
inline void PalletMaker::clear_tpos0() {
  _internal_mutable_tpos0()->Clear();
}
inline float PalletMaker::tpos0(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.tpos0)
  return _internal_tpos0().Get(index);
}
inline void PalletMaker::set_tpos0(int index, float value) {
  _internal_mutable_tpos0()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.tpos0)
}
inline void PalletMaker::add_tpos0(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos0()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PalletMaker.tpos0)
}
inline const ::google::protobuf::RepeatedField<float>& PalletMaker::tpos0() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PalletMaker.tpos0)
  return _internal_tpos0();
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::mutable_tpos0() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PalletMaker.tpos0)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos0();
}

inline const ::google::protobuf::RepeatedField<float>& PalletMaker::_internal_tpos0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos0_;
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::_internal_mutable_tpos0() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos0_;
}

// repeated float tpos1 = 6;
inline int PalletMaker::_internal_tpos1_size() const {
  return _internal_tpos1().size();
}
inline int PalletMaker::tpos1_size() const {
  return _internal_tpos1_size();
}
inline void PalletMaker::clear_tpos1() {
  _internal_mutable_tpos1()->Clear();
}
inline float PalletMaker::tpos1(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.tpos1)
  return _internal_tpos1().Get(index);
}
inline void PalletMaker::set_tpos1(int index, float value) {
  _internal_mutable_tpos1()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.tpos1)
}
inline void PalletMaker::add_tpos1(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos1()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PalletMaker.tpos1)
}
inline const ::google::protobuf::RepeatedField<float>& PalletMaker::tpos1() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PalletMaker.tpos1)
  return _internal_tpos1();
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::mutable_tpos1() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PalletMaker.tpos1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos1();
}

inline const ::google::protobuf::RepeatedField<float>& PalletMaker::_internal_tpos1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos1_;
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::_internal_mutable_tpos1() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos1_;
}

// repeated float tpos2 = 7;
inline int PalletMaker::_internal_tpos2_size() const {
  return _internal_tpos2().size();
}
inline int PalletMaker::tpos2_size() const {
  return _internal_tpos2_size();
}
inline void PalletMaker::clear_tpos2() {
  _internal_mutable_tpos2()->Clear();
}
inline float PalletMaker::tpos2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.tpos2)
  return _internal_tpos2().Get(index);
}
inline void PalletMaker::set_tpos2(int index, float value) {
  _internal_mutable_tpos2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.tpos2)
}
inline void PalletMaker::add_tpos2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PalletMaker.tpos2)
}
inline const ::google::protobuf::RepeatedField<float>& PalletMaker::tpos2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PalletMaker.tpos2)
  return _internal_tpos2();
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::mutable_tpos2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PalletMaker.tpos2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos2();
}

inline const ::google::protobuf::RepeatedField<float>& PalletMaker::_internal_tpos2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos2_;
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::_internal_mutable_tpos2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos2_;
}

// repeated float jpos0 = 8;
inline int PalletMaker::_internal_jpos0_size() const {
  return _internal_jpos0().size();
}
inline int PalletMaker::jpos0_size() const {
  return _internal_jpos0_size();
}
inline void PalletMaker::clear_jpos0() {
  _internal_mutable_jpos0()->Clear();
}
inline float PalletMaker::jpos0(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.jpos0)
  return _internal_jpos0().Get(index);
}
inline void PalletMaker::set_jpos0(int index, float value) {
  _internal_mutable_jpos0()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.jpos0)
}
inline void PalletMaker::add_jpos0(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos0()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PalletMaker.jpos0)
}
inline const ::google::protobuf::RepeatedField<float>& PalletMaker::jpos0() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PalletMaker.jpos0)
  return _internal_jpos0();
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::mutable_jpos0() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PalletMaker.jpos0)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos0();
}

inline const ::google::protobuf::RepeatedField<float>& PalletMaker::_internal_jpos0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos0_;
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::_internal_mutable_jpos0() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos0_;
}

// repeated float jpos1 = 9;
inline int PalletMaker::_internal_jpos1_size() const {
  return _internal_jpos1().size();
}
inline int PalletMaker::jpos1_size() const {
  return _internal_jpos1_size();
}
inline void PalletMaker::clear_jpos1() {
  _internal_mutable_jpos1()->Clear();
}
inline float PalletMaker::jpos1(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.jpos1)
  return _internal_jpos1().Get(index);
}
inline void PalletMaker::set_jpos1(int index, float value) {
  _internal_mutable_jpos1()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.jpos1)
}
inline void PalletMaker::add_jpos1(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos1()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PalletMaker.jpos1)
}
inline const ::google::protobuf::RepeatedField<float>& PalletMaker::jpos1() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PalletMaker.jpos1)
  return _internal_jpos1();
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::mutable_jpos1() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PalletMaker.jpos1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos1();
}

inline const ::google::protobuf::RepeatedField<float>& PalletMaker::_internal_jpos1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos1_;
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::_internal_mutable_jpos1() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos1_;
}

// repeated float jpos2 = 10;
inline int PalletMaker::_internal_jpos2_size() const {
  return _internal_jpos2().size();
}
inline int PalletMaker::jpos2_size() const {
  return _internal_jpos2_size();
}
inline void PalletMaker::clear_jpos2() {
  _internal_mutable_jpos2()->Clear();
}
inline float PalletMaker::jpos2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PalletMaker.jpos2)
  return _internal_jpos2().Get(index);
}
inline void PalletMaker::set_jpos2(int index, float value) {
  _internal_mutable_jpos2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PalletMaker.jpos2)
}
inline void PalletMaker::add_jpos2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PalletMaker.jpos2)
}
inline const ::google::protobuf::RepeatedField<float>& PalletMaker::jpos2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PalletMaker.jpos2)
  return _internal_jpos2();
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::mutable_jpos2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PalletMaker.jpos2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos2();
}

inline const ::google::protobuf::RepeatedField<float>& PalletMaker::_internal_jpos2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos2_;
}
inline ::google::protobuf::RepeatedField<float>* PalletMaker::_internal_mutable_jpos2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos2_;
}

// -------------------------------------------------------------------

// ContyInitReq

// -------------------------------------------------------------------

// ContyInitRes

// string robot_name = 1;
inline void ContyInitRes::clear_robot_name() {
  _impl_.robot_name_.ClearToEmpty();
}
inline const std::string& ContyInitRes::robot_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.robot_name)
  return _internal_robot_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_robot_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.robot_name)
}
inline std::string* ContyInitRes::mutable_robot_name() {
  std::string* _s = _internal_mutable_robot_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.robot_name)
  return _s;
}
inline const std::string& ContyInitRes::_internal_robot_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.robot_name_.Get();
}
inline void ContyInitRes::_internal_set_robot_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_robot_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.robot_name_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_robot_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.robot_name)
  return _impl_.robot_name_.Release();
}
inline void ContyInitRes::set_allocated_robot_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.robot_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.robot_name_.IsDefault()) {
          _impl_.robot_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.robot_name)
}

// int32 robot_dof = 2;
inline void ContyInitRes::clear_robot_dof() {
  _impl_.robot_dof_ = 0;
}
inline ::int32_t ContyInitRes::robot_dof() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.robot_dof)
  return _internal_robot_dof();
}
inline void ContyInitRes::set_robot_dof(::int32_t value) {
  _internal_set_robot_dof(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.robot_dof)
}
inline ::int32_t ContyInitRes::_internal_robot_dof() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.robot_dof_;
}
inline void ContyInitRes::_internal_set_robot_dof(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_dof_ = value;
}

// string robot_sn = 3;
inline void ContyInitRes::clear_robot_sn() {
  _impl_.robot_sn_.ClearToEmpty();
}
inline const std::string& ContyInitRes::robot_sn() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.robot_sn)
  return _internal_robot_sn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_robot_sn(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_sn_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.robot_sn)
}
inline std::string* ContyInitRes::mutable_robot_sn() {
  std::string* _s = _internal_mutable_robot_sn();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.robot_sn)
  return _s;
}
inline const std::string& ContyInitRes::_internal_robot_sn() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.robot_sn_.Get();
}
inline void ContyInitRes::_internal_set_robot_sn(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_sn_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_robot_sn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.robot_sn_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_robot_sn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.robot_sn)
  return _impl_.robot_sn_.Release();
}
inline void ContyInitRes::set_allocated_robot_sn(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.robot_sn_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.robot_sn_.IsDefault()) {
          _impl_.robot_sn_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.robot_sn)
}

// float robot_payload = 4;
inline void ContyInitRes::clear_robot_payload() {
  _impl_.robot_payload_ = 0;
}
inline float ContyInitRes::robot_payload() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.robot_payload)
  return _internal_robot_payload();
}
inline void ContyInitRes::set_robot_payload(float value) {
  _internal_set_robot_payload(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.robot_payload)
}
inline float ContyInitRes::_internal_robot_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.robot_payload_;
}
inline void ContyInitRes::_internal_set_robot_payload(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_payload_ = value;
}

// bool teleop_loaded = 5;
inline void ContyInitRes::clear_teleop_loaded() {
  _impl_.teleop_loaded_ = false;
}
inline bool ContyInitRes::teleop_loaded() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.teleop_loaded)
  return _internal_teleop_loaded();
}
inline void ContyInitRes::set_teleop_loaded(bool value) {
  _internal_set_teleop_loaded(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.teleop_loaded)
}
inline bool ContyInitRes::_internal_teleop_loaded() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.teleop_loaded_;
}
inline void ContyInitRes::_internal_set_teleop_loaded(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.teleop_loaded_ = value;
}

// bool calibrated = 6;
inline void ContyInitRes::clear_calibrated() {
  _impl_.calibrated_ = false;
}
inline bool ContyInitRes::calibrated() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.calibrated)
  return _internal_calibrated();
}
inline void ContyInitRes::set_calibrated(bool value) {
  _internal_set_calibrated(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.calibrated)
}
inline bool ContyInitRes::_internal_calibrated() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.calibrated_;
}
inline void ContyInitRes::_internal_set_calibrated(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.calibrated_ = value;
}

// string cb_ip = 10;
inline void ContyInitRes::clear_cb_ip() {
  _impl_.cb_ip_.ClearToEmpty();
}
inline const std::string& ContyInitRes::cb_ip() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.cb_ip)
  return _internal_cb_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_cb_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cb_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.cb_ip)
}
inline std::string* ContyInitRes::mutable_cb_ip() {
  std::string* _s = _internal_mutable_cb_ip();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.cb_ip)
  return _s;
}
inline const std::string& ContyInitRes::_internal_cb_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cb_ip_.Get();
}
inline void ContyInitRes::_internal_set_cb_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cb_ip_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_cb_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cb_ip_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_cb_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.cb_ip)
  return _impl_.cb_ip_.Release();
}
inline void ContyInitRes::set_allocated_cb_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cb_ip_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cb_ip_.IsDefault()) {
          _impl_.cb_ip_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.cb_ip)
}

// string cb_sn = 11;
inline void ContyInitRes::clear_cb_sn() {
  _impl_.cb_sn_.ClearToEmpty();
}
inline const std::string& ContyInitRes::cb_sn() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.cb_sn)
  return _internal_cb_sn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_cb_sn(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cb_sn_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.cb_sn)
}
inline std::string* ContyInitRes::mutable_cb_sn() {
  std::string* _s = _internal_mutable_cb_sn();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.cb_sn)
  return _s;
}
inline const std::string& ContyInitRes::_internal_cb_sn() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cb_sn_.Get();
}
inline void ContyInitRes::_internal_set_cb_sn(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cb_sn_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_cb_sn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cb_sn_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_cb_sn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.cb_sn)
  return _impl_.cb_sn_.Release();
}
inline void ContyInitRes::set_allocated_cb_sn(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cb_sn_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cb_sn_.IsDefault()) {
          _impl_.cb_sn_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.cb_sn)
}

// string controller_ver = 20;
inline void ContyInitRes::clear_controller_ver() {
  _impl_.controller_ver_.ClearToEmpty();
}
inline const std::string& ContyInitRes::controller_ver() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.controller_ver)
  return _internal_controller_ver();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_controller_ver(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controller_ver_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.controller_ver)
}
inline std::string* ContyInitRes::mutable_controller_ver() {
  std::string* _s = _internal_mutable_controller_ver();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.controller_ver)
  return _s;
}
inline const std::string& ContyInitRes::_internal_controller_ver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controller_ver_.Get();
}
inline void ContyInitRes::_internal_set_controller_ver(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controller_ver_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_controller_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.controller_ver_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_controller_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.controller_ver)
  return _impl_.controller_ver_.Release();
}
inline void ContyInitRes::set_allocated_controller_ver(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.controller_ver_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.controller_ver_.IsDefault()) {
          _impl_.controller_ver_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.controller_ver)
}

// string controller_detail = 21;
inline void ContyInitRes::clear_controller_detail() {
  _impl_.controller_detail_.ClearToEmpty();
}
inline const std::string& ContyInitRes::controller_detail() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.controller_detail)
  return _internal_controller_detail();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_controller_detail(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controller_detail_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.controller_detail)
}
inline std::string* ContyInitRes::mutable_controller_detail() {
  std::string* _s = _internal_mutable_controller_detail();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.controller_detail)
  return _s;
}
inline const std::string& ContyInitRes::_internal_controller_detail() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controller_detail_.Get();
}
inline void ContyInitRes::_internal_set_controller_detail(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controller_detail_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_controller_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.controller_detail_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_controller_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.controller_detail)
  return _impl_.controller_detail_.Release();
}
inline void ContyInitRes::set_allocated_controller_detail(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.controller_detail_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.controller_detail_.IsDefault()) {
          _impl_.controller_detail_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.controller_detail)
}

// string controller_date = 22;
inline void ContyInitRes::clear_controller_date() {
  _impl_.controller_date_.ClearToEmpty();
}
inline const std::string& ContyInitRes::controller_date() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.controller_date)
  return _internal_controller_date();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_controller_date(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controller_date_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.controller_date)
}
inline std::string* ContyInitRes::mutable_controller_date() {
  std::string* _s = _internal_mutable_controller_date();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.controller_date)
  return _s;
}
inline const std::string& ContyInitRes::_internal_controller_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controller_date_.Get();
}
inline void ContyInitRes::_internal_set_controller_date(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controller_date_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_controller_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.controller_date_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_controller_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.controller_date)
  return _impl_.controller_date_.Release();
}
inline void ContyInitRes::set_allocated_controller_date(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.controller_date_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.controller_date_.IsDefault()) {
          _impl_.controller_date_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.controller_date)
}

// string server_ver = 23;
inline void ContyInitRes::clear_server_ver() {
  _impl_.server_ver_.ClearToEmpty();
}
inline const std::string& ContyInitRes::server_ver() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.server_ver)
  return _internal_server_ver();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_server_ver(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_ver_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.server_ver)
}
inline std::string* ContyInitRes::mutable_server_ver() {
  std::string* _s = _internal_mutable_server_ver();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.server_ver)
  return _s;
}
inline const std::string& ContyInitRes::_internal_server_ver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.server_ver_.Get();
}
inline void ContyInitRes::_internal_set_server_ver(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_ver_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_server_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.server_ver_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_server_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.server_ver)
  return _impl_.server_ver_.Release();
}
inline void ContyInitRes::set_allocated_server_ver(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.server_ver_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.server_ver_.IsDefault()) {
          _impl_.server_ver_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.server_ver)
}

// string server_detail = 24;
inline void ContyInitRes::clear_server_detail() {
  _impl_.server_detail_.ClearToEmpty();
}
inline const std::string& ContyInitRes::server_detail() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.server_detail)
  return _internal_server_detail();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_server_detail(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_detail_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.server_detail)
}
inline std::string* ContyInitRes::mutable_server_detail() {
  std::string* _s = _internal_mutable_server_detail();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.server_detail)
  return _s;
}
inline const std::string& ContyInitRes::_internal_server_detail() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.server_detail_.Get();
}
inline void ContyInitRes::_internal_set_server_detail(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_detail_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_server_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.server_detail_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_server_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.server_detail)
  return _impl_.server_detail_.Release();
}
inline void ContyInitRes::set_allocated_server_detail(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.server_detail_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.server_detail_.IsDefault()) {
          _impl_.server_detail_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.server_detail)
}

// string server_date = 25;
inline void ContyInitRes::clear_server_date() {
  _impl_.server_date_.ClearToEmpty();
}
inline const std::string& ContyInitRes::server_date() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.server_date)
  return _internal_server_date();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_server_date(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_date_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.server_date)
}
inline std::string* ContyInitRes::mutable_server_date() {
  std::string* _s = _internal_mutable_server_date();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.server_date)
  return _s;
}
inline const std::string& ContyInitRes::_internal_server_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.server_date_.Get();
}
inline void ContyInitRes::_internal_set_server_date(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_date_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_server_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.server_date_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_server_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.server_date)
  return _impl_.server_date_.Release();
}
inline void ContyInitRes::set_allocated_server_date(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.server_date_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.server_date_.IsDefault()) {
          _impl_.server_date_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.server_date)
}

// string config_path = 30;
inline void ContyInitRes::clear_config_path() {
  _impl_.config_path_.ClearToEmpty();
}
inline const std::string& ContyInitRes::config_path() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.config_path)
  return _internal_config_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_config_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.config_path)
}
inline std::string* ContyInitRes::mutable_config_path() {
  std::string* _s = _internal_mutable_config_path();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.config_path)
  return _s;
}
inline const std::string& ContyInitRes::_internal_config_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_path_.Get();
}
inline void ContyInitRes::_internal_set_config_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_path_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_config_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.config_path_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_config_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.config_path)
  return _impl_.config_path_.Release();
}
inline void ContyInitRes::set_allocated_config_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.config_path_.IsDefault()) {
          _impl_.config_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.config_path)
}

// string program_path = 31;
inline void ContyInitRes::clear_program_path() {
  _impl_.program_path_.ClearToEmpty();
}
inline const std::string& ContyInitRes::program_path() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.program_path)
  return _internal_program_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_program_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.program_path)
}
inline std::string* ContyInitRes::mutable_program_path() {
  std::string* _s = _internal_mutable_program_path();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.program_path)
  return _s;
}
inline const std::string& ContyInitRes::_internal_program_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.program_path_.Get();
}
inline void ContyInitRes::_internal_set_program_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_path_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_program_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.program_path_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_program_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.program_path)
  return _impl_.program_path_.Release();
}
inline void ContyInitRes::set_allocated_program_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.program_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.program_path_.IsDefault()) {
          _impl_.program_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.program_path)
}

// string index_program_path = 32;
inline void ContyInitRes::clear_index_program_path() {
  _impl_.index_program_path_.ClearToEmpty();
}
inline const std::string& ContyInitRes::index_program_path() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.index_program_path)
  return _internal_index_program_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_index_program_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_program_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.index_program_path)
}
inline std::string* ContyInitRes::mutable_index_program_path() {
  std::string* _s = _internal_mutable_index_program_path();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.index_program_path)
  return _s;
}
inline const std::string& ContyInitRes::_internal_index_program_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_program_path_.Get();
}
inline void ContyInitRes::_internal_set_index_program_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_program_path_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_index_program_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.index_program_path_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_index_program_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.index_program_path)
  return _impl_.index_program_path_.Release();
}
inline void ContyInitRes::set_allocated_index_program_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_program_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.index_program_path_.IsDefault()) {
          _impl_.index_program_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.index_program_path)
}

// string server_log_path = 33;
inline void ContyInitRes::clear_server_log_path() {
  _impl_.server_log_path_.ClearToEmpty();
}
inline const std::string& ContyInitRes::server_log_path() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.server_log_path)
  return _internal_server_log_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_server_log_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_log_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.server_log_path)
}
inline std::string* ContyInitRes::mutable_server_log_path() {
  std::string* _s = _internal_mutable_server_log_path();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.server_log_path)
  return _s;
}
inline const std::string& ContyInitRes::_internal_server_log_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.server_log_path_.Get();
}
inline void ContyInitRes::_internal_set_server_log_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_log_path_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_server_log_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.server_log_path_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_server_log_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.server_log_path)
  return _impl_.server_log_path_.Release();
}
inline void ContyInitRes::set_allocated_server_log_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.server_log_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.server_log_path_.IsDefault()) {
          _impl_.server_log_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.server_log_path)
}

// string rt_log_path = 34;
inline void ContyInitRes::clear_rt_log_path() {
  _impl_.rt_log_path_.ClearToEmpty();
}
inline const std::string& ContyInitRes::rt_log_path() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.rt_log_path)
  return _internal_rt_log_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_rt_log_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rt_log_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.rt_log_path)
}
inline std::string* ContyInitRes::mutable_rt_log_path() {
  std::string* _s = _internal_mutable_rt_log_path();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.rt_log_path)
  return _s;
}
inline const std::string& ContyInitRes::_internal_rt_log_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rt_log_path_.Get();
}
inline void ContyInitRes::_internal_set_rt_log_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rt_log_path_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_rt_log_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.rt_log_path_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_rt_log_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.rt_log_path)
  return _impl_.rt_log_path_.Release();
}
inline void ContyInitRes::set_allocated_rt_log_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rt_log_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rt_log_path_.IsDefault()) {
          _impl_.rt_log_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.rt_log_path)
}

// string io_fw_ver = 40;
inline void ContyInitRes::clear_io_fw_ver() {
  _impl_.io_fw_ver_.ClearToEmpty();
}
inline const std::string& ContyInitRes::io_fw_ver() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.io_fw_ver)
  return _internal_io_fw_ver();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_io_fw_ver(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.io_fw_ver_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.io_fw_ver)
}
inline std::string* ContyInitRes::mutable_io_fw_ver() {
  std::string* _s = _internal_mutable_io_fw_ver();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.io_fw_ver)
  return _s;
}
inline const std::string& ContyInitRes::_internal_io_fw_ver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.io_fw_ver_.Get();
}
inline void ContyInitRes::_internal_set_io_fw_ver(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.io_fw_ver_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_io_fw_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.io_fw_ver_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_io_fw_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.io_fw_ver)
  return _impl_.io_fw_ver_.Release();
}
inline void ContyInitRes::set_allocated_io_fw_ver(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.io_fw_ver_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.io_fw_ver_.IsDefault()) {
          _impl_.io_fw_ver_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.io_fw_ver)
}

// repeated string core_fw_vers = 41;
inline int ContyInitRes::_internal_core_fw_vers_size() const {
  return _internal_core_fw_vers().size();
}
inline int ContyInitRes::core_fw_vers_size() const {
  return _internal_core_fw_vers_size();
}
inline void ContyInitRes::clear_core_fw_vers() {
  _internal_mutable_core_fw_vers()->Clear();
}
inline std::string* ContyInitRes::add_core_fw_vers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_core_fw_vers()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
  return _s;
}
inline const std::string& ContyInitRes::core_fw_vers(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
  return _internal_core_fw_vers().Get(index);
}
inline std::string* ContyInitRes::mutable_core_fw_vers(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
  return _internal_mutable_core_fw_vers()->Mutable(index);
}
inline void ContyInitRes::set_core_fw_vers(int index, const std::string& value) {
  _internal_mutable_core_fw_vers()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::set_core_fw_vers(int index, std::string&& value) {
  _internal_mutable_core_fw_vers()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::set_core_fw_vers(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_core_fw_vers()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::set_core_fw_vers(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_core_fw_vers()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::set_core_fw_vers(int index, absl::string_view value) {
  _internal_mutable_core_fw_vers()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::add_core_fw_vers(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_core_fw_vers()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::add_core_fw_vers(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_core_fw_vers()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::add_core_fw_vers(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_core_fw_vers()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::add_core_fw_vers(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_core_fw_vers()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline void ContyInitRes::add_core_fw_vers(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_core_fw_vers()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ContyInitRes::core_fw_vers() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
  return _internal_core_fw_vers();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* ContyInitRes::mutable_core_fw_vers() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ContyInitRes.core_fw_vers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_core_fw_vers();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ContyInitRes::_internal_core_fw_vers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.core_fw_vers_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ContyInitRes::_internal_mutable_core_fw_vers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.core_fw_vers_;
}

// string endtool_fw_ver = 42;
inline void ContyInitRes::clear_endtool_fw_ver() {
  _impl_.endtool_fw_ver_.ClearToEmpty();
}
inline const std::string& ContyInitRes::endtool_fw_ver() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.endtool_fw_ver)
  return _internal_endtool_fw_ver();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContyInitRes::set_endtool_fw_ver(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.endtool_fw_ver_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.endtool_fw_ver)
}
inline std::string* ContyInitRes::mutable_endtool_fw_ver() {
  std::string* _s = _internal_mutable_endtool_fw_ver();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.endtool_fw_ver)
  return _s;
}
inline const std::string& ContyInitRes::_internal_endtool_fw_ver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.endtool_fw_ver_.Get();
}
inline void ContyInitRes::_internal_set_endtool_fw_ver(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.endtool_fw_ver_.Set(value, GetArenaForAllocation());
}
inline std::string* ContyInitRes::_internal_mutable_endtool_fw_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.endtool_fw_ver_.Mutable( GetArenaForAllocation());
}
inline std::string* ContyInitRes::release_endtool_fw_ver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.endtool_fw_ver)
  return _impl_.endtool_fw_ver_.Release();
}
inline void ContyInitRes::set_allocated_endtool_fw_ver(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.endtool_fw_ver_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.endtool_fw_ver_.IsDefault()) {
          _impl_.endtool_fw_ver_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.endtool_fw_ver)
}

// repeated float joint_upper_limits = 43;
inline int ContyInitRes::_internal_joint_upper_limits_size() const {
  return _internal_joint_upper_limits().size();
}
inline int ContyInitRes::joint_upper_limits_size() const {
  return _internal_joint_upper_limits_size();
}
inline void ContyInitRes::clear_joint_upper_limits() {
  _internal_mutable_joint_upper_limits()->Clear();
}
inline float ContyInitRes::joint_upper_limits(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.joint_upper_limits)
  return _internal_joint_upper_limits().Get(index);
}
inline void ContyInitRes::set_joint_upper_limits(int index, float value) {
  _internal_mutable_joint_upper_limits()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.joint_upper_limits)
}
inline void ContyInitRes::add_joint_upper_limits(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_joint_upper_limits()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ContyInitRes.joint_upper_limits)
}
inline const ::google::protobuf::RepeatedField<float>& ContyInitRes::joint_upper_limits() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ContyInitRes.joint_upper_limits)
  return _internal_joint_upper_limits();
}
inline ::google::protobuf::RepeatedField<float>* ContyInitRes::mutable_joint_upper_limits() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ContyInitRes.joint_upper_limits)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_joint_upper_limits();
}

inline const ::google::protobuf::RepeatedField<float>& ContyInitRes::_internal_joint_upper_limits() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joint_upper_limits_;
}
inline ::google::protobuf::RepeatedField<float>* ContyInitRes::_internal_mutable_joint_upper_limits() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.joint_upper_limits_;
}

// repeated float joint_lower_limits = 44;
inline int ContyInitRes::_internal_joint_lower_limits_size() const {
  return _internal_joint_lower_limits().size();
}
inline int ContyInitRes::joint_lower_limits_size() const {
  return _internal_joint_lower_limits_size();
}
inline void ContyInitRes::clear_joint_lower_limits() {
  _internal_mutable_joint_lower_limits()->Clear();
}
inline float ContyInitRes::joint_lower_limits(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.joint_lower_limits)
  return _internal_joint_lower_limits().Get(index);
}
inline void ContyInitRes::set_joint_lower_limits(int index, float value) {
  _internal_mutable_joint_lower_limits()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ContyInitRes.joint_lower_limits)
}
inline void ContyInitRes::add_joint_lower_limits(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_joint_lower_limits()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ContyInitRes.joint_lower_limits)
}
inline const ::google::protobuf::RepeatedField<float>& ContyInitRes::joint_lower_limits() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ContyInitRes.joint_lower_limits)
  return _internal_joint_lower_limits();
}
inline ::google::protobuf::RepeatedField<float>* ContyInitRes::mutable_joint_lower_limits() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ContyInitRes.joint_lower_limits)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_joint_lower_limits();
}

inline const ::google::protobuf::RepeatedField<float>& ContyInitRes::_internal_joint_lower_limits() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joint_lower_limits_;
}
inline ::google::protobuf::RepeatedField<float>* ContyInitRes::_internal_mutable_joint_lower_limits() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.joint_lower_limits_;
}

// .IndyFramework.Protobuf.HRI.DateTime system_time = 50;
inline bool ContyInitRes::has_system_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.system_time_ != nullptr);
  return value;
}
inline void ContyInitRes::clear_system_time() {
  if (_impl_.system_time_ != nullptr) _impl_.system_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::DateTime& ContyInitRes::_internal_system_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::DateTime* p = _impl_.system_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::DateTime&>(::IndyFramework::Protobuf::HRI::_DateTime_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::DateTime& ContyInitRes::system_time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ContyInitRes.system_time)
  return _internal_system_time();
}
inline void ContyInitRes::unsafe_arena_set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.system_time_);
  }
  _impl_.system_time_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.system_time)
}
inline ::IndyFramework::Protobuf::HRI::DateTime* ContyInitRes::release_system_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::DateTime* released = _impl_.system_time_;
  _impl_.system_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::DateTime* ContyInitRes::unsafe_arena_release_system_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ContyInitRes.system_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::DateTime* temp = _impl_.system_time_;
  _impl_.system_time_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::DateTime* ContyInitRes::_internal_mutable_system_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.system_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::DateTime>(GetArenaForAllocation());
    _impl_.system_time_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(p);
  }
  return _impl_.system_time_;
}
inline ::IndyFramework::Protobuf::HRI::DateTime* ContyInitRes::mutable_system_time() {
  ::IndyFramework::Protobuf::HRI::DateTime* _msg = _internal_mutable_system_time();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ContyInitRes.system_time)
  return _msg;
}
inline void ContyInitRes::set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(_impl_.system_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.system_time_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ContyInitRes.system_time)
}

// -------------------------------------------------------------------

// RobotData

// repeated .IndyFramework.Protobuf.HRI.DigitalSignal do = 10;
inline int RobotData::_internal_do__size() const {
  return _internal_do_().size();
}
inline int RobotData::do__size() const {
  return _internal_do__size();
}
inline void RobotData::clear_do_() {
  _internal_mutable_do_()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* RobotData::mutable_do_(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RobotData.do)
  return _internal_mutable_do_()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
RobotData::mutable_do_() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.do)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_do_();
}
inline const ::IndyFramework::Protobuf::HRI::DigitalSignal& RobotData::do_(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.do)
    return _internal_do_().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* RobotData::add_do_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::DigitalSignal* _add = _internal_mutable_do_()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.do)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
RobotData::do_() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.do)
  return _internal_do_();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>&
RobotData::_internal_do_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.do__;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>*
RobotData::_internal_mutable_do_() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.do__;
}

// repeated .IndyFramework.Protobuf.HRI.DigitalSignal di = 11;
inline int RobotData::_internal_di_size() const {
  return _internal_di().size();
}
inline int RobotData::di_size() const {
  return _internal_di_size();
}
inline void RobotData::clear_di() {
  _internal_mutable_di()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* RobotData::mutable_di(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RobotData.di)
  return _internal_mutable_di()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
RobotData::mutable_di() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.di)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_di();
}
inline const ::IndyFramework::Protobuf::HRI::DigitalSignal& RobotData::di(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.di)
    return _internal_di().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* RobotData::add_di() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::DigitalSignal* _add = _internal_mutable_di()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.di)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
RobotData::di() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.di)
  return _internal_di();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>&
RobotData::_internal_di() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.di_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>*
RobotData::_internal_mutable_di() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.di_;
}

// repeated int32 ao = 12;
inline int RobotData::_internal_ao_size() const {
  return _internal_ao().size();
}
inline int RobotData::ao_size() const {
  return _internal_ao_size();
}
inline void RobotData::clear_ao() {
  _internal_mutable_ao()->Clear();
}
inline ::int32_t RobotData::ao(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.ao)
  return _internal_ao().Get(index);
}
inline void RobotData::set_ao(int index, ::int32_t value) {
  _internal_mutable_ao()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.ao)
}
inline void RobotData::add_ao(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ao()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.ao)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::ao() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.ao)
  return _internal_ao();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::mutable_ao() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.ao)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ao();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::_internal_ao() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ao_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::_internal_mutable_ao() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ao_;
}

// repeated int32 ai = 13;
inline int RobotData::_internal_ai_size() const {
  return _internal_ai().size();
}
inline int RobotData::ai_size() const {
  return _internal_ai_size();
}
inline void RobotData::clear_ai() {
  _internal_mutable_ai()->Clear();
}
inline ::int32_t RobotData::ai(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.ai)
  return _internal_ai().Get(index);
}
inline void RobotData::set_ai(int index, ::int32_t value) {
  _internal_mutable_ai()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.ai)
}
inline void RobotData::add_ai(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ai()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.ai)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::ai() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.ai)
  return _internal_ai();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::mutable_ai() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.ai)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ai();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::_internal_ai() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ai_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::_internal_mutable_ai() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ai_;
}

// repeated .IndyFramework.Protobuf.HRI.EndtoolSignal end_do = 14;
inline int RobotData::_internal_end_do_size() const {
  return _internal_end_do().size();
}
inline int RobotData::end_do_size() const {
  return _internal_end_do_size();
}
inline void RobotData::clear_end_do() {
  _internal_mutable_end_do()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* RobotData::mutable_end_do(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RobotData.end_do)
  return _internal_mutable_end_do()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
RobotData::mutable_end_do() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.end_do)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_end_do();
}
inline const ::IndyFramework::Protobuf::HRI::EndtoolSignal& RobotData::end_do(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.end_do)
    return _internal_end_do().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* RobotData::add_end_do() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* _add = _internal_mutable_end_do()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.end_do)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
RobotData::end_do() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.end_do)
  return _internal_end_do();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>&
RobotData::_internal_end_do() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_do_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>*
RobotData::_internal_mutable_end_do() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.end_do_;
}

// repeated .IndyFramework.Protobuf.HRI.EndtoolSignal end_di = 15;
inline int RobotData::_internal_end_di_size() const {
  return _internal_end_di().size();
}
inline int RobotData::end_di_size() const {
  return _internal_end_di_size();
}
inline void RobotData::clear_end_di() {
  _internal_mutable_end_di()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* RobotData::mutable_end_di(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RobotData.end_di)
  return _internal_mutable_end_di()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
RobotData::mutable_end_di() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.end_di)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_end_di();
}
inline const ::IndyFramework::Protobuf::HRI::EndtoolSignal& RobotData::end_di(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.end_di)
    return _internal_end_di().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* RobotData::add_end_di() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* _add = _internal_mutable_end_di()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.end_di)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
RobotData::end_di() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.end_di)
  return _internal_end_di();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>&
RobotData::_internal_end_di() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_di_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>*
RobotData::_internal_mutable_end_di() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.end_di_;
}

// repeated int32 end_ao = 16;
inline int RobotData::_internal_end_ao_size() const {
  return _internal_end_ao().size();
}
inline int RobotData::end_ao_size() const {
  return _internal_end_ao_size();
}
inline void RobotData::clear_end_ao() {
  _internal_mutable_end_ao()->Clear();
}
inline ::int32_t RobotData::end_ao(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.end_ao)
  return _internal_end_ao().Get(index);
}
inline void RobotData::set_end_ao(int index, ::int32_t value) {
  _internal_mutable_end_ao()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.end_ao)
}
inline void RobotData::add_end_ao(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_end_ao()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.end_ao)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::end_ao() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.end_ao)
  return _internal_end_ao();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::mutable_end_ao() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.end_ao)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_end_ao();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::_internal_end_ao() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_ao_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::_internal_mutable_end_ao() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.end_ao_;
}

// repeated int32 end_ai = 17;
inline int RobotData::_internal_end_ai_size() const {
  return _internal_end_ai().size();
}
inline int RobotData::end_ai_size() const {
  return _internal_end_ai_size();
}
inline void RobotData::clear_end_ai() {
  _internal_mutable_end_ai()->Clear();
}
inline ::int32_t RobotData::end_ai(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.end_ai)
  return _internal_end_ai().Get(index);
}
inline void RobotData::set_end_ai(int index, ::int32_t value) {
  _internal_mutable_end_ai()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.end_ai)
}
inline void RobotData::add_end_ai(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_end_ai()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.end_ai)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::end_ai() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.end_ai)
  return _internal_end_ai();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::mutable_end_ai() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.end_ai)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_end_ai();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& RobotData::_internal_end_ai() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_ai_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RobotData::_internal_mutable_end_ai() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.end_ai_;
}

// bool robot_state = 20;
inline void RobotData::clear_robot_state() {
  _impl_.robot_state_ = false;
}
inline bool RobotData::robot_state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.robot_state)
  return _internal_robot_state();
}
inline void RobotData::set_robot_state(bool value) {
  _internal_set_robot_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.robot_state)
}
inline bool RobotData::_internal_robot_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.robot_state_;
}
inline void RobotData::_internal_set_robot_state(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_state_ = value;
}

// repeated bool joint_servos = 21;
inline int RobotData::_internal_joint_servos_size() const {
  return _internal_joint_servos().size();
}
inline int RobotData::joint_servos_size() const {
  return _internal_joint_servos_size();
}
inline void RobotData::clear_joint_servos() {
  _internal_mutable_joint_servos()->Clear();
}
inline bool RobotData::joint_servos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.joint_servos)
  return _internal_joint_servos().Get(index);
}
inline void RobotData::set_joint_servos(int index, bool value) {
  _internal_mutable_joint_servos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.joint_servos)
}
inline void RobotData::add_joint_servos(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_joint_servos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.joint_servos)
}
inline const ::google::protobuf::RepeatedField<bool>& RobotData::joint_servos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.joint_servos)
  return _internal_joint_servos();
}
inline ::google::protobuf::RepeatedField<bool>* RobotData::mutable_joint_servos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.joint_servos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_joint_servos();
}

inline const ::google::protobuf::RepeatedField<bool>& RobotData::_internal_joint_servos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joint_servos_;
}
inline ::google::protobuf::RepeatedField<bool>* RobotData::_internal_mutable_joint_servos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.joint_servos_;
}

// repeated bool joint_brakes = 22;
inline int RobotData::_internal_joint_brakes_size() const {
  return _internal_joint_brakes().size();
}
inline int RobotData::joint_brakes_size() const {
  return _internal_joint_brakes_size();
}
inline void RobotData::clear_joint_brakes() {
  _internal_mutable_joint_brakes()->Clear();
}
inline bool RobotData::joint_brakes(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.joint_brakes)
  return _internal_joint_brakes().Get(index);
}
inline void RobotData::set_joint_brakes(int index, bool value) {
  _internal_mutable_joint_brakes()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.joint_brakes)
}
inline void RobotData::add_joint_brakes(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_joint_brakes()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.joint_brakes)
}
inline const ::google::protobuf::RepeatedField<bool>& RobotData::joint_brakes() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.joint_brakes)
  return _internal_joint_brakes();
}
inline ::google::protobuf::RepeatedField<bool>* RobotData::mutable_joint_brakes() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.joint_brakes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_joint_brakes();
}

inline const ::google::protobuf::RepeatedField<bool>& RobotData::_internal_joint_brakes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joint_brakes_;
}
inline ::google::protobuf::RepeatedField<bool>* RobotData::_internal_mutable_joint_brakes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.joint_brakes_;
}

// repeated float temperatures = 30;
inline int RobotData::_internal_temperatures_size() const {
  return _internal_temperatures().size();
}
inline int RobotData::temperatures_size() const {
  return _internal_temperatures_size();
}
inline void RobotData::clear_temperatures() {
  _internal_mutable_temperatures()->Clear();
}
inline float RobotData::temperatures(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.temperatures)
  return _internal_temperatures().Get(index);
}
inline void RobotData::set_temperatures(int index, float value) {
  _internal_mutable_temperatures()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.temperatures)
}
inline void RobotData::add_temperatures(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_temperatures()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.temperatures)
}
inline const ::google::protobuf::RepeatedField<float>& RobotData::temperatures() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.temperatures)
  return _internal_temperatures();
}
inline ::google::protobuf::RepeatedField<float>* RobotData::mutable_temperatures() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.temperatures)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_temperatures();
}

inline const ::google::protobuf::RepeatedField<float>& RobotData::_internal_temperatures() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.temperatures_;
}
inline ::google::protobuf::RepeatedField<float>* RobotData::_internal_mutable_temperatures() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.temperatures_;
}

// repeated float voltages = 31;
inline int RobotData::_internal_voltages_size() const {
  return _internal_voltages().size();
}
inline int RobotData::voltages_size() const {
  return _internal_voltages_size();
}
inline void RobotData::clear_voltages() {
  _internal_mutable_voltages()->Clear();
}
inline float RobotData::voltages(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.voltages)
  return _internal_voltages().Get(index);
}
inline void RobotData::set_voltages(int index, float value) {
  _internal_mutable_voltages()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.voltages)
}
inline void RobotData::add_voltages(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_voltages()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.voltages)
}
inline const ::google::protobuf::RepeatedField<float>& RobotData::voltages() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.voltages)
  return _internal_voltages();
}
inline ::google::protobuf::RepeatedField<float>* RobotData::mutable_voltages() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.voltages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_voltages();
}

inline const ::google::protobuf::RepeatedField<float>& RobotData::_internal_voltages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.voltages_;
}
inline ::google::protobuf::RepeatedField<float>* RobotData::_internal_mutable_voltages() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.voltages_;
}

// repeated float currents = 32;
inline int RobotData::_internal_currents_size() const {
  return _internal_currents().size();
}
inline int RobotData::currents_size() const {
  return _internal_currents_size();
}
inline void RobotData::clear_currents() {
  _internal_mutable_currents()->Clear();
}
inline float RobotData::currents(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.currents)
  return _internal_currents().Get(index);
}
inline void RobotData::set_currents(int index, float value) {
  _internal_mutable_currents()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.currents)
}
inline void RobotData::add_currents(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_currents()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.currents)
}
inline const ::google::protobuf::RepeatedField<float>& RobotData::currents() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.currents)
  return _internal_currents();
}
inline ::google::protobuf::RepeatedField<float>* RobotData::mutable_currents() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.currents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_currents();
}

inline const ::google::protobuf::RepeatedField<float>& RobotData::_internal_currents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.currents_;
}
inline ::google::protobuf::RepeatedField<float>* RobotData::_internal_mutable_currents() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.currents_;
}

// repeated string status_codes = 33;
inline int RobotData::_internal_status_codes_size() const {
  return _internal_status_codes().size();
}
inline int RobotData::status_codes_size() const {
  return _internal_status_codes_size();
}
inline void RobotData::clear_status_codes() {
  _internal_mutable_status_codes()->Clear();
}
inline std::string* RobotData::add_status_codes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_status_codes()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.RobotData.status_codes)
  return _s;
}
inline const std::string& RobotData::status_codes(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.status_codes)
  return _internal_status_codes().Get(index);
}
inline std::string* RobotData::mutable_status_codes(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RobotData.status_codes)
  return _internal_mutable_status_codes()->Mutable(index);
}
inline void RobotData::set_status_codes(int index, const std::string& value) {
  _internal_mutable_status_codes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::set_status_codes(int index, std::string&& value) {
  _internal_mutable_status_codes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::set_status_codes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_status_codes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::set_status_codes(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_status_codes()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::set_status_codes(int index, absl::string_view value) {
  _internal_mutable_status_codes()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::add_status_codes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_status_codes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::add_status_codes(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_status_codes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::add_status_codes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_status_codes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::add_status_codes(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_status_codes()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline void RobotData::add_status_codes(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_status_codes()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.RobotData.status_codes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RobotData::status_codes() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.RobotData.status_codes)
  return _internal_status_codes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* RobotData::mutable_status_codes() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.RobotData.status_codes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_status_codes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RobotData::_internal_status_codes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_codes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RobotData::_internal_mutable_status_codes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.status_codes_;
}

// .IndyFramework.Protobuf.HRI.DateTime system_time = 50;
inline bool RobotData::has_system_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.system_time_ != nullptr);
  return value;
}
inline void RobotData::clear_system_time() {
  if (_impl_.system_time_ != nullptr) _impl_.system_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::DateTime& RobotData::_internal_system_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::DateTime* p = _impl_.system_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::DateTime&>(::IndyFramework::Protobuf::HRI::_DateTime_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::DateTime& RobotData::system_time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.system_time)
  return _internal_system_time();
}
inline void RobotData::unsafe_arena_set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.system_time_);
  }
  _impl_.system_time_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.RobotData.system_time)
}
inline ::IndyFramework::Protobuf::HRI::DateTime* RobotData::release_system_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::DateTime* released = _impl_.system_time_;
  _impl_.system_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::DateTime* RobotData::unsafe_arena_release_system_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RobotData.system_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::DateTime* temp = _impl_.system_time_;
  _impl_.system_time_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::DateTime* RobotData::_internal_mutable_system_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.system_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::DateTime>(GetArenaForAllocation());
    _impl_.system_time_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(p);
  }
  return _impl_.system_time_;
}
inline ::IndyFramework::Protobuf::HRI::DateTime* RobotData::mutable_system_time() {
  ::IndyFramework::Protobuf::HRI::DateTime* _msg = _internal_mutable_system_time();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RobotData.system_time)
  return _msg;
}
inline void RobotData::set_allocated_system_time(::IndyFramework::Protobuf::HRI::DateTime* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(_impl_.system_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.system_time_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::DateTime*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RobotData.system_time)
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool RobotData::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void RobotData::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& RobotData::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& RobotData::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RobotData.response)
  return _internal_response();
}
inline void RobotData::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.RobotData.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* RobotData::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* RobotData::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RobotData.response)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* RobotData::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* RobotData::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RobotData.response)
  return _msg;
}
inline void RobotData::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RobotData.response)
}

// -------------------------------------------------------------------

// ProgramData

// .Nrmk.IndyFramework.ProgramState program_state = 1;
inline void ProgramData::clear_program_state() {
  _impl_.program_state_ = 0;
}
inline ::Nrmk::IndyFramework::ProgramState ProgramData::program_state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.program_state)
  return _internal_program_state();
}
inline void ProgramData::set_program_state(::Nrmk::IndyFramework::ProgramState value) {
  _internal_set_program_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ProgramData.program_state)
}
inline ::Nrmk::IndyFramework::ProgramState ProgramData::_internal_program_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Nrmk::IndyFramework::ProgramState>(_impl_.program_state_);
}
inline void ProgramData::_internal_set_program_state(::Nrmk::IndyFramework::ProgramState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_state_ = value;
}

// int32 cmd_id = 2;
inline void ProgramData::clear_cmd_id() {
  _impl_.cmd_id_ = 0;
}
inline ::int32_t ProgramData::cmd_id() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.cmd_id)
  return _internal_cmd_id();
}
inline void ProgramData::set_cmd_id(::int32_t value) {
  _internal_set_cmd_id(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ProgramData.cmd_id)
}
inline ::int32_t ProgramData::_internal_cmd_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cmd_id_;
}
inline void ProgramData::_internal_set_cmd_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cmd_id_ = value;
}

// int32 speed_ratio = 3;
inline void ProgramData::clear_speed_ratio() {
  _impl_.speed_ratio_ = 0;
}
inline ::int32_t ProgramData::speed_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.speed_ratio)
  return _internal_speed_ratio();
}
inline void ProgramData::set_speed_ratio(::int32_t value) {
  _internal_set_speed_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ProgramData.speed_ratio)
}
inline ::int32_t ProgramData::_internal_speed_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speed_ratio_;
}
inline void ProgramData::_internal_set_speed_ratio(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speed_ratio_ = value;
}

// string program_time = 4;
inline void ProgramData::clear_program_time() {
  _impl_.program_time_.ClearToEmpty();
}
inline const std::string& ProgramData::program_time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.program_time)
  return _internal_program_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProgramData::set_program_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_time_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ProgramData.program_time)
}
inline std::string* ProgramData::mutable_program_time() {
  std::string* _s = _internal_mutable_program_time();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ProgramData.program_time)
  return _s;
}
inline const std::string& ProgramData::_internal_program_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.program_time_.Get();
}
inline void ProgramData::_internal_set_program_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_time_.Set(value, GetArenaForAllocation());
}
inline std::string* ProgramData::_internal_mutable_program_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.program_time_.Mutable( GetArenaForAllocation());
}
inline std::string* ProgramData::release_program_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ProgramData.program_time)
  return _impl_.program_time_.Release();
}
inline void ProgramData::set_allocated_program_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.program_time_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.program_time_.IsDefault()) {
          _impl_.program_time_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ProgramData.program_time)
}

// string program_name = 5;
inline void ProgramData::clear_program_name() {
  _impl_.program_name_.ClearToEmpty();
}
inline const std::string& ProgramData::program_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.program_name)
  return _internal_program_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProgramData::set_program_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ProgramData.program_name)
}
inline std::string* ProgramData::mutable_program_name() {
  std::string* _s = _internal_mutable_program_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ProgramData.program_name)
  return _s;
}
inline const std::string& ProgramData::_internal_program_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.program_name_.Get();
}
inline void ProgramData::_internal_set_program_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ProgramData::_internal_mutable_program_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.program_name_.Mutable( GetArenaForAllocation());
}
inline std::string* ProgramData::release_program_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ProgramData.program_name)
  return _impl_.program_name_.Release();
}
inline void ProgramData::set_allocated_program_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.program_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.program_name_.IsDefault()) {
          _impl_.program_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ProgramData.program_name)
}

// string program_alarm = 6;
inline void ProgramData::clear_program_alarm() {
  _impl_.program_alarm_.ClearToEmpty();
}
inline const std::string& ProgramData::program_alarm() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.program_alarm)
  return _internal_program_alarm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProgramData::set_program_alarm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_alarm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ProgramData.program_alarm)
}
inline std::string* ProgramData::mutable_program_alarm() {
  std::string* _s = _internal_mutable_program_alarm();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ProgramData.program_alarm)
  return _s;
}
inline const std::string& ProgramData::_internal_program_alarm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.program_alarm_.Get();
}
inline void ProgramData::_internal_set_program_alarm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_alarm_.Set(value, GetArenaForAllocation());
}
inline std::string* ProgramData::_internal_mutable_program_alarm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.program_alarm_.Mutable( GetArenaForAllocation());
}
inline std::string* ProgramData::release_program_alarm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ProgramData.program_alarm)
  return _impl_.program_alarm_.Release();
}
inline void ProgramData::set_allocated_program_alarm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.program_alarm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.program_alarm_.IsDefault()) {
          _impl_.program_alarm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ProgramData.program_alarm)
}

// string program_annotation = 7;
inline void ProgramData::clear_program_annotation() {
  _impl_.program_annotation_.ClearToEmpty();
}
inline const std::string& ProgramData::program_annotation() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.program_annotation)
  return _internal_program_annotation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProgramData::set_program_annotation(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_annotation_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ProgramData.program_annotation)
}
inline std::string* ProgramData::mutable_program_annotation() {
  std::string* _s = _internal_mutable_program_annotation();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ProgramData.program_annotation)
  return _s;
}
inline const std::string& ProgramData::_internal_program_annotation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.program_annotation_.Get();
}
inline void ProgramData::_internal_set_program_annotation(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.program_annotation_.Set(value, GetArenaForAllocation());
}
inline std::string* ProgramData::_internal_mutable_program_annotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.program_annotation_.Mutable( GetArenaForAllocation());
}
inline std::string* ProgramData::release_program_annotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ProgramData.program_annotation)
  return _impl_.program_annotation_.Release();
}
inline void ProgramData::set_allocated_program_annotation(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.program_annotation_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.program_annotation_.IsDefault()) {
          _impl_.program_annotation_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ProgramData.program_annotation)
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool ProgramData::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void ProgramData::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& ProgramData::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& ProgramData::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ProgramData.response)
  return _internal_response();
}
inline void ProgramData::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.ProgramData.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* ProgramData::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* ProgramData::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ProgramData.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* ProgramData::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* ProgramData::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ProgramData.response)
  return _msg;
}
inline void ProgramData::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ProgramData.response)
}

// -------------------------------------------------------------------

// ViolationMsgCode

// string violation = 10;
inline void ViolationMsgCode::clear_violation() {
  _impl_.violation_.ClearToEmpty();
}
inline const std::string& ViolationMsgCode::violation() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ViolationMsgCode.violation)
  return _internal_violation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ViolationMsgCode::set_violation(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.violation_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ViolationMsgCode.violation)
}
inline std::string* ViolationMsgCode::mutable_violation() {
  std::string* _s = _internal_mutable_violation();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ViolationMsgCode.violation)
  return _s;
}
inline const std::string& ViolationMsgCode::_internal_violation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.violation_.Get();
}
inline void ViolationMsgCode::_internal_set_violation(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.violation_.Set(value, GetArenaForAllocation());
}
inline std::string* ViolationMsgCode::_internal_mutable_violation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.violation_.Mutable( GetArenaForAllocation());
}
inline std::string* ViolationMsgCode::release_violation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ViolationMsgCode.violation)
  return _impl_.violation_.Release();
}
inline void ViolationMsgCode::set_allocated_violation(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.violation_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.violation_.IsDefault()) {
          _impl_.violation_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ViolationMsgCode.violation)
}

// uint64 violation_code = 21;
inline void ViolationMsgCode::clear_violation_code() {
  _impl_.violation_code_ = ::uint64_t{0u};
}
inline ::uint64_t ViolationMsgCode::violation_code() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ViolationMsgCode.violation_code)
  return _internal_violation_code();
}
inline void ViolationMsgCode::set_violation_code(::uint64_t value) {
  _internal_set_violation_code(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ViolationMsgCode.violation_code)
}
inline ::uint64_t ViolationMsgCode::_internal_violation_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.violation_code_;
}
inline void ViolationMsgCode::_internal_set_violation_code(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.violation_code_ = value;
}

// -------------------------------------------------------------------

// ControlData

// repeated float jpos = 1;
inline int ControlData::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int ControlData::jpos_size() const {
  return _internal_jpos_size();
}
inline void ControlData::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float ControlData::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.jpos)
  return _internal_jpos().Get(index);
}
inline void ControlData::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.jpos)
}
inline void ControlData::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ControlData.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& ControlData::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ControlData.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* ControlData::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ControlData.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& ControlData::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* ControlData::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// repeated float jvel = 2;
inline int ControlData::_internal_jvel_size() const {
  return _internal_jvel().size();
}
inline int ControlData::jvel_size() const {
  return _internal_jvel_size();
}
inline void ControlData::clear_jvel() {
  _internal_mutable_jvel()->Clear();
}
inline float ControlData::jvel(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.jvel)
  return _internal_jvel().Get(index);
}
inline void ControlData::set_jvel(int index, float value) {
  _internal_mutable_jvel()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.jvel)
}
inline void ControlData::add_jvel(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jvel()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ControlData.jvel)
}
inline const ::google::protobuf::RepeatedField<float>& ControlData::jvel() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ControlData.jvel)
  return _internal_jvel();
}
inline ::google::protobuf::RepeatedField<float>* ControlData::mutable_jvel() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ControlData.jvel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jvel();
}

inline const ::google::protobuf::RepeatedField<float>& ControlData::_internal_jvel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jvel_;
}
inline ::google::protobuf::RepeatedField<float>* ControlData::_internal_mutable_jvel() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jvel_;
}

// repeated float tpos = 3;
inline int ControlData::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int ControlData::tpos_size() const {
  return _internal_tpos_size();
}
inline void ControlData::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float ControlData::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.tpos)
  return _internal_tpos().Get(index);
}
inline void ControlData::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.tpos)
}
inline void ControlData::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ControlData.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& ControlData::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ControlData.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* ControlData::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ControlData.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& ControlData::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* ControlData::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// repeated float tvel = 4;
inline int ControlData::_internal_tvel_size() const {
  return _internal_tvel().size();
}
inline int ControlData::tvel_size() const {
  return _internal_tvel_size();
}
inline void ControlData::clear_tvel() {
  _internal_mutable_tvel()->Clear();
}
inline float ControlData::tvel(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.tvel)
  return _internal_tvel().Get(index);
}
inline void ControlData::set_tvel(int index, float value) {
  _internal_mutable_tvel()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.tvel)
}
inline void ControlData::add_tvel(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tvel()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ControlData.tvel)
}
inline const ::google::protobuf::RepeatedField<float>& ControlData::tvel() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ControlData.tvel)
  return _internal_tvel();
}
inline ::google::protobuf::RepeatedField<float>* ControlData::mutable_tvel() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ControlData.tvel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tvel();
}

inline const ::google::protobuf::RepeatedField<float>& ControlData::_internal_tvel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tvel_;
}
inline ::google::protobuf::RepeatedField<float>* ControlData::_internal_mutable_tvel() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tvel_;
}

// repeated float ref_frame = 5;
inline int ControlData::_internal_ref_frame_size() const {
  return _internal_ref_frame().size();
}
inline int ControlData::ref_frame_size() const {
  return _internal_ref_frame_size();
}
inline void ControlData::clear_ref_frame() {
  _internal_mutable_ref_frame()->Clear();
}
inline float ControlData::ref_frame(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.ref_frame)
  return _internal_ref_frame().Get(index);
}
inline void ControlData::set_ref_frame(int index, float value) {
  _internal_mutable_ref_frame()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.ref_frame)
}
inline void ControlData::add_ref_frame(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ref_frame()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ControlData.ref_frame)
}
inline const ::google::protobuf::RepeatedField<float>& ControlData::ref_frame() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ControlData.ref_frame)
  return _internal_ref_frame();
}
inline ::google::protobuf::RepeatedField<float>* ControlData::mutable_ref_frame() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ControlData.ref_frame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ref_frame();
}

inline const ::google::protobuf::RepeatedField<float>& ControlData::_internal_ref_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ref_frame_;
}
inline ::google::protobuf::RepeatedField<float>* ControlData::_internal_mutable_ref_frame() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ref_frame_;
}

// repeated float tool_frame = 6;
inline int ControlData::_internal_tool_frame_size() const {
  return _internal_tool_frame().size();
}
inline int ControlData::tool_frame_size() const {
  return _internal_tool_frame_size();
}
inline void ControlData::clear_tool_frame() {
  _internal_mutable_tool_frame()->Clear();
}
inline float ControlData::tool_frame(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.tool_frame)
  return _internal_tool_frame().Get(index);
}
inline void ControlData::set_tool_frame(int index, float value) {
  _internal_mutable_tool_frame()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.tool_frame)
}
inline void ControlData::add_tool_frame(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tool_frame()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ControlData.tool_frame)
}
inline const ::google::protobuf::RepeatedField<float>& ControlData::tool_frame() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ControlData.tool_frame)
  return _internal_tool_frame();
}
inline ::google::protobuf::RepeatedField<float>* ControlData::mutable_tool_frame() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ControlData.tool_frame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tool_frame();
}

inline const ::google::protobuf::RepeatedField<float>& ControlData::_internal_tool_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_frame_;
}
inline ::google::protobuf::RepeatedField<float>* ControlData::_internal_mutable_tool_frame() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tool_frame_;
}

// string ref_frame_name = 7;
inline void ControlData::clear_ref_frame_name() {
  _impl_.ref_frame_name_.ClearToEmpty();
}
inline const std::string& ControlData::ref_frame_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.ref_frame_name)
  return _internal_ref_frame_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ControlData::set_ref_frame_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ref_frame_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.ref_frame_name)
}
inline std::string* ControlData::mutable_ref_frame_name() {
  std::string* _s = _internal_mutable_ref_frame_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ControlData.ref_frame_name)
  return _s;
}
inline const std::string& ControlData::_internal_ref_frame_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ref_frame_name_.Get();
}
inline void ControlData::_internal_set_ref_frame_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ref_frame_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ControlData::_internal_mutable_ref_frame_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ref_frame_name_.Mutable( GetArenaForAllocation());
}
inline std::string* ControlData::release_ref_frame_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ControlData.ref_frame_name)
  return _impl_.ref_frame_name_.Release();
}
inline void ControlData::set_allocated_ref_frame_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ref_frame_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ref_frame_name_.IsDefault()) {
          _impl_.ref_frame_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ControlData.ref_frame_name)
}

// string tool_frame_name = 8;
inline void ControlData::clear_tool_frame_name() {
  _impl_.tool_frame_name_.ClearToEmpty();
}
inline const std::string& ControlData::tool_frame_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.tool_frame_name)
  return _internal_tool_frame_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ControlData::set_tool_frame_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_frame_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.tool_frame_name)
}
inline std::string* ControlData::mutable_tool_frame_name() {
  std::string* _s = _internal_mutable_tool_frame_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ControlData.tool_frame_name)
  return _s;
}
inline const std::string& ControlData::_internal_tool_frame_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_frame_name_.Get();
}
inline void ControlData::_internal_set_tool_frame_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tool_frame_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ControlData::_internal_mutable_tool_frame_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tool_frame_name_.Mutable( GetArenaForAllocation());
}
inline std::string* ControlData::release_tool_frame_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ControlData.tool_frame_name)
  return _impl_.tool_frame_name_.Release();
}
inline void ControlData::set_allocated_tool_frame_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tool_frame_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tool_frame_name_.IsDefault()) {
          _impl_.tool_frame_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ControlData.tool_frame_name)
}

// string control_time = 10;
inline void ControlData::clear_control_time() {
  _impl_.control_time_.ClearToEmpty();
}
inline const std::string& ControlData::control_time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.control_time)
  return _internal_control_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ControlData::set_control_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.control_time_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.control_time)
}
inline std::string* ControlData::mutable_control_time() {
  std::string* _s = _internal_mutable_control_time();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ControlData.control_time)
  return _s;
}
inline const std::string& ControlData::_internal_control_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.control_time_.Get();
}
inline void ControlData::_internal_set_control_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.control_time_.Set(value, GetArenaForAllocation());
}
inline std::string* ControlData::_internal_mutable_control_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.control_time_.Mutable( GetArenaForAllocation());
}
inline std::string* ControlData::release_control_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ControlData.control_time)
  return _impl_.control_time_.Release();
}
inline void ControlData::set_allocated_control_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.control_time_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.control_time_.IsDefault()) {
          _impl_.control_time_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ControlData.control_time)
}

// .Nrmk.IndyFramework.OpState control_state = 11;
inline void ControlData::clear_control_state() {
  _impl_.control_state_ = 0;
}
inline ::Nrmk::IndyFramework::OpState ControlData::control_state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.control_state)
  return _internal_control_state();
}
inline void ControlData::set_control_state(::Nrmk::IndyFramework::OpState value) {
  _internal_set_control_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.control_state)
}
inline ::Nrmk::IndyFramework::OpState ControlData::_internal_control_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Nrmk::IndyFramework::OpState>(_impl_.control_state_);
}
inline void ControlData::_internal_set_control_state(::Nrmk::IndyFramework::OpState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.control_state_ = value;
}

// bool is_simulation_mode = 12;
inline void ControlData::clear_is_simulation_mode() {
  _impl_.is_simulation_mode_ = false;
}
inline bool ControlData::is_simulation_mode() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.is_simulation_mode)
  return _internal_is_simulation_mode();
}
inline void ControlData::set_is_simulation_mode(bool value) {
  _internal_set_is_simulation_mode(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.is_simulation_mode)
}
inline bool ControlData::_internal_is_simulation_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_simulation_mode_;
}
inline void ControlData::_internal_set_is_simulation_mode(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_simulation_mode_ = value;
}

// bool is_auto_mode = 13;
inline void ControlData::clear_is_auto_mode() {
  _impl_.is_auto_mode_ = false;
}
inline bool ControlData::is_auto_mode() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.is_auto_mode)
  return _internal_is_auto_mode();
}
inline void ControlData::set_is_auto_mode(bool value) {
  _internal_set_is_auto_mode(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.is_auto_mode)
}
inline bool ControlData::_internal_is_auto_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_auto_mode_;
}
inline void ControlData::_internal_set_is_auto_mode(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_auto_mode_ = value;
}

// bool is_target_reached = 14;
inline void ControlData::clear_is_target_reached() {
  _impl_.is_target_reached_ = false;
}
inline bool ControlData::is_target_reached() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.is_target_reached)
  return _internal_is_target_reached();
}
inline void ControlData::set_is_target_reached(bool value) {
  _internal_set_is_target_reached(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.is_target_reached)
}
inline bool ControlData::_internal_is_target_reached() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_target_reached_;
}
inline void ControlData::_internal_set_is_target_reached(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_target_reached_ = value;
}

// bool is_key_connected = 15;
inline void ControlData::clear_is_key_connected() {
  _impl_.is_key_connected_ = false;
}
inline bool ControlData::is_key_connected() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.is_key_connected)
  return _internal_is_key_connected();
}
inline void ControlData::set_is_key_connected(bool value) {
  _internal_set_is_key_connected(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.is_key_connected)
}
inline bool ControlData::_internal_is_key_connected() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_key_connected_;
}
inline void ControlData::_internal_set_is_key_connected(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_key_connected_ = value;
}

// bool is_enabler_on = 16;
inline void ControlData::clear_is_enabler_on() {
  _impl_.is_enabler_on_ = false;
}
inline bool ControlData::is_enabler_on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.is_enabler_on)
  return _internal_is_enabler_on();
}
inline void ControlData::set_is_enabler_on(bool value) {
  _internal_set_is_enabler_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.is_enabler_on)
}
inline bool ControlData::_internal_is_enabler_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_enabler_on_;
}
inline void ControlData::_internal_set_is_enabler_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_enabler_on_ = value;
}

// string violation = 20;
inline void ControlData::clear_violation() {
  _impl_.violation_.ClearToEmpty();
}
inline const std::string& ControlData::violation() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.violation)
  return _internal_violation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ControlData::set_violation(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.violation_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.violation)
}
inline std::string* ControlData::mutable_violation() {
  std::string* _s = _internal_mutable_violation();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ControlData.violation)
  return _s;
}
inline const std::string& ControlData::_internal_violation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.violation_.Get();
}
inline void ControlData::_internal_set_violation(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.violation_.Set(value, GetArenaForAllocation());
}
inline std::string* ControlData::_internal_mutable_violation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.violation_.Mutable( GetArenaForAllocation());
}
inline std::string* ControlData::release_violation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ControlData.violation)
  return _impl_.violation_.Release();
}
inline void ControlData::set_allocated_violation(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.violation_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.violation_.IsDefault()) {
          _impl_.violation_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ControlData.violation)
}

// uint64 violation_code = 21;
inline void ControlData::clear_violation_code() {
  _impl_.violation_code_ = ::uint64_t{0u};
}
inline ::uint64_t ControlData::violation_code() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.violation_code)
  return _internal_violation_code();
}
inline void ControlData::set_violation_code(::uint64_t value) {
  _internal_set_violation_code(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ControlData.violation_code)
}
inline ::uint64_t ControlData::_internal_violation_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.violation_code_;
}
inline void ControlData::_internal_set_violation_code(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.violation_code_ = value;
}

// repeated .IndyFramework.Protobuf.HRI.ViolationMsgCode violation_queue = 25;
inline int ControlData::_internal_violation_queue_size() const {
  return _internal_violation_queue().size();
}
inline int ControlData::violation_queue_size() const {
  return _internal_violation_queue_size();
}
inline void ControlData::clear_violation_queue() {
  _internal_mutable_violation_queue()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::ViolationMsgCode* ControlData::mutable_violation_queue(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ControlData.violation_queue)
  return _internal_mutable_violation_queue()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ViolationMsgCode >*
ControlData::mutable_violation_queue() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ControlData.violation_queue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_violation_queue();
}
inline const ::IndyFramework::Protobuf::HRI::ViolationMsgCode& ControlData::violation_queue(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.violation_queue)
    return _internal_violation_queue().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::ViolationMsgCode* ControlData::add_violation_queue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::ViolationMsgCode* _add = _internal_mutable_violation_queue()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ControlData.violation_queue)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ViolationMsgCode >&
ControlData::violation_queue() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ControlData.violation_queue)
  return _internal_violation_queue();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ViolationMsgCode>&
ControlData::_internal_violation_queue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.violation_queue_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ViolationMsgCode>*
ControlData::_internal_mutable_violation_queue() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.violation_queue_;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool ControlData::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void ControlData::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& ControlData::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& ControlData::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ControlData.response)
  return _internal_response();
}
inline void ControlData::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.ControlData.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* ControlData::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* ControlData::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ControlData.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* ControlData::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* ControlData::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ControlData.response)
  return _msg;
}
inline void ControlData::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ControlData.response)
}

// -------------------------------------------------------------------

// LinearData

// uint32 num_axes = 1;
inline void LinearData::clear_num_axes() {
  _impl_.num_axes_ = 0u;
}
inline ::uint32_t LinearData::num_axes() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.LinearData.num_axes)
  return _internal_num_axes();
}
inline void LinearData::set_num_axes(::uint32_t value) {
  _internal_set_num_axes(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.LinearData.num_axes)
}
inline ::uint32_t LinearData::_internal_num_axes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_axes_;
}
inline void LinearData::_internal_set_num_axes(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_axes_ = value;
}

// repeated bool axis_servos = 2;
inline int LinearData::_internal_axis_servos_size() const {
  return _internal_axis_servos().size();
}
inline int LinearData::axis_servos_size() const {
  return _internal_axis_servos_size();
}
inline void LinearData::clear_axis_servos() {
  _internal_mutable_axis_servos()->Clear();
}
inline bool LinearData::axis_servos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.LinearData.axis_servos)
  return _internal_axis_servos().Get(index);
}
inline void LinearData::set_axis_servos(int index, bool value) {
  _internal_mutable_axis_servos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.LinearData.axis_servos)
}
inline void LinearData::add_axis_servos(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_axis_servos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.LinearData.axis_servos)
}
inline const ::google::protobuf::RepeatedField<bool>& LinearData::axis_servos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.LinearData.axis_servos)
  return _internal_axis_servos();
}
inline ::google::protobuf::RepeatedField<bool>* LinearData::mutable_axis_servos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.LinearData.axis_servos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_axis_servos();
}

inline const ::google::protobuf::RepeatedField<bool>& LinearData::_internal_axis_servos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.axis_servos_;
}
inline ::google::protobuf::RepeatedField<bool>* LinearData::_internal_mutable_axis_servos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.axis_servos_;
}

// repeated float pos_mm = 3;
inline int LinearData::_internal_pos_mm_size() const {
  return _internal_pos_mm().size();
}
inline int LinearData::pos_mm_size() const {
  return _internal_pos_mm_size();
}
inline void LinearData::clear_pos_mm() {
  _internal_mutable_pos_mm()->Clear();
}
inline float LinearData::pos_mm(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.LinearData.pos_mm)
  return _internal_pos_mm().Get(index);
}
inline void LinearData::set_pos_mm(int index, float value) {
  _internal_mutable_pos_mm()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.LinearData.pos_mm)
}
inline void LinearData::add_pos_mm(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pos_mm()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.LinearData.pos_mm)
}
inline const ::google::protobuf::RepeatedField<float>& LinearData::pos_mm() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.LinearData.pos_mm)
  return _internal_pos_mm();
}
inline ::google::protobuf::RepeatedField<float>* LinearData::mutable_pos_mm() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.LinearData.pos_mm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pos_mm();
}

inline const ::google::protobuf::RepeatedField<float>& LinearData::_internal_pos_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pos_mm_;
}
inline ::google::protobuf::RepeatedField<float>* LinearData::_internal_mutable_pos_mm() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pos_mm_;
}

// repeated float vel_mm = 4;
inline int LinearData::_internal_vel_mm_size() const {
  return _internal_vel_mm().size();
}
inline int LinearData::vel_mm_size() const {
  return _internal_vel_mm_size();
}
inline void LinearData::clear_vel_mm() {
  _internal_mutable_vel_mm()->Clear();
}
inline float LinearData::vel_mm(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.LinearData.vel_mm)
  return _internal_vel_mm().Get(index);
}
inline void LinearData::set_vel_mm(int index, float value) {
  _internal_mutable_vel_mm()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.LinearData.vel_mm)
}
inline void LinearData::add_vel_mm(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_vel_mm()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.LinearData.vel_mm)
}
inline const ::google::protobuf::RepeatedField<float>& LinearData::vel_mm() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.LinearData.vel_mm)
  return _internal_vel_mm();
}
inline ::google::protobuf::RepeatedField<float>* LinearData::mutable_vel_mm() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.LinearData.vel_mm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_vel_mm();
}

inline const ::google::protobuf::RepeatedField<float>& LinearData::_internal_vel_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_mm_;
}
inline ::google::protobuf::RepeatedField<float>* LinearData::_internal_mutable_vel_mm() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.vel_mm_;
}

// .Nrmk.IndyFramework.OpState op_state = 10;
inline void LinearData::clear_op_state() {
  _impl_.op_state_ = 0;
}
inline ::Nrmk::IndyFramework::OpState LinearData::op_state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.LinearData.op_state)
  return _internal_op_state();
}
inline void LinearData::set_op_state(::Nrmk::IndyFramework::OpState value) {
  _internal_set_op_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.LinearData.op_state)
}
inline ::Nrmk::IndyFramework::OpState LinearData::_internal_op_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Nrmk::IndyFramework::OpState>(_impl_.op_state_);
}
inline void LinearData::_internal_set_op_state(::Nrmk::IndyFramework::OpState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.op_state_ = value;
}

// -------------------------------------------------------------------

// JogJointReq

// int32 joint_num = 1;
inline void JogJointReq::clear_joint_num() {
  _impl_.joint_num_ = 0;
}
inline ::int32_t JogJointReq::joint_num() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogJointReq.joint_num)
  return _internal_joint_num();
}
inline void JogJointReq::set_joint_num(::int32_t value) {
  _internal_set_joint_num(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogJointReq.joint_num)
}
inline ::int32_t JogJointReq::_internal_joint_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joint_num_;
}
inline void JogJointReq::_internal_set_joint_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_num_ = value;
}

// int32 vel_level = 2;
inline void JogJointReq::clear_vel_level() {
  _impl_.vel_level_ = 0;
}
inline ::int32_t JogJointReq::vel_level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogJointReq.vel_level)
  return _internal_vel_level();
}
inline void JogJointReq::set_vel_level(::int32_t value) {
  _internal_set_vel_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogJointReq.vel_level)
}
inline ::int32_t JogJointReq::_internal_vel_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_;
}
inline void JogJointReq::_internal_set_vel_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_ = value;
}

// float distance = 3;
inline void JogJointReq::clear_distance() {
  _impl_.distance_ = 0;
}
inline float JogJointReq::distance() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogJointReq.distance)
  return _internal_distance();
}
inline void JogJointReq::set_distance(float value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogJointReq.distance)
}
inline float JogJointReq::_internal_distance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_;
}
inline void JogJointReq::_internal_set_distance(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_ = value;
}

// -------------------------------------------------------------------

// JogJointRes

// string msg = 100;
inline void JogJointRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& JogJointRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogJointRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JogJointRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogJointRes.msg)
}
inline std::string* JogJointRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.JogJointRes.msg)
  return _s;
}
inline const std::string& JogJointRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void JogJointRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* JogJointRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* JogJointRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.JogJointRes.msg)
  return _impl_.msg_.Release();
}
inline void JogJointRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.JogJointRes.msg)
}

// -------------------------------------------------------------------

// JogTaskReq

// .IndyFramework.Protobuf.Shared.Axis axis = 1;
inline void JogTaskReq::clear_axis() {
  _impl_.axis_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::Axis JogTaskReq::axis() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogTaskReq.axis)
  return _internal_axis();
}
inline void JogTaskReq::set_axis(::IndyFramework::Protobuf::Shared::Axis value) {
  _internal_set_axis(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogTaskReq.axis)
}
inline ::IndyFramework::Protobuf::Shared::Axis JogTaskReq::_internal_axis() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::Axis>(_impl_.axis_);
}
inline void JogTaskReq::_internal_set_axis(::IndyFramework::Protobuf::Shared::Axis value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.axis_ = value;
}

// int32 vel_level = 2;
inline void JogTaskReq::clear_vel_level() {
  _impl_.vel_level_ = 0;
}
inline ::int32_t JogTaskReq::vel_level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogTaskReq.vel_level)
  return _internal_vel_level();
}
inline void JogTaskReq::set_vel_level(::int32_t value) {
  _internal_set_vel_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogTaskReq.vel_level)
}
inline ::int32_t JogTaskReq::_internal_vel_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_;
}
inline void JogTaskReq::_internal_set_vel_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_ = value;
}

// .IndyFramework.Protobuf.Shared.JogFrameType jog_frame = 3;
inline void JogTaskReq::clear_jog_frame() {
  _impl_.jog_frame_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::JogFrameType JogTaskReq::jog_frame() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogTaskReq.jog_frame)
  return _internal_jog_frame();
}
inline void JogTaskReq::set_jog_frame(::IndyFramework::Protobuf::Shared::JogFrameType value) {
  _internal_set_jog_frame(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogTaskReq.jog_frame)
}
inline ::IndyFramework::Protobuf::Shared::JogFrameType JogTaskReq::_internal_jog_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::JogFrameType>(_impl_.jog_frame_);
}
inline void JogTaskReq::_internal_set_jog_frame(::IndyFramework::Protobuf::Shared::JogFrameType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.jog_frame_ = value;
}

// float distance = 4;
inline void JogTaskReq::clear_distance() {
  _impl_.distance_ = 0;
}
inline float JogTaskReq::distance() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogTaskReq.distance)
  return _internal_distance();
}
inline void JogTaskReq::set_distance(float value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogTaskReq.distance)
}
inline float JogTaskReq::_internal_distance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_;
}
inline void JogTaskReq::_internal_set_distance(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_ = value;
}

// -------------------------------------------------------------------

// JogTaskRes

// string msg = 100;
inline void JogTaskRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& JogTaskRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogTaskRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JogTaskRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogTaskRes.msg)
}
inline std::string* JogTaskRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.JogTaskRes.msg)
  return _s;
}
inline const std::string& JogTaskRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void JogTaskRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* JogTaskRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* JogTaskRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.JogTaskRes.msg)
  return _impl_.msg_.Release();
}
inline void JogTaskRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.JogTaskRes.msg)
}

// -------------------------------------------------------------------

// JogAxisReq

// int32 joint_num = 1;
inline void JogAxisReq::clear_joint_num() {
  _impl_.joint_num_ = 0;
}
inline ::int32_t JogAxisReq::joint_num() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogAxisReq.joint_num)
  return _internal_joint_num();
}
inline void JogAxisReq::set_joint_num(::int32_t value) {
  _internal_set_joint_num(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogAxisReq.joint_num)
}
inline ::int32_t JogAxisReq::_internal_joint_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joint_num_;
}
inline void JogAxisReq::_internal_set_joint_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_num_ = value;
}

// int32 vel_level = 2;
inline void JogAxisReq::clear_vel_level() {
  _impl_.vel_level_ = 0;
}
inline ::int32_t JogAxisReq::vel_level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogAxisReq.vel_level)
  return _internal_vel_level();
}
inline void JogAxisReq::set_vel_level(::int32_t value) {
  _internal_set_vel_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogAxisReq.vel_level)
}
inline ::int32_t JogAxisReq::_internal_vel_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_;
}
inline void JogAxisReq::_internal_set_vel_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_ = value;
}

// float distance = 3;
inline void JogAxisReq::clear_distance() {
  _impl_.distance_ = 0;
}
inline float JogAxisReq::distance() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogAxisReq.distance)
  return _internal_distance();
}
inline void JogAxisReq::set_distance(float value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogAxisReq.distance)
}
inline float JogAxisReq::_internal_distance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_;
}
inline void JogAxisReq::_internal_set_distance(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_ = value;
}

// -------------------------------------------------------------------

// JogAxisRes

// string msg = 100;
inline void JogAxisRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& JogAxisRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogAxisRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JogAxisRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogAxisRes.msg)
}
inline std::string* JogAxisRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.JogAxisRes.msg)
  return _s;
}
inline const std::string& JogAxisRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void JogAxisRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* JogAxisRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* JogAxisRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.JogAxisRes.msg)
  return _impl_.msg_.Release();
}
inline void JogAxisRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.JogAxisRes.msg)
}

// -------------------------------------------------------------------

// MoveJReq

// repeated float j_start = 1;
inline int MoveJReq::_internal_j_start_size() const {
  return _internal_j_start().size();
}
inline int MoveJReq::j_start_size() const {
  return _internal_j_start_size();
}
inline void MoveJReq::clear_j_start() {
  _internal_mutable_j_start()->Clear();
}
inline float MoveJReq::j_start(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveJReq.j_start)
  return _internal_j_start().Get(index);
}
inline void MoveJReq::set_j_start(int index, float value) {
  _internal_mutable_j_start()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveJReq.j_start)
}
inline void MoveJReq::add_j_start(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_j_start()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.MoveJReq.j_start)
}
inline const ::google::protobuf::RepeatedField<float>& MoveJReq::j_start() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.MoveJReq.j_start)
  return _internal_j_start();
}
inline ::google::protobuf::RepeatedField<float>* MoveJReq::mutable_j_start() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.MoveJReq.j_start)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_j_start();
}

inline const ::google::protobuf::RepeatedField<float>& MoveJReq::_internal_j_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.j_start_;
}
inline ::google::protobuf::RepeatedField<float>* MoveJReq::_internal_mutable_j_start() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.j_start_;
}

// repeated float j_target = 2;
inline int MoveJReq::_internal_j_target_size() const {
  return _internal_j_target().size();
}
inline int MoveJReq::j_target_size() const {
  return _internal_j_target_size();
}
inline void MoveJReq::clear_j_target() {
  _internal_mutable_j_target()->Clear();
}
inline float MoveJReq::j_target(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveJReq.j_target)
  return _internal_j_target().Get(index);
}
inline void MoveJReq::set_j_target(int index, float value) {
  _internal_mutable_j_target()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveJReq.j_target)
}
inline void MoveJReq::add_j_target(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_j_target()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.MoveJReq.j_target)
}
inline const ::google::protobuf::RepeatedField<float>& MoveJReq::j_target() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.MoveJReq.j_target)
  return _internal_j_target();
}
inline ::google::protobuf::RepeatedField<float>* MoveJReq::mutable_j_target() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.MoveJReq.j_target)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_j_target();
}

inline const ::google::protobuf::RepeatedField<float>& MoveJReq::_internal_j_target() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.j_target_;
}
inline ::google::protobuf::RepeatedField<float>* MoveJReq::_internal_mutable_j_target() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.j_target_;
}

// .IndyFramework.Protobuf.HRI.JointBaseType base_type = 3;
inline void MoveJReq::clear_base_type() {
  _impl_.base_type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::JointBaseType MoveJReq::base_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveJReq.base_type)
  return _internal_base_type();
}
inline void MoveJReq::set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value) {
  _internal_set_base_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveJReq.base_type)
}
inline ::IndyFramework::Protobuf::HRI::JointBaseType MoveJReq::_internal_base_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::JointBaseType>(_impl_.base_type_);
}
inline void MoveJReq::_internal_set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_type_ = value;
}

// int32 vel_level = 4;
inline void MoveJReq::clear_vel_level() {
  _impl_.vel_level_ = 0;
}
inline ::int32_t MoveJReq::vel_level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveJReq.vel_level)
  return _internal_vel_level();
}
inline void MoveJReq::set_vel_level(::int32_t value) {
  _internal_set_vel_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveJReq.vel_level)
}
inline ::int32_t MoveJReq::_internal_vel_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_;
}
inline void MoveJReq::_internal_set_vel_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_ = value;
}

// -------------------------------------------------------------------

// MoveLReq

// repeated float t_start = 1;
inline int MoveLReq::_internal_t_start_size() const {
  return _internal_t_start().size();
}
inline int MoveLReq::t_start_size() const {
  return _internal_t_start_size();
}
inline void MoveLReq::clear_t_start() {
  _internal_mutable_t_start()->Clear();
}
inline float MoveLReq::t_start(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveLReq.t_start)
  return _internal_t_start().Get(index);
}
inline void MoveLReq::set_t_start(int index, float value) {
  _internal_mutable_t_start()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveLReq.t_start)
}
inline void MoveLReq::add_t_start(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_start()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.MoveLReq.t_start)
}
inline const ::google::protobuf::RepeatedField<float>& MoveLReq::t_start() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.MoveLReq.t_start)
  return _internal_t_start();
}
inline ::google::protobuf::RepeatedField<float>* MoveLReq::mutable_t_start() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.MoveLReq.t_start)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_start();
}

inline const ::google::protobuf::RepeatedField<float>& MoveLReq::_internal_t_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_start_;
}
inline ::google::protobuf::RepeatedField<float>* MoveLReq::_internal_mutable_t_start() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_start_;
}

// repeated float t_target = 2;
inline int MoveLReq::_internal_t_target_size() const {
  return _internal_t_target().size();
}
inline int MoveLReq::t_target_size() const {
  return _internal_t_target_size();
}
inline void MoveLReq::clear_t_target() {
  _internal_mutable_t_target()->Clear();
}
inline float MoveLReq::t_target(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveLReq.t_target)
  return _internal_t_target().Get(index);
}
inline void MoveLReq::set_t_target(int index, float value) {
  _internal_mutable_t_target()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveLReq.t_target)
}
inline void MoveLReq::add_t_target(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_target()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.MoveLReq.t_target)
}
inline const ::google::protobuf::RepeatedField<float>& MoveLReq::t_target() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.MoveLReq.t_target)
  return _internal_t_target();
}
inline ::google::protobuf::RepeatedField<float>* MoveLReq::mutable_t_target() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.MoveLReq.t_target)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_target();
}

inline const ::google::protobuf::RepeatedField<float>& MoveLReq::_internal_t_target() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_target_;
}
inline ::google::protobuf::RepeatedField<float>* MoveLReq::_internal_mutable_t_target() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_target_;
}

// .IndyFramework.Protobuf.HRI.TaskBaseType base_type = 3;
inline void MoveLReq::clear_base_type() {
  _impl_.base_type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::TaskBaseType MoveLReq::base_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveLReq.base_type)
  return _internal_base_type();
}
inline void MoveLReq::set_base_type(::IndyFramework::Protobuf::HRI::TaskBaseType value) {
  _internal_set_base_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveLReq.base_type)
}
inline ::IndyFramework::Protobuf::HRI::TaskBaseType MoveLReq::_internal_base_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::TaskBaseType>(_impl_.base_type_);
}
inline void MoveLReq::_internal_set_base_type(::IndyFramework::Protobuf::HRI::TaskBaseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_type_ = value;
}

// int32 vel_level = 4;
inline void MoveLReq::clear_vel_level() {
  _impl_.vel_level_ = 0;
}
inline ::int32_t MoveLReq::vel_level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveLReq.vel_level)
  return _internal_vel_level();
}
inline void MoveLReq::set_vel_level(::int32_t value) {
  _internal_set_vel_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveLReq.vel_level)
}
inline ::int32_t MoveLReq::_internal_vel_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_;
}
inline void MoveLReq::_internal_set_vel_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_ = value;
}

// bool bypass_singular = 10;
inline void MoveLReq::clear_bypass_singular() {
  _impl_.bypass_singular_ = false;
}
inline bool MoveLReq::bypass_singular() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveLReq.bypass_singular)
  return _internal_bypass_singular();
}
inline void MoveLReq::set_bypass_singular(bool value) {
  _internal_set_bypass_singular(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveLReq.bypass_singular)
}
inline bool MoveLReq::_internal_bypass_singular() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bypass_singular_;
}
inline void MoveLReq::_internal_set_bypass_singular(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bypass_singular_ = value;
}

// -------------------------------------------------------------------

// AxisJReq

// repeated float j_start = 1;
inline int AxisJReq::_internal_j_start_size() const {
  return _internal_j_start().size();
}
inline int AxisJReq::j_start_size() const {
  return _internal_j_start_size();
}
inline void AxisJReq::clear_j_start() {
  _internal_mutable_j_start()->Clear();
}
inline float AxisJReq::j_start(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AxisJReq.j_start)
  return _internal_j_start().Get(index);
}
inline void AxisJReq::set_j_start(int index, float value) {
  _internal_mutable_j_start()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AxisJReq.j_start)
}
inline void AxisJReq::add_j_start(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_j_start()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.AxisJReq.j_start)
}
inline const ::google::protobuf::RepeatedField<float>& AxisJReq::j_start() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.AxisJReq.j_start)
  return _internal_j_start();
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::mutable_j_start() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.AxisJReq.j_start)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_j_start();
}

inline const ::google::protobuf::RepeatedField<float>& AxisJReq::_internal_j_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.j_start_;
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::_internal_mutable_j_start() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.j_start_;
}

// repeated float j_target = 2;
inline int AxisJReq::_internal_j_target_size() const {
  return _internal_j_target().size();
}
inline int AxisJReq::j_target_size() const {
  return _internal_j_target_size();
}
inline void AxisJReq::clear_j_target() {
  _internal_mutable_j_target()->Clear();
}
inline float AxisJReq::j_target(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AxisJReq.j_target)
  return _internal_j_target().Get(index);
}
inline void AxisJReq::set_j_target(int index, float value) {
  _internal_mutable_j_target()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AxisJReq.j_target)
}
inline void AxisJReq::add_j_target(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_j_target()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.AxisJReq.j_target)
}
inline const ::google::protobuf::RepeatedField<float>& AxisJReq::j_target() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.AxisJReq.j_target)
  return _internal_j_target();
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::mutable_j_target() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.AxisJReq.j_target)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_j_target();
}

inline const ::google::protobuf::RepeatedField<float>& AxisJReq::_internal_j_target() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.j_target_;
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::_internal_mutable_j_target() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.j_target_;
}

// repeated float a_start = 3;
inline int AxisJReq::_internal_a_start_size() const {
  return _internal_a_start().size();
}
inline int AxisJReq::a_start_size() const {
  return _internal_a_start_size();
}
inline void AxisJReq::clear_a_start() {
  _internal_mutable_a_start()->Clear();
}
inline float AxisJReq::a_start(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AxisJReq.a_start)
  return _internal_a_start().Get(index);
}
inline void AxisJReq::set_a_start(int index, float value) {
  _internal_mutable_a_start()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AxisJReq.a_start)
}
inline void AxisJReq::add_a_start(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_a_start()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.AxisJReq.a_start)
}
inline const ::google::protobuf::RepeatedField<float>& AxisJReq::a_start() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.AxisJReq.a_start)
  return _internal_a_start();
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::mutable_a_start() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.AxisJReq.a_start)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_a_start();
}

inline const ::google::protobuf::RepeatedField<float>& AxisJReq::_internal_a_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_start_;
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::_internal_mutable_a_start() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.a_start_;
}

// repeated float a_target = 4;
inline int AxisJReq::_internal_a_target_size() const {
  return _internal_a_target().size();
}
inline int AxisJReq::a_target_size() const {
  return _internal_a_target_size();
}
inline void AxisJReq::clear_a_target() {
  _internal_mutable_a_target()->Clear();
}
inline float AxisJReq::a_target(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AxisJReq.a_target)
  return _internal_a_target().Get(index);
}
inline void AxisJReq::set_a_target(int index, float value) {
  _internal_mutable_a_target()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AxisJReq.a_target)
}
inline void AxisJReq::add_a_target(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_a_target()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.AxisJReq.a_target)
}
inline const ::google::protobuf::RepeatedField<float>& AxisJReq::a_target() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.AxisJReq.a_target)
  return _internal_a_target();
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::mutable_a_target() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.AxisJReq.a_target)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_a_target();
}

inline const ::google::protobuf::RepeatedField<float>& AxisJReq::_internal_a_target() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_target_;
}
inline ::google::protobuf::RepeatedField<float>* AxisJReq::_internal_mutable_a_target() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.a_target_;
}

// .IndyFramework.Protobuf.HRI.JointBaseType base_type = 5;
inline void AxisJReq::clear_base_type() {
  _impl_.base_type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::JointBaseType AxisJReq::base_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AxisJReq.base_type)
  return _internal_base_type();
}
inline void AxisJReq::set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value) {
  _internal_set_base_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AxisJReq.base_type)
}
inline ::IndyFramework::Protobuf::HRI::JointBaseType AxisJReq::_internal_base_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::JointBaseType>(_impl_.base_type_);
}
inline void AxisJReq::_internal_set_base_type(::IndyFramework::Protobuf::HRI::JointBaseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_type_ = value;
}

// int32 vel_level = 6;
inline void AxisJReq::clear_vel_level() {
  _impl_.vel_level_ = 0;
}
inline ::int32_t AxisJReq::vel_level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AxisJReq.vel_level)
  return _internal_vel_level();
}
inline void AxisJReq::set_vel_level(::int32_t value) {
  _internal_set_vel_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AxisJReq.vel_level)
}
inline ::int32_t AxisJReq::_internal_vel_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_;
}
inline void AxisJReq::_internal_set_vel_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_ = value;
}

// -------------------------------------------------------------------

// StopMotionReq

// -------------------------------------------------------------------

// StopMotionRes

// string msg = 100;
inline void StopMotionRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& StopMotionRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.StopMotionRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StopMotionRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.StopMotionRes.msg)
}
inline std::string* StopMotionRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.StopMotionRes.msg)
  return _s;
}
inline const std::string& StopMotionRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void StopMotionRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* StopMotionRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* StopMotionRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.StopMotionRes.msg)
  return _impl_.msg_.Release();
}
inline void StopMotionRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.StopMotionRes.msg)
}

// -------------------------------------------------------------------

// RecoverReq

// -------------------------------------------------------------------

// RecoverRes

// string msg = 100;
inline void RecoverRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& RecoverRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RecoverRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RecoverRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RecoverRes.msg)
}
inline std::string* RecoverRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RecoverRes.msg)
  return _s;
}
inline const std::string& RecoverRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void RecoverRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* RecoverRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* RecoverRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RecoverRes.msg)
  return _impl_.msg_.Release();
}
inline void RecoverRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RecoverRes.msg)
}

// -------------------------------------------------------------------

// SetSimulationModeReq

// bool on = 1;
inline void SetSimulationModeReq::clear_on() {
  _impl_.on_ = false;
}
inline bool SetSimulationModeReq::on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSimulationModeReq.on)
  return _internal_on();
}
inline void SetSimulationModeReq::set_on(bool value) {
  _internal_set_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSimulationModeReq.on)
}
inline bool SetSimulationModeReq::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline void SetSimulationModeReq::_internal_set_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.on_ = value;
}

// -------------------------------------------------------------------

// SetSimulationModeRes

// string msg = 100;
inline void SetSimulationModeRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetSimulationModeRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSimulationModeRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetSimulationModeRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSimulationModeRes.msg)
}
inline std::string* SetSimulationModeRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetSimulationModeRes.msg)
  return _s;
}
inline const std::string& SetSimulationModeRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetSimulationModeRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSimulationModeRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetSimulationModeRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetSimulationModeRes.msg)
  return _impl_.msg_.Release();
}
inline void SetSimulationModeRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetSimulationModeRes.msg)
}

// -------------------------------------------------------------------

// SetDirectTeachingModeReq

// bool on = 1;
inline void SetDirectTeachingModeReq::clear_on() {
  _impl_.on_ = false;
}
inline bool SetDirectTeachingModeReq::on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetDirectTeachingModeReq.on)
  return _internal_on();
}
inline void SetDirectTeachingModeReq::set_on(bool value) {
  _internal_set_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetDirectTeachingModeReq.on)
}
inline bool SetDirectTeachingModeReq::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline void SetDirectTeachingModeReq::_internal_set_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.on_ = value;
}

// -------------------------------------------------------------------

// SetDirectTeachingModeRes

// string msg = 100;
inline void SetDirectTeachingModeRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetDirectTeachingModeRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetDirectTeachingModeRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes.msg)
}
inline std::string* SetDirectTeachingModeRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes.msg)
  return _s;
}
inline const std::string& SetDirectTeachingModeRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetDirectTeachingModeRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetDirectTeachingModeRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetDirectTeachingModeRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes.msg)
  return _impl_.msg_.Release();
}
inline void SetDirectTeachingModeRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetDirectTeachingModeRes.msg)
}

// -------------------------------------------------------------------

// SetSensorlessComplianceModeReq

// bool on = 1;
inline void SetSensorlessComplianceModeReq::clear_on() {
  _impl_.on_ = false;
}
inline bool SetSensorlessComplianceModeReq::on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeReq.on)
  return _internal_on();
}
inline void SetSensorlessComplianceModeReq::set_on(bool value) {
  _internal_set_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeReq.on)
}
inline bool SetSensorlessComplianceModeReq::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline void SetSensorlessComplianceModeReq::_internal_set_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.on_ = value;
}

// -------------------------------------------------------------------

// SetSensorlessComplianceModeRes

// string msg = 100;
inline void SetSensorlessComplianceModeRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetSensorlessComplianceModeRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetSensorlessComplianceModeRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes.msg)
}
inline std::string* SetSensorlessComplianceModeRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes.msg)
  return _s;
}
inline const std::string& SetSensorlessComplianceModeRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetSensorlessComplianceModeRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSensorlessComplianceModeRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetSensorlessComplianceModeRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes.msg)
  return _impl_.msg_.Release();
}
inline void SetSensorlessComplianceModeRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetSensorlessComplianceModeRes.msg)
}

// -------------------------------------------------------------------

// UpdateIndySWReq

// bytes file_buffer = 1;
inline void UpdateIndySWReq::clear_file_buffer() {
  _impl_.file_buffer_.ClearToEmpty();
}
inline const std::string& UpdateIndySWReq::file_buffer() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.UpdateIndySWReq.file_buffer)
  return _internal_file_buffer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateIndySWReq::set_file_buffer(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_buffer_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.UpdateIndySWReq.file_buffer)
}
inline std::string* UpdateIndySWReq::mutable_file_buffer() {
  std::string* _s = _internal_mutable_file_buffer();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.UpdateIndySWReq.file_buffer)
  return _s;
}
inline const std::string& UpdateIndySWReq::_internal_file_buffer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_buffer_.Get();
}
inline void UpdateIndySWReq::_internal_set_file_buffer(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_buffer_.Set(value, GetArenaForAllocation());
}
inline std::string* UpdateIndySWReq::_internal_mutable_file_buffer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_buffer_.Mutable( GetArenaForAllocation());
}
inline std::string* UpdateIndySWReq::release_file_buffer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.UpdateIndySWReq.file_buffer)
  return _impl_.file_buffer_.Release();
}
inline void UpdateIndySWReq::set_allocated_file_buffer(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_buffer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_buffer_.IsDefault()) {
          _impl_.file_buffer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.UpdateIndySWReq.file_buffer)
}

// -------------------------------------------------------------------

// UpdateIndySWRes

// int32 file_length = 1;
inline void UpdateIndySWRes::clear_file_length() {
  _impl_.file_length_ = 0;
}
inline ::int32_t UpdateIndySWRes::file_length() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.UpdateIndySWRes.file_length)
  return _internal_file_length();
}
inline void UpdateIndySWRes::set_file_length(::int32_t value) {
  _internal_set_file_length(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.UpdateIndySWRes.file_length)
}
inline ::int32_t UpdateIndySWRes::_internal_file_length() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_length_;
}
inline void UpdateIndySWRes::_internal_set_file_length(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_length_ = value;
}

// string msg = 100;
inline void UpdateIndySWRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& UpdateIndySWRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.UpdateIndySWRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateIndySWRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.UpdateIndySWRes.msg)
}
inline std::string* UpdateIndySWRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.UpdateIndySWRes.msg)
  return _s;
}
inline const std::string& UpdateIndySWRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void UpdateIndySWRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* UpdateIndySWRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* UpdateIndySWRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.UpdateIndySWRes.msg)
  return _impl_.msg_.Release();
}
inline void UpdateIndySWRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.UpdateIndySWRes.msg)
}

// -------------------------------------------------------------------

// GetFileReq

// string file_dir = 1;
inline void GetFileReq::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& GetFileReq::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFileReq.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetFileReq::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFileReq.file_dir)
}
inline std::string* GetFileReq::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetFileReq.file_dir)
  return _s;
}
inline const std::string& GetFileReq::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void GetFileReq::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* GetFileReq::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* GetFileReq::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetFileReq.file_dir)
  return _impl_.file_dir_.Release();
}
inline void GetFileReq::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetFileReq.file_dir)
}

// -------------------------------------------------------------------

// GetFileRes

// bytes buffer = 1;
inline void GetFileRes::clear_buffer() {
  _impl_.buffer_.ClearToEmpty();
}
inline const std::string& GetFileRes::buffer() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFileRes.buffer)
  return _internal_buffer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetFileRes::set_buffer(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.buffer_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFileRes.buffer)
}
inline std::string* GetFileRes::mutable_buffer() {
  std::string* _s = _internal_mutable_buffer();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetFileRes.buffer)
  return _s;
}
inline const std::string& GetFileRes::_internal_buffer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.buffer_.Get();
}
inline void GetFileRes::_internal_set_buffer(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.buffer_.Set(value, GetArenaForAllocation());
}
inline std::string* GetFileRes::_internal_mutable_buffer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.buffer_.Mutable( GetArenaForAllocation());
}
inline std::string* GetFileRes::release_buffer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetFileRes.buffer)
  return _impl_.buffer_.Release();
}
inline void GetFileRes::set_allocated_buffer(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.buffer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.buffer_.IsDefault()) {
          _impl_.buffer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetFileRes.buffer)
}

// string msg = 100;
inline void GetFileRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetFileRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFileRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetFileRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFileRes.msg)
}
inline std::string* GetFileRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetFileRes.msg)
  return _s;
}
inline const std::string& GetFileRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetFileRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetFileRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetFileRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetFileRes.msg)
  return _impl_.msg_.Release();
}
inline void GetFileRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetFileRes.msg)
}

// -------------------------------------------------------------------

// SetFileReq

// string file_dir = 1;
inline void SetFileReq::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& SetFileReq::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFileReq.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetFileReq::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFileReq.file_dir)
}
inline std::string* SetFileReq::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetFileReq.file_dir)
  return _s;
}
inline const std::string& SetFileReq::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void SetFileReq::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* SetFileReq::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* SetFileReq::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetFileReq.file_dir)
  return _impl_.file_dir_.Release();
}
inline void SetFileReq::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetFileReq.file_dir)
}

// bytes buffer = 2;
inline void SetFileReq::clear_buffer() {
  _impl_.buffer_.ClearToEmpty();
}
inline const std::string& SetFileReq::buffer() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFileReq.buffer)
  return _internal_buffer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetFileReq::set_buffer(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.buffer_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFileReq.buffer)
}
inline std::string* SetFileReq::mutable_buffer() {
  std::string* _s = _internal_mutable_buffer();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetFileReq.buffer)
  return _s;
}
inline const std::string& SetFileReq::_internal_buffer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.buffer_.Get();
}
inline void SetFileReq::_internal_set_buffer(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.buffer_.Set(value, GetArenaForAllocation());
}
inline std::string* SetFileReq::_internal_mutable_buffer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.buffer_.Mutable( GetArenaForAllocation());
}
inline std::string* SetFileReq::release_buffer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetFileReq.buffer)
  return _impl_.buffer_.Release();
}
inline void SetFileReq::set_allocated_buffer(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.buffer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.buffer_.IsDefault()) {
          _impl_.buffer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetFileReq.buffer)
}

// -------------------------------------------------------------------

// SetFileRes

// int32 file_length = 1;
inline void SetFileRes::clear_file_length() {
  _impl_.file_length_ = 0;
}
inline ::int32_t SetFileRes::file_length() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFileRes.file_length)
  return _internal_file_length();
}
inline void SetFileRes::set_file_length(::int32_t value) {
  _internal_set_file_length(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFileRes.file_length)
}
inline ::int32_t SetFileRes::_internal_file_length() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_length_;
}
inline void SetFileRes::_internal_set_file_length(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_length_ = value;
}

// string msg = 100;
inline void SetFileRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetFileRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFileRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetFileRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFileRes.msg)
}
inline std::string* SetFileRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetFileRes.msg)
  return _s;
}
inline const std::string& SetFileRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetFileRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetFileRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetFileRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetFileRes.msg)
  return _impl_.msg_.Release();
}
inline void SetFileRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetFileRes.msg)
}

// -------------------------------------------------------------------

// RenameFileReq

// string cur_file_dir = 1;
inline void RenameFileReq::clear_cur_file_dir() {
  _impl_.cur_file_dir_.ClearToEmpty();
}
inline const std::string& RenameFileReq::cur_file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RenameFileReq.cur_file_dir)
  return _internal_cur_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RenameFileReq::set_cur_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cur_file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RenameFileReq.cur_file_dir)
}
inline std::string* RenameFileReq::mutable_cur_file_dir() {
  std::string* _s = _internal_mutable_cur_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RenameFileReq.cur_file_dir)
  return _s;
}
inline const std::string& RenameFileReq::_internal_cur_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cur_file_dir_.Get();
}
inline void RenameFileReq::_internal_set_cur_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cur_file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* RenameFileReq::_internal_mutable_cur_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cur_file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* RenameFileReq::release_cur_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RenameFileReq.cur_file_dir)
  return _impl_.cur_file_dir_.Release();
}
inline void RenameFileReq::set_allocated_cur_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cur_file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cur_file_dir_.IsDefault()) {
          _impl_.cur_file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RenameFileReq.cur_file_dir)
}

// string new_file_dir = 2;
inline void RenameFileReq::clear_new_file_dir() {
  _impl_.new_file_dir_.ClearToEmpty();
}
inline const std::string& RenameFileReq::new_file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RenameFileReq.new_file_dir)
  return _internal_new_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RenameFileReq::set_new_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RenameFileReq.new_file_dir)
}
inline std::string* RenameFileReq::mutable_new_file_dir() {
  std::string* _s = _internal_mutable_new_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RenameFileReq.new_file_dir)
  return _s;
}
inline const std::string& RenameFileReq::_internal_new_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_file_dir_.Get();
}
inline void RenameFileReq::_internal_set_new_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* RenameFileReq::_internal_mutable_new_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.new_file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* RenameFileReq::release_new_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RenameFileReq.new_file_dir)
  return _impl_.new_file_dir_.Release();
}
inline void RenameFileReq::set_allocated_new_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.new_file_dir_.IsDefault()) {
          _impl_.new_file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RenameFileReq.new_file_dir)
}

// -------------------------------------------------------------------

// RenameFileRes

// string msg = 100;
inline void RenameFileRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& RenameFileRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RenameFileRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RenameFileRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RenameFileRes.msg)
}
inline std::string* RenameFileRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RenameFileRes.msg)
  return _s;
}
inline const std::string& RenameFileRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void RenameFileRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* RenameFileRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* RenameFileRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RenameFileRes.msg)
  return _impl_.msg_.Release();
}
inline void RenameFileRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RenameFileRes.msg)
}

// -------------------------------------------------------------------

// RemoveFileReq

// string file_dir = 1;
inline void RemoveFileReq::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& RemoveFileReq::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RemoveFileReq.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveFileReq::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RemoveFileReq.file_dir)
}
inline std::string* RemoveFileReq::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RemoveFileReq.file_dir)
  return _s;
}
inline const std::string& RemoveFileReq::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void RemoveFileReq::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* RemoveFileReq::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* RemoveFileReq::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RemoveFileReq.file_dir)
  return _impl_.file_dir_.Release();
}
inline void RemoveFileReq::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RemoveFileReq.file_dir)
}

// -------------------------------------------------------------------

// RemoveFileRes

// string msg = 100;
inline void RemoveFileRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& RemoveFileRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RemoveFileRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveFileRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RemoveFileRes.msg)
}
inline std::string* RemoveFileRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RemoveFileRes.msg)
  return _s;
}
inline const std::string& RemoveFileRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void RemoveFileRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* RemoveFileRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* RemoveFileRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RemoveFileRes.msg)
  return _impl_.msg_.Release();
}
inline void RemoveFileRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RemoveFileRes.msg)
}

// -------------------------------------------------------------------

// GetPalletMakerListReq

// -------------------------------------------------------------------

// GetPalletMakerListRes

// repeated .IndyFramework.Protobuf.HRI.PalletMaker pallet_makers = 1;
inline int GetPalletMakerListRes::_internal_pallet_makers_size() const {
  return _internal_pallet_makers().size();
}
inline int GetPalletMakerListRes::pallet_makers_size() const {
  return _internal_pallet_makers_size();
}
inline void GetPalletMakerListRes::clear_pallet_makers() {
  _internal_mutable_pallet_makers()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::PalletMaker* GetPalletMakerListRes::mutable_pallet_makers(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetPalletMakerListRes.pallet_makers)
  return _internal_mutable_pallet_makers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >*
GetPalletMakerListRes::mutable_pallet_makers() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetPalletMakerListRes.pallet_makers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pallet_makers();
}
inline const ::IndyFramework::Protobuf::HRI::PalletMaker& GetPalletMakerListRes::pallet_makers(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPalletMakerListRes.pallet_makers)
    return _internal_pallet_makers().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::PalletMaker* GetPalletMakerListRes::add_pallet_makers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::PalletMaker* _add = _internal_mutable_pallet_makers()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetPalletMakerListRes.pallet_makers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >&
GetPalletMakerListRes::pallet_makers() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetPalletMakerListRes.pallet_makers)
  return _internal_pallet_makers();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>&
GetPalletMakerListRes::_internal_pallet_makers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pallet_makers_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>*
GetPalletMakerListRes::_internal_mutable_pallet_makers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pallet_makers_;
}

// -------------------------------------------------------------------

// SetPalletMakerListReq

// repeated .IndyFramework.Protobuf.HRI.PalletMaker pallet_makers = 1;
inline int SetPalletMakerListReq::_internal_pallet_makers_size() const {
  return _internal_pallet_makers().size();
}
inline int SetPalletMakerListReq::pallet_makers_size() const {
  return _internal_pallet_makers_size();
}
inline void SetPalletMakerListReq::clear_pallet_makers() {
  _internal_mutable_pallet_makers()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::PalletMaker* SetPalletMakerListReq::mutable_pallet_makers(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetPalletMakerListReq.pallet_makers)
  return _internal_mutable_pallet_makers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >*
SetPalletMakerListReq::mutable_pallet_makers() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetPalletMakerListReq.pallet_makers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pallet_makers();
}
inline const ::IndyFramework::Protobuf::HRI::PalletMaker& SetPalletMakerListReq::pallet_makers(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetPalletMakerListReq.pallet_makers)
    return _internal_pallet_makers().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::PalletMaker* SetPalletMakerListReq::add_pallet_makers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::PalletMaker* _add = _internal_mutable_pallet_makers()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetPalletMakerListReq.pallet_makers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::PalletMaker >&
SetPalletMakerListReq::pallet_makers() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetPalletMakerListReq.pallet_makers)
  return _internal_pallet_makers();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>&
SetPalletMakerListReq::_internal_pallet_makers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pallet_makers_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::PalletMaker>*
SetPalletMakerListReq::_internal_mutable_pallet_makers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pallet_makers_;
}

// -------------------------------------------------------------------

// SetPalletMakerListRes

// string msg = 100;
inline void SetPalletMakerListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetPalletMakerListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetPalletMakerListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPalletMakerListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetPalletMakerListRes.msg)
}
inline std::string* SetPalletMakerListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetPalletMakerListRes.msg)
  return _s;
}
inline const std::string& SetPalletMakerListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetPalletMakerListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetPalletMakerListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetPalletMakerListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetPalletMakerListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetPalletMakerListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetPalletMakerListRes.msg)
}

// -------------------------------------------------------------------

// GetConveyorListReq

// -------------------------------------------------------------------

// GetConveyorListRes

// repeated .IndyFramework.Protobuf.HRI.Conveyor conveyor_list = 1;
inline int GetConveyorListRes::_internal_conveyor_list_size() const {
  return _internal_conveyor_list().size();
}
inline int GetConveyorListRes::conveyor_list_size() const {
  return _internal_conveyor_list_size();
}
inline void GetConveyorListRes::clear_conveyor_list() {
  _internal_mutable_conveyor_list()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::Conveyor* GetConveyorListRes::mutable_conveyor_list(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetConveyorListRes.conveyor_list)
  return _internal_mutable_conveyor_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >*
GetConveyorListRes::mutable_conveyor_list() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetConveyorListRes.conveyor_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_conveyor_list();
}
inline const ::IndyFramework::Protobuf::HRI::Conveyor& GetConveyorListRes::conveyor_list(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetConveyorListRes.conveyor_list)
    return _internal_conveyor_list().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::Conveyor* GetConveyorListRes::add_conveyor_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::Conveyor* _add = _internal_mutable_conveyor_list()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetConveyorListRes.conveyor_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >&
GetConveyorListRes::conveyor_list() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetConveyorListRes.conveyor_list)
  return _internal_conveyor_list();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>&
GetConveyorListRes::_internal_conveyor_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.conveyor_list_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>*
GetConveyorListRes::_internal_mutable_conveyor_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.conveyor_list_;
}

// string msg = 100;
inline void GetConveyorListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetConveyorListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetConveyorListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetConveyorListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetConveyorListRes.msg)
}
inline std::string* GetConveyorListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetConveyorListRes.msg)
  return _s;
}
inline const std::string& GetConveyorListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetConveyorListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetConveyorListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetConveyorListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetConveyorListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetConveyorListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetConveyorListRes.msg)
}

// -------------------------------------------------------------------

// SetConveyorListReq

// repeated .IndyFramework.Protobuf.HRI.Conveyor conveyor_list = 1;
inline int SetConveyorListReq::_internal_conveyor_list_size() const {
  return _internal_conveyor_list().size();
}
inline int SetConveyorListReq::conveyor_list_size() const {
  return _internal_conveyor_list_size();
}
inline void SetConveyorListReq::clear_conveyor_list() {
  _internal_mutable_conveyor_list()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::Conveyor* SetConveyorListReq::mutable_conveyor_list(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetConveyorListReq.conveyor_list)
  return _internal_mutable_conveyor_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >*
SetConveyorListReq::mutable_conveyor_list() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetConveyorListReq.conveyor_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_conveyor_list();
}
inline const ::IndyFramework::Protobuf::HRI::Conveyor& SetConveyorListReq::conveyor_list(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetConveyorListReq.conveyor_list)
    return _internal_conveyor_list().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::Conveyor* SetConveyorListReq::add_conveyor_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::Conveyor* _add = _internal_mutable_conveyor_list()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetConveyorListReq.conveyor_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Conveyor >&
SetConveyorListReq::conveyor_list() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetConveyorListReq.conveyor_list)
  return _internal_conveyor_list();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>&
SetConveyorListReq::_internal_conveyor_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.conveyor_list_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Conveyor>*
SetConveyorListReq::_internal_mutable_conveyor_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.conveyor_list_;
}

// -------------------------------------------------------------------

// SetConveyorListRes

// string msg = 100;
inline void SetConveyorListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetConveyorListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetConveyorListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetConveyorListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetConveyorListRes.msg)
}
inline std::string* SetConveyorListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetConveyorListRes.msg)
  return _s;
}
inline const std::string& SetConveyorListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetConveyorListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetConveyorListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetConveyorListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetConveyorListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetConveyorListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetConveyorListRes.msg)
}

// -------------------------------------------------------------------

// CheckAproachRetractValidReq

// repeated float tpos = 1;
inline int CheckAproachRetractValidReq::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int CheckAproachRetractValidReq::tpos_size() const {
  return _internal_tpos_size();
}
inline void CheckAproachRetractValidReq::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float CheckAproachRetractValidReq::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.tpos)
  return _internal_tpos().Get(index);
}
inline void CheckAproachRetractValidReq::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.tpos)
}
inline void CheckAproachRetractValidReq::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// repeated float init_jpos = 2;
inline int CheckAproachRetractValidReq::_internal_init_jpos_size() const {
  return _internal_init_jpos().size();
}
inline int CheckAproachRetractValidReq::init_jpos_size() const {
  return _internal_init_jpos_size();
}
inline void CheckAproachRetractValidReq::clear_init_jpos() {
  _internal_mutable_init_jpos()->Clear();
}
inline float CheckAproachRetractValidReq::init_jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.init_jpos)
  return _internal_init_jpos().Get(index);
}
inline void CheckAproachRetractValidReq::set_init_jpos(int index, float value) {
  _internal_mutable_init_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.init_jpos)
}
inline void CheckAproachRetractValidReq::add_init_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_init_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.init_jpos)
}
inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::init_jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.init_jpos)
  return _internal_init_jpos();
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::mutable_init_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.init_jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_init_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::_internal_init_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.init_jpos_;
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::_internal_mutable_init_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.init_jpos_;
}

// repeated float pre_tpos = 3;
inline int CheckAproachRetractValidReq::_internal_pre_tpos_size() const {
  return _internal_pre_tpos().size();
}
inline int CheckAproachRetractValidReq::pre_tpos_size() const {
  return _internal_pre_tpos_size();
}
inline void CheckAproachRetractValidReq::clear_pre_tpos() {
  _internal_mutable_pre_tpos()->Clear();
}
inline float CheckAproachRetractValidReq::pre_tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.pre_tpos)
  return _internal_pre_tpos().Get(index);
}
inline void CheckAproachRetractValidReq::set_pre_tpos(int index, float value) {
  _internal_mutable_pre_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.pre_tpos)
}
inline void CheckAproachRetractValidReq::add_pre_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pre_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.pre_tpos)
}
inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::pre_tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.pre_tpos)
  return _internal_pre_tpos();
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::mutable_pre_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.pre_tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pre_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::_internal_pre_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pre_tpos_;
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::_internal_mutable_pre_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pre_tpos_;
}

// repeated float post_tpos = 4;
inline int CheckAproachRetractValidReq::_internal_post_tpos_size() const {
  return _internal_post_tpos().size();
}
inline int CheckAproachRetractValidReq::post_tpos_size() const {
  return _internal_post_tpos_size();
}
inline void CheckAproachRetractValidReq::clear_post_tpos() {
  _internal_mutable_post_tpos()->Clear();
}
inline float CheckAproachRetractValidReq::post_tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.post_tpos)
  return _internal_post_tpos().Get(index);
}
inline void CheckAproachRetractValidReq::set_post_tpos(int index, float value) {
  _internal_mutable_post_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.post_tpos)
}
inline void CheckAproachRetractValidReq::add_post_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_post_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.post_tpos)
}
inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::post_tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.post_tpos)
  return _internal_post_tpos();
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::mutable_post_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidReq.post_tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_post_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidReq::_internal_post_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.post_tpos_;
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidReq::_internal_mutable_post_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.post_tpos_;
}

// -------------------------------------------------------------------

// CheckAproachRetractValidRes

// bool is_valid = 1;
inline void CheckAproachRetractValidRes::clear_is_valid() {
  _impl_.is_valid_ = false;
}
inline bool CheckAproachRetractValidRes::is_valid() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.is_valid)
  return _internal_is_valid();
}
inline void CheckAproachRetractValidRes::set_is_valid(bool value) {
  _internal_set_is_valid(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.is_valid)
}
inline bool CheckAproachRetractValidRes::_internal_is_valid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_valid_;
}
inline void CheckAproachRetractValidRes::_internal_set_is_valid(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_valid_ = value;
}

// repeated float tar_pos = 2;
inline int CheckAproachRetractValidRes::_internal_tar_pos_size() const {
  return _internal_tar_pos().size();
}
inline int CheckAproachRetractValidRes::tar_pos_size() const {
  return _internal_tar_pos_size();
}
inline void CheckAproachRetractValidRes::clear_tar_pos() {
  _internal_mutable_tar_pos()->Clear();
}
inline float CheckAproachRetractValidRes::tar_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.tar_pos)
  return _internal_tar_pos().Get(index);
}
inline void CheckAproachRetractValidRes::set_tar_pos(int index, float value) {
  _internal_mutable_tar_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.tar_pos)
}
inline void CheckAproachRetractValidRes::add_tar_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tar_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.tar_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidRes::tar_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.tar_pos)
  return _internal_tar_pos();
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidRes::mutable_tar_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.tar_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tar_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidRes::_internal_tar_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tar_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidRes::_internal_mutable_tar_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tar_pos_;
}

// repeated float approach_pos = 3;
inline int CheckAproachRetractValidRes::_internal_approach_pos_size() const {
  return _internal_approach_pos().size();
}
inline int CheckAproachRetractValidRes::approach_pos_size() const {
  return _internal_approach_pos_size();
}
inline void CheckAproachRetractValidRes::clear_approach_pos() {
  _internal_mutable_approach_pos()->Clear();
}
inline float CheckAproachRetractValidRes::approach_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.approach_pos)
  return _internal_approach_pos().Get(index);
}
inline void CheckAproachRetractValidRes::set_approach_pos(int index, float value) {
  _internal_mutable_approach_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.approach_pos)
}
inline void CheckAproachRetractValidRes::add_approach_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_approach_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.approach_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidRes::approach_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.approach_pos)
  return _internal_approach_pos();
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidRes::mutable_approach_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.approach_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_approach_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidRes::_internal_approach_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.approach_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidRes::_internal_mutable_approach_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.approach_pos_;
}

// repeated float retract_pos = 4;
inline int CheckAproachRetractValidRes::_internal_retract_pos_size() const {
  return _internal_retract_pos().size();
}
inline int CheckAproachRetractValidRes::retract_pos_size() const {
  return _internal_retract_pos_size();
}
inline void CheckAproachRetractValidRes::clear_retract_pos() {
  _internal_mutable_retract_pos()->Clear();
}
inline float CheckAproachRetractValidRes::retract_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.retract_pos)
  return _internal_retract_pos().Get(index);
}
inline void CheckAproachRetractValidRes::set_retract_pos(int index, float value) {
  _internal_mutable_retract_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.retract_pos)
}
inline void CheckAproachRetractValidRes::add_retract_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_retract_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.retract_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidRes::retract_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.retract_pos)
  return _internal_retract_pos();
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidRes::mutable_retract_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.retract_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_retract_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CheckAproachRetractValidRes::_internal_retract_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.retract_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CheckAproachRetractValidRes::_internal_mutable_retract_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.retract_pos_;
}

// string msg = 100;
inline void CheckAproachRetractValidRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CheckAproachRetractValidRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckAproachRetractValidRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.msg)
}
inline std::string* CheckAproachRetractValidRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.msg)
  return _s;
}
inline const std::string& CheckAproachRetractValidRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void CheckAproachRetractValidRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CheckAproachRetractValidRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* CheckAproachRetractValidRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.msg)
  return _impl_.msg_.Release();
}
inline void CheckAproachRetractValidRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.CheckAproachRetractValidRes.msg)
}

// -------------------------------------------------------------------

// GetPalletPointListReq

// string name = 1;
inline void GetPalletPointListReq::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetPalletPointListReq::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPalletPointListReq.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPalletPointListReq::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetPalletPointListReq.name)
}
inline std::string* GetPalletPointListReq::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetPalletPointListReq.name)
  return _s;
}
inline const std::string& GetPalletPointListReq::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetPalletPointListReq::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetPalletPointListReq::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetPalletPointListReq::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetPalletPointListReq.name)
  return _impl_.name_.Release();
}
inline void GetPalletPointListReq::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetPalletPointListReq.name)
}

// repeated float pre_tpos = 2;
inline int GetPalletPointListReq::_internal_pre_tpos_size() const {
  return _internal_pre_tpos().size();
}
inline int GetPalletPointListReq::pre_tpos_size() const {
  return _internal_pre_tpos_size();
}
inline void GetPalletPointListReq::clear_pre_tpos() {
  _internal_mutable_pre_tpos()->Clear();
}
inline float GetPalletPointListReq::pre_tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPalletPointListReq.pre_tpos)
  return _internal_pre_tpos().Get(index);
}
inline void GetPalletPointListReq::set_pre_tpos(int index, float value) {
  _internal_mutable_pre_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetPalletPointListReq.pre_tpos)
}
inline void GetPalletPointListReq::add_pre_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pre_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetPalletPointListReq.pre_tpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetPalletPointListReq::pre_tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetPalletPointListReq.pre_tpos)
  return _internal_pre_tpos();
}
inline ::google::protobuf::RepeatedField<float>* GetPalletPointListReq::mutable_pre_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetPalletPointListReq.pre_tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pre_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetPalletPointListReq::_internal_pre_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pre_tpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetPalletPointListReq::_internal_mutable_pre_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pre_tpos_;
}

// repeated float post_tpos = 3;
inline int GetPalletPointListReq::_internal_post_tpos_size() const {
  return _internal_post_tpos().size();
}
inline int GetPalletPointListReq::post_tpos_size() const {
  return _internal_post_tpos_size();
}
inline void GetPalletPointListReq::clear_post_tpos() {
  _internal_mutable_post_tpos()->Clear();
}
inline float GetPalletPointListReq::post_tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPalletPointListReq.post_tpos)
  return _internal_post_tpos().Get(index);
}
inline void GetPalletPointListReq::set_post_tpos(int index, float value) {
  _internal_mutable_post_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetPalletPointListReq.post_tpos)
}
inline void GetPalletPointListReq::add_post_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_post_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetPalletPointListReq.post_tpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetPalletPointListReq::post_tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetPalletPointListReq.post_tpos)
  return _internal_post_tpos();
}
inline ::google::protobuf::RepeatedField<float>* GetPalletPointListReq::mutable_post_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetPalletPointListReq.post_tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_post_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetPalletPointListReq::_internal_post_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.post_tpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetPalletPointListReq::_internal_mutable_post_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.post_tpos_;
}

// -------------------------------------------------------------------

// GetPalletPointListRes

// repeated .IndyFramework.Protobuf.Shared.PalletPoint pallet_points = 1;
inline int GetPalletPointListRes::_internal_pallet_points_size() const {
  return _internal_pallet_points().size();
}
inline int GetPalletPointListRes::pallet_points_size() const {
  return _internal_pallet_points_size();
}
inline ::IndyFramework::Protobuf::Shared::PalletPoint* GetPalletPointListRes::mutable_pallet_points(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetPalletPointListRes.pallet_points)
  return _internal_mutable_pallet_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >*
GetPalletPointListRes::mutable_pallet_points() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetPalletPointListRes.pallet_points)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pallet_points();
}
inline const ::IndyFramework::Protobuf::Shared::PalletPoint& GetPalletPointListRes::pallet_points(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPalletPointListRes.pallet_points)
    return _internal_pallet_points().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::PalletPoint* GetPalletPointListRes::add_pallet_points() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::PalletPoint* _add = _internal_mutable_pallet_points()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetPalletPointListRes.pallet_points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >&
GetPalletPointListRes::pallet_points() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetPalletPointListRes.pallet_points)
  return _internal_pallet_points();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>&
GetPalletPointListRes::_internal_pallet_points() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pallet_points_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>*
GetPalletPointListRes::_internal_mutable_pallet_points() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pallet_points_;
}

// string msg = 100;
inline void GetPalletPointListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetPalletPointListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPalletPointListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPalletPointListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetPalletPointListRes.msg)
}
inline std::string* GetPalletPointListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetPalletPointListRes.msg)
  return _s;
}
inline const std::string& GetPalletPointListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetPalletPointListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetPalletPointListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetPalletPointListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetPalletPointListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetPalletPointListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetPalletPointListRes.msg)
}

// -------------------------------------------------------------------

// SetPalletPointListReq

// string name = 1;
inline void SetPalletPointListReq::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetPalletPointListReq::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetPalletPointListReq.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPalletPointListReq::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetPalletPointListReq.name)
}
inline std::string* SetPalletPointListReq::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetPalletPointListReq.name)
  return _s;
}
inline const std::string& SetPalletPointListReq::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SetPalletPointListReq::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* SetPalletPointListReq::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* SetPalletPointListReq::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetPalletPointListReq.name)
  return _impl_.name_.Release();
}
inline void SetPalletPointListReq::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetPalletPointListReq.name)
}

// repeated .IndyFramework.Protobuf.Shared.PalletPoint pallet_points = 2;
inline int SetPalletPointListReq::_internal_pallet_points_size() const {
  return _internal_pallet_points().size();
}
inline int SetPalletPointListReq::pallet_points_size() const {
  return _internal_pallet_points_size();
}
inline ::IndyFramework::Protobuf::Shared::PalletPoint* SetPalletPointListReq::mutable_pallet_points(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetPalletPointListReq.pallet_points)
  return _internal_mutable_pallet_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >*
SetPalletPointListReq::mutable_pallet_points() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetPalletPointListReq.pallet_points)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pallet_points();
}
inline const ::IndyFramework::Protobuf::Shared::PalletPoint& SetPalletPointListReq::pallet_points(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetPalletPointListReq.pallet_points)
    return _internal_pallet_points().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::PalletPoint* SetPalletPointListReq::add_pallet_points() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::PalletPoint* _add = _internal_mutable_pallet_points()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetPalletPointListReq.pallet_points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::PalletPoint >&
SetPalletPointListReq::pallet_points() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetPalletPointListReq.pallet_points)
  return _internal_pallet_points();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>&
SetPalletPointListReq::_internal_pallet_points() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pallet_points_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::PalletPoint>*
SetPalletPointListReq::_internal_mutable_pallet_points() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pallet_points_;
}

// -------------------------------------------------------------------

// SetPalletPointListRes

// string msg = 100;
inline void SetPalletPointListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetPalletPointListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetPalletPointListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPalletPointListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetPalletPointListRes.msg)
}
inline std::string* SetPalletPointListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetPalletPointListRes.msg)
  return _s;
}
inline const std::string& SetPalletPointListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetPalletPointListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetPalletPointListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetPalletPointListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetPalletPointListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetPalletPointListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetPalletPointListRes.msg)
}

// -------------------------------------------------------------------

// SetInchingReq

// int32 direction = 1;
inline void SetInchingReq::clear_direction() {
  _impl_.direction_ = 0;
}
inline ::int32_t SetInchingReq::direction() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetInchingReq.direction)
  return _internal_direction();
}
inline void SetInchingReq::set_direction(::int32_t value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetInchingReq.direction)
}
inline ::int32_t SetInchingReq::_internal_direction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.direction_;
}
inline void SetInchingReq::_internal_set_direction(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// SetInchingRes

// string msg = 100;
inline void SetInchingRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetInchingRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetInchingRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetInchingRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetInchingRes.msg)
}
inline std::string* SetInchingRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetInchingRes.msg)
  return _s;
}
inline const std::string& SetInchingRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetInchingRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetInchingRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetInchingRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetInchingRes.msg)
  return _impl_.msg_.Release();
}
inline void SetInchingRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetInchingRes.msg)
}

// -------------------------------------------------------------------

// StopInchingReq

// -------------------------------------------------------------------

// StopInchingRes

// string msg = 100;
inline void StopInchingRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& StopInchingRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.StopInchingRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StopInchingRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.StopInchingRes.msg)
}
inline std::string* StopInchingRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.StopInchingRes.msg)
  return _s;
}
inline const std::string& StopInchingRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void StopInchingRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* StopInchingRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* StopInchingRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.StopInchingRes.msg)
  return _impl_.msg_.Release();
}
inline void StopInchingRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.StopInchingRes.msg)
}

// -------------------------------------------------------------------

// SetArcReq

// bool active = 1;
inline void SetArcReq::clear_active() {
  _impl_.active_ = false;
}
inline bool SetArcReq::active() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetArcReq.active)
  return _internal_active();
}
inline void SetArcReq::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetArcReq.active)
}
inline bool SetArcReq::_internal_active() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.active_;
}
inline void SetArcReq::_internal_set_active(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.active_ = value;
}

// -------------------------------------------------------------------

// SetArcRes

// string msg = 100;
inline void SetArcRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetArcRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetArcRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetArcRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetArcRes.msg)
}
inline std::string* SetArcRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetArcRes.msg)
  return _s;
}
inline const std::string& SetArcRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetArcRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetArcRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetArcRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetArcRes.msg)
  return _impl_.msg_.Release();
}
inline void SetArcRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetArcRes.msg)
}

// -------------------------------------------------------------------

// SetTouchReq

// bool active = 1;
inline void SetTouchReq::clear_active() {
  _impl_.active_ = false;
}
inline bool SetTouchReq::active() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetTouchReq.active)
  return _internal_active();
}
inline void SetTouchReq::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetTouchReq.active)
}
inline bool SetTouchReq::_internal_active() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.active_;
}
inline void SetTouchReq::_internal_set_active(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.active_ = value;
}

// -------------------------------------------------------------------

// SetTouchRes

// string msg = 100;
inline void SetTouchRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetTouchRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetTouchRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetTouchRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetTouchRes.msg)
}
inline std::string* SetTouchRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetTouchRes.msg)
  return _s;
}
inline const std::string& SetTouchRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetTouchRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetTouchRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetTouchRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetTouchRes.msg)
  return _impl_.msg_.Release();
}
inline void SetTouchRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetTouchRes.msg)
}

// -------------------------------------------------------------------

// SetGasReq

// bool active = 1;
inline void SetGasReq::clear_active() {
  _impl_.active_ = false;
}
inline bool SetGasReq::active() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetGasReq.active)
  return _internal_active();
}
inline void SetGasReq::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetGasReq.active)
}
inline bool SetGasReq::_internal_active() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.active_;
}
inline void SetGasReq::_internal_set_active(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.active_ = value;
}

// -------------------------------------------------------------------

// SetGasRes

// string msg = 100;
inline void SetGasRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetGasRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetGasRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetGasRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetGasRes.msg)
}
inline std::string* SetGasRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetGasRes.msg)
  return _s;
}
inline const std::string& SetGasRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetGasRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetGasRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetGasRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetGasRes.msg)
  return _impl_.msg_.Release();
}
inline void SetGasRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetGasRes.msg)
}

// -------------------------------------------------------------------

// IsTouchedReq

// -------------------------------------------------------------------

// IsTouchedRes

// bool touched = 1;
inline void IsTouchedRes::clear_touched() {
  _impl_.touched_ = false;
}
inline bool IsTouchedRes::touched() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.IsTouchedRes.touched)
  return _internal_touched();
}
inline void IsTouchedRes::set_touched(bool value) {
  _internal_set_touched(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.IsTouchedRes.touched)
}
inline bool IsTouchedRes::_internal_touched() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touched_;
}
inline void IsTouchedRes::_internal_set_touched(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touched_ = value;
}

// -------------------------------------------------------------------

// GetVisionServerListReq

// -------------------------------------------------------------------

// GetVisionServerListRes

// repeated .IndyFramework.Protobuf.Shared.VisionServer vision_servers = 1;
inline int GetVisionServerListRes::_internal_vision_servers_size() const {
  return _internal_vision_servers().size();
}
inline int GetVisionServerListRes::vision_servers_size() const {
  return _internal_vision_servers_size();
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* GetVisionServerListRes::mutable_vision_servers(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVisionServerListRes.vision_servers)
  return _internal_mutable_vision_servers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >*
GetVisionServerListRes::mutable_vision_servers() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetVisionServerListRes.vision_servers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_vision_servers();
}
inline const ::IndyFramework::Protobuf::Shared::VisionServer& GetVisionServerListRes::vision_servers(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVisionServerListRes.vision_servers)
    return _internal_vision_servers().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* GetVisionServerListRes::add_vision_servers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::VisionServer* _add = _internal_mutable_vision_servers()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetVisionServerListRes.vision_servers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >&
GetVisionServerListRes::vision_servers() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetVisionServerListRes.vision_servers)
  return _internal_vision_servers();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>&
GetVisionServerListRes::_internal_vision_servers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vision_servers_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>*
GetVisionServerListRes::_internal_mutable_vision_servers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.vision_servers_;
}

// string msg = 100;
inline void GetVisionServerListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetVisionServerListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVisionServerListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVisionServerListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVisionServerListRes.msg)
}
inline std::string* GetVisionServerListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVisionServerListRes.msg)
  return _s;
}
inline const std::string& GetVisionServerListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetVisionServerListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetVisionServerListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetVisionServerListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetVisionServerListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetVisionServerListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetVisionServerListRes.msg)
}

// -------------------------------------------------------------------

// SetVisionServerListReq

// repeated .IndyFramework.Protobuf.Shared.VisionServer vision_servers = 1;
inline int SetVisionServerListReq::_internal_vision_servers_size() const {
  return _internal_vision_servers().size();
}
inline int SetVisionServerListReq::vision_servers_size() const {
  return _internal_vision_servers_size();
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* SetVisionServerListReq::mutable_vision_servers(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetVisionServerListReq.vision_servers)
  return _internal_mutable_vision_servers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >*
SetVisionServerListReq::mutable_vision_servers() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetVisionServerListReq.vision_servers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_vision_servers();
}
inline const ::IndyFramework::Protobuf::Shared::VisionServer& SetVisionServerListReq::vision_servers(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetVisionServerListReq.vision_servers)
    return _internal_vision_servers().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* SetVisionServerListReq::add_vision_servers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::VisionServer* _add = _internal_mutable_vision_servers()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetVisionServerListReq.vision_servers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::VisionServer >&
SetVisionServerListReq::vision_servers() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetVisionServerListReq.vision_servers)
  return _internal_vision_servers();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>&
SetVisionServerListReq::_internal_vision_servers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vision_servers_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::VisionServer>*
SetVisionServerListReq::_internal_mutable_vision_servers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.vision_servers_;
}

// -------------------------------------------------------------------

// SetVisionServerListRes

// string msg = 100;
inline void SetVisionServerListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetVisionServerListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetVisionServerListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetVisionServerListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetVisionServerListRes.msg)
}
inline std::string* SetVisionServerListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetVisionServerListRes.msg)
  return _s;
}
inline const std::string& SetVisionServerListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetVisionServerListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetVisionServerListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetVisionServerListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetVisionServerListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetVisionServerListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetVisionServerListRes.msg)
}

// -------------------------------------------------------------------

// GetVisionObjectListReq

// .IndyFramework.Protobuf.Shared.VisionServer vision_server = 1;
inline bool GetVisionObjectListReq::has_vision_server() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vision_server_ != nullptr);
  return value;
}
inline const ::IndyFramework::Protobuf::Shared::VisionServer& GetVisionObjectListReq::_internal_vision_server() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::Shared::VisionServer* p = _impl_.vision_server_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::Shared::VisionServer&>(::IndyFramework::Protobuf::Shared::_VisionServer_default_instance_);
}
inline const ::IndyFramework::Protobuf::Shared::VisionServer& GetVisionObjectListReq::vision_server() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVisionObjectListReq.vision_server)
  return _internal_vision_server();
}
inline void GetVisionObjectListReq::unsafe_arena_set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vision_server_);
  }
  _impl_.vision_server_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::VisionServer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.GetVisionObjectListReq.vision_server)
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* GetVisionObjectListReq::release_vision_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::Shared::VisionServer* released = _impl_.vision_server_;
  _impl_.vision_server_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* GetVisionObjectListReq::unsafe_arena_release_vision_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetVisionObjectListReq.vision_server)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::Shared::VisionServer* temp = _impl_.vision_server_;
  _impl_.vision_server_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* GetVisionObjectListReq::_internal_mutable_vision_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.vision_server_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::Shared::VisionServer>(GetArenaForAllocation());
    _impl_.vision_server_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::VisionServer*>(p);
  }
  return _impl_.vision_server_;
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* GetVisionObjectListReq::mutable_vision_server() {
  ::IndyFramework::Protobuf::Shared::VisionServer* _msg = _internal_mutable_vision_server();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVisionObjectListReq.vision_server)
  return _msg;
}
inline void GetVisionObjectListReq::set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vision_server_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vision_server_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::VisionServer*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetVisionObjectListReq.vision_server)
}

// -------------------------------------------------------------------

// GetVisionObjectListRes

// repeated string objects = 1;
inline int GetVisionObjectListRes::_internal_objects_size() const {
  return _internal_objects().size();
}
inline int GetVisionObjectListRes::objects_size() const {
  return _internal_objects_size();
}
inline void GetVisionObjectListRes::clear_objects() {
  _internal_mutable_objects()->Clear();
}
inline std::string* GetVisionObjectListRes::add_objects() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_objects()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
  return _s;
}
inline const std::string& GetVisionObjectListRes::objects(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
  return _internal_objects().Get(index);
}
inline std::string* GetVisionObjectListRes::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
  return _internal_mutable_objects()->Mutable(index);
}
inline void GetVisionObjectListRes::set_objects(int index, const std::string& value) {
  _internal_mutable_objects()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::set_objects(int index, std::string&& value) {
  _internal_mutable_objects()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::set_objects(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_objects()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::set_objects(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_objects()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::set_objects(int index, absl::string_view value) {
  _internal_mutable_objects()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::add_objects(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_objects()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::add_objects(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_objects()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::add_objects(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_objects()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::add_objects(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_objects()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline void GetVisionObjectListRes::add_objects(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_objects()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetVisionObjectListRes::objects() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
  return _internal_objects();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetVisionObjectListRes::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.objects)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_objects();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetVisionObjectListRes::_internal_objects() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.objects_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetVisionObjectListRes::_internal_mutable_objects() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.objects_;
}

// string msg = 100;
inline void GetVisionObjectListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetVisionObjectListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVisionObjectListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.msg)
}
inline std::string* GetVisionObjectListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.msg)
  return _s;
}
inline const std::string& GetVisionObjectListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetVisionObjectListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetVisionObjectListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetVisionObjectListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetVisionObjectListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetVisionObjectListRes.msg)
}

// -------------------------------------------------------------------

// VisionRequest

// .IndyFramework.Protobuf.Shared.VisionServer vision_server = 1;
inline bool VisionRequest::has_vision_server() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vision_server_ != nullptr);
  return value;
}
inline const ::IndyFramework::Protobuf::Shared::VisionServer& VisionRequest::_internal_vision_server() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::Shared::VisionServer* p = _impl_.vision_server_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::Shared::VisionServer&>(::IndyFramework::Protobuf::Shared::_VisionServer_default_instance_);
}
inline const ::IndyFramework::Protobuf::Shared::VisionServer& VisionRequest::vision_server() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionRequest.vision_server)
  return _internal_vision_server();
}
inline void VisionRequest::unsafe_arena_set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vision_server_);
  }
  _impl_.vision_server_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::VisionServer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.VisionRequest.vision_server)
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* VisionRequest::release_vision_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::Shared::VisionServer* released = _impl_.vision_server_;
  _impl_.vision_server_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* VisionRequest::unsafe_arena_release_vision_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.VisionRequest.vision_server)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::Shared::VisionServer* temp = _impl_.vision_server_;
  _impl_.vision_server_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* VisionRequest::_internal_mutable_vision_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.vision_server_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::Shared::VisionServer>(GetArenaForAllocation());
    _impl_.vision_server_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::VisionServer*>(p);
  }
  return _impl_.vision_server_;
}
inline ::IndyFramework::Protobuf::Shared::VisionServer* VisionRequest::mutable_vision_server() {
  ::IndyFramework::Protobuf::Shared::VisionServer* _msg = _internal_mutable_vision_server();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.VisionRequest.vision_server)
  return _msg;
}
inline void VisionRequest::set_allocated_vision_server(::IndyFramework::Protobuf::Shared::VisionServer* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vision_server_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vision_server_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::VisionServer*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.VisionRequest.vision_server)
}

// string object = 2;
inline void VisionRequest::clear_object() {
  _impl_.object_.ClearToEmpty();
}
inline const std::string& VisionRequest::object() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionRequest.object)
  return _internal_object();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VisionRequest::set_object(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionRequest.object)
}
inline std::string* VisionRequest::mutable_object() {
  std::string* _s = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.VisionRequest.object)
  return _s;
}
inline const std::string& VisionRequest::_internal_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.object_.Get();
}
inline void VisionRequest::_internal_set_object(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(value, GetArenaForAllocation());
}
inline std::string* VisionRequest::_internal_mutable_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.object_.Mutable( GetArenaForAllocation());
}
inline std::string* VisionRequest::release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.VisionRequest.object)
  return _impl_.object_.Release();
}
inline void VisionRequest::set_allocated_object(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.object_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.object_.IsDefault()) {
          _impl_.object_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.VisionRequest.object)
}

// .IndyFramework.Protobuf.Shared.VisionFrameType frame_type = 3;
inline void VisionRequest::clear_frame_type() {
  _impl_.frame_type_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::VisionFrameType VisionRequest::frame_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionRequest.frame_type)
  return _internal_frame_type();
}
inline void VisionRequest::set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value) {
  _internal_set_frame_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionRequest.frame_type)
}
inline ::IndyFramework::Protobuf::Shared::VisionFrameType VisionRequest::_internal_frame_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::VisionFrameType>(_impl_.frame_type_);
}
inline void VisionRequest::_internal_set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frame_type_ = value;
}

// uint32 solution_id = 4;
inline void VisionRequest::clear_solution_id() {
  _impl_.solution_id_ = 0u;
}
inline ::uint32_t VisionRequest::solution_id() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionRequest.solution_id)
  return _internal_solution_id();
}
inline void VisionRequest::set_solution_id(::uint32_t value) {
  _internal_set_solution_id(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionRequest.solution_id)
}
inline ::uint32_t VisionRequest::_internal_solution_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.solution_id_;
}
inline void VisionRequest::_internal_set_solution_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.solution_id_ = value;
}

// uint32 vision_id = 5;
inline void VisionRequest::clear_vision_id() {
  _impl_.vision_id_ = 0u;
}
inline ::uint32_t VisionRequest::vision_id() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionRequest.vision_id)
  return _internal_vision_id();
}
inline void VisionRequest::set_vision_id(::uint32_t value) {
  _internal_set_vision_id(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionRequest.vision_id)
}
inline ::uint32_t VisionRequest::_internal_vision_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vision_id_;
}
inline void VisionRequest::_internal_set_vision_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vision_id_ = value;
}

// -------------------------------------------------------------------

// VisionResult

// repeated float frame = 1;
inline int VisionResult::_internal_frame_size() const {
  return _internal_frame().size();
}
inline int VisionResult::frame_size() const {
  return _internal_frame_size();
}
inline void VisionResult::clear_frame() {
  _internal_mutable_frame()->Clear();
}
inline float VisionResult::frame(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionResult.frame)
  return _internal_frame().Get(index);
}
inline void VisionResult::set_frame(int index, float value) {
  _internal_mutable_frame()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionResult.frame)
}
inline void VisionResult::add_frame(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_frame()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.VisionResult.frame)
}
inline const ::google::protobuf::RepeatedField<float>& VisionResult::frame() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.VisionResult.frame)
  return _internal_frame();
}
inline ::google::protobuf::RepeatedField<float>* VisionResult::mutable_frame() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.VisionResult.frame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_frame();
}

inline const ::google::protobuf::RepeatedField<float>& VisionResult::_internal_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frame_;
}
inline ::google::protobuf::RepeatedField<float>* VisionResult::_internal_mutable_frame() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.frame_;
}

// .IndyFramework.Protobuf.Shared.VisionFrameType frame_type = 2;
inline void VisionResult::clear_frame_type() {
  _impl_.frame_type_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::VisionFrameType VisionResult::frame_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionResult.frame_type)
  return _internal_frame_type();
}
inline void VisionResult::set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value) {
  _internal_set_frame_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionResult.frame_type)
}
inline ::IndyFramework::Protobuf::Shared::VisionFrameType VisionResult::_internal_frame_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::VisionFrameType>(_impl_.frame_type_);
}
inline void VisionResult::_internal_set_frame_type(::IndyFramework::Protobuf::Shared::VisionFrameType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frame_type_ = value;
}

// string object = 3;
inline void VisionResult::clear_object() {
  _impl_.object_.ClearToEmpty();
}
inline const std::string& VisionResult::object() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionResult.object)
  return _internal_object();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VisionResult::set_object(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionResult.object)
}
inline std::string* VisionResult::mutable_object() {
  std::string* _s = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.VisionResult.object)
  return _s;
}
inline const std::string& VisionResult::_internal_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.object_.Get();
}
inline void VisionResult::_internal_set_object(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(value, GetArenaForAllocation());
}
inline std::string* VisionResult::_internal_mutable_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.object_.Mutable( GetArenaForAllocation());
}
inline std::string* VisionResult::release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.VisionResult.object)
  return _impl_.object_.Release();
}
inline void VisionResult::set_allocated_object(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.object_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.object_.IsDefault()) {
          _impl_.object_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.VisionResult.object)
}

// bool detected = 4;
inline void VisionResult::clear_detected() {
  _impl_.detected_ = false;
}
inline bool VisionResult::detected() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionResult.detected)
  return _internal_detected();
}
inline void VisionResult::set_detected(bool value) {
  _internal_set_detected(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionResult.detected)
}
inline bool VisionResult::_internal_detected() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detected_;
}
inline void VisionResult::_internal_set_detected(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detected_ = value;
}

// bool passed = 5;
inline void VisionResult::clear_passed() {
  _impl_.passed_ = false;
}
inline bool VisionResult::passed() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionResult.passed)
  return _internal_passed();
}
inline void VisionResult::set_passed(bool value) {
  _internal_set_passed(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionResult.passed)
}
inline bool VisionResult::_internal_passed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.passed_;
}
inline void VisionResult::_internal_set_passed(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.passed_ = value;
}

// string msg = 100;
inline void VisionResult::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& VisionResult::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.VisionResult.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VisionResult::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.VisionResult.msg)
}
inline std::string* VisionResult::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.VisionResult.msg)
  return _s;
}
inline const std::string& VisionResult::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void VisionResult::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* VisionResult::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* VisionResult::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.VisionResult.msg)
  return _impl_.msg_.Release();
}
inline void VisionResult::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.VisionResult.msg)
}

// -------------------------------------------------------------------

// GetGcodeMotionListReq

// -------------------------------------------------------------------

// GetGcodeMotionListRes

// repeated string gcode_file_name = 1;
inline int GetGcodeMotionListRes::_internal_gcode_file_name_size() const {
  return _internal_gcode_file_name().size();
}
inline int GetGcodeMotionListRes::gcode_file_name_size() const {
  return _internal_gcode_file_name_size();
}
inline void GetGcodeMotionListRes::clear_gcode_file_name() {
  _internal_mutable_gcode_file_name()->Clear();
}
inline std::string* GetGcodeMotionListRes::add_gcode_file_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_gcode_file_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
  return _s;
}
inline const std::string& GetGcodeMotionListRes::gcode_file_name(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
  return _internal_gcode_file_name().Get(index);
}
inline std::string* GetGcodeMotionListRes::mutable_gcode_file_name(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
  return _internal_mutable_gcode_file_name()->Mutable(index);
}
inline void GetGcodeMotionListRes::set_gcode_file_name(int index, const std::string& value) {
  _internal_mutable_gcode_file_name()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::set_gcode_file_name(int index, std::string&& value) {
  _internal_mutable_gcode_file_name()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::set_gcode_file_name(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_gcode_file_name()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::set_gcode_file_name(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_gcode_file_name()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::set_gcode_file_name(int index, absl::string_view value) {
  _internal_mutable_gcode_file_name()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::add_gcode_file_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gcode_file_name()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::add_gcode_file_name(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gcode_file_name()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::add_gcode_file_name(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gcode_file_name()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::add_gcode_file_name(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gcode_file_name()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline void GetGcodeMotionListRes::add_gcode_file_name(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gcode_file_name()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetGcodeMotionListRes::gcode_file_name() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
  return _internal_gcode_file_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetGcodeMotionListRes::mutable_gcode_file_name() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.gcode_file_name)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gcode_file_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetGcodeMotionListRes::_internal_gcode_file_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gcode_file_name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetGcodeMotionListRes::_internal_mutable_gcode_file_name() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gcode_file_name_;
}

// string msg = 100;
inline void GetGcodeMotionListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetGcodeMotionListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGcodeMotionListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.msg)
}
inline std::string* GetGcodeMotionListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.msg)
  return _s;
}
inline const std::string& GetGcodeMotionListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetGcodeMotionListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetGcodeMotionListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetGcodeMotionListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetGcodeMotionListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetGcodeMotionListRes.msg)
}

// -------------------------------------------------------------------

// GetModbusServerListReq

// -------------------------------------------------------------------

// GetModbusServerListRes

// repeated .IndyFramework.Protobuf.Shared.ModbusServer modbus_servers = 1;
inline int GetModbusServerListRes::_internal_modbus_servers_size() const {
  return _internal_modbus_servers().size();
}
inline int GetModbusServerListRes::modbus_servers_size() const {
  return _internal_modbus_servers_size();
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* GetModbusServerListRes::mutable_modbus_servers(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetModbusServerListRes.modbus_servers)
  return _internal_mutable_modbus_servers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >*
GetModbusServerListRes::mutable_modbus_servers() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetModbusServerListRes.modbus_servers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_modbus_servers();
}
inline const ::IndyFramework::Protobuf::Shared::ModbusServer& GetModbusServerListRes::modbus_servers(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetModbusServerListRes.modbus_servers)
    return _internal_modbus_servers().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* GetModbusServerListRes::add_modbus_servers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::ModbusServer* _add = _internal_mutable_modbus_servers()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetModbusServerListRes.modbus_servers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >&
GetModbusServerListRes::modbus_servers() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetModbusServerListRes.modbus_servers)
  return _internal_modbus_servers();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>&
GetModbusServerListRes::_internal_modbus_servers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modbus_servers_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>*
GetModbusServerListRes::_internal_mutable_modbus_servers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.modbus_servers_;
}

// string msg = 100;
inline void GetModbusServerListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetModbusServerListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetModbusServerListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetModbusServerListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetModbusServerListRes.msg)
}
inline std::string* GetModbusServerListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetModbusServerListRes.msg)
  return _s;
}
inline const std::string& GetModbusServerListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetModbusServerListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetModbusServerListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetModbusServerListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetModbusServerListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetModbusServerListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetModbusServerListRes.msg)
}

// -------------------------------------------------------------------

// SetModbusServerListReq

// repeated .IndyFramework.Protobuf.Shared.ModbusServer modbus_servers = 1;
inline int SetModbusServerListReq::_internal_modbus_servers_size() const {
  return _internal_modbus_servers().size();
}
inline int SetModbusServerListReq::modbus_servers_size() const {
  return _internal_modbus_servers_size();
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* SetModbusServerListReq::mutable_modbus_servers(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetModbusServerListReq.modbus_servers)
  return _internal_mutable_modbus_servers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >*
SetModbusServerListReq::mutable_modbus_servers() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetModbusServerListReq.modbus_servers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_modbus_servers();
}
inline const ::IndyFramework::Protobuf::Shared::ModbusServer& SetModbusServerListReq::modbus_servers(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetModbusServerListReq.modbus_servers)
    return _internal_modbus_servers().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* SetModbusServerListReq::add_modbus_servers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::ModbusServer* _add = _internal_mutable_modbus_servers()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetModbusServerListReq.modbus_servers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::ModbusServer >&
SetModbusServerListReq::modbus_servers() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetModbusServerListReq.modbus_servers)
  return _internal_modbus_servers();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>&
SetModbusServerListReq::_internal_modbus_servers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modbus_servers_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::ModbusServer>*
SetModbusServerListReq::_internal_mutable_modbus_servers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.modbus_servers_;
}

// -------------------------------------------------------------------

// SetModbusServerListRes

// string msg = 100;
inline void SetModbusServerListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetModbusServerListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetModbusServerListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetModbusServerListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetModbusServerListRes.msg)
}
inline std::string* SetModbusServerListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetModbusServerListRes.msg)
  return _s;
}
inline const std::string& SetModbusServerListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetModbusServerListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetModbusServerListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetModbusServerListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetModbusServerListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetModbusServerListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetModbusServerListRes.msg)
}

// -------------------------------------------------------------------

// CheckModbusConnectionReq

// .IndyFramework.Protobuf.Shared.ModbusServer modbus_servers = 1;
inline bool CheckModbusConnectionReq::has_modbus_servers() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.modbus_servers_ != nullptr);
  return value;
}
inline const ::IndyFramework::Protobuf::Shared::ModbusServer& CheckModbusConnectionReq::_internal_modbus_servers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::Shared::ModbusServer* p = _impl_.modbus_servers_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::Shared::ModbusServer&>(::IndyFramework::Protobuf::Shared::_ModbusServer_default_instance_);
}
inline const ::IndyFramework::Protobuf::Shared::ModbusServer& CheckModbusConnectionReq::modbus_servers() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckModbusConnectionReq.modbus_servers)
  return _internal_modbus_servers();
}
inline void CheckModbusConnectionReq::unsafe_arena_set_allocated_modbus_servers(::IndyFramework::Protobuf::Shared::ModbusServer* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modbus_servers_);
  }
  _impl_.modbus_servers_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::ModbusServer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.CheckModbusConnectionReq.modbus_servers)
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* CheckModbusConnectionReq::release_modbus_servers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::Shared::ModbusServer* released = _impl_.modbus_servers_;
  _impl_.modbus_servers_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* CheckModbusConnectionReq::unsafe_arena_release_modbus_servers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.CheckModbusConnectionReq.modbus_servers)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::Shared::ModbusServer* temp = _impl_.modbus_servers_;
  _impl_.modbus_servers_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* CheckModbusConnectionReq::_internal_mutable_modbus_servers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.modbus_servers_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::Shared::ModbusServer>(GetArenaForAllocation());
    _impl_.modbus_servers_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::ModbusServer*>(p);
  }
  return _impl_.modbus_servers_;
}
inline ::IndyFramework::Protobuf::Shared::ModbusServer* CheckModbusConnectionReq::mutable_modbus_servers() {
  ::IndyFramework::Protobuf::Shared::ModbusServer* _msg = _internal_mutable_modbus_servers();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.CheckModbusConnectionReq.modbus_servers)
  return _msg;
}
inline void CheckModbusConnectionReq::set_allocated_modbus_servers(::IndyFramework::Protobuf::Shared::ModbusServer* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modbus_servers_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.modbus_servers_ = reinterpret_cast<::IndyFramework::Protobuf::Shared::ModbusServer*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.CheckModbusConnectionReq.modbus_servers)
}

// -------------------------------------------------------------------

// CheckModbusConnectionRes

// string msg = 100;
inline void CheckModbusConnectionRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CheckModbusConnectionRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckModbusConnectionRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckModbusConnectionRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckModbusConnectionRes.msg)
}
inline std::string* CheckModbusConnectionRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.CheckModbusConnectionRes.msg)
  return _s;
}
inline const std::string& CheckModbusConnectionRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void CheckModbusConnectionRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CheckModbusConnectionRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* CheckModbusConnectionRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.CheckModbusConnectionRes.msg)
  return _impl_.msg_.Release();
}
inline void CheckModbusConnectionRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.CheckModbusConnectionRes.msg)
}

// -------------------------------------------------------------------

// GetToolFrameListReq

// -------------------------------------------------------------------

// GetToolFrameListRes

// repeated .IndyFramework.Protobuf.Shared.NamedTaskPosition tool_frames = 1;
inline int GetToolFrameListRes::_internal_tool_frames_size() const {
  return _internal_tool_frames().size();
}
inline int GetToolFrameListRes::tool_frames_size() const {
  return _internal_tool_frames_size();
}
inline ::IndyFramework::Protobuf::Shared::NamedTaskPosition* GetToolFrameListRes::mutable_tool_frames(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetToolFrameListRes.tool_frames)
  return _internal_mutable_tool_frames()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >*
GetToolFrameListRes::mutable_tool_frames() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetToolFrameListRes.tool_frames)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tool_frames();
}
inline const ::IndyFramework::Protobuf::Shared::NamedTaskPosition& GetToolFrameListRes::tool_frames(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetToolFrameListRes.tool_frames)
    return _internal_tool_frames().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::NamedTaskPosition* GetToolFrameListRes::add_tool_frames() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::NamedTaskPosition* _add = _internal_mutable_tool_frames()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetToolFrameListRes.tool_frames)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >&
GetToolFrameListRes::tool_frames() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetToolFrameListRes.tool_frames)
  return _internal_tool_frames();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>&
GetToolFrameListRes::_internal_tool_frames() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_frames_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>*
GetToolFrameListRes::_internal_mutable_tool_frames() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tool_frames_;
}

// string default_name = 2;
inline void GetToolFrameListRes::clear_default_name() {
  _impl_.default_name_.ClearToEmpty();
}
inline const std::string& GetToolFrameListRes::default_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetToolFrameListRes.default_name)
  return _internal_default_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetToolFrameListRes::set_default_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetToolFrameListRes.default_name)
}
inline std::string* GetToolFrameListRes::mutable_default_name() {
  std::string* _s = _internal_mutable_default_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetToolFrameListRes.default_name)
  return _s;
}
inline const std::string& GetToolFrameListRes::_internal_default_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.default_name_.Get();
}
inline void GetToolFrameListRes::_internal_set_default_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetToolFrameListRes::_internal_mutable_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.default_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetToolFrameListRes::release_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetToolFrameListRes.default_name)
  return _impl_.default_name_.Release();
}
inline void GetToolFrameListRes::set_allocated_default_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.default_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.default_name_.IsDefault()) {
          _impl_.default_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetToolFrameListRes.default_name)
}

// string msg = 100;
inline void GetToolFrameListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetToolFrameListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetToolFrameListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetToolFrameListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetToolFrameListRes.msg)
}
inline std::string* GetToolFrameListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetToolFrameListRes.msg)
  return _s;
}
inline const std::string& GetToolFrameListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetToolFrameListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetToolFrameListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetToolFrameListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetToolFrameListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetToolFrameListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetToolFrameListRes.msg)
}

// -------------------------------------------------------------------

// SetToolFrameListReq

// repeated .IndyFramework.Protobuf.Shared.NamedTaskPosition tool_frames = 1;
inline int SetToolFrameListReq::_internal_tool_frames_size() const {
  return _internal_tool_frames().size();
}
inline int SetToolFrameListReq::tool_frames_size() const {
  return _internal_tool_frames_size();
}
inline ::IndyFramework::Protobuf::Shared::NamedTaskPosition* SetToolFrameListReq::mutable_tool_frames(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetToolFrameListReq.tool_frames)
  return _internal_mutable_tool_frames()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >*
SetToolFrameListReq::mutable_tool_frames() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetToolFrameListReq.tool_frames)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tool_frames();
}
inline const ::IndyFramework::Protobuf::Shared::NamedTaskPosition& SetToolFrameListReq::tool_frames(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolFrameListReq.tool_frames)
    return _internal_tool_frames().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::NamedTaskPosition* SetToolFrameListReq::add_tool_frames() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::NamedTaskPosition* _add = _internal_mutable_tool_frames()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetToolFrameListReq.tool_frames)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedTaskPosition >&
SetToolFrameListReq::tool_frames() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetToolFrameListReq.tool_frames)
  return _internal_tool_frames();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>&
SetToolFrameListReq::_internal_tool_frames() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_frames_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedTaskPosition>*
SetToolFrameListReq::_internal_mutable_tool_frames() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tool_frames_;
}

// string default_name = 2;
inline void SetToolFrameListReq::clear_default_name() {
  _impl_.default_name_.ClearToEmpty();
}
inline const std::string& SetToolFrameListReq::default_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolFrameListReq.default_name)
  return _internal_default_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetToolFrameListReq::set_default_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolFrameListReq.default_name)
}
inline std::string* SetToolFrameListReq::mutable_default_name() {
  std::string* _s = _internal_mutable_default_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetToolFrameListReq.default_name)
  return _s;
}
inline const std::string& SetToolFrameListReq::_internal_default_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.default_name_.Get();
}
inline void SetToolFrameListReq::_internal_set_default_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SetToolFrameListReq::_internal_mutable_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.default_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SetToolFrameListReq::release_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetToolFrameListReq.default_name)
  return _impl_.default_name_.Release();
}
inline void SetToolFrameListReq::set_allocated_default_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.default_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.default_name_.IsDefault()) {
          _impl_.default_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetToolFrameListReq.default_name)
}

// -------------------------------------------------------------------

// SetToolFrameListRes

// string msg = 100;
inline void SetToolFrameListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetToolFrameListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolFrameListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetToolFrameListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolFrameListRes.msg)
}
inline std::string* SetToolFrameListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetToolFrameListRes.msg)
  return _s;
}
inline const std::string& SetToolFrameListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetToolFrameListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetToolFrameListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetToolFrameListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetToolFrameListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetToolFrameListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetToolFrameListRes.msg)
}

// -------------------------------------------------------------------

// GetRefFrameListReq

// -------------------------------------------------------------------

// GetRefFrameListRes

// repeated .IndyFramework.Protobuf.Shared.NamedReferencePosition ref_frames = 1;
inline int GetRefFrameListRes::_internal_ref_frames_size() const {
  return _internal_ref_frames().size();
}
inline int GetRefFrameListRes::ref_frames_size() const {
  return _internal_ref_frames_size();
}
inline ::IndyFramework::Protobuf::Shared::NamedReferencePosition* GetRefFrameListRes::mutable_ref_frames(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetRefFrameListRes.ref_frames)
  return _internal_mutable_ref_frames()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >*
GetRefFrameListRes::mutable_ref_frames() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetRefFrameListRes.ref_frames)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ref_frames();
}
inline const ::IndyFramework::Protobuf::Shared::NamedReferencePosition& GetRefFrameListRes::ref_frames(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetRefFrameListRes.ref_frames)
    return _internal_ref_frames().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::NamedReferencePosition* GetRefFrameListRes::add_ref_frames() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::NamedReferencePosition* _add = _internal_mutable_ref_frames()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetRefFrameListRes.ref_frames)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >&
GetRefFrameListRes::ref_frames() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetRefFrameListRes.ref_frames)
  return _internal_ref_frames();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>&
GetRefFrameListRes::_internal_ref_frames() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ref_frames_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>*
GetRefFrameListRes::_internal_mutable_ref_frames() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ref_frames_;
}

// string default_name = 2;
inline void GetRefFrameListRes::clear_default_name() {
  _impl_.default_name_.ClearToEmpty();
}
inline const std::string& GetRefFrameListRes::default_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetRefFrameListRes.default_name)
  return _internal_default_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetRefFrameListRes::set_default_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetRefFrameListRes.default_name)
}
inline std::string* GetRefFrameListRes::mutable_default_name() {
  std::string* _s = _internal_mutable_default_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetRefFrameListRes.default_name)
  return _s;
}
inline const std::string& GetRefFrameListRes::_internal_default_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.default_name_.Get();
}
inline void GetRefFrameListRes::_internal_set_default_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetRefFrameListRes::_internal_mutable_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.default_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetRefFrameListRes::release_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetRefFrameListRes.default_name)
  return _impl_.default_name_.Release();
}
inline void GetRefFrameListRes::set_allocated_default_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.default_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.default_name_.IsDefault()) {
          _impl_.default_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetRefFrameListRes.default_name)
}

// string msg = 100;
inline void GetRefFrameListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetRefFrameListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetRefFrameListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetRefFrameListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetRefFrameListRes.msg)
}
inline std::string* GetRefFrameListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetRefFrameListRes.msg)
  return _s;
}
inline const std::string& GetRefFrameListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetRefFrameListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetRefFrameListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetRefFrameListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetRefFrameListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetRefFrameListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetRefFrameListRes.msg)
}

// -------------------------------------------------------------------

// SetRefFrameListReq

// repeated .IndyFramework.Protobuf.Shared.NamedReferencePosition ref_frames = 1;
inline int SetRefFrameListReq::_internal_ref_frames_size() const {
  return _internal_ref_frames().size();
}
inline int SetRefFrameListReq::ref_frames_size() const {
  return _internal_ref_frames_size();
}
inline ::IndyFramework::Protobuf::Shared::NamedReferencePosition* SetRefFrameListReq::mutable_ref_frames(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetRefFrameListReq.ref_frames)
  return _internal_mutable_ref_frames()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >*
SetRefFrameListReq::mutable_ref_frames() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetRefFrameListReq.ref_frames)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ref_frames();
}
inline const ::IndyFramework::Protobuf::Shared::NamedReferencePosition& SetRefFrameListReq::ref_frames(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFrameListReq.ref_frames)
    return _internal_ref_frames().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::NamedReferencePosition* SetRefFrameListReq::add_ref_frames() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::NamedReferencePosition* _add = _internal_mutable_ref_frames()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetRefFrameListReq.ref_frames)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedReferencePosition >&
SetRefFrameListReq::ref_frames() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetRefFrameListReq.ref_frames)
  return _internal_ref_frames();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>&
SetRefFrameListReq::_internal_ref_frames() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ref_frames_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedReferencePosition>*
SetRefFrameListReq::_internal_mutable_ref_frames() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ref_frames_;
}

// string default_name = 2;
inline void SetRefFrameListReq::clear_default_name() {
  _impl_.default_name_.ClearToEmpty();
}
inline const std::string& SetRefFrameListReq::default_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFrameListReq.default_name)
  return _internal_default_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetRefFrameListReq::set_default_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFrameListReq.default_name)
}
inline std::string* SetRefFrameListReq::mutable_default_name() {
  std::string* _s = _internal_mutable_default_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetRefFrameListReq.default_name)
  return _s;
}
inline const std::string& SetRefFrameListReq::_internal_default_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.default_name_.Get();
}
inline void SetRefFrameListReq::_internal_set_default_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SetRefFrameListReq::_internal_mutable_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.default_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SetRefFrameListReq::release_default_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetRefFrameListReq.default_name)
  return _impl_.default_name_.Release();
}
inline void SetRefFrameListReq::set_allocated_default_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.default_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.default_name_.IsDefault()) {
          _impl_.default_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetRefFrameListReq.default_name)
}

// -------------------------------------------------------------------

// SetRefFrameListRes

// string msg = 100;
inline void SetRefFrameListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetRefFrameListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFrameListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetRefFrameListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFrameListRes.msg)
}
inline std::string* SetRefFrameListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetRefFrameListRes.msg)
  return _s;
}
inline const std::string& SetRefFrameListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetRefFrameListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetRefFrameListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetRefFrameListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetRefFrameListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetRefFrameListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetRefFrameListRes.msg)
}

// -------------------------------------------------------------------

// GetCustomPosListReq

// -------------------------------------------------------------------

// GetCustomPosListRes

// repeated .IndyFramework.Protobuf.Shared.NamedJointPosition custom_pos = 1;
inline int GetCustomPosListRes::_internal_custom_pos_size() const {
  return _internal_custom_pos().size();
}
inline int GetCustomPosListRes::custom_pos_size() const {
  return _internal_custom_pos_size();
}
inline ::IndyFramework::Protobuf::Shared::NamedJointPosition* GetCustomPosListRes::mutable_custom_pos(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetCustomPosListRes.custom_pos)
  return _internal_mutable_custom_pos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >*
GetCustomPosListRes::mutable_custom_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetCustomPosListRes.custom_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_custom_pos();
}
inline const ::IndyFramework::Protobuf::Shared::NamedJointPosition& GetCustomPosListRes::custom_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetCustomPosListRes.custom_pos)
    return _internal_custom_pos().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::NamedJointPosition* GetCustomPosListRes::add_custom_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::NamedJointPosition* _add = _internal_mutable_custom_pos()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetCustomPosListRes.custom_pos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >&
GetCustomPosListRes::custom_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetCustomPosListRes.custom_pos)
  return _internal_custom_pos();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>&
GetCustomPosListRes::_internal_custom_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.custom_pos_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>*
GetCustomPosListRes::_internal_mutable_custom_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.custom_pos_;
}

// string msg = 100;
inline void GetCustomPosListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetCustomPosListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetCustomPosListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCustomPosListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetCustomPosListRes.msg)
}
inline std::string* GetCustomPosListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetCustomPosListRes.msg)
  return _s;
}
inline const std::string& GetCustomPosListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetCustomPosListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetCustomPosListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetCustomPosListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetCustomPosListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetCustomPosListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetCustomPosListRes.msg)
}

// -------------------------------------------------------------------

// SetCustomPosListReq

// repeated .IndyFramework.Protobuf.Shared.NamedJointPosition custom_pos = 1;
inline int SetCustomPosListReq::_internal_custom_pos_size() const {
  return _internal_custom_pos().size();
}
inline int SetCustomPosListReq::custom_pos_size() const {
  return _internal_custom_pos_size();
}
inline ::IndyFramework::Protobuf::Shared::NamedJointPosition* SetCustomPosListReq::mutable_custom_pos(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetCustomPosListReq.custom_pos)
  return _internal_mutable_custom_pos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >*
SetCustomPosListReq::mutable_custom_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetCustomPosListReq.custom_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_custom_pos();
}
inline const ::IndyFramework::Protobuf::Shared::NamedJointPosition& SetCustomPosListReq::custom_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetCustomPosListReq.custom_pos)
    return _internal_custom_pos().Get(index);
}
inline ::IndyFramework::Protobuf::Shared::NamedJointPosition* SetCustomPosListReq::add_custom_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::Shared::NamedJointPosition* _add = _internal_mutable_custom_pos()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetCustomPosListReq.custom_pos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::Shared::NamedJointPosition >&
SetCustomPosListReq::custom_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetCustomPosListReq.custom_pos)
  return _internal_custom_pos();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>&
SetCustomPosListReq::_internal_custom_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.custom_pos_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::Shared::NamedJointPosition>*
SetCustomPosListReq::_internal_mutable_custom_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.custom_pos_;
}

// -------------------------------------------------------------------

// SetCustomPosListRes

// string msg = 100;
inline void SetCustomPosListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetCustomPosListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetCustomPosListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetCustomPosListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetCustomPosListRes.msg)
}
inline std::string* SetCustomPosListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetCustomPosListRes.msg)
  return _s;
}
inline const std::string& SetCustomPosListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetCustomPosListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetCustomPosListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetCustomPosListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetCustomPosListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetCustomPosListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetCustomPosListRes.msg)
}

// -------------------------------------------------------------------

// SetCollSensLevelReq

// int32 level = 1;
inline void SetCollSensLevelReq::clear_level() {
  _impl_.level_ = 0;
}
inline ::int32_t SetCollSensLevelReq::level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetCollSensLevelReq.level)
  return _internal_level();
}
inline void SetCollSensLevelReq::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetCollSensLevelReq.level)
}
inline ::int32_t SetCollSensLevelReq::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_;
}
inline void SetCollSensLevelReq::_internal_set_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// GetCollSensLevelRes

// int32 level = 1;
inline void GetCollSensLevelRes::clear_level() {
  _impl_.level_ = 0;
}
inline ::int32_t GetCollSensLevelRes::level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetCollSensLevelRes.level)
  return _internal_level();
}
inline void GetCollSensLevelRes::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetCollSensLevelRes.level)
}
inline ::int32_t GetCollSensLevelRes::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_;
}
inline void GetCollSensLevelRes::_internal_set_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// string msg = 100;
inline void GetCollSensLevelRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetCollSensLevelRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetCollSensLevelRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCollSensLevelRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetCollSensLevelRes.msg)
}
inline std::string* GetCollSensLevelRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetCollSensLevelRes.msg)
  return _s;
}
inline const std::string& GetCollSensLevelRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetCollSensLevelRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetCollSensLevelRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetCollSensLevelRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetCollSensLevelRes.msg)
  return _impl_.msg_.Release();
}
inline void GetCollSensLevelRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetCollSensLevelRes.msg)
}

// -------------------------------------------------------------------

// InitCollSensParamReq

// -------------------------------------------------------------------

// InitCollSensParamRes

// string msg = 100;
inline void InitCollSensParamRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& InitCollSensParamRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.InitCollSensParamRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitCollSensParamRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.InitCollSensParamRes.msg)
}
inline std::string* InitCollSensParamRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.InitCollSensParamRes.msg)
  return _s;
}
inline const std::string& InitCollSensParamRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void InitCollSensParamRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* InitCollSensParamRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* InitCollSensParamRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.InitCollSensParamRes.msg)
  return _impl_.msg_.Release();
}
inline void InitCollSensParamRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.InitCollSensParamRes.msg)
}

// -------------------------------------------------------------------

// GetLogReq

// int32 log_length = 1;
inline void GetLogReq::clear_log_length() {
  _impl_.log_length_ = 0;
}
inline ::int32_t GetLogReq::log_length() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogReq.log_length)
  return _internal_log_length();
}
inline void GetLogReq::set_log_length(::int32_t value) {
  _internal_set_log_length(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogReq.log_length)
}
inline ::int32_t GetLogReq::_internal_log_length() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_length_;
}
inline void GetLogReq::_internal_set_log_length(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.log_length_ = value;
}

// -------------------------------------------------------------------

// GetLogRes

// string log = 1;
inline void GetLogRes::clear_log() {
  _impl_.log_.ClearToEmpty();
}
inline const std::string& GetLogRes::log() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogRes.log)
  return _internal_log();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLogRes::set_log(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.log_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogRes.log)
}
inline std::string* GetLogRes::mutable_log() {
  std::string* _s = _internal_mutable_log();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogRes.log)
  return _s;
}
inline const std::string& GetLogRes::_internal_log() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_.Get();
}
inline void GetLogRes::_internal_set_log(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.log_.Set(value, GetArenaForAllocation());
}
inline std::string* GetLogRes::_internal_mutable_log() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.log_.Mutable( GetArenaForAllocation());
}
inline std::string* GetLogRes::release_log() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetLogRes.log)
  return _impl_.log_.Release();
}
inline void GetLogRes::set_allocated_log(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.log_.IsDefault()) {
          _impl_.log_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetLogRes.log)
}

// -------------------------------------------------------------------

// GetLogListReq

// -------------------------------------------------------------------

// GetLogListRes

// repeated string log_file_names = 1;
inline int GetLogListRes::_internal_log_file_names_size() const {
  return _internal_log_file_names().size();
}
inline int GetLogListRes::log_file_names_size() const {
  return _internal_log_file_names_size();
}
inline void GetLogListRes::clear_log_file_names() {
  _internal_mutable_log_file_names()->Clear();
}
inline std::string* GetLogListRes::add_log_file_names() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_log_file_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
  return _s;
}
inline const std::string& GetLogListRes::log_file_names(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
  return _internal_log_file_names().Get(index);
}
inline std::string* GetLogListRes::mutable_log_file_names(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
  return _internal_mutable_log_file_names()->Mutable(index);
}
inline void GetLogListRes::set_log_file_names(int index, const std::string& value) {
  _internal_mutable_log_file_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::set_log_file_names(int index, std::string&& value) {
  _internal_mutable_log_file_names()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::set_log_file_names(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_log_file_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::set_log_file_names(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_log_file_names()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::set_log_file_names(int index, absl::string_view value) {
  _internal_mutable_log_file_names()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::add_log_file_names(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_log_file_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::add_log_file_names(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_log_file_names()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::add_log_file_names(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_log_file_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::add_log_file_names(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_log_file_names()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline void GetLogListRes::add_log_file_names(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_log_file_names()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogListRes::log_file_names() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
  return _internal_log_file_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetLogListRes::mutable_log_file_names() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetLogListRes.log_file_names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_log_file_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogListRes::_internal_log_file_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_file_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetLogListRes::_internal_mutable_log_file_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.log_file_names_;
}

// repeated string sizes = 2;
inline int GetLogListRes::_internal_sizes_size() const {
  return _internal_sizes().size();
}
inline int GetLogListRes::sizes_size() const {
  return _internal_sizes_size();
}
inline void GetLogListRes::clear_sizes() {
  _internal_mutable_sizes()->Clear();
}
inline std::string* GetLogListRes::add_sizes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_sizes()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
  return _s;
}
inline const std::string& GetLogListRes::sizes(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
  return _internal_sizes().Get(index);
}
inline std::string* GetLogListRes::mutable_sizes(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
  return _internal_mutable_sizes()->Mutable(index);
}
inline void GetLogListRes::set_sizes(int index, const std::string& value) {
  _internal_mutable_sizes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::set_sizes(int index, std::string&& value) {
  _internal_mutable_sizes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::set_sizes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_sizes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::set_sizes(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_sizes()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::set_sizes(int index, absl::string_view value) {
  _internal_mutable_sizes()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::add_sizes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::add_sizes(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::add_sizes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::add_sizes(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline void GetLogListRes::add_sizes(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogListRes::sizes() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
  return _internal_sizes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetLogListRes::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetLogListRes.sizes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sizes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogListRes::_internal_sizes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sizes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetLogListRes::_internal_mutable_sizes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sizes_;
}

// repeated string modified_dates = 3;
inline int GetLogListRes::_internal_modified_dates_size() const {
  return _internal_modified_dates().size();
}
inline int GetLogListRes::modified_dates_size() const {
  return _internal_modified_dates_size();
}
inline void GetLogListRes::clear_modified_dates() {
  _internal_mutable_modified_dates()->Clear();
}
inline std::string* GetLogListRes::add_modified_dates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_modified_dates()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
  return _s;
}
inline const std::string& GetLogListRes::modified_dates(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
  return _internal_modified_dates().Get(index);
}
inline std::string* GetLogListRes::mutable_modified_dates(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
  return _internal_mutable_modified_dates()->Mutable(index);
}
inline void GetLogListRes::set_modified_dates(int index, const std::string& value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::set_modified_dates(int index, std::string&& value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::set_modified_dates(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_modified_dates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::set_modified_dates(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::set_modified_dates(int index, absl::string_view value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::add_modified_dates(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::add_modified_dates(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::add_modified_dates(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::add_modified_dates(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline void GetLogListRes::add_modified_dates(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogListRes::modified_dates() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
  return _internal_modified_dates();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetLogListRes::mutable_modified_dates() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetLogListRes.modified_dates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_modified_dates();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogListRes::_internal_modified_dates() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modified_dates_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetLogListRes::_internal_mutable_modified_dates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.modified_dates_;
}

// string msg = 100;
inline void GetLogListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetLogListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLogListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogListRes.msg)
}
inline std::string* GetLogListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogListRes.msg)
  return _s;
}
inline const std::string& GetLogListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetLogListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetLogListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetLogListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetLogListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetLogListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetLogListRes.msg)
}

// -------------------------------------------------------------------

// GetLogContentReq

// string file_name = 1;
inline void GetLogContentReq::clear_file_name() {
  _impl_.file_name_.ClearToEmpty();
}
inline const std::string& GetLogContentReq::file_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogContentReq.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLogContentReq::set_file_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentReq.file_name)
}
inline std::string* GetLogContentReq::mutable_file_name() {
  std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogContentReq.file_name)
  return _s;
}
inline const std::string& GetLogContentReq::_internal_file_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_name_.Get();
}
inline void GetLogContentReq::_internal_set_file_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetLogContentReq::_internal_mutable_file_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetLogContentReq::release_file_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetLogContentReq.file_name)
  return _impl_.file_name_.Release();
}
inline void GetLogContentReq::set_allocated_file_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_name_.IsDefault()) {
          _impl_.file_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetLogContentReq.file_name)
}

// -------------------------------------------------------------------

// GetLogContentRes

// bytes content = 1;
inline void GetLogContentRes::clear_content() {
  _impl_.content_.ClearToEmpty();
}
inline const std::string& GetLogContentRes::content() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogContentRes.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLogContentRes::set_content(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentRes.content)
}
inline std::string* GetLogContentRes::mutable_content() {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogContentRes.content)
  return _s;
}
inline const std::string& GetLogContentRes::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_.Get();
}
inline void GetLogContentRes::_internal_set_content(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(value, GetArenaForAllocation());
}
inline std::string* GetLogContentRes::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_.Mutable( GetArenaForAllocation());
}
inline std::string* GetLogContentRes::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetLogContentRes.content)
  return _impl_.content_.Release();
}
inline void GetLogContentRes::set_allocated_content(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetLogContentRes.content)
}

// string msg = 100;
inline void GetLogContentRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetLogContentRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogContentRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLogContentRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentRes.msg)
}
inline std::string* GetLogContentRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogContentRes.msg)
  return _s;
}
inline const std::string& GetLogContentRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetLogContentRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetLogContentRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetLogContentRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetLogContentRes.msg)
  return _impl_.msg_.Release();
}
inline void GetLogContentRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetLogContentRes.msg)
}

// -------------------------------------------------------------------

// GetLogContentListReq

// repeated string file_name_list = 1;
inline int GetLogContentListReq::_internal_file_name_list_size() const {
  return _internal_file_name_list().size();
}
inline int GetLogContentListReq::file_name_list_size() const {
  return _internal_file_name_list_size();
}
inline void GetLogContentListReq::clear_file_name_list() {
  _internal_mutable_file_name_list()->Clear();
}
inline std::string* GetLogContentListReq::add_file_name_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_file_name_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
  return _s;
}
inline const std::string& GetLogContentListReq::file_name_list(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
  return _internal_file_name_list().Get(index);
}
inline std::string* GetLogContentListReq::mutable_file_name_list(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
  return _internal_mutable_file_name_list()->Mutable(index);
}
inline void GetLogContentListReq::set_file_name_list(int index, const std::string& value) {
  _internal_mutable_file_name_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::set_file_name_list(int index, std::string&& value) {
  _internal_mutable_file_name_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::set_file_name_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_file_name_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::set_file_name_list(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_file_name_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::set_file_name_list(int index, absl::string_view value) {
  _internal_mutable_file_name_list()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::add_file_name_list(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_file_name_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::add_file_name_list(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_file_name_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::add_file_name_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_file_name_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::add_file_name_list(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_file_name_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline void GetLogContentListReq::add_file_name_list(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_file_name_list()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogContentListReq::file_name_list() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
  return _internal_file_name_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetLogContentListReq::mutable_file_name_list() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetLogContentListReq.file_name_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_file_name_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogContentListReq::_internal_file_name_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_name_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetLogContentListReq::_internal_mutable_file_name_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.file_name_list_;
}

// -------------------------------------------------------------------

// GetLogContentListRes

// repeated bytes content_list = 1;
inline int GetLogContentListRes::_internal_content_list_size() const {
  return _internal_content_list().size();
}
inline int GetLogContentListRes::content_list_size() const {
  return _internal_content_list_size();
}
inline void GetLogContentListRes::clear_content_list() {
  _internal_mutable_content_list()->Clear();
}
inline std::string* GetLogContentListRes::add_content_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_content_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
  return _s;
}
inline const std::string& GetLogContentListRes::content_list(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
  return _internal_content_list().Get(index);
}
inline std::string* GetLogContentListRes::mutable_content_list(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
  return _internal_mutable_content_list()->Mutable(index);
}
inline void GetLogContentListRes::set_content_list(int index, const std::string& value) {
  _internal_mutable_content_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::set_content_list(int index, std::string&& value) {
  _internal_mutable_content_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::set_content_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_content_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::set_content_list(int index, const void* value,
                              std::size_t size) {
  _internal_mutable_content_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::set_content_list(int index, absl::string_view value) {
  _internal_mutable_content_list()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::add_content_list(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_content_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::add_content_list(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_content_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::add_content_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_content_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::add_content_list(const void* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_content_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline void GetLogContentListRes::add_content_list(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_content_list()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogContentListRes::content_list() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
  return _internal_content_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetLogContentListRes::mutable_content_list() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetLogContentListRes.content_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_content_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLogContentListRes::_internal_content_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetLogContentListRes::_internal_mutable_content_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.content_list_;
}

// string msg = 100;
inline void GetLogContentListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetLogContentListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLogContentListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLogContentListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLogContentListRes.msg)
}
inline std::string* GetLogContentListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLogContentListRes.msg)
  return _s;
}
inline const std::string& GetLogContentListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetLogContentListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetLogContentListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetLogContentListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetLogContentListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetLogContentListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetLogContentListRes.msg)
}

// -------------------------------------------------------------------

// GetIndexProgramListReq

// -------------------------------------------------------------------

// GetIndexProgramListRes

// repeated int32 indices = 1;
inline int GetIndexProgramListRes::_internal_indices_size() const {
  return _internal_indices().size();
}
inline int GetIndexProgramListRes::indices_size() const {
  return _internal_indices_size();
}
inline void GetIndexProgramListRes::clear_indices() {
  _internal_mutable_indices()->Clear();
}
inline ::int32_t GetIndexProgramListRes::indices(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.indices)
  return _internal_indices().Get(index);
}
inline void GetIndexProgramListRes::set_indices(int index, ::int32_t value) {
  _internal_mutable_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.indices)
}
inline void GetIndexProgramListRes::add_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_indices()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GetIndexProgramListRes::indices() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.indices)
  return _internal_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetIndexProgramListRes::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_indices();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GetIndexProgramListRes::_internal_indices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetIndexProgramListRes::_internal_mutable_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.indices_;
}

// repeated string program_dirs = 2;
inline int GetIndexProgramListRes::_internal_program_dirs_size() const {
  return _internal_program_dirs().size();
}
inline int GetIndexProgramListRes::program_dirs_size() const {
  return _internal_program_dirs_size();
}
inline void GetIndexProgramListRes::clear_program_dirs() {
  _internal_mutable_program_dirs()->Clear();
}
inline std::string* GetIndexProgramListRes::add_program_dirs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_program_dirs()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
  return _s;
}
inline const std::string& GetIndexProgramListRes::program_dirs(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
  return _internal_program_dirs().Get(index);
}
inline std::string* GetIndexProgramListRes::mutable_program_dirs(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
  return _internal_mutable_program_dirs()->Mutable(index);
}
inline void GetIndexProgramListRes::set_program_dirs(int index, const std::string& value) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::set_program_dirs(int index, std::string&& value) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::set_program_dirs(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_program_dirs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::set_program_dirs(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::set_program_dirs(int index, absl::string_view value) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::add_program_dirs(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::add_program_dirs(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::add_program_dirs(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::add_program_dirs(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline void GetIndexProgramListRes::add_program_dirs(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetIndexProgramListRes::program_dirs() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
  return _internal_program_dirs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetIndexProgramListRes::mutable_program_dirs() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.program_dirs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_program_dirs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetIndexProgramListRes::_internal_program_dirs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.program_dirs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetIndexProgramListRes::_internal_mutable_program_dirs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.program_dirs_;
}

// repeated string sizes = 3;
inline int GetIndexProgramListRes::_internal_sizes_size() const {
  return _internal_sizes().size();
}
inline int GetIndexProgramListRes::sizes_size() const {
  return _internal_sizes_size();
}
inline void GetIndexProgramListRes::clear_sizes() {
  _internal_mutable_sizes()->Clear();
}
inline std::string* GetIndexProgramListRes::add_sizes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_sizes()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
  return _s;
}
inline const std::string& GetIndexProgramListRes::sizes(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
  return _internal_sizes().Get(index);
}
inline std::string* GetIndexProgramListRes::mutable_sizes(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
  return _internal_mutable_sizes()->Mutable(index);
}
inline void GetIndexProgramListRes::set_sizes(int index, const std::string& value) {
  _internal_mutable_sizes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::set_sizes(int index, std::string&& value) {
  _internal_mutable_sizes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::set_sizes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_sizes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::set_sizes(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_sizes()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::set_sizes(int index, absl::string_view value) {
  _internal_mutable_sizes()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::add_sizes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::add_sizes(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::add_sizes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::add_sizes(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline void GetIndexProgramListRes::add_sizes(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetIndexProgramListRes::sizes() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
  return _internal_sizes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetIndexProgramListRes::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.sizes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sizes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetIndexProgramListRes::_internal_sizes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sizes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetIndexProgramListRes::_internal_mutable_sizes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sizes_;
}

// repeated string modified_dates = 4;
inline int GetIndexProgramListRes::_internal_modified_dates_size() const {
  return _internal_modified_dates().size();
}
inline int GetIndexProgramListRes::modified_dates_size() const {
  return _internal_modified_dates_size();
}
inline void GetIndexProgramListRes::clear_modified_dates() {
  _internal_mutable_modified_dates()->Clear();
}
inline std::string* GetIndexProgramListRes::add_modified_dates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_modified_dates()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
  return _s;
}
inline const std::string& GetIndexProgramListRes::modified_dates(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
  return _internal_modified_dates().Get(index);
}
inline std::string* GetIndexProgramListRes::mutable_modified_dates(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
  return _internal_mutable_modified_dates()->Mutable(index);
}
inline void GetIndexProgramListRes::set_modified_dates(int index, const std::string& value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::set_modified_dates(int index, std::string&& value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::set_modified_dates(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_modified_dates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::set_modified_dates(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::set_modified_dates(int index, absl::string_view value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::add_modified_dates(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::add_modified_dates(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::add_modified_dates(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::add_modified_dates(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline void GetIndexProgramListRes::add_modified_dates(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetIndexProgramListRes::modified_dates() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
  return _internal_modified_dates();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetIndexProgramListRes::mutable_modified_dates() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.modified_dates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_modified_dates();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetIndexProgramListRes::_internal_modified_dates() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modified_dates_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetIndexProgramListRes::_internal_mutable_modified_dates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.modified_dates_;
}

// string msg = 100;
inline void GetIndexProgramListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetIndexProgramListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetIndexProgramListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.msg)
}
inline std::string* GetIndexProgramListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.msg)
  return _s;
}
inline const std::string& GetIndexProgramListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetIndexProgramListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetIndexProgramListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetIndexProgramListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetIndexProgramListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetIndexProgramListRes.msg)
}

// -------------------------------------------------------------------

// GetProgramListReq

// -------------------------------------------------------------------

// GetProgramListRes

// repeated string program_dirs = 1;
inline int GetProgramListRes::_internal_program_dirs_size() const {
  return _internal_program_dirs().size();
}
inline int GetProgramListRes::program_dirs_size() const {
  return _internal_program_dirs_size();
}
inline void GetProgramListRes::clear_program_dirs() {
  _internal_mutable_program_dirs()->Clear();
}
inline std::string* GetProgramListRes::add_program_dirs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_program_dirs()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
  return _s;
}
inline const std::string& GetProgramListRes::program_dirs(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
  return _internal_program_dirs().Get(index);
}
inline std::string* GetProgramListRes::mutable_program_dirs(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
  return _internal_mutable_program_dirs()->Mutable(index);
}
inline void GetProgramListRes::set_program_dirs(int index, const std::string& value) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::set_program_dirs(int index, std::string&& value) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::set_program_dirs(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_program_dirs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::set_program_dirs(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::set_program_dirs(int index, absl::string_view value) {
  _internal_mutable_program_dirs()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::add_program_dirs(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::add_program_dirs(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::add_program_dirs(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::add_program_dirs(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline void GetProgramListRes::add_program_dirs(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_program_dirs()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetProgramListRes::program_dirs() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
  return _internal_program_dirs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetProgramListRes::mutable_program_dirs() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetProgramListRes.program_dirs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_program_dirs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetProgramListRes::_internal_program_dirs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.program_dirs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetProgramListRes::_internal_mutable_program_dirs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.program_dirs_;
}

// repeated string sizes = 2;
inline int GetProgramListRes::_internal_sizes_size() const {
  return _internal_sizes().size();
}
inline int GetProgramListRes::sizes_size() const {
  return _internal_sizes_size();
}
inline void GetProgramListRes::clear_sizes() {
  _internal_mutable_sizes()->Clear();
}
inline std::string* GetProgramListRes::add_sizes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_sizes()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
  return _s;
}
inline const std::string& GetProgramListRes::sizes(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
  return _internal_sizes().Get(index);
}
inline std::string* GetProgramListRes::mutable_sizes(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
  return _internal_mutable_sizes()->Mutable(index);
}
inline void GetProgramListRes::set_sizes(int index, const std::string& value) {
  _internal_mutable_sizes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::set_sizes(int index, std::string&& value) {
  _internal_mutable_sizes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::set_sizes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_sizes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::set_sizes(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_sizes()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::set_sizes(int index, absl::string_view value) {
  _internal_mutable_sizes()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::add_sizes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::add_sizes(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::add_sizes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::add_sizes(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline void GetProgramListRes::add_sizes(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_sizes()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetProgramListRes::sizes() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
  return _internal_sizes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetProgramListRes::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetProgramListRes.sizes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sizes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetProgramListRes::_internal_sizes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sizes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetProgramListRes::_internal_mutable_sizes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sizes_;
}

// repeated string modified_dates = 3;
inline int GetProgramListRes::_internal_modified_dates_size() const {
  return _internal_modified_dates().size();
}
inline int GetProgramListRes::modified_dates_size() const {
  return _internal_modified_dates_size();
}
inline void GetProgramListRes::clear_modified_dates() {
  _internal_mutable_modified_dates()->Clear();
}
inline std::string* GetProgramListRes::add_modified_dates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_modified_dates()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
  return _s;
}
inline const std::string& GetProgramListRes::modified_dates(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
  return _internal_modified_dates().Get(index);
}
inline std::string* GetProgramListRes::mutable_modified_dates(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
  return _internal_mutable_modified_dates()->Mutable(index);
}
inline void GetProgramListRes::set_modified_dates(int index, const std::string& value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::set_modified_dates(int index, std::string&& value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::set_modified_dates(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_modified_dates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::set_modified_dates(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::set_modified_dates(int index, absl::string_view value) {
  _internal_mutable_modified_dates()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::add_modified_dates(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::add_modified_dates(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::add_modified_dates(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::add_modified_dates(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline void GetProgramListRes::add_modified_dates(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_modified_dates()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetProgramListRes::modified_dates() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
  return _internal_modified_dates();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetProgramListRes::mutable_modified_dates() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetProgramListRes.modified_dates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_modified_dates();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetProgramListRes::_internal_modified_dates() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modified_dates_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetProgramListRes::_internal_mutable_modified_dates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.modified_dates_;
}

// string msg = 100;
inline void GetProgramListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetProgramListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetProgramListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetProgramListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetProgramListRes.msg)
}
inline std::string* GetProgramListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetProgramListRes.msg)
  return _s;
}
inline const std::string& GetProgramListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetProgramListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetProgramListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetProgramListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetProgramListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetProgramListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetProgramListRes.msg)
}

// -------------------------------------------------------------------

// PlayProgramReq

// string file_dir = 1;
inline void PlayProgramReq::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& PlayProgramReq::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayProgramReq.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayProgramReq::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayProgramReq.file_dir)
}
inline std::string* PlayProgramReq::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PlayProgramReq.file_dir)
  return _s;
}
inline const std::string& PlayProgramReq::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void PlayProgramReq::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayProgramReq::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayProgramReq::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PlayProgramReq.file_dir)
  return _impl_.file_dir_.Release();
}
inline void PlayProgramReq::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PlayProgramReq.file_dir)
}

// -------------------------------------------------------------------

// PlayProgramRes

// string msg = 100;
inline void PlayProgramRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& PlayProgramRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayProgramRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayProgramRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayProgramRes.msg)
}
inline std::string* PlayProgramRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PlayProgramRes.msg)
  return _s;
}
inline const std::string& PlayProgramRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void PlayProgramRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayProgramRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayProgramRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PlayProgramRes.msg)
  return _impl_.msg_.Release();
}
inline void PlayProgramRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PlayProgramRes.msg)
}

// -------------------------------------------------------------------

// PlayIndexProgramReq

// int32 index = 1;
inline void PlayIndexProgramReq::clear_index() {
  _impl_.index_ = 0;
}
inline ::int32_t PlayIndexProgramReq::index() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayIndexProgramReq.index)
  return _internal_index();
}
inline void PlayIndexProgramReq::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayIndexProgramReq.index)
}
inline ::int32_t PlayIndexProgramReq::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void PlayIndexProgramReq::_internal_set_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// PlayIndexProgramRes

// string msg = 100;
inline void PlayIndexProgramRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& PlayIndexProgramRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayIndexProgramRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayIndexProgramRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayIndexProgramRes.msg)
}
inline std::string* PlayIndexProgramRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PlayIndexProgramRes.msg)
  return _s;
}
inline const std::string& PlayIndexProgramRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void PlayIndexProgramRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayIndexProgramRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayIndexProgramRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PlayIndexProgramRes.msg)
  return _impl_.msg_.Release();
}
inline void PlayIndexProgramRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PlayIndexProgramRes.msg)
}

// -------------------------------------------------------------------

// PlayProgramLineReq

// string file_dir = 1;
inline void PlayProgramLineReq::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& PlayProgramLineReq::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayProgramLineReq.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayProgramLineReq::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayProgramLineReq.file_dir)
}
inline std::string* PlayProgramLineReq::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PlayProgramLineReq.file_dir)
  return _s;
}
inline const std::string& PlayProgramLineReq::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void PlayProgramLineReq::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayProgramLineReq::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayProgramLineReq::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PlayProgramLineReq.file_dir)
  return _impl_.file_dir_.Release();
}
inline void PlayProgramLineReq::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PlayProgramLineReq.file_dir)
}

// string start_line = 2;
inline void PlayProgramLineReq::clear_start_line() {
  _impl_.start_line_.ClearToEmpty();
}
inline const std::string& PlayProgramLineReq::start_line() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayProgramLineReq.start_line)
  return _internal_start_line();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayProgramLineReq::set_start_line(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_line_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayProgramLineReq.start_line)
}
inline std::string* PlayProgramLineReq::mutable_start_line() {
  std::string* _s = _internal_mutable_start_line();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PlayProgramLineReq.start_line)
  return _s;
}
inline const std::string& PlayProgramLineReq::_internal_start_line() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_line_.Get();
}
inline void PlayProgramLineReq::_internal_set_start_line(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_line_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayProgramLineReq::_internal_mutable_start_line() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.start_line_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayProgramLineReq::release_start_line() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PlayProgramLineReq.start_line)
  return _impl_.start_line_.Release();
}
inline void PlayProgramLineReq::set_allocated_start_line(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_line_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.start_line_.IsDefault()) {
          _impl_.start_line_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PlayProgramLineReq.start_line)
}

// -------------------------------------------------------------------

// PlayProgramLineRes

// string msg = 100;
inline void PlayProgramLineRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& PlayProgramLineRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayProgramLineRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayProgramLineRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayProgramLineRes.msg)
}
inline std::string* PlayProgramLineRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PlayProgramLineRes.msg)
  return _s;
}
inline const std::string& PlayProgramLineRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void PlayProgramLineRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayProgramLineRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayProgramLineRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PlayProgramLineRes.msg)
  return _impl_.msg_.Release();
}
inline void PlayProgramLineRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PlayProgramLineRes.msg)
}

// -------------------------------------------------------------------

// ResumeProgramReq

// -------------------------------------------------------------------

// ResumeProgramRes

// string msg = 100;
inline void ResumeProgramRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& ResumeProgramRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ResumeProgramRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResumeProgramRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ResumeProgramRes.msg)
}
inline std::string* ResumeProgramRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ResumeProgramRes.msg)
  return _s;
}
inline const std::string& ResumeProgramRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void ResumeProgramRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* ResumeProgramRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* ResumeProgramRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ResumeProgramRes.msg)
  return _impl_.msg_.Release();
}
inline void ResumeProgramRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ResumeProgramRes.msg)
}

// -------------------------------------------------------------------

// StopProgramReq

// -------------------------------------------------------------------

// StopProgramRes

// string msg = 100;
inline void StopProgramRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& StopProgramRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.StopProgramRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StopProgramRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.StopProgramRes.msg)
}
inline std::string* StopProgramRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.StopProgramRes.msg)
  return _s;
}
inline const std::string& StopProgramRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void StopProgramRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* StopProgramRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* StopProgramRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.StopProgramRes.msg)
  return _impl_.msg_.Release();
}
inline void StopProgramRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.StopProgramRes.msg)
}

// -------------------------------------------------------------------

// PauseProgramReq

// -------------------------------------------------------------------

// PauseProgramRes

// string msg = 100;
inline void PauseProgramRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& PauseProgramRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PauseProgramRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PauseProgramRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PauseProgramRes.msg)
}
inline std::string* PauseProgramRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PauseProgramRes.msg)
  return _s;
}
inline const std::string& PauseProgramRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void PauseProgramRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* PauseProgramRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* PauseProgramRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PauseProgramRes.msg)
  return _impl_.msg_.Release();
}
inline void PauseProgramRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PauseProgramRes.msg)
}

// -------------------------------------------------------------------

// SetJointControlGainReq

// repeated float kp = 1;
inline int SetJointControlGainReq::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int SetJointControlGainReq::kp_size() const {
  return _internal_kp_size();
}
inline void SetJointControlGainReq::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float SetJointControlGainReq::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kp)
  return _internal_kp().Get(index);
}
inline void SetJointControlGainReq::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kp)
}
inline void SetJointControlGainReq::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kp)
}
inline const ::google::protobuf::RepeatedField<float>& SetJointControlGainReq::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* SetJointControlGainReq::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& SetJointControlGainReq::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* SetJointControlGainReq::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int SetJointControlGainReq::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int SetJointControlGainReq::kv_size() const {
  return _internal_kv_size();
}
inline void SetJointControlGainReq::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float SetJointControlGainReq::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kv)
  return _internal_kv().Get(index);
}
inline void SetJointControlGainReq::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kv)
}
inline void SetJointControlGainReq::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kv)
}
inline const ::google::protobuf::RepeatedField<float>& SetJointControlGainReq::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* SetJointControlGainReq::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& SetJointControlGainReq::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* SetJointControlGainReq::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int SetJointControlGainReq::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int SetJointControlGainReq::kl2_size() const {
  return _internal_kl2_size();
}
inline void SetJointControlGainReq::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float SetJointControlGainReq::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kl2)
  return _internal_kl2().Get(index);
}
inline void SetJointControlGainReq::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kl2)
}
inline void SetJointControlGainReq::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& SetJointControlGainReq::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* SetJointControlGainReq::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetJointControlGainReq.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& SetJointControlGainReq::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* SetJointControlGainReq::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// -------------------------------------------------------------------

// SetJointControlGainRes

// string msg = 100;
inline void SetJointControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetJointControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetJointControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetJointControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetJointControlGainRes.msg)
}
inline std::string* SetJointControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetJointControlGainRes.msg)
  return _s;
}
inline const std::string& SetJointControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetJointControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetJointControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetJointControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetJointControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void SetJointControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetJointControlGainRes.msg)
}

// -------------------------------------------------------------------

// GetJointControlGainReq

// -------------------------------------------------------------------

// GetJointControlGainRes

// repeated float kp = 1;
inline int GetJointControlGainRes::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int GetJointControlGainRes::kp_size() const {
  return _internal_kp_size();
}
inline void GetJointControlGainRes::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float GetJointControlGainRes::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kp)
  return _internal_kp().Get(index);
}
inline void GetJointControlGainRes::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kp)
}
inline void GetJointControlGainRes::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kp)
}
inline const ::google::protobuf::RepeatedField<float>& GetJointControlGainRes::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* GetJointControlGainRes::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& GetJointControlGainRes::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* GetJointControlGainRes::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int GetJointControlGainRes::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int GetJointControlGainRes::kv_size() const {
  return _internal_kv_size();
}
inline void GetJointControlGainRes::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float GetJointControlGainRes::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kv)
  return _internal_kv().Get(index);
}
inline void GetJointControlGainRes::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kv)
}
inline void GetJointControlGainRes::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kv)
}
inline const ::google::protobuf::RepeatedField<float>& GetJointControlGainRes::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* GetJointControlGainRes::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& GetJointControlGainRes::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* GetJointControlGainRes::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int GetJointControlGainRes::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int GetJointControlGainRes::kl2_size() const {
  return _internal_kl2_size();
}
inline void GetJointControlGainRes::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float GetJointControlGainRes::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kl2)
  return _internal_kl2().Get(index);
}
inline void GetJointControlGainRes::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kl2)
}
inline void GetJointControlGainRes::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& GetJointControlGainRes::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* GetJointControlGainRes::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetJointControlGainRes.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& GetJointControlGainRes::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* GetJointControlGainRes::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// string msg = 100;
inline void GetJointControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetJointControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetJointControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetJointControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetJointControlGainRes.msg)
}
inline std::string* GetJointControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetJointControlGainRes.msg)
  return _s;
}
inline const std::string& GetJointControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetJointControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetJointControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetJointControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetJointControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void GetJointControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetJointControlGainRes.msg)
}

// -------------------------------------------------------------------

// SetTaskControlGainReq

// repeated float kp = 1;
inline int SetTaskControlGainReq::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int SetTaskControlGainReq::kp_size() const {
  return _internal_kp_size();
}
inline void SetTaskControlGainReq::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float SetTaskControlGainReq::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kp)
  return _internal_kp().Get(index);
}
inline void SetTaskControlGainReq::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kp)
}
inline void SetTaskControlGainReq::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kp)
}
inline const ::google::protobuf::RepeatedField<float>& SetTaskControlGainReq::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* SetTaskControlGainReq::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& SetTaskControlGainReq::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* SetTaskControlGainReq::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int SetTaskControlGainReq::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int SetTaskControlGainReq::kv_size() const {
  return _internal_kv_size();
}
inline void SetTaskControlGainReq::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float SetTaskControlGainReq::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kv)
  return _internal_kv().Get(index);
}
inline void SetTaskControlGainReq::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kv)
}
inline void SetTaskControlGainReq::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kv)
}
inline const ::google::protobuf::RepeatedField<float>& SetTaskControlGainReq::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* SetTaskControlGainReq::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& SetTaskControlGainReq::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* SetTaskControlGainReq::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int SetTaskControlGainReq::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int SetTaskControlGainReq::kl2_size() const {
  return _internal_kl2_size();
}
inline void SetTaskControlGainReq::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float SetTaskControlGainReq::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kl2)
  return _internal_kl2().Get(index);
}
inline void SetTaskControlGainReq::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kl2)
}
inline void SetTaskControlGainReq::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& SetTaskControlGainReq::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* SetTaskControlGainReq::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetTaskControlGainReq.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& SetTaskControlGainReq::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* SetTaskControlGainReq::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// -------------------------------------------------------------------

// SetTaskControlGainRes

// string msg = 100;
inline void SetTaskControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetTaskControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetTaskControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetTaskControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetTaskControlGainRes.msg)
}
inline std::string* SetTaskControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetTaskControlGainRes.msg)
  return _s;
}
inline const std::string& SetTaskControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetTaskControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetTaskControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetTaskControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetTaskControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void SetTaskControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetTaskControlGainRes.msg)
}

// -------------------------------------------------------------------

// GetTaskControlGainReq

// -------------------------------------------------------------------

// GetTaskControlGainRes

// repeated float kp = 1;
inline int GetTaskControlGainRes::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int GetTaskControlGainRes::kp_size() const {
  return _internal_kp_size();
}
inline void GetTaskControlGainRes::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float GetTaskControlGainRes::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kp)
  return _internal_kp().Get(index);
}
inline void GetTaskControlGainRes::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kp)
}
inline void GetTaskControlGainRes::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kp)
}
inline const ::google::protobuf::RepeatedField<float>& GetTaskControlGainRes::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* GetTaskControlGainRes::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& GetTaskControlGainRes::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* GetTaskControlGainRes::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int GetTaskControlGainRes::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int GetTaskControlGainRes::kv_size() const {
  return _internal_kv_size();
}
inline void GetTaskControlGainRes::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float GetTaskControlGainRes::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kv)
  return _internal_kv().Get(index);
}
inline void GetTaskControlGainRes::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kv)
}
inline void GetTaskControlGainRes::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kv)
}
inline const ::google::protobuf::RepeatedField<float>& GetTaskControlGainRes::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* GetTaskControlGainRes::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& GetTaskControlGainRes::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* GetTaskControlGainRes::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int GetTaskControlGainRes::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int GetTaskControlGainRes::kl2_size() const {
  return _internal_kl2_size();
}
inline void GetTaskControlGainRes::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float GetTaskControlGainRes::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kl2)
  return _internal_kl2().Get(index);
}
inline void GetTaskControlGainRes::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kl2)
}
inline void GetTaskControlGainRes::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& GetTaskControlGainRes::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* GetTaskControlGainRes::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& GetTaskControlGainRes::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* GetTaskControlGainRes::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// string msg = 100;
inline void GetTaskControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetTaskControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTaskControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.msg)
}
inline std::string* GetTaskControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.msg)
  return _s;
}
inline const std::string& GetTaskControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetTaskControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetTaskControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetTaskControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void GetTaskControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetTaskControlGainRes.msg)
}

// -------------------------------------------------------------------

// SetImpedanceControlGainReq

// repeated float mass = 1;
inline int SetImpedanceControlGainReq::_internal_mass_size() const {
  return _internal_mass().size();
}
inline int SetImpedanceControlGainReq::mass_size() const {
  return _internal_mass_size();
}
inline void SetImpedanceControlGainReq::clear_mass() {
  _internal_mutable_mass()->Clear();
}
inline float SetImpedanceControlGainReq::mass(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.mass)
  return _internal_mass().Get(index);
}
inline void SetImpedanceControlGainReq::set_mass(int index, float value) {
  _internal_mutable_mass()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.mass)
}
inline void SetImpedanceControlGainReq::add_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_mass()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.mass)
}
inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::mass() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.mass)
  return _internal_mass();
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::mutable_mass() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.mass)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_mass();
}

inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::_internal_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mass_;
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::_internal_mutable_mass() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.mass_;
}

// repeated float damping = 2;
inline int SetImpedanceControlGainReq::_internal_damping_size() const {
  return _internal_damping().size();
}
inline int SetImpedanceControlGainReq::damping_size() const {
  return _internal_damping_size();
}
inline void SetImpedanceControlGainReq::clear_damping() {
  _internal_mutable_damping()->Clear();
}
inline float SetImpedanceControlGainReq::damping(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.damping)
  return _internal_damping().Get(index);
}
inline void SetImpedanceControlGainReq::set_damping(int index, float value) {
  _internal_mutable_damping()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.damping)
}
inline void SetImpedanceControlGainReq::add_damping(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_damping()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.damping)
}
inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::damping() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.damping)
  return _internal_damping();
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::mutable_damping() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.damping)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_damping();
}

inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::_internal_damping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.damping_;
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::_internal_mutable_damping() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.damping_;
}

// repeated float stiffness = 3;
inline int SetImpedanceControlGainReq::_internal_stiffness_size() const {
  return _internal_stiffness().size();
}
inline int SetImpedanceControlGainReq::stiffness_size() const {
  return _internal_stiffness_size();
}
inline void SetImpedanceControlGainReq::clear_stiffness() {
  _internal_mutable_stiffness()->Clear();
}
inline float SetImpedanceControlGainReq::stiffness(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.stiffness)
  return _internal_stiffness().Get(index);
}
inline void SetImpedanceControlGainReq::set_stiffness(int index, float value) {
  _internal_mutable_stiffness()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.stiffness)
}
inline void SetImpedanceControlGainReq::add_stiffness(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_stiffness()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.stiffness)
}
inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::stiffness() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.stiffness)
  return _internal_stiffness();
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::mutable_stiffness() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.stiffness)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stiffness();
}

inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::_internal_stiffness() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stiffness_;
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::_internal_mutable_stiffness() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stiffness_;
}

// repeated float kl2 = 4;
inline int SetImpedanceControlGainReq::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int SetImpedanceControlGainReq::kl2_size() const {
  return _internal_kl2_size();
}
inline void SetImpedanceControlGainReq::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float SetImpedanceControlGainReq::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.kl2)
  return _internal_kl2().Get(index);
}
inline void SetImpedanceControlGainReq::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.kl2)
}
inline void SetImpedanceControlGainReq::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& SetImpedanceControlGainReq::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* SetImpedanceControlGainReq::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// string msg = 100;
inline void SetImpedanceControlGainReq::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetImpedanceControlGainReq::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetImpedanceControlGainReq::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.msg)
}
inline std::string* SetImpedanceControlGainReq::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.msg)
  return _s;
}
inline const std::string& SetImpedanceControlGainReq::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetImpedanceControlGainReq::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetImpedanceControlGainReq::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetImpedanceControlGainReq::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.msg)
  return _impl_.msg_.Release();
}
inline void SetImpedanceControlGainReq::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetImpedanceControlGainReq.msg)
}

// -------------------------------------------------------------------

// SetImpedanceControlGainRes

// string msg = 100;
inline void SetImpedanceControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetImpedanceControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetImpedanceControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes.msg)
}
inline std::string* SetImpedanceControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes.msg)
  return _s;
}
inline const std::string& SetImpedanceControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetImpedanceControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetImpedanceControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetImpedanceControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void SetImpedanceControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetImpedanceControlGainRes.msg)
}

// -------------------------------------------------------------------

// GetImpedanceControlGainReq

// -------------------------------------------------------------------

// GetImpedanceControlGainRes

// repeated float mass = 1;
inline int GetImpedanceControlGainRes::_internal_mass_size() const {
  return _internal_mass().size();
}
inline int GetImpedanceControlGainRes::mass_size() const {
  return _internal_mass_size();
}
inline void GetImpedanceControlGainRes::clear_mass() {
  _internal_mutable_mass()->Clear();
}
inline float GetImpedanceControlGainRes::mass(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.mass)
  return _internal_mass().Get(index);
}
inline void GetImpedanceControlGainRes::set_mass(int index, float value) {
  _internal_mutable_mass()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.mass)
}
inline void GetImpedanceControlGainRes::add_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_mass()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.mass)
}
inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::mass() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.mass)
  return _internal_mass();
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::mutable_mass() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.mass)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_mass();
}

inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::_internal_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mass_;
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::_internal_mutable_mass() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.mass_;
}

// repeated float damping = 2;
inline int GetImpedanceControlGainRes::_internal_damping_size() const {
  return _internal_damping().size();
}
inline int GetImpedanceControlGainRes::damping_size() const {
  return _internal_damping_size();
}
inline void GetImpedanceControlGainRes::clear_damping() {
  _internal_mutable_damping()->Clear();
}
inline float GetImpedanceControlGainRes::damping(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.damping)
  return _internal_damping().Get(index);
}
inline void GetImpedanceControlGainRes::set_damping(int index, float value) {
  _internal_mutable_damping()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.damping)
}
inline void GetImpedanceControlGainRes::add_damping(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_damping()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.damping)
}
inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::damping() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.damping)
  return _internal_damping();
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::mutable_damping() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.damping)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_damping();
}

inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::_internal_damping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.damping_;
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::_internal_mutable_damping() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.damping_;
}

// repeated float stiffness = 3;
inline int GetImpedanceControlGainRes::_internal_stiffness_size() const {
  return _internal_stiffness().size();
}
inline int GetImpedanceControlGainRes::stiffness_size() const {
  return _internal_stiffness_size();
}
inline void GetImpedanceControlGainRes::clear_stiffness() {
  _internal_mutable_stiffness()->Clear();
}
inline float GetImpedanceControlGainRes::stiffness(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.stiffness)
  return _internal_stiffness().Get(index);
}
inline void GetImpedanceControlGainRes::set_stiffness(int index, float value) {
  _internal_mutable_stiffness()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.stiffness)
}
inline void GetImpedanceControlGainRes::add_stiffness(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_stiffness()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.stiffness)
}
inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::stiffness() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.stiffness)
  return _internal_stiffness();
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::mutable_stiffness() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.stiffness)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stiffness();
}

inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::_internal_stiffness() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stiffness_;
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::_internal_mutable_stiffness() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stiffness_;
}

// repeated float kl2 = 4;
inline int GetImpedanceControlGainRes::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int GetImpedanceControlGainRes::kl2_size() const {
  return _internal_kl2_size();
}
inline void GetImpedanceControlGainRes::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float GetImpedanceControlGainRes::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.kl2)
  return _internal_kl2().Get(index);
}
inline void GetImpedanceControlGainRes::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.kl2)
}
inline void GetImpedanceControlGainRes::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& GetImpedanceControlGainRes::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* GetImpedanceControlGainRes::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// string msg = 100;
inline void GetImpedanceControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetImpedanceControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetImpedanceControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.msg)
}
inline std::string* GetImpedanceControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.msg)
  return _s;
}
inline const std::string& GetImpedanceControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetImpedanceControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetImpedanceControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetImpedanceControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void GetImpedanceControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetImpedanceControlGainRes.msg)
}

// -------------------------------------------------------------------

// SetForceControlGainReq

// repeated float kp = 1;
inline int SetForceControlGainReq::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int SetForceControlGainReq::kp_size() const {
  return _internal_kp_size();
}
inline void SetForceControlGainReq::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float SetForceControlGainReq::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kp)
  return _internal_kp().Get(index);
}
inline void SetForceControlGainReq::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kp)
}
inline void SetForceControlGainReq::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kp)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int SetForceControlGainReq::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int SetForceControlGainReq::kv_size() const {
  return _internal_kv_size();
}
inline void SetForceControlGainReq::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float SetForceControlGainReq::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kv)
  return _internal_kv().Get(index);
}
inline void SetForceControlGainReq::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kv)
}
inline void SetForceControlGainReq::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kv)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int SetForceControlGainReq::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int SetForceControlGainReq::kl2_size() const {
  return _internal_kl2_size();
}
inline void SetForceControlGainReq::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float SetForceControlGainReq::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kl2)
  return _internal_kl2().Get(index);
}
inline void SetForceControlGainReq::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kl2)
}
inline void SetForceControlGainReq::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// repeated float mass = 4;
inline int SetForceControlGainReq::_internal_mass_size() const {
  return _internal_mass().size();
}
inline int SetForceControlGainReq::mass_size() const {
  return _internal_mass_size();
}
inline void SetForceControlGainReq::clear_mass() {
  _internal_mutable_mass()->Clear();
}
inline float SetForceControlGainReq::mass(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.mass)
  return _internal_mass().Get(index);
}
inline void SetForceControlGainReq::set_mass(int index, float value) {
  _internal_mutable_mass()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.mass)
}
inline void SetForceControlGainReq::add_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_mass()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.mass)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::mass() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.mass)
  return _internal_mass();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_mass() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.mass)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_mass();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mass_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_mass() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.mass_;
}

// repeated float damping = 5;
inline int SetForceControlGainReq::_internal_damping_size() const {
  return _internal_damping().size();
}
inline int SetForceControlGainReq::damping_size() const {
  return _internal_damping_size();
}
inline void SetForceControlGainReq::clear_damping() {
  _internal_mutable_damping()->Clear();
}
inline float SetForceControlGainReq::damping(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.damping)
  return _internal_damping().Get(index);
}
inline void SetForceControlGainReq::set_damping(int index, float value) {
  _internal_mutable_damping()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.damping)
}
inline void SetForceControlGainReq::add_damping(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_damping()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.damping)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::damping() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.damping)
  return _internal_damping();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_damping() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.damping)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_damping();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_damping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.damping_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_damping() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.damping_;
}

// repeated float stiffness = 6;
inline int SetForceControlGainReq::_internal_stiffness_size() const {
  return _internal_stiffness().size();
}
inline int SetForceControlGainReq::stiffness_size() const {
  return _internal_stiffness_size();
}
inline void SetForceControlGainReq::clear_stiffness() {
  _internal_mutable_stiffness()->Clear();
}
inline float SetForceControlGainReq::stiffness(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.stiffness)
  return _internal_stiffness().Get(index);
}
inline void SetForceControlGainReq::set_stiffness(int index, float value) {
  _internal_mutable_stiffness()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.stiffness)
}
inline void SetForceControlGainReq::add_stiffness(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_stiffness()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.stiffness)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::stiffness() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.stiffness)
  return _internal_stiffness();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_stiffness() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.stiffness)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stiffness();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_stiffness() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stiffness_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_stiffness() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stiffness_;
}

// repeated float kpf = 7;
inline int SetForceControlGainReq::_internal_kpf_size() const {
  return _internal_kpf().size();
}
inline int SetForceControlGainReq::kpf_size() const {
  return _internal_kpf_size();
}
inline void SetForceControlGainReq::clear_kpf() {
  _internal_mutable_kpf()->Clear();
}
inline float SetForceControlGainReq::kpf(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kpf)
  return _internal_kpf().Get(index);
}
inline void SetForceControlGainReq::set_kpf(int index, float value) {
  _internal_mutable_kpf()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kpf)
}
inline void SetForceControlGainReq::add_kpf(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kpf()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kpf)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::kpf() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kpf)
  return _internal_kpf();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_kpf() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kpf)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kpf();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_kpf() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kpf_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_kpf() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kpf_;
}

// repeated float kif = 8;
inline int SetForceControlGainReq::_internal_kif_size() const {
  return _internal_kif().size();
}
inline int SetForceControlGainReq::kif_size() const {
  return _internal_kif_size();
}
inline void SetForceControlGainReq::clear_kif() {
  _internal_mutable_kif()->Clear();
}
inline float SetForceControlGainReq::kif(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kif)
  return _internal_kif().Get(index);
}
inline void SetForceControlGainReq::set_kif(int index, float value) {
  _internal_mutable_kif()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kif)
}
inline void SetForceControlGainReq::add_kif(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kif()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kif)
}
inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::kif() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kif)
  return _internal_kif();
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::mutable_kif() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetForceControlGainReq.kif)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kif();
}

inline const ::google::protobuf::RepeatedField<float>& SetForceControlGainReq::_internal_kif() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kif_;
}
inline ::google::protobuf::RepeatedField<float>* SetForceControlGainReq::_internal_mutable_kif() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kif_;
}

// string msg = 100;
inline void SetForceControlGainReq::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetForceControlGainReq::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainReq.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetForceControlGainReq::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainReq.msg)
}
inline std::string* SetForceControlGainReq::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetForceControlGainReq.msg)
  return _s;
}
inline const std::string& SetForceControlGainReq::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetForceControlGainReq::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetForceControlGainReq::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetForceControlGainReq::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetForceControlGainReq.msg)
  return _impl_.msg_.Release();
}
inline void SetForceControlGainReq::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetForceControlGainReq.msg)
}

// -------------------------------------------------------------------

// SetForceControlGainRes

// string msg = 100;
inline void SetForceControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetForceControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetForceControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetForceControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetForceControlGainRes.msg)
}
inline std::string* SetForceControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetForceControlGainRes.msg)
  return _s;
}
inline const std::string& SetForceControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetForceControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetForceControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetForceControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetForceControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void SetForceControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetForceControlGainRes.msg)
}

// -------------------------------------------------------------------

// SetExtAxisControlGainReq

// repeated float kp = 1;
inline int SetExtAxisControlGainReq::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int SetExtAxisControlGainReq::kp_size() const {
  return _internal_kp_size();
}
inline void SetExtAxisControlGainReq::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float SetExtAxisControlGainReq::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kp)
  return _internal_kp().Get(index);
}
inline void SetExtAxisControlGainReq::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kp)
}
inline void SetExtAxisControlGainReq::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kp)
}
inline const ::google::protobuf::RepeatedField<float>& SetExtAxisControlGainReq::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* SetExtAxisControlGainReq::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& SetExtAxisControlGainReq::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* SetExtAxisControlGainReq::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int SetExtAxisControlGainReq::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int SetExtAxisControlGainReq::kv_size() const {
  return _internal_kv_size();
}
inline void SetExtAxisControlGainReq::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float SetExtAxisControlGainReq::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kv)
  return _internal_kv().Get(index);
}
inline void SetExtAxisControlGainReq::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kv)
}
inline void SetExtAxisControlGainReq::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kv)
}
inline const ::google::protobuf::RepeatedField<float>& SetExtAxisControlGainReq::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* SetExtAxisControlGainReq::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& SetExtAxisControlGainReq::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* SetExtAxisControlGainReq::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int SetExtAxisControlGainReq::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int SetExtAxisControlGainReq::kl2_size() const {
  return _internal_kl2_size();
}
inline void SetExtAxisControlGainReq::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float SetExtAxisControlGainReq::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kl2)
  return _internal_kl2().Get(index);
}
inline void SetExtAxisControlGainReq::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kl2)
}
inline void SetExtAxisControlGainReq::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& SetExtAxisControlGainReq::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* SetExtAxisControlGainReq::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& SetExtAxisControlGainReq::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* SetExtAxisControlGainReq::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// string msg = 100;
inline void SetExtAxisControlGainReq::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetExtAxisControlGainReq::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetExtAxisControlGainReq::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.msg)
}
inline std::string* SetExtAxisControlGainReq::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.msg)
  return _s;
}
inline const std::string& SetExtAxisControlGainReq::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetExtAxisControlGainReq::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetExtAxisControlGainReq::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetExtAxisControlGainReq::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.msg)
  return _impl_.msg_.Release();
}
inline void SetExtAxisControlGainReq::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetExtAxisControlGainReq.msg)
}

// -------------------------------------------------------------------

// SetExtAxisControlGainRes

// string msg = 100;
inline void SetExtAxisControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetExtAxisControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetExtAxisControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes.msg)
}
inline std::string* SetExtAxisControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes.msg)
  return _s;
}
inline const std::string& SetExtAxisControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetExtAxisControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetExtAxisControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetExtAxisControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void SetExtAxisControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetExtAxisControlGainRes.msg)
}

// -------------------------------------------------------------------

// GetForceControlGainReq

// -------------------------------------------------------------------

// GetForceControlGainRes

// repeated float kp = 1;
inline int GetForceControlGainRes::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int GetForceControlGainRes::kp_size() const {
  return _internal_kp_size();
}
inline void GetForceControlGainRes::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float GetForceControlGainRes::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kp)
  return _internal_kp().Get(index);
}
inline void GetForceControlGainRes::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kp)
}
inline void GetForceControlGainRes::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kp)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int GetForceControlGainRes::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int GetForceControlGainRes::kv_size() const {
  return _internal_kv_size();
}
inline void GetForceControlGainRes::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float GetForceControlGainRes::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kv)
  return _internal_kv().Get(index);
}
inline void GetForceControlGainRes::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kv)
}
inline void GetForceControlGainRes::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kv)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int GetForceControlGainRes::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int GetForceControlGainRes::kl2_size() const {
  return _internal_kl2_size();
}
inline void GetForceControlGainRes::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float GetForceControlGainRes::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kl2)
  return _internal_kl2().Get(index);
}
inline void GetForceControlGainRes::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kl2)
}
inline void GetForceControlGainRes::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// repeated float mass = 4;
inline int GetForceControlGainRes::_internal_mass_size() const {
  return _internal_mass().size();
}
inline int GetForceControlGainRes::mass_size() const {
  return _internal_mass_size();
}
inline void GetForceControlGainRes::clear_mass() {
  _internal_mutable_mass()->Clear();
}
inline float GetForceControlGainRes::mass(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.mass)
  return _internal_mass().Get(index);
}
inline void GetForceControlGainRes::set_mass(int index, float value) {
  _internal_mutable_mass()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.mass)
}
inline void GetForceControlGainRes::add_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_mass()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.mass)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::mass() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.mass)
  return _internal_mass();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_mass() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.mass)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_mass();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mass_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_mass() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.mass_;
}

// repeated float damping = 5;
inline int GetForceControlGainRes::_internal_damping_size() const {
  return _internal_damping().size();
}
inline int GetForceControlGainRes::damping_size() const {
  return _internal_damping_size();
}
inline void GetForceControlGainRes::clear_damping() {
  _internal_mutable_damping()->Clear();
}
inline float GetForceControlGainRes::damping(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.damping)
  return _internal_damping().Get(index);
}
inline void GetForceControlGainRes::set_damping(int index, float value) {
  _internal_mutable_damping()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.damping)
}
inline void GetForceControlGainRes::add_damping(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_damping()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.damping)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::damping() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.damping)
  return _internal_damping();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_damping() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.damping)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_damping();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_damping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.damping_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_damping() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.damping_;
}

// repeated float stiffness = 6;
inline int GetForceControlGainRes::_internal_stiffness_size() const {
  return _internal_stiffness().size();
}
inline int GetForceControlGainRes::stiffness_size() const {
  return _internal_stiffness_size();
}
inline void GetForceControlGainRes::clear_stiffness() {
  _internal_mutable_stiffness()->Clear();
}
inline float GetForceControlGainRes::stiffness(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.stiffness)
  return _internal_stiffness().Get(index);
}
inline void GetForceControlGainRes::set_stiffness(int index, float value) {
  _internal_mutable_stiffness()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.stiffness)
}
inline void GetForceControlGainRes::add_stiffness(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_stiffness()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.stiffness)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::stiffness() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.stiffness)
  return _internal_stiffness();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_stiffness() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.stiffness)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stiffness();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_stiffness() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stiffness_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_stiffness() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stiffness_;
}

// repeated float kpf = 7;
inline int GetForceControlGainRes::_internal_kpf_size() const {
  return _internal_kpf().size();
}
inline int GetForceControlGainRes::kpf_size() const {
  return _internal_kpf_size();
}
inline void GetForceControlGainRes::clear_kpf() {
  _internal_mutable_kpf()->Clear();
}
inline float GetForceControlGainRes::kpf(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kpf)
  return _internal_kpf().Get(index);
}
inline void GetForceControlGainRes::set_kpf(int index, float value) {
  _internal_mutable_kpf()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kpf)
}
inline void GetForceControlGainRes::add_kpf(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kpf()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kpf)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::kpf() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kpf)
  return _internal_kpf();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_kpf() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kpf)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kpf();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_kpf() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kpf_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_kpf() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kpf_;
}

// repeated float kif = 8;
inline int GetForceControlGainRes::_internal_kif_size() const {
  return _internal_kif().size();
}
inline int GetForceControlGainRes::kif_size() const {
  return _internal_kif_size();
}
inline void GetForceControlGainRes::clear_kif() {
  _internal_mutable_kif()->Clear();
}
inline float GetForceControlGainRes::kif(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kif)
  return _internal_kif().Get(index);
}
inline void GetForceControlGainRes::set_kif(int index, float value) {
  _internal_mutable_kif()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kif)
}
inline void GetForceControlGainRes::add_kif(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kif()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kif)
}
inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::kif() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kif)
  return _internal_kif();
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::mutable_kif() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetForceControlGainRes.kif)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kif();
}

inline const ::google::protobuf::RepeatedField<float>& GetForceControlGainRes::_internal_kif() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kif_;
}
inline ::google::protobuf::RepeatedField<float>* GetForceControlGainRes::_internal_mutable_kif() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kif_;
}

// string msg = 100;
inline void GetForceControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetForceControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetForceControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetForceControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetForceControlGainRes.msg)
}
inline std::string* GetForceControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetForceControlGainRes.msg)
  return _s;
}
inline const std::string& GetForceControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetForceControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetForceControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetForceControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetForceControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void GetForceControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetForceControlGainRes.msg)
}

// -------------------------------------------------------------------

// GetExtAxisControlGainReq

// -------------------------------------------------------------------

// GetExtAxisControlGainRes

// repeated float kp = 1;
inline int GetExtAxisControlGainRes::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int GetExtAxisControlGainRes::kp_size() const {
  return _internal_kp_size();
}
inline void GetExtAxisControlGainRes::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float GetExtAxisControlGainRes::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kp)
  return _internal_kp().Get(index);
}
inline void GetExtAxisControlGainRes::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kp)
}
inline void GetExtAxisControlGainRes::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kp)
}
inline const ::google::protobuf::RepeatedField<float>& GetExtAxisControlGainRes::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* GetExtAxisControlGainRes::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& GetExtAxisControlGainRes::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* GetExtAxisControlGainRes::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int GetExtAxisControlGainRes::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int GetExtAxisControlGainRes::kv_size() const {
  return _internal_kv_size();
}
inline void GetExtAxisControlGainRes::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float GetExtAxisControlGainRes::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kv)
  return _internal_kv().Get(index);
}
inline void GetExtAxisControlGainRes::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kv)
}
inline void GetExtAxisControlGainRes::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kv)
}
inline const ::google::protobuf::RepeatedField<float>& GetExtAxisControlGainRes::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* GetExtAxisControlGainRes::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& GetExtAxisControlGainRes::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* GetExtAxisControlGainRes::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int GetExtAxisControlGainRes::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int GetExtAxisControlGainRes::kl2_size() const {
  return _internal_kl2_size();
}
inline void GetExtAxisControlGainRes::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float GetExtAxisControlGainRes::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kl2)
  return _internal_kl2().Get(index);
}
inline void GetExtAxisControlGainRes::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kl2)
}
inline void GetExtAxisControlGainRes::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& GetExtAxisControlGainRes::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* GetExtAxisControlGainRes::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& GetExtAxisControlGainRes::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* GetExtAxisControlGainRes::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// string msg = 100;
inline void GetExtAxisControlGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetExtAxisControlGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetExtAxisControlGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.msg)
}
inline std::string* GetExtAxisControlGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.msg)
  return _s;
}
inline const std::string& GetExtAxisControlGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetExtAxisControlGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExtAxisControlGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetExtAxisControlGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.msg)
  return _impl_.msg_.Release();
}
inline void GetExtAxisControlGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetExtAxisControlGainRes.msg)
}

// -------------------------------------------------------------------

// SetSensorlessComplianceGainReq

// repeated float kp = 1;
inline int SetSensorlessComplianceGainReq::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int SetSensorlessComplianceGainReq::kp_size() const {
  return _internal_kp_size();
}
inline void SetSensorlessComplianceGainReq::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float SetSensorlessComplianceGainReq::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kp)
  return _internal_kp().Get(index);
}
inline void SetSensorlessComplianceGainReq::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kp)
}
inline void SetSensorlessComplianceGainReq::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kp)
}
inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int SetSensorlessComplianceGainReq::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int SetSensorlessComplianceGainReq::kv_size() const {
  return _internal_kv_size();
}
inline void SetSensorlessComplianceGainReq::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float SetSensorlessComplianceGainReq::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kv)
  return _internal_kv().Get(index);
}
inline void SetSensorlessComplianceGainReq::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kv)
}
inline void SetSensorlessComplianceGainReq::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kv)
}
inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int SetSensorlessComplianceGainReq::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int SetSensorlessComplianceGainReq::kl2_size() const {
  return _internal_kl2_size();
}
inline void SetSensorlessComplianceGainReq::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float SetSensorlessComplianceGainReq::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kl2)
  return _internal_kl2().Get(index);
}
inline void SetSensorlessComplianceGainReq::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kl2)
}
inline void SetSensorlessComplianceGainReq::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// repeated float kd = 4;
inline int SetSensorlessComplianceGainReq::_internal_kd_size() const {
  return _internal_kd().size();
}
inline int SetSensorlessComplianceGainReq::kd_size() const {
  return _internal_kd_size();
}
inline void SetSensorlessComplianceGainReq::clear_kd() {
  _internal_mutable_kd()->Clear();
}
inline float SetSensorlessComplianceGainReq::kd(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kd)
  return _internal_kd().Get(index);
}
inline void SetSensorlessComplianceGainReq::set_kd(int index, float value) {
  _internal_mutable_kd()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kd)
}
inline void SetSensorlessComplianceGainReq::add_kd(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kd()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kd)
}
inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::kd() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kd)
  return _internal_kd();
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::mutable_kd() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.kd)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kd();
}

inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::_internal_kd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kd_;
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::_internal_mutable_kd() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kd_;
}

// repeated float bd = 5;
inline int SetSensorlessComplianceGainReq::_internal_bd_size() const {
  return _internal_bd().size();
}
inline int SetSensorlessComplianceGainReq::bd_size() const {
  return _internal_bd_size();
}
inline void SetSensorlessComplianceGainReq::clear_bd() {
  _internal_mutable_bd()->Clear();
}
inline float SetSensorlessComplianceGainReq::bd(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.bd)
  return _internal_bd().Get(index);
}
inline void SetSensorlessComplianceGainReq::set_bd(int index, float value) {
  _internal_mutable_bd()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.bd)
}
inline void SetSensorlessComplianceGainReq::add_bd(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_bd()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.bd)
}
inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::bd() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.bd)
  return _internal_bd();
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::mutable_bd() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.bd)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bd();
}

inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::_internal_bd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bd_;
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::_internal_mutable_bd() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bd_;
}

// repeated float rate = 6;
inline int SetSensorlessComplianceGainReq::_internal_rate_size() const {
  return _internal_rate().size();
}
inline int SetSensorlessComplianceGainReq::rate_size() const {
  return _internal_rate_size();
}
inline void SetSensorlessComplianceGainReq::clear_rate() {
  _internal_mutable_rate()->Clear();
}
inline float SetSensorlessComplianceGainReq::rate(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.rate)
  return _internal_rate().Get(index);
}
inline void SetSensorlessComplianceGainReq::set_rate(int index, float value) {
  _internal_mutable_rate()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.rate)
}
inline void SetSensorlessComplianceGainReq::add_rate(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_rate()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.rate)
}
inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::rate() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.rate)
  return _internal_rate();
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::mutable_rate() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.rate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rate();
}

inline const ::google::protobuf::RepeatedField<float>& SetSensorlessComplianceGainReq::_internal_rate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rate_;
}
inline ::google::protobuf::RepeatedField<float>* SetSensorlessComplianceGainReq::_internal_mutable_rate() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rate_;
}

// string msg = 100;
inline void SetSensorlessComplianceGainReq::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetSensorlessComplianceGainReq::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetSensorlessComplianceGainReq::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.msg)
}
inline std::string* SetSensorlessComplianceGainReq::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.msg)
  return _s;
}
inline const std::string& SetSensorlessComplianceGainReq::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetSensorlessComplianceGainReq::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSensorlessComplianceGainReq::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetSensorlessComplianceGainReq::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.msg)
  return _impl_.msg_.Release();
}
inline void SetSensorlessComplianceGainReq::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainReq.msg)
}

// -------------------------------------------------------------------

// SetSensorlessComplianceGainRes

// string msg = 100;
inline void SetSensorlessComplianceGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetSensorlessComplianceGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetSensorlessComplianceGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes.msg)
}
inline std::string* SetSensorlessComplianceGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes.msg)
  return _s;
}
inline const std::string& SetSensorlessComplianceGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetSensorlessComplianceGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSensorlessComplianceGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetSensorlessComplianceGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes.msg)
  return _impl_.msg_.Release();
}
inline void SetSensorlessComplianceGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetSensorlessComplianceGainRes.msg)
}

// -------------------------------------------------------------------

// GetSensorlessComplianceGainReq

// -------------------------------------------------------------------

// GetSensorlessComplianceGainRes

// repeated float kp = 1;
inline int GetSensorlessComplianceGainRes::_internal_kp_size() const {
  return _internal_kp().size();
}
inline int GetSensorlessComplianceGainRes::kp_size() const {
  return _internal_kp_size();
}
inline void GetSensorlessComplianceGainRes::clear_kp() {
  _internal_mutable_kp()->Clear();
}
inline float GetSensorlessComplianceGainRes::kp(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kp)
  return _internal_kp().Get(index);
}
inline void GetSensorlessComplianceGainRes::set_kp(int index, float value) {
  _internal_mutable_kp()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kp)
}
inline void GetSensorlessComplianceGainRes::add_kp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kp()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kp)
}
inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::kp() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kp)
  return _internal_kp();
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::mutable_kp() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kp();
}

inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::_internal_kp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kp_;
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::_internal_mutable_kp() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kp_;
}

// repeated float kv = 2;
inline int GetSensorlessComplianceGainRes::_internal_kv_size() const {
  return _internal_kv().size();
}
inline int GetSensorlessComplianceGainRes::kv_size() const {
  return _internal_kv_size();
}
inline void GetSensorlessComplianceGainRes::clear_kv() {
  _internal_mutable_kv()->Clear();
}
inline float GetSensorlessComplianceGainRes::kv(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kv)
  return _internal_kv().Get(index);
}
inline void GetSensorlessComplianceGainRes::set_kv(int index, float value) {
  _internal_mutable_kv()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kv)
}
inline void GetSensorlessComplianceGainRes::add_kv(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kv()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kv)
}
inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::kv() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kv)
  return _internal_kv();
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kv)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kv();
}

inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::_internal_kv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kv_;
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::_internal_mutable_kv() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kv_;
}

// repeated float kl2 = 3;
inline int GetSensorlessComplianceGainRes::_internal_kl2_size() const {
  return _internal_kl2().size();
}
inline int GetSensorlessComplianceGainRes::kl2_size() const {
  return _internal_kl2_size();
}
inline void GetSensorlessComplianceGainRes::clear_kl2() {
  _internal_mutable_kl2()->Clear();
}
inline float GetSensorlessComplianceGainRes::kl2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kl2)
  return _internal_kl2().Get(index);
}
inline void GetSensorlessComplianceGainRes::set_kl2(int index, float value) {
  _internal_mutable_kl2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kl2)
}
inline void GetSensorlessComplianceGainRes::add_kl2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kl2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kl2)
}
inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::kl2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kl2)
  return _internal_kl2();
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::mutable_kl2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kl2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kl2();
}

inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::_internal_kl2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kl2_;
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::_internal_mutable_kl2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kl2_;
}

// repeated float kd = 4;
inline int GetSensorlessComplianceGainRes::_internal_kd_size() const {
  return _internal_kd().size();
}
inline int GetSensorlessComplianceGainRes::kd_size() const {
  return _internal_kd_size();
}
inline void GetSensorlessComplianceGainRes::clear_kd() {
  _internal_mutable_kd()->Clear();
}
inline float GetSensorlessComplianceGainRes::kd(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kd)
  return _internal_kd().Get(index);
}
inline void GetSensorlessComplianceGainRes::set_kd(int index, float value) {
  _internal_mutable_kd()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kd)
}
inline void GetSensorlessComplianceGainRes::add_kd(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_kd()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kd)
}
inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::kd() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kd)
  return _internal_kd();
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::mutable_kd() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.kd)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kd();
}

inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::_internal_kd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kd_;
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::_internal_mutable_kd() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kd_;
}

// repeated float bd = 5;
inline int GetSensorlessComplianceGainRes::_internal_bd_size() const {
  return _internal_bd().size();
}
inline int GetSensorlessComplianceGainRes::bd_size() const {
  return _internal_bd_size();
}
inline void GetSensorlessComplianceGainRes::clear_bd() {
  _internal_mutable_bd()->Clear();
}
inline float GetSensorlessComplianceGainRes::bd(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.bd)
  return _internal_bd().Get(index);
}
inline void GetSensorlessComplianceGainRes::set_bd(int index, float value) {
  _internal_mutable_bd()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.bd)
}
inline void GetSensorlessComplianceGainRes::add_bd(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_bd()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.bd)
}
inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::bd() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.bd)
  return _internal_bd();
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::mutable_bd() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.bd)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bd();
}

inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::_internal_bd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bd_;
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::_internal_mutable_bd() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bd_;
}

// repeated float rate = 6;
inline int GetSensorlessComplianceGainRes::_internal_rate_size() const {
  return _internal_rate().size();
}
inline int GetSensorlessComplianceGainRes::rate_size() const {
  return _internal_rate_size();
}
inline void GetSensorlessComplianceGainRes::clear_rate() {
  _internal_mutable_rate()->Clear();
}
inline float GetSensorlessComplianceGainRes::rate(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.rate)
  return _internal_rate().Get(index);
}
inline void GetSensorlessComplianceGainRes::set_rate(int index, float value) {
  _internal_mutable_rate()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.rate)
}
inline void GetSensorlessComplianceGainRes::add_rate(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_rate()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.rate)
}
inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::rate() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.rate)
  return _internal_rate();
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::mutable_rate() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.rate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rate();
}

inline const ::google::protobuf::RepeatedField<float>& GetSensorlessComplianceGainRes::_internal_rate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rate_;
}
inline ::google::protobuf::RepeatedField<float>* GetSensorlessComplianceGainRes::_internal_mutable_rate() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rate_;
}

// string msg = 100;
inline void GetSensorlessComplianceGainRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetSensorlessComplianceGainRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSensorlessComplianceGainRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.msg)
}
inline std::string* GetSensorlessComplianceGainRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.msg)
  return _s;
}
inline const std::string& GetSensorlessComplianceGainRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetSensorlessComplianceGainRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetSensorlessComplianceGainRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetSensorlessComplianceGainRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.msg)
  return _impl_.msg_.Release();
}
inline void GetSensorlessComplianceGainRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetSensorlessComplianceGainRes.msg)
}

// -------------------------------------------------------------------

// SetFricCompReq

// bool control_comp = 1;
inline void SetFricCompReq::clear_control_comp() {
  _impl_.control_comp_ = false;
}
inline bool SetFricCompReq::control_comp() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFricCompReq.control_comp)
  return _internal_control_comp();
}
inline void SetFricCompReq::set_control_comp(bool value) {
  _internal_set_control_comp(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFricCompReq.control_comp)
}
inline bool SetFricCompReq::_internal_control_comp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.control_comp_;
}
inline void SetFricCompReq::_internal_set_control_comp(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.control_comp_ = value;
}

// repeated int32 control_comp_levels = 2;
inline int SetFricCompReq::_internal_control_comp_levels_size() const {
  return _internal_control_comp_levels().size();
}
inline int SetFricCompReq::control_comp_levels_size() const {
  return _internal_control_comp_levels_size();
}
inline void SetFricCompReq::clear_control_comp_levels() {
  _internal_mutable_control_comp_levels()->Clear();
}
inline ::int32_t SetFricCompReq::control_comp_levels(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFricCompReq.control_comp_levels)
  return _internal_control_comp_levels().Get(index);
}
inline void SetFricCompReq::set_control_comp_levels(int index, ::int32_t value) {
  _internal_mutable_control_comp_levels()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFricCompReq.control_comp_levels)
}
inline void SetFricCompReq::add_control_comp_levels(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_control_comp_levels()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetFricCompReq.control_comp_levels)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& SetFricCompReq::control_comp_levels() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetFricCompReq.control_comp_levels)
  return _internal_control_comp_levels();
}
inline ::google::protobuf::RepeatedField<::int32_t>* SetFricCompReq::mutable_control_comp_levels() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetFricCompReq.control_comp_levels)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_control_comp_levels();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& SetFricCompReq::_internal_control_comp_levels() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.control_comp_levels_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* SetFricCompReq::_internal_mutable_control_comp_levels() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.control_comp_levels_;
}

// bool dt_comp = 5;
inline void SetFricCompReq::clear_dt_comp() {
  _impl_.dt_comp_ = false;
}
inline bool SetFricCompReq::dt_comp() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFricCompReq.dt_comp)
  return _internal_dt_comp();
}
inline void SetFricCompReq::set_dt_comp(bool value) {
  _internal_set_dt_comp(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFricCompReq.dt_comp)
}
inline bool SetFricCompReq::_internal_dt_comp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dt_comp_;
}
inline void SetFricCompReq::_internal_set_dt_comp(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dt_comp_ = value;
}

// repeated int32 dt_comp_levels = 6;
inline int SetFricCompReq::_internal_dt_comp_levels_size() const {
  return _internal_dt_comp_levels().size();
}
inline int SetFricCompReq::dt_comp_levels_size() const {
  return _internal_dt_comp_levels_size();
}
inline void SetFricCompReq::clear_dt_comp_levels() {
  _internal_mutable_dt_comp_levels()->Clear();
}
inline ::int32_t SetFricCompReq::dt_comp_levels(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFricCompReq.dt_comp_levels)
  return _internal_dt_comp_levels().Get(index);
}
inline void SetFricCompReq::set_dt_comp_levels(int index, ::int32_t value) {
  _internal_mutable_dt_comp_levels()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFricCompReq.dt_comp_levels)
}
inline void SetFricCompReq::add_dt_comp_levels(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dt_comp_levels()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetFricCompReq.dt_comp_levels)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& SetFricCompReq::dt_comp_levels() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetFricCompReq.dt_comp_levels)
  return _internal_dt_comp_levels();
}
inline ::google::protobuf::RepeatedField<::int32_t>* SetFricCompReq::mutable_dt_comp_levels() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetFricCompReq.dt_comp_levels)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dt_comp_levels();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& SetFricCompReq::_internal_dt_comp_levels() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dt_comp_levels_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* SetFricCompReq::_internal_mutable_dt_comp_levels() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dt_comp_levels_;
}

// -------------------------------------------------------------------

// SetFricCompRes

// string msg = 100;
inline void SetFricCompRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetFricCompRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetFricCompRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetFricCompRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetFricCompRes.msg)
}
inline std::string* SetFricCompRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetFricCompRes.msg)
  return _s;
}
inline const std::string& SetFricCompRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetFricCompRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetFricCompRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetFricCompRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetFricCompRes.msg)
  return _impl_.msg_.Release();
}
inline void SetFricCompRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetFricCompRes.msg)
}

// -------------------------------------------------------------------

// GetFricCompReq

// -------------------------------------------------------------------

// GetFricCompRes

// bool control_comp = 1;
inline void GetFricCompRes::clear_control_comp() {
  _impl_.control_comp_ = false;
}
inline bool GetFricCompRes::control_comp() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFricCompRes.control_comp)
  return _internal_control_comp();
}
inline void GetFricCompRes::set_control_comp(bool value) {
  _internal_set_control_comp(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFricCompRes.control_comp)
}
inline bool GetFricCompRes::_internal_control_comp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.control_comp_;
}
inline void GetFricCompRes::_internal_set_control_comp(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.control_comp_ = value;
}

// repeated int32 control_comp_levels = 2;
inline int GetFricCompRes::_internal_control_comp_levels_size() const {
  return _internal_control_comp_levels().size();
}
inline int GetFricCompRes::control_comp_levels_size() const {
  return _internal_control_comp_levels_size();
}
inline void GetFricCompRes::clear_control_comp_levels() {
  _internal_mutable_control_comp_levels()->Clear();
}
inline ::int32_t GetFricCompRes::control_comp_levels(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFricCompRes.control_comp_levels)
  return _internal_control_comp_levels().Get(index);
}
inline void GetFricCompRes::set_control_comp_levels(int index, ::int32_t value) {
  _internal_mutable_control_comp_levels()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFricCompRes.control_comp_levels)
}
inline void GetFricCompRes::add_control_comp_levels(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_control_comp_levels()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetFricCompRes.control_comp_levels)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GetFricCompRes::control_comp_levels() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetFricCompRes.control_comp_levels)
  return _internal_control_comp_levels();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetFricCompRes::mutable_control_comp_levels() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetFricCompRes.control_comp_levels)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_control_comp_levels();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GetFricCompRes::_internal_control_comp_levels() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.control_comp_levels_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetFricCompRes::_internal_mutable_control_comp_levels() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.control_comp_levels_;
}

// bool dt_comp = 5;
inline void GetFricCompRes::clear_dt_comp() {
  _impl_.dt_comp_ = false;
}
inline bool GetFricCompRes::dt_comp() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFricCompRes.dt_comp)
  return _internal_dt_comp();
}
inline void GetFricCompRes::set_dt_comp(bool value) {
  _internal_set_dt_comp(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFricCompRes.dt_comp)
}
inline bool GetFricCompRes::_internal_dt_comp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dt_comp_;
}
inline void GetFricCompRes::_internal_set_dt_comp(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dt_comp_ = value;
}

// repeated int32 dt_comp_levels = 6;
inline int GetFricCompRes::_internal_dt_comp_levels_size() const {
  return _internal_dt_comp_levels().size();
}
inline int GetFricCompRes::dt_comp_levels_size() const {
  return _internal_dt_comp_levels_size();
}
inline void GetFricCompRes::clear_dt_comp_levels() {
  _internal_mutable_dt_comp_levels()->Clear();
}
inline ::int32_t GetFricCompRes::dt_comp_levels(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFricCompRes.dt_comp_levels)
  return _internal_dt_comp_levels().Get(index);
}
inline void GetFricCompRes::set_dt_comp_levels(int index, ::int32_t value) {
  _internal_mutable_dt_comp_levels()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFricCompRes.dt_comp_levels)
}
inline void GetFricCompRes::add_dt_comp_levels(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dt_comp_levels()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetFricCompRes.dt_comp_levels)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GetFricCompRes::dt_comp_levels() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetFricCompRes.dt_comp_levels)
  return _internal_dt_comp_levels();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetFricCompRes::mutable_dt_comp_levels() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetFricCompRes.dt_comp_levels)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dt_comp_levels();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GetFricCompRes::_internal_dt_comp_levels() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dt_comp_levels_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetFricCompRes::_internal_mutable_dt_comp_levels() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dt_comp_levels_;
}

// string msg = 100;
inline void GetFricCompRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetFricCompRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetFricCompRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetFricCompRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetFricCompRes.msg)
}
inline std::string* GetFricCompRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetFricCompRes.msg)
  return _s;
}
inline const std::string& GetFricCompRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetFricCompRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetFricCompRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetFricCompRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetFricCompRes.msg)
  return _impl_.msg_.Release();
}
inline void GetFricCompRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetFricCompRes.msg)
}

// -------------------------------------------------------------------

// SetHomePosReq

// repeated float jpos = 1;
inline int SetHomePosReq::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int SetHomePosReq::jpos_size() const {
  return _internal_jpos_size();
}
inline void SetHomePosReq::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float SetHomePosReq::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetHomePosReq.jpos)
  return _internal_jpos().Get(index);
}
inline void SetHomePosReq::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetHomePosReq.jpos)
}
inline void SetHomePosReq::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetHomePosReq.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& SetHomePosReq::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetHomePosReq.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* SetHomePosReq::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetHomePosReq.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& SetHomePosReq::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* SetHomePosReq::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// -------------------------------------------------------------------

// SetHomePosRes

// string msg = 100;
inline void SetHomePosRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetHomePosRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetHomePosRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetHomePosRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetHomePosRes.msg)
}
inline std::string* SetHomePosRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetHomePosRes.msg)
  return _s;
}
inline const std::string& SetHomePosRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetHomePosRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetHomePosRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetHomePosRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetHomePosRes.msg)
  return _impl_.msg_.Release();
}
inline void SetHomePosRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetHomePosRes.msg)
}

// -------------------------------------------------------------------

// GetHomePosReq

// -------------------------------------------------------------------

// GetHomePosRes

// repeated float jpos = 1;
inline int GetHomePosRes::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int GetHomePosRes::jpos_size() const {
  return _internal_jpos_size();
}
inline void GetHomePosRes::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float GetHomePosRes::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetHomePosRes.jpos)
  return _internal_jpos().Get(index);
}
inline void GetHomePosRes::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetHomePosRes.jpos)
}
inline void GetHomePosRes::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetHomePosRes.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetHomePosRes::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetHomePosRes.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* GetHomePosRes::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetHomePosRes.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetHomePosRes::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetHomePosRes::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// string msg = 100;
inline void GetHomePosRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetHomePosRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetHomePosRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetHomePosRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetHomePosRes.msg)
}
inline std::string* GetHomePosRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetHomePosRes.msg)
  return _s;
}
inline const std::string& GetHomePosRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetHomePosRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetHomePosRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetHomePosRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetHomePosRes.msg)
  return _impl_.msg_.Release();
}
inline void GetHomePosRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetHomePosRes.msg)
}

// -------------------------------------------------------------------

// SetMountPosReq

// float ry = 1;
inline void SetMountPosReq::clear_ry() {
  _impl_.ry_ = 0;
}
inline float SetMountPosReq::ry() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMountPosReq.ry)
  return _internal_ry();
}
inline void SetMountPosReq::set_ry(float value) {
  _internal_set_ry(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMountPosReq.ry)
}
inline float SetMountPosReq::_internal_ry() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ry_;
}
inline void SetMountPosReq::_internal_set_ry(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ry_ = value;
}

// float rz = 2;
inline void SetMountPosReq::clear_rz() {
  _impl_.rz_ = 0;
}
inline float SetMountPosReq::rz() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMountPosReq.rz)
  return _internal_rz();
}
inline void SetMountPosReq::set_rz(float value) {
  _internal_set_rz(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMountPosReq.rz)
}
inline float SetMountPosReq::_internal_rz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rz_;
}
inline void SetMountPosReq::_internal_set_rz(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rz_ = value;
}

// -------------------------------------------------------------------

// SetMountPosRes

// string msg = 100;
inline void SetMountPosRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetMountPosRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMountPosRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMountPosRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMountPosRes.msg)
}
inline std::string* SetMountPosRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetMountPosRes.msg)
  return _s;
}
inline const std::string& SetMountPosRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetMountPosRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetMountPosRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetMountPosRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetMountPosRes.msg)
  return _impl_.msg_.Release();
}
inline void SetMountPosRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetMountPosRes.msg)
}

// -------------------------------------------------------------------

// GetMountPosReq

// -------------------------------------------------------------------

// GetMountPosRes

// float ry = 1;
inline void GetMountPosRes::clear_ry() {
  _impl_.ry_ = 0;
}
inline float GetMountPosRes::ry() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMountPosRes.ry)
  return _internal_ry();
}
inline void GetMountPosRes::set_ry(float value) {
  _internal_set_ry(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMountPosRes.ry)
}
inline float GetMountPosRes::_internal_ry() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ry_;
}
inline void GetMountPosRes::_internal_set_ry(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ry_ = value;
}

// float rz = 2;
inline void GetMountPosRes::clear_rz() {
  _impl_.rz_ = 0;
}
inline float GetMountPosRes::rz() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMountPosRes.rz)
  return _internal_rz();
}
inline void GetMountPosRes::set_rz(float value) {
  _internal_set_rz(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMountPosRes.rz)
}
inline float GetMountPosRes::_internal_rz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rz_;
}
inline void GetMountPosRes::_internal_set_rz(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rz_ = value;
}

// string msg = 100;
inline void GetMountPosRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetMountPosRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMountPosRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMountPosRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMountPosRes.msg)
}
inline std::string* GetMountPosRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetMountPosRes.msg)
  return _s;
}
inline const std::string& GetMountPosRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetMountPosRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetMountPosRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetMountPosRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetMountPosRes.msg)
  return _impl_.msg_.Release();
}
inline void GetMountPosRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetMountPosRes.msg)
}

// -------------------------------------------------------------------

// GetPackagingPosReq

// -------------------------------------------------------------------

// GetPackagingPosRes

// repeated float jpos = 1;
inline int GetPackagingPosRes::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int GetPackagingPosRes::jpos_size() const {
  return _internal_jpos_size();
}
inline void GetPackagingPosRes::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float GetPackagingPosRes::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPackagingPosRes.jpos)
  return _internal_jpos().Get(index);
}
inline void GetPackagingPosRes::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetPackagingPosRes.jpos)
}
inline void GetPackagingPosRes::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetPackagingPosRes.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetPackagingPosRes::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetPackagingPosRes.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* GetPackagingPosRes::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetPackagingPosRes.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetPackagingPosRes::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetPackagingPosRes::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// string msg = 100;
inline void GetPackagingPosRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetPackagingPosRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetPackagingPosRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPackagingPosRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetPackagingPosRes.msg)
}
inline std::string* GetPackagingPosRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetPackagingPosRes.msg)
  return _s;
}
inline const std::string& GetPackagingPosRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetPackagingPosRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetPackagingPosRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetPackagingPosRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetPackagingPosRes.msg)
  return _impl_.msg_.Release();
}
inline void GetPackagingPosRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetPackagingPosRes.msg)
}

// -------------------------------------------------------------------

// SetToolPropertyReq

// float mass = 1;
inline void SetToolPropertyReq::clear_mass() {
  _impl_.mass_ = 0;
}
inline float SetToolPropertyReq::mass() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolPropertyReq.mass)
  return _internal_mass();
}
inline void SetToolPropertyReq::set_mass(float value) {
  _internal_set_mass(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolPropertyReq.mass)
}
inline float SetToolPropertyReq::_internal_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mass_;
}
inline void SetToolPropertyReq::_internal_set_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mass_ = value;
}

// repeated float center_of_mass = 2;
inline int SetToolPropertyReq::_internal_center_of_mass_size() const {
  return _internal_center_of_mass().size();
}
inline int SetToolPropertyReq::center_of_mass_size() const {
  return _internal_center_of_mass_size();
}
inline void SetToolPropertyReq::clear_center_of_mass() {
  _internal_mutable_center_of_mass()->Clear();
}
inline float SetToolPropertyReq::center_of_mass(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolPropertyReq.center_of_mass)
  return _internal_center_of_mass().Get(index);
}
inline void SetToolPropertyReq::set_center_of_mass(int index, float value) {
  _internal_mutable_center_of_mass()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolPropertyReq.center_of_mass)
}
inline void SetToolPropertyReq::add_center_of_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_center_of_mass()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetToolPropertyReq.center_of_mass)
}
inline const ::google::protobuf::RepeatedField<float>& SetToolPropertyReq::center_of_mass() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetToolPropertyReq.center_of_mass)
  return _internal_center_of_mass();
}
inline ::google::protobuf::RepeatedField<float>* SetToolPropertyReq::mutable_center_of_mass() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetToolPropertyReq.center_of_mass)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_center_of_mass();
}

inline const ::google::protobuf::RepeatedField<float>& SetToolPropertyReq::_internal_center_of_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.center_of_mass_;
}
inline ::google::protobuf::RepeatedField<float>* SetToolPropertyReq::_internal_mutable_center_of_mass() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.center_of_mass_;
}

// repeated float inertia = 3;
inline int SetToolPropertyReq::_internal_inertia_size() const {
  return _internal_inertia().size();
}
inline int SetToolPropertyReq::inertia_size() const {
  return _internal_inertia_size();
}
inline void SetToolPropertyReq::clear_inertia() {
  _internal_mutable_inertia()->Clear();
}
inline float SetToolPropertyReq::inertia(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolPropertyReq.inertia)
  return _internal_inertia().Get(index);
}
inline void SetToolPropertyReq::set_inertia(int index, float value) {
  _internal_mutable_inertia()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolPropertyReq.inertia)
}
inline void SetToolPropertyReq::add_inertia(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_inertia()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetToolPropertyReq.inertia)
}
inline const ::google::protobuf::RepeatedField<float>& SetToolPropertyReq::inertia() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetToolPropertyReq.inertia)
  return _internal_inertia();
}
inline ::google::protobuf::RepeatedField<float>* SetToolPropertyReq::mutable_inertia() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetToolPropertyReq.inertia)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_inertia();
}

inline const ::google::protobuf::RepeatedField<float>& SetToolPropertyReq::_internal_inertia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.inertia_;
}
inline ::google::protobuf::RepeatedField<float>* SetToolPropertyReq::_internal_mutable_inertia() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.inertia_;
}

// -------------------------------------------------------------------

// SetToolPropertyRes

// string msg = 100;
inline void SetToolPropertyRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetToolPropertyRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolPropertyRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetToolPropertyRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolPropertyRes.msg)
}
inline std::string* SetToolPropertyRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetToolPropertyRes.msg)
  return _s;
}
inline const std::string& SetToolPropertyRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetToolPropertyRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetToolPropertyRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetToolPropertyRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetToolPropertyRes.msg)
  return _impl_.msg_.Release();
}
inline void SetToolPropertyRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetToolPropertyRes.msg)
}

// -------------------------------------------------------------------

// GetToolPropertyReq

// -------------------------------------------------------------------

// GetToolPropertyRes

// float mass = 1;
inline void GetToolPropertyRes::clear_mass() {
  _impl_.mass_ = 0;
}
inline float GetToolPropertyRes::mass() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetToolPropertyRes.mass)
  return _internal_mass();
}
inline void GetToolPropertyRes::set_mass(float value) {
  _internal_set_mass(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetToolPropertyRes.mass)
}
inline float GetToolPropertyRes::_internal_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mass_;
}
inline void GetToolPropertyRes::_internal_set_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mass_ = value;
}

// repeated float center_of_mass = 2;
inline int GetToolPropertyRes::_internal_center_of_mass_size() const {
  return _internal_center_of_mass().size();
}
inline int GetToolPropertyRes::center_of_mass_size() const {
  return _internal_center_of_mass_size();
}
inline void GetToolPropertyRes::clear_center_of_mass() {
  _internal_mutable_center_of_mass()->Clear();
}
inline float GetToolPropertyRes::center_of_mass(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetToolPropertyRes.center_of_mass)
  return _internal_center_of_mass().Get(index);
}
inline void GetToolPropertyRes::set_center_of_mass(int index, float value) {
  _internal_mutable_center_of_mass()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetToolPropertyRes.center_of_mass)
}
inline void GetToolPropertyRes::add_center_of_mass(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_center_of_mass()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetToolPropertyRes.center_of_mass)
}
inline const ::google::protobuf::RepeatedField<float>& GetToolPropertyRes::center_of_mass() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetToolPropertyRes.center_of_mass)
  return _internal_center_of_mass();
}
inline ::google::protobuf::RepeatedField<float>* GetToolPropertyRes::mutable_center_of_mass() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetToolPropertyRes.center_of_mass)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_center_of_mass();
}

inline const ::google::protobuf::RepeatedField<float>& GetToolPropertyRes::_internal_center_of_mass() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.center_of_mass_;
}
inline ::google::protobuf::RepeatedField<float>* GetToolPropertyRes::_internal_mutable_center_of_mass() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.center_of_mass_;
}

// repeated float inertia = 3;
inline int GetToolPropertyRes::_internal_inertia_size() const {
  return _internal_inertia().size();
}
inline int GetToolPropertyRes::inertia_size() const {
  return _internal_inertia_size();
}
inline void GetToolPropertyRes::clear_inertia() {
  _internal_mutable_inertia()->Clear();
}
inline float GetToolPropertyRes::inertia(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetToolPropertyRes.inertia)
  return _internal_inertia().Get(index);
}
inline void GetToolPropertyRes::set_inertia(int index, float value) {
  _internal_mutable_inertia()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetToolPropertyRes.inertia)
}
inline void GetToolPropertyRes::add_inertia(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_inertia()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetToolPropertyRes.inertia)
}
inline const ::google::protobuf::RepeatedField<float>& GetToolPropertyRes::inertia() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetToolPropertyRes.inertia)
  return _internal_inertia();
}
inline ::google::protobuf::RepeatedField<float>* GetToolPropertyRes::mutable_inertia() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetToolPropertyRes.inertia)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_inertia();
}

inline const ::google::protobuf::RepeatedField<float>& GetToolPropertyRes::_internal_inertia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.inertia_;
}
inline ::google::protobuf::RepeatedField<float>* GetToolPropertyRes::_internal_mutable_inertia() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.inertia_;
}

// string msg = 100;
inline void GetToolPropertyRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetToolPropertyRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetToolPropertyRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetToolPropertyRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetToolPropertyRes.msg)
}
inline std::string* GetToolPropertyRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetToolPropertyRes.msg)
  return _s;
}
inline const std::string& GetToolPropertyRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetToolPropertyRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetToolPropertyRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetToolPropertyRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetToolPropertyRes.msg)
  return _impl_.msg_.Release();
}
inline void GetToolPropertyRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetToolPropertyRes.msg)
}

// -------------------------------------------------------------------

// RebootReq

// -------------------------------------------------------------------

// RebootRes

// string msg = 100;
inline void RebootRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& RebootRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.RebootRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RebootRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.RebootRes.msg)
}
inline std::string* RebootRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.RebootRes.msg)
  return _s;
}
inline const std::string& RebootRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void RebootRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* RebootRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* RebootRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.RebootRes.msg)
  return _impl_.msg_.Release();
}
inline void RebootRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.RebootRes.msg)
}

// -------------------------------------------------------------------

// PowerOffReq

// -------------------------------------------------------------------

// PowerOffRes

// string msg = 100;
inline void PowerOffRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& PowerOffRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PowerOffRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PowerOffRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PowerOffRes.msg)
}
inline std::string* PowerOffRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PowerOffRes.msg)
  return _s;
}
inline const std::string& PowerOffRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void PowerOffRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* PowerOffRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* PowerOffRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PowerOffRes.msg)
  return _impl_.msg_.Release();
}
inline void PowerOffRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PowerOffRes.msg)
}

// -------------------------------------------------------------------

// SetRefFrameReq

// repeated float ref_frame = 1;
inline int SetRefFrameReq::_internal_ref_frame_size() const {
  return _internal_ref_frame().size();
}
inline int SetRefFrameReq::ref_frame_size() const {
  return _internal_ref_frame_size();
}
inline void SetRefFrameReq::clear_ref_frame() {
  _internal_mutable_ref_frame()->Clear();
}
inline float SetRefFrameReq::ref_frame(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFrameReq.ref_frame)
  return _internal_ref_frame().Get(index);
}
inline void SetRefFrameReq::set_ref_frame(int index, float value) {
  _internal_mutable_ref_frame()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFrameReq.ref_frame)
}
inline void SetRefFrameReq::add_ref_frame(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ref_frame()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetRefFrameReq.ref_frame)
}
inline const ::google::protobuf::RepeatedField<float>& SetRefFrameReq::ref_frame() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetRefFrameReq.ref_frame)
  return _internal_ref_frame();
}
inline ::google::protobuf::RepeatedField<float>* SetRefFrameReq::mutable_ref_frame() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetRefFrameReq.ref_frame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ref_frame();
}

inline const ::google::protobuf::RepeatedField<float>& SetRefFrameReq::_internal_ref_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ref_frame_;
}
inline ::google::protobuf::RepeatedField<float>* SetRefFrameReq::_internal_mutable_ref_frame() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ref_frame_;
}

// -------------------------------------------------------------------

// SetRefFrameRes

// string msg = 1;
inline void SetRefFrameRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetRefFrameRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFrameRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetRefFrameRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFrameRes.msg)
}
inline std::string* SetRefFrameRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetRefFrameRes.msg)
  return _s;
}
inline const std::string& SetRefFrameRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetRefFrameRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetRefFrameRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetRefFrameRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetRefFrameRes.msg)
  return _impl_.msg_.Release();
}
inline void SetRefFrameRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetRefFrameRes.msg)
}

// -------------------------------------------------------------------

// SetRefFramePlanarReq

// repeated float tpos0 = 1;
inline int SetRefFramePlanarReq::_internal_tpos0_size() const {
  return _internal_tpos0().size();
}
inline int SetRefFramePlanarReq::tpos0_size() const {
  return _internal_tpos0_size();
}
inline void SetRefFramePlanarReq::clear_tpos0() {
  _internal_mutable_tpos0()->Clear();
}
inline float SetRefFramePlanarReq::tpos0(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos0)
  return _internal_tpos0().Get(index);
}
inline void SetRefFramePlanarReq::set_tpos0(int index, float value) {
  _internal_mutable_tpos0()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos0)
}
inline void SetRefFramePlanarReq::add_tpos0(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos0()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos0)
}
inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarReq::tpos0() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos0)
  return _internal_tpos0();
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarReq::mutable_tpos0() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos0)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos0();
}

inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarReq::_internal_tpos0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos0_;
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarReq::_internal_mutable_tpos0() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos0_;
}

// repeated float tpos1 = 2;
inline int SetRefFramePlanarReq::_internal_tpos1_size() const {
  return _internal_tpos1().size();
}
inline int SetRefFramePlanarReq::tpos1_size() const {
  return _internal_tpos1_size();
}
inline void SetRefFramePlanarReq::clear_tpos1() {
  _internal_mutable_tpos1()->Clear();
}
inline float SetRefFramePlanarReq::tpos1(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos1)
  return _internal_tpos1().Get(index);
}
inline void SetRefFramePlanarReq::set_tpos1(int index, float value) {
  _internal_mutable_tpos1()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos1)
}
inline void SetRefFramePlanarReq::add_tpos1(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos1()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos1)
}
inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarReq::tpos1() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos1)
  return _internal_tpos1();
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarReq::mutable_tpos1() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos1();
}

inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarReq::_internal_tpos1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos1_;
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarReq::_internal_mutable_tpos1() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos1_;
}

// repeated float tpos2 = 3;
inline int SetRefFramePlanarReq::_internal_tpos2_size() const {
  return _internal_tpos2().size();
}
inline int SetRefFramePlanarReq::tpos2_size() const {
  return _internal_tpos2_size();
}
inline void SetRefFramePlanarReq::clear_tpos2() {
  _internal_mutable_tpos2()->Clear();
}
inline float SetRefFramePlanarReq::tpos2(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos2)
  return _internal_tpos2().Get(index);
}
inline void SetRefFramePlanarReq::set_tpos2(int index, float value) {
  _internal_mutable_tpos2()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos2)
}
inline void SetRefFramePlanarReq::add_tpos2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos2()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos2)
}
inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarReq::tpos2() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos2)
  return _internal_tpos2();
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarReq::mutable_tpos2() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarReq.tpos2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos2();
}

inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarReq::_internal_tpos2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos2_;
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarReq::_internal_mutable_tpos2() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos2_;
}

// -------------------------------------------------------------------

// SetRefFramePlanarRes

// repeated float ref_frame = 1;
inline int SetRefFramePlanarRes::_internal_ref_frame_size() const {
  return _internal_ref_frame().size();
}
inline int SetRefFramePlanarRes::ref_frame_size() const {
  return _internal_ref_frame_size();
}
inline void SetRefFramePlanarRes::clear_ref_frame() {
  _internal_mutable_ref_frame()->Clear();
}
inline float SetRefFramePlanarRes::ref_frame(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.ref_frame)
  return _internal_ref_frame().Get(index);
}
inline void SetRefFramePlanarRes::set_ref_frame(int index, float value) {
  _internal_mutable_ref_frame()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.ref_frame)
}
inline void SetRefFramePlanarRes::add_ref_frame(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ref_frame()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.ref_frame)
}
inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarRes::ref_frame() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.ref_frame)
  return _internal_ref_frame();
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarRes::mutable_ref_frame() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.ref_frame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ref_frame();
}

inline const ::google::protobuf::RepeatedField<float>& SetRefFramePlanarRes::_internal_ref_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ref_frame_;
}
inline ::google::protobuf::RepeatedField<float>* SetRefFramePlanarRes::_internal_mutable_ref_frame() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ref_frame_;
}

// string msg = 100;
inline void SetRefFramePlanarRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetRefFramePlanarRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetRefFramePlanarRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.msg)
}
inline std::string* SetRefFramePlanarRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.msg)
  return _s;
}
inline const std::string& SetRefFramePlanarRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetRefFramePlanarRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetRefFramePlanarRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetRefFramePlanarRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.msg)
  return _impl_.msg_.Release();
}
inline void SetRefFramePlanarRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetRefFramePlanarRes.msg)
}

// -------------------------------------------------------------------

// SetToolFrameReq

// repeated float tool_frame = 1;
inline int SetToolFrameReq::_internal_tool_frame_size() const {
  return _internal_tool_frame().size();
}
inline int SetToolFrameReq::tool_frame_size() const {
  return _internal_tool_frame_size();
}
inline void SetToolFrameReq::clear_tool_frame() {
  _internal_mutable_tool_frame()->Clear();
}
inline float SetToolFrameReq::tool_frame(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolFrameReq.tool_frame)
  return _internal_tool_frame().Get(index);
}
inline void SetToolFrameReq::set_tool_frame(int index, float value) {
  _internal_mutable_tool_frame()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolFrameReq.tool_frame)
}
inline void SetToolFrameReq::add_tool_frame(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tool_frame()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetToolFrameReq.tool_frame)
}
inline const ::google::protobuf::RepeatedField<float>& SetToolFrameReq::tool_frame() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetToolFrameReq.tool_frame)
  return _internal_tool_frame();
}
inline ::google::protobuf::RepeatedField<float>* SetToolFrameReq::mutable_tool_frame() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetToolFrameReq.tool_frame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tool_frame();
}

inline const ::google::protobuf::RepeatedField<float>& SetToolFrameReq::_internal_tool_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tool_frame_;
}
inline ::google::protobuf::RepeatedField<float>* SetToolFrameReq::_internal_mutable_tool_frame() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tool_frame_;
}

// -------------------------------------------------------------------

// SetToolFrameRes

// string msg = 1;
inline void SetToolFrameRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetToolFrameRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetToolFrameRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetToolFrameRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetToolFrameRes.msg)
}
inline std::string* SetToolFrameRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetToolFrameRes.msg)
  return _s;
}
inline const std::string& SetToolFrameRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetToolFrameRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetToolFrameRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetToolFrameRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetToolFrameRes.msg)
  return _impl_.msg_.Release();
}
inline void SetToolFrameRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetToolFrameRes.msg)
}

// -------------------------------------------------------------------

// SetSpeedRatioReq

// int32 ratio = 1;
inline void SetSpeedRatioReq::clear_ratio() {
  _impl_.ratio_ = 0;
}
inline ::int32_t SetSpeedRatioReq::ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSpeedRatioReq.ratio)
  return _internal_ratio();
}
inline void SetSpeedRatioReq::set_ratio(::int32_t value) {
  _internal_set_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSpeedRatioReq.ratio)
}
inline ::int32_t SetSpeedRatioReq::_internal_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ratio_;
}
inline void SetSpeedRatioReq::_internal_set_ratio(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ratio_ = value;
}

// -------------------------------------------------------------------

// SetSpeedRatioRes

// string msg = 1;
inline void SetSpeedRatioRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetSpeedRatioRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSpeedRatioRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetSpeedRatioRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSpeedRatioRes.msg)
}
inline std::string* SetSpeedRatioRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetSpeedRatioRes.msg)
  return _s;
}
inline const std::string& SetSpeedRatioRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetSpeedRatioRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSpeedRatioRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetSpeedRatioRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetSpeedRatioRes.msg)
  return _impl_.msg_.Release();
}
inline void SetSpeedRatioRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetSpeedRatioRes.msg)
}

// -------------------------------------------------------------------

// BrakeControlStyle

// .IndyFramework.Protobuf.HRI.BrakeControlStyle.ControlStyle style = 1;
inline void BrakeControlStyle::clear_style() {
  _impl_.style_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle BrakeControlStyle::style() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.BrakeControlStyle.style)
  return _internal_style();
}
inline void BrakeControlStyle::set_style(::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle value) {
  _internal_set_style(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.BrakeControlStyle.style)
}
inline ::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle BrakeControlStyle::_internal_style() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle>(_impl_.style_);
}
inline void BrakeControlStyle::_internal_set_style(::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.style_ = value;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool BrakeControlStyle::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void BrakeControlStyle::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& BrakeControlStyle::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& BrakeControlStyle::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.BrakeControlStyle.response)
  return _internal_response();
}
inline void BrakeControlStyle::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.BrakeControlStyle.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* BrakeControlStyle::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* BrakeControlStyle::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.BrakeControlStyle.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* BrakeControlStyle::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* BrakeControlStyle::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.BrakeControlStyle.response)
  return _msg;
}
inline void BrakeControlStyle::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.BrakeControlStyle.response)
}

// -------------------------------------------------------------------

// SetBrakeReq

// repeated bool on = 1;
inline int SetBrakeReq::_internal_on_size() const {
  return _internal_on().size();
}
inline int SetBrakeReq::on_size() const {
  return _internal_on_size();
}
inline void SetBrakeReq::clear_on() {
  _internal_mutable_on()->Clear();
}
inline bool SetBrakeReq::on(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetBrakeReq.on)
  return _internal_on().Get(index);
}
inline void SetBrakeReq::set_on(int index, bool value) {
  _internal_mutable_on()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetBrakeReq.on)
}
inline void SetBrakeReq::add_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_on()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetBrakeReq.on)
}
inline const ::google::protobuf::RepeatedField<bool>& SetBrakeReq::on() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetBrakeReq.on)
  return _internal_on();
}
inline ::google::protobuf::RepeatedField<bool>* SetBrakeReq::mutable_on() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetBrakeReq.on)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_on();
}

inline const ::google::protobuf::RepeatedField<bool>& SetBrakeReq::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline ::google::protobuf::RepeatedField<bool>* SetBrakeReq::_internal_mutable_on() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.on_;
}

// -------------------------------------------------------------------

// SetBrakeRes

// string msg = 1;
inline void SetBrakeRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetBrakeRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetBrakeRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetBrakeRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetBrakeRes.msg)
}
inline std::string* SetBrakeRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetBrakeRes.msg)
  return _s;
}
inline const std::string& SetBrakeRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetBrakeRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetBrakeRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetBrakeRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetBrakeRes.msg)
  return _impl_.msg_.Release();
}
inline void SetBrakeRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetBrakeRes.msg)
}

// -------------------------------------------------------------------

// SetServoReq

// bool on = 1;
inline void SetServoReq::clear_on() {
  _impl_.on_ = false;
}
inline bool SetServoReq::on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetServoReq.on)
  return _internal_on();
}
inline void SetServoReq::set_on(bool value) {
  _internal_set_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetServoReq.on)
}
inline bool SetServoReq::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline void SetServoReq::_internal_set_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.on_ = value;
}

// -------------------------------------------------------------------

// SetServoRes

// string msg = 1;
inline void SetServoRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetServoRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetServoRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetServoRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetServoRes.msg)
}
inline std::string* SetServoRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetServoRes.msg)
  return _s;
}
inline const std::string& SetServoRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetServoRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetServoRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetServoRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetServoRes.msg)
  return _impl_.msg_.Release();
}
inline void SetServoRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetServoRes.msg)
}

// -------------------------------------------------------------------

// SetAutoServoOffReq

// bool enable = 1;
inline void SetAutoServoOffReq::clear_enable() {
  _impl_.enable_ = false;
}
inline bool SetAutoServoOffReq::enable() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetAutoServoOffReq.enable)
  return _internal_enable();
}
inline void SetAutoServoOffReq::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetAutoServoOffReq.enable)
}
inline bool SetAutoServoOffReq::_internal_enable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enable_;
}
inline void SetAutoServoOffReq::_internal_set_enable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enable_ = value;
}

// float time = 2;
inline void SetAutoServoOffReq::clear_time() {
  _impl_.time_ = 0;
}
inline float SetAutoServoOffReq::time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetAutoServoOffReq.time)
  return _internal_time();
}
inline void SetAutoServoOffReq::set_time(float value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetAutoServoOffReq.time)
}
inline float SetAutoServoOffReq::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void SetAutoServoOffReq::_internal_set_time(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// SetAutoServoOffRes

// string msg = 100;
inline void SetAutoServoOffRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetAutoServoOffRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetAutoServoOffRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetAutoServoOffRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetAutoServoOffRes.msg)
}
inline std::string* SetAutoServoOffRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetAutoServoOffRes.msg)
  return _s;
}
inline const std::string& SetAutoServoOffRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetAutoServoOffRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetAutoServoOffRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetAutoServoOffRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetAutoServoOffRes.msg)
  return _impl_.msg_.Release();
}
inline void SetAutoServoOffRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetAutoServoOffRes.msg)
}

// -------------------------------------------------------------------

// GetAutoServoOffReq

// -------------------------------------------------------------------

// GetAutoServoOffRes

// bool enable = 1;
inline void GetAutoServoOffRes::clear_enable() {
  _impl_.enable_ = false;
}
inline bool GetAutoServoOffRes::enable() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.enable)
  return _internal_enable();
}
inline void GetAutoServoOffRes::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.enable)
}
inline bool GetAutoServoOffRes::_internal_enable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enable_;
}
inline void GetAutoServoOffRes::_internal_set_enable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enable_ = value;
}

// float time = 2;
inline void GetAutoServoOffRes::clear_time() {
  _impl_.time_ = 0;
}
inline float GetAutoServoOffRes::time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.time)
  return _internal_time();
}
inline void GetAutoServoOffRes::set_time(float value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.time)
}
inline float GetAutoServoOffRes::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void GetAutoServoOffRes::_internal_set_time(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_ = value;
}

// string msg = 100;
inline void GetAutoServoOffRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetAutoServoOffRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetAutoServoOffRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.msg)
}
inline std::string* GetAutoServoOffRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.msg)
  return _s;
}
inline const std::string& GetAutoServoOffRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetAutoServoOffRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetAutoServoOffRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetAutoServoOffRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.msg)
  return _impl_.msg_.Release();
}
inline void GetAutoServoOffRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetAutoServoOffRes.msg)
}

// -------------------------------------------------------------------

// SetModbusVarReq

// int32 addr = 1;
inline void SetModbusVarReq::clear_addr() {
  _impl_.addr_ = 0;
}
inline ::int32_t SetModbusVarReq::addr() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetModbusVarReq.addr)
  return _internal_addr();
}
inline void SetModbusVarReq::set_addr(::int32_t value) {
  _internal_set_addr(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetModbusVarReq.addr)
}
inline ::int32_t SetModbusVarReq::_internal_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr_;
}
inline void SetModbusVarReq::_internal_set_addr(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_ = value;
}

// int32 value = 2;
inline void SetModbusVarReq::clear_value() {
  _impl_.value_ = 0;
}
inline ::int32_t SetModbusVarReq::value() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetModbusVarReq.value)
  return _internal_value();
}
inline void SetModbusVarReq::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetModbusVarReq.value)
}
inline ::int32_t SetModbusVarReq::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void SetModbusVarReq::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// SetModbusVarRes

// string msg = 1;
inline void SetModbusVarRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetModbusVarRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetModbusVarRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetModbusVarRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetModbusVarRes.msg)
}
inline std::string* SetModbusVarRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetModbusVarRes.msg)
  return _s;
}
inline const std::string& SetModbusVarRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetModbusVarRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetModbusVarRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetModbusVarRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetModbusVarRes.msg)
  return _impl_.msg_.Release();
}
inline void SetModbusVarRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetModbusVarRes.msg)
}

// -------------------------------------------------------------------

// GetVariableListReq

// -------------------------------------------------------------------

// GetVariableListRes_Variable

// string name = 1;
inline void GetVariableListRes_Variable::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetVariableListRes_Variable::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVariableListRes_Variable::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.name)
}
inline std::string* GetVariableListRes_Variable::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.name)
  return _s;
}
inline const std::string& GetVariableListRes_Variable::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetVariableListRes_Variable::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetVariableListRes_Variable::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetVariableListRes_Variable::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.name)
  return _impl_.name_.Release();
}
inline void GetVariableListRes_Variable::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.name)
}

// int32 addr = 2;
inline void GetVariableListRes_Variable::clear_addr() {
  _impl_.addr_ = 0;
}
inline ::int32_t GetVariableListRes_Variable::addr() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.addr)
  return _internal_addr();
}
inline void GetVariableListRes_Variable::set_addr(::int32_t value) {
  _internal_set_addr(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.addr)
}
inline ::int32_t GetVariableListRes_Variable::_internal_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr_;
}
inline void GetVariableListRes_Variable::_internal_set_addr(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_ = value;
}

// string type = 3;
inline void GetVariableListRes_Variable::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& GetVariableListRes_Variable::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVariableListRes_Variable::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.type)
}
inline std::string* GetVariableListRes_Variable::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.type)
  return _s;
}
inline const std::string& GetVariableListRes_Variable::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void GetVariableListRes_Variable::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* GetVariableListRes_Variable::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* GetVariableListRes_Variable::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.type)
  return _impl_.type_.Release();
}
inline void GetVariableListRes_Variable::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.type)
}

// int32 ivar = 10;
inline void GetVariableListRes_Variable::clear_ivar() {
  _impl_.ivar_ = 0;
}
inline ::int32_t GetVariableListRes_Variable::ivar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.ivar)
  return _internal_ivar();
}
inline void GetVariableListRes_Variable::set_ivar(::int32_t value) {
  _internal_set_ivar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.ivar)
}
inline ::int32_t GetVariableListRes_Variable::_internal_ivar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ivar_;
}
inline void GetVariableListRes_Variable::_internal_set_ivar(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ivar_ = value;
}

// float fvar = 11;
inline void GetVariableListRes_Variable::clear_fvar() {
  _impl_.fvar_ = 0;
}
inline float GetVariableListRes_Variable::fvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.fvar)
  return _internal_fvar();
}
inline void GetVariableListRes_Variable::set_fvar(float value) {
  _internal_set_fvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.fvar)
}
inline float GetVariableListRes_Variable::_internal_fvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fvar_;
}
inline void GetVariableListRes_Variable::_internal_set_fvar(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fvar_ = value;
}

// bool bvar = 12;
inline void GetVariableListRes_Variable::clear_bvar() {
  _impl_.bvar_ = false;
}
inline bool GetVariableListRes_Variable::bvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.bvar)
  return _internal_bvar();
}
inline void GetVariableListRes_Variable::set_bvar(bool value) {
  _internal_set_bvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.bvar)
}
inline bool GetVariableListRes_Variable::_internal_bvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bvar_;
}
inline void GetVariableListRes_Variable::_internal_set_bvar(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bvar_ = value;
}

// int32 mvar = 13;
inline void GetVariableListRes_Variable::clear_mvar() {
  _impl_.mvar_ = 0;
}
inline ::int32_t GetVariableListRes_Variable::mvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.mvar)
  return _internal_mvar();
}
inline void GetVariableListRes_Variable::set_mvar(::int32_t value) {
  _internal_set_mvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.mvar)
}
inline ::int32_t GetVariableListRes_Variable::_internal_mvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mvar_;
}
inline void GetVariableListRes_Variable::_internal_set_mvar(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mvar_ = value;
}

// repeated float jpos = 14;
inline int GetVariableListRes_Variable::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int GetVariableListRes_Variable::jpos_size() const {
  return _internal_jpos_size();
}
inline void GetVariableListRes_Variable::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float GetVariableListRes_Variable::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.jpos)
  return _internal_jpos().Get(index);
}
inline void GetVariableListRes_Variable::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.jpos)
}
inline void GetVariableListRes_Variable::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetVariableListRes_Variable::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* GetVariableListRes_Variable::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetVariableListRes_Variable::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetVariableListRes_Variable::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// repeated float tpos = 15;
inline int GetVariableListRes_Variable::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int GetVariableListRes_Variable::tpos_size() const {
  return _internal_tpos_size();
}
inline void GetVariableListRes_Variable::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float GetVariableListRes_Variable::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.tpos)
  return _internal_tpos().Get(index);
}
inline void GetVariableListRes_Variable::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.tpos)
}
inline void GetVariableListRes_Variable::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetVariableListRes_Variable::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* GetVariableListRes_Variable::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetVariableListRes.Variable.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetVariableListRes_Variable::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetVariableListRes_Variable::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// -------------------------------------------------------------------

// GetVariableListRes

// repeated .IndyFramework.Protobuf.HRI.GetVariableListRes.Variable variables = 4;
inline int GetVariableListRes::_internal_variables_size() const {
  return _internal_variables().size();
}
inline int GetVariableListRes::variables_size() const {
  return _internal_variables_size();
}
inline void GetVariableListRes::clear_variables() {
  _internal_mutable_variables()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable* GetVariableListRes::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVariableListRes.variables)
  return _internal_mutable_variables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable >*
GetVariableListRes::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetVariableListRes.variables)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variables();
}
inline const ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable& GetVariableListRes::variables(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.variables)
    return _internal_variables().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable* GetVariableListRes::add_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable* _add = _internal_mutable_variables()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetVariableListRes.variables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable >&
GetVariableListRes::variables() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetVariableListRes.variables)
  return _internal_variables();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable>&
GetVariableListRes::_internal_variables() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variables_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetVariableListRes_Variable>*
GetVariableListRes::_internal_mutable_variables() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variables_;
}

// string msg = 100;
inline void GetVariableListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetVariableListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetVariableListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVariableListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetVariableListRes.msg)
}
inline std::string* GetVariableListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetVariableListRes.msg)
  return _s;
}
inline const std::string& GetVariableListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetVariableListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetVariableListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetVariableListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetVariableListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetVariableListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetVariableListRes.msg)
}

// -------------------------------------------------------------------

// GetMonitoringVariableListReq

// -------------------------------------------------------------------

// GetMonitoringVariableListRes_MonitorVariable

// int32 addr = 1;
inline void GetMonitoringVariableListRes_MonitorVariable::clear_addr() {
  _impl_.addr_ = 0;
}
inline ::int32_t GetMonitoringVariableListRes_MonitorVariable::addr() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.addr)
  return _internal_addr();
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_addr(::int32_t value) {
  _internal_set_addr(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.addr)
}
inline ::int32_t GetMonitoringVariableListRes_MonitorVariable::_internal_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr_;
}
inline void GetMonitoringVariableListRes_MonitorVariable::_internal_set_addr(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_ = value;
}

// string type = 2;
inline void GetMonitoringVariableListRes_MonitorVariable::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& GetMonitoringVariableListRes_MonitorVariable::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMonitoringVariableListRes_MonitorVariable::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.type)
}
inline std::string* GetMonitoringVariableListRes_MonitorVariable::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.type)
  return _s;
}
inline const std::string& GetMonitoringVariableListRes_MonitorVariable::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void GetMonitoringVariableListRes_MonitorVariable::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* GetMonitoringVariableListRes_MonitorVariable::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* GetMonitoringVariableListRes_MonitorVariable::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.type)
  return _impl_.type_.Release();
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.type)
}

// int32 ivar = 10;
inline void GetMonitoringVariableListRes_MonitorVariable::clear_ivar() {
  _impl_.ivar_ = 0;
}
inline ::int32_t GetMonitoringVariableListRes_MonitorVariable::ivar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.ivar)
  return _internal_ivar();
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_ivar(::int32_t value) {
  _internal_set_ivar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.ivar)
}
inline ::int32_t GetMonitoringVariableListRes_MonitorVariable::_internal_ivar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ivar_;
}
inline void GetMonitoringVariableListRes_MonitorVariable::_internal_set_ivar(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ivar_ = value;
}

// float fvar = 11;
inline void GetMonitoringVariableListRes_MonitorVariable::clear_fvar() {
  _impl_.fvar_ = 0;
}
inline float GetMonitoringVariableListRes_MonitorVariable::fvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.fvar)
  return _internal_fvar();
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_fvar(float value) {
  _internal_set_fvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.fvar)
}
inline float GetMonitoringVariableListRes_MonitorVariable::_internal_fvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fvar_;
}
inline void GetMonitoringVariableListRes_MonitorVariable::_internal_set_fvar(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fvar_ = value;
}

// bool bvar = 12;
inline void GetMonitoringVariableListRes_MonitorVariable::clear_bvar() {
  _impl_.bvar_ = false;
}
inline bool GetMonitoringVariableListRes_MonitorVariable::bvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.bvar)
  return _internal_bvar();
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_bvar(bool value) {
  _internal_set_bvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.bvar)
}
inline bool GetMonitoringVariableListRes_MonitorVariable::_internal_bvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bvar_;
}
inline void GetMonitoringVariableListRes_MonitorVariable::_internal_set_bvar(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bvar_ = value;
}

// int32 mvar = 13;
inline void GetMonitoringVariableListRes_MonitorVariable::clear_mvar() {
  _impl_.mvar_ = 0;
}
inline ::int32_t GetMonitoringVariableListRes_MonitorVariable::mvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.mvar)
  return _internal_mvar();
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_mvar(::int32_t value) {
  _internal_set_mvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.mvar)
}
inline ::int32_t GetMonitoringVariableListRes_MonitorVariable::_internal_mvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mvar_;
}
inline void GetMonitoringVariableListRes_MonitorVariable::_internal_set_mvar(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mvar_ = value;
}

// repeated float jpos = 14;
inline int GetMonitoringVariableListRes_MonitorVariable::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int GetMonitoringVariableListRes_MonitorVariable::jpos_size() const {
  return _internal_jpos_size();
}
inline void GetMonitoringVariableListRes_MonitorVariable::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float GetMonitoringVariableListRes_MonitorVariable::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.jpos)
  return _internal_jpos().Get(index);
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.jpos)
}
inline void GetMonitoringVariableListRes_MonitorVariable::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetMonitoringVariableListRes_MonitorVariable::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* GetMonitoringVariableListRes_MonitorVariable::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetMonitoringVariableListRes_MonitorVariable::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetMonitoringVariableListRes_MonitorVariable::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// repeated float tpos = 15;
inline int GetMonitoringVariableListRes_MonitorVariable::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int GetMonitoringVariableListRes_MonitorVariable::tpos_size() const {
  return _internal_tpos_size();
}
inline void GetMonitoringVariableListRes_MonitorVariable::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float GetMonitoringVariableListRes_MonitorVariable::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.tpos)
  return _internal_tpos().Get(index);
}
inline void GetMonitoringVariableListRes_MonitorVariable::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.tpos)
}
inline void GetMonitoringVariableListRes_MonitorVariable::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& GetMonitoringVariableListRes_MonitorVariable::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* GetMonitoringVariableListRes_MonitorVariable::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& GetMonitoringVariableListRes_MonitorVariable::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* GetMonitoringVariableListRes_MonitorVariable::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// -------------------------------------------------------------------

// GetMonitoringVariableListRes

// repeated .IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.MonitorVariable variables = 3;
inline int GetMonitoringVariableListRes::_internal_variables_size() const {
  return _internal_variables().size();
}
inline int GetMonitoringVariableListRes::variables_size() const {
  return _internal_variables_size();
}
inline void GetMonitoringVariableListRes::clear_variables() {
  _internal_mutable_variables()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable* GetMonitoringVariableListRes::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.variables)
  return _internal_mutable_variables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable >*
GetMonitoringVariableListRes::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.variables)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variables();
}
inline const ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable& GetMonitoringVariableListRes::variables(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.variables)
    return _internal_variables().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable* GetMonitoringVariableListRes::add_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable* _add = _internal_mutable_variables()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.variables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable >&
GetMonitoringVariableListRes::variables() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.variables)
  return _internal_variables();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable>&
GetMonitoringVariableListRes::_internal_variables() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variables_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GetMonitoringVariableListRes_MonitorVariable>*
GetMonitoringVariableListRes::_internal_mutable_variables() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variables_;
}

// string msg = 100;
inline void GetMonitoringVariableListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetMonitoringVariableListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMonitoringVariableListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.msg)
}
inline std::string* GetMonitoringVariableListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.msg)
  return _s;
}
inline const std::string& GetMonitoringVariableListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetMonitoringVariableListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetMonitoringVariableListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetMonitoringVariableListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.msg)
  return _impl_.msg_.Release();
}
inline void GetMonitoringVariableListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetMonitoringVariableListRes.msg)
}

// -------------------------------------------------------------------

// SetMonitoringVariableListReq_MonitorVariable

// int32 addr = 1;
inline void SetMonitoringVariableListReq_MonitorVariable::clear_addr() {
  _impl_.addr_ = 0;
}
inline ::int32_t SetMonitoringVariableListReq_MonitorVariable::addr() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.addr)
  return _internal_addr();
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_addr(::int32_t value) {
  _internal_set_addr(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.addr)
}
inline ::int32_t SetMonitoringVariableListReq_MonitorVariable::_internal_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr_;
}
inline void SetMonitoringVariableListReq_MonitorVariable::_internal_set_addr(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_ = value;
}

// string type = 2;
inline void SetMonitoringVariableListReq_MonitorVariable::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& SetMonitoringVariableListReq_MonitorVariable::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMonitoringVariableListReq_MonitorVariable::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.type)
}
inline std::string* SetMonitoringVariableListReq_MonitorVariable::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.type)
  return _s;
}
inline const std::string& SetMonitoringVariableListReq_MonitorVariable::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void SetMonitoringVariableListReq_MonitorVariable::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* SetMonitoringVariableListReq_MonitorVariable::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* SetMonitoringVariableListReq_MonitorVariable::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.type)
  return _impl_.type_.Release();
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.type)
}

// int32 ivar = 10;
inline void SetMonitoringVariableListReq_MonitorVariable::clear_ivar() {
  _impl_.ivar_ = 0;
}
inline ::int32_t SetMonitoringVariableListReq_MonitorVariable::ivar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.ivar)
  return _internal_ivar();
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_ivar(::int32_t value) {
  _internal_set_ivar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.ivar)
}
inline ::int32_t SetMonitoringVariableListReq_MonitorVariable::_internal_ivar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ivar_;
}
inline void SetMonitoringVariableListReq_MonitorVariable::_internal_set_ivar(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ivar_ = value;
}

// float fvar = 11;
inline void SetMonitoringVariableListReq_MonitorVariable::clear_fvar() {
  _impl_.fvar_ = 0;
}
inline float SetMonitoringVariableListReq_MonitorVariable::fvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.fvar)
  return _internal_fvar();
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_fvar(float value) {
  _internal_set_fvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.fvar)
}
inline float SetMonitoringVariableListReq_MonitorVariable::_internal_fvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fvar_;
}
inline void SetMonitoringVariableListReq_MonitorVariable::_internal_set_fvar(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fvar_ = value;
}

// bool bvar = 12;
inline void SetMonitoringVariableListReq_MonitorVariable::clear_bvar() {
  _impl_.bvar_ = false;
}
inline bool SetMonitoringVariableListReq_MonitorVariable::bvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.bvar)
  return _internal_bvar();
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_bvar(bool value) {
  _internal_set_bvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.bvar)
}
inline bool SetMonitoringVariableListReq_MonitorVariable::_internal_bvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bvar_;
}
inline void SetMonitoringVariableListReq_MonitorVariable::_internal_set_bvar(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bvar_ = value;
}

// int32 mvar = 13;
inline void SetMonitoringVariableListReq_MonitorVariable::clear_mvar() {
  _impl_.mvar_ = 0;
}
inline ::int32_t SetMonitoringVariableListReq_MonitorVariable::mvar() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.mvar)
  return _internal_mvar();
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_mvar(::int32_t value) {
  _internal_set_mvar(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.mvar)
}
inline ::int32_t SetMonitoringVariableListReq_MonitorVariable::_internal_mvar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mvar_;
}
inline void SetMonitoringVariableListReq_MonitorVariable::_internal_set_mvar(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mvar_ = value;
}

// repeated float jpos = 14;
inline int SetMonitoringVariableListReq_MonitorVariable::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int SetMonitoringVariableListReq_MonitorVariable::jpos_size() const {
  return _internal_jpos_size();
}
inline void SetMonitoringVariableListReq_MonitorVariable::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float SetMonitoringVariableListReq_MonitorVariable::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.jpos)
  return _internal_jpos().Get(index);
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.jpos)
}
inline void SetMonitoringVariableListReq_MonitorVariable::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& SetMonitoringVariableListReq_MonitorVariable::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* SetMonitoringVariableListReq_MonitorVariable::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& SetMonitoringVariableListReq_MonitorVariable::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* SetMonitoringVariableListReq_MonitorVariable::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// repeated float tpos = 15;
inline int SetMonitoringVariableListReq_MonitorVariable::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int SetMonitoringVariableListReq_MonitorVariable::tpos_size() const {
  return _internal_tpos_size();
}
inline void SetMonitoringVariableListReq_MonitorVariable::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float SetMonitoringVariableListReq_MonitorVariable::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.tpos)
  return _internal_tpos().Get(index);
}
inline void SetMonitoringVariableListReq_MonitorVariable::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.tpos)
}
inline void SetMonitoringVariableListReq_MonitorVariable::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& SetMonitoringVariableListReq_MonitorVariable::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* SetMonitoringVariableListReq_MonitorVariable::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& SetMonitoringVariableListReq_MonitorVariable::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* SetMonitoringVariableListReq_MonitorVariable::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// -------------------------------------------------------------------

// SetMonitoringVariableListReq

// repeated .IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.MonitorVariable variables = 3;
inline int SetMonitoringVariableListReq::_internal_variables_size() const {
  return _internal_variables().size();
}
inline int SetMonitoringVariableListReq::variables_size() const {
  return _internal_variables_size();
}
inline void SetMonitoringVariableListReq::clear_variables() {
  _internal_mutable_variables()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable* SetMonitoringVariableListReq::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.variables)
  return _internal_mutable_variables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable >*
SetMonitoringVariableListReq::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.variables)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variables();
}
inline const ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable& SetMonitoringVariableListReq::variables(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.variables)
    return _internal_variables().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable* SetMonitoringVariableListReq::add_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable* _add = _internal_mutable_variables()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.variables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable >&
SetMonitoringVariableListReq::variables() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.SetMonitoringVariableListReq.variables)
  return _internal_variables();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable>&
SetMonitoringVariableListReq::_internal_variables() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variables_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::SetMonitoringVariableListReq_MonitorVariable>*
SetMonitoringVariableListReq::_internal_mutable_variables() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variables_;
}

// -------------------------------------------------------------------

// SetMonitoringVariableListRes

// string msg = 100;
inline void SetMonitoringVariableListRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetMonitoringVariableListRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMonitoringVariableListRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes.msg)
}
inline std::string* SetMonitoringVariableListRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes.msg)
  return _s;
}
inline const std::string& SetMonitoringVariableListRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetMonitoringVariableListRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetMonitoringVariableListRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetMonitoringVariableListRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes.msg)
  return _impl_.msg_.Release();
}
inline void SetMonitoringVariableListRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetMonitoringVariableListRes.msg)
}

// -------------------------------------------------------------------

// InverseKinematicsReq

// repeated float tpos = 1;
inline int InverseKinematicsReq::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int InverseKinematicsReq::tpos_size() const {
  return _internal_tpos_size();
}
inline void InverseKinematicsReq::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float InverseKinematicsReq::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.InverseKinematicsReq.tpos)
  return _internal_tpos().Get(index);
}
inline void InverseKinematicsReq::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.InverseKinematicsReq.tpos)
}
inline void InverseKinematicsReq::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.InverseKinematicsReq.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& InverseKinematicsReq::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.InverseKinematicsReq.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* InverseKinematicsReq::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.InverseKinematicsReq.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& InverseKinematicsReq::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* InverseKinematicsReq::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// repeated float init_jpos = 2;
inline int InverseKinematicsReq::_internal_init_jpos_size() const {
  return _internal_init_jpos().size();
}
inline int InverseKinematicsReq::init_jpos_size() const {
  return _internal_init_jpos_size();
}
inline void InverseKinematicsReq::clear_init_jpos() {
  _internal_mutable_init_jpos()->Clear();
}
inline float InverseKinematicsReq::init_jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.InverseKinematicsReq.init_jpos)
  return _internal_init_jpos().Get(index);
}
inline void InverseKinematicsReq::set_init_jpos(int index, float value) {
  _internal_mutable_init_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.InverseKinematicsReq.init_jpos)
}
inline void InverseKinematicsReq::add_init_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_init_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.InverseKinematicsReq.init_jpos)
}
inline const ::google::protobuf::RepeatedField<float>& InverseKinematicsReq::init_jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.InverseKinematicsReq.init_jpos)
  return _internal_init_jpos();
}
inline ::google::protobuf::RepeatedField<float>* InverseKinematicsReq::mutable_init_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.InverseKinematicsReq.init_jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_init_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& InverseKinematicsReq::_internal_init_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.init_jpos_;
}
inline ::google::protobuf::RepeatedField<float>* InverseKinematicsReq::_internal_mutable_init_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.init_jpos_;
}

// -------------------------------------------------------------------

// InverseKinematicsRes

// repeated float jpos = 1;
inline int InverseKinematicsRes::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int InverseKinematicsRes::jpos_size() const {
  return _internal_jpos_size();
}
inline void InverseKinematicsRes::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float InverseKinematicsRes::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.InverseKinematicsRes.jpos)
  return _internal_jpos().Get(index);
}
inline void InverseKinematicsRes::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.InverseKinematicsRes.jpos)
}
inline void InverseKinematicsRes::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.InverseKinematicsRes.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& InverseKinematicsRes::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.InverseKinematicsRes.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* InverseKinematicsRes::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.InverseKinematicsRes.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& InverseKinematicsRes::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* InverseKinematicsRes::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// string msg = 100;
inline void InverseKinematicsRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& InverseKinematicsRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.InverseKinematicsRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InverseKinematicsRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.InverseKinematicsRes.msg)
}
inline std::string* InverseKinematicsRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.InverseKinematicsRes.msg)
  return _s;
}
inline const std::string& InverseKinematicsRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void InverseKinematicsRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* InverseKinematicsRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* InverseKinematicsRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.InverseKinematicsRes.msg)
  return _impl_.msg_.Release();
}
inline void InverseKinematicsRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.InverseKinematicsRes.msg)
}

// -------------------------------------------------------------------

// CalculateRelativePoseReq

// repeated float start_pos = 1;
inline int CalculateRelativePoseReq::_internal_start_pos_size() const {
  return _internal_start_pos().size();
}
inline int CalculateRelativePoseReq::start_pos_size() const {
  return _internal_start_pos_size();
}
inline void CalculateRelativePoseReq::clear_start_pos() {
  _internal_mutable_start_pos()->Clear();
}
inline float CalculateRelativePoseReq::start_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.start_pos)
  return _internal_start_pos().Get(index);
}
inline void CalculateRelativePoseReq::set_start_pos(int index, float value) {
  _internal_mutable_start_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.start_pos)
}
inline void CalculateRelativePoseReq::add_start_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_start_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.start_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CalculateRelativePoseReq::start_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.start_pos)
  return _internal_start_pos();
}
inline ::google::protobuf::RepeatedField<float>* CalculateRelativePoseReq::mutable_start_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.start_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_start_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CalculateRelativePoseReq::_internal_start_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CalculateRelativePoseReq::_internal_mutable_start_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.start_pos_;
}

// repeated float end_pos = 2;
inline int CalculateRelativePoseReq::_internal_end_pos_size() const {
  return _internal_end_pos().size();
}
inline int CalculateRelativePoseReq::end_pos_size() const {
  return _internal_end_pos_size();
}
inline void CalculateRelativePoseReq::clear_end_pos() {
  _internal_mutable_end_pos()->Clear();
}
inline float CalculateRelativePoseReq::end_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.end_pos)
  return _internal_end_pos().Get(index);
}
inline void CalculateRelativePoseReq::set_end_pos(int index, float value) {
  _internal_mutable_end_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.end_pos)
}
inline void CalculateRelativePoseReq::add_end_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_end_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.end_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CalculateRelativePoseReq::end_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.end_pos)
  return _internal_end_pos();
}
inline ::google::protobuf::RepeatedField<float>* CalculateRelativePoseReq::mutable_end_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.end_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_end_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CalculateRelativePoseReq::_internal_end_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CalculateRelativePoseReq::_internal_mutable_end_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.end_pos_;
}

// .IndyFramework.Protobuf.Shared.TaskBaseType base_type = 3;
inline void CalculateRelativePoseReq::clear_base_type() {
  _impl_.base_type_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::TaskBaseType CalculateRelativePoseReq::base_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.base_type)
  return _internal_base_type();
}
inline void CalculateRelativePoseReq::set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value) {
  _internal_set_base_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateRelativePoseReq.base_type)
}
inline ::IndyFramework::Protobuf::Shared::TaskBaseType CalculateRelativePoseReq::_internal_base_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::TaskBaseType>(_impl_.base_type_);
}
inline void CalculateRelativePoseReq::_internal_set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_type_ = value;
}

// -------------------------------------------------------------------

// CalculateRelativePoseRes

// repeated float relative_pos = 1;
inline int CalculateRelativePoseRes::_internal_relative_pos_size() const {
  return _internal_relative_pos().size();
}
inline int CalculateRelativePoseRes::relative_pos_size() const {
  return _internal_relative_pos_size();
}
inline void CalculateRelativePoseRes::clear_relative_pos() {
  _internal_mutable_relative_pos()->Clear();
}
inline float CalculateRelativePoseRes::relative_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.relative_pos)
  return _internal_relative_pos().Get(index);
}
inline void CalculateRelativePoseRes::set_relative_pos(int index, float value) {
  _internal_mutable_relative_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.relative_pos)
}
inline void CalculateRelativePoseRes::add_relative_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_relative_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.relative_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CalculateRelativePoseRes::relative_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.relative_pos)
  return _internal_relative_pos();
}
inline ::google::protobuf::RepeatedField<float>* CalculateRelativePoseRes::mutable_relative_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.relative_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_relative_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CalculateRelativePoseRes::_internal_relative_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.relative_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CalculateRelativePoseRes::_internal_mutable_relative_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.relative_pos_;
}

// string msg = 100;
inline void CalculateRelativePoseRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CalculateRelativePoseRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CalculateRelativePoseRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.msg)
}
inline std::string* CalculateRelativePoseRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.msg)
  return _s;
}
inline const std::string& CalculateRelativePoseRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void CalculateRelativePoseRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CalculateRelativePoseRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* CalculateRelativePoseRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.msg)
  return _impl_.msg_.Release();
}
inline void CalculateRelativePoseRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.CalculateRelativePoseRes.msg)
}

// -------------------------------------------------------------------

// CalculateCurrentPoseRelReq

// repeated float current_pos = 1;
inline int CalculateCurrentPoseRelReq::_internal_current_pos_size() const {
  return _internal_current_pos().size();
}
inline int CalculateCurrentPoseRelReq::current_pos_size() const {
  return _internal_current_pos_size();
}
inline void CalculateCurrentPoseRelReq::clear_current_pos() {
  _internal_mutable_current_pos()->Clear();
}
inline float CalculateCurrentPoseRelReq::current_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.current_pos)
  return _internal_current_pos().Get(index);
}
inline void CalculateCurrentPoseRelReq::set_current_pos(int index, float value) {
  _internal_mutable_current_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.current_pos)
}
inline void CalculateCurrentPoseRelReq::add_current_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_current_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.current_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CalculateCurrentPoseRelReq::current_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.current_pos)
  return _internal_current_pos();
}
inline ::google::protobuf::RepeatedField<float>* CalculateCurrentPoseRelReq::mutable_current_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.current_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_current_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CalculateCurrentPoseRelReq::_internal_current_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CalculateCurrentPoseRelReq::_internal_mutable_current_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.current_pos_;
}

// repeated float relative_pos = 2;
inline int CalculateCurrentPoseRelReq::_internal_relative_pos_size() const {
  return _internal_relative_pos().size();
}
inline int CalculateCurrentPoseRelReq::relative_pos_size() const {
  return _internal_relative_pos_size();
}
inline void CalculateCurrentPoseRelReq::clear_relative_pos() {
  _internal_mutable_relative_pos()->Clear();
}
inline float CalculateCurrentPoseRelReq::relative_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.relative_pos)
  return _internal_relative_pos().Get(index);
}
inline void CalculateCurrentPoseRelReq::set_relative_pos(int index, float value) {
  _internal_mutable_relative_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.relative_pos)
}
inline void CalculateCurrentPoseRelReq::add_relative_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_relative_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.relative_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CalculateCurrentPoseRelReq::relative_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.relative_pos)
  return _internal_relative_pos();
}
inline ::google::protobuf::RepeatedField<float>* CalculateCurrentPoseRelReq::mutable_relative_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.relative_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_relative_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CalculateCurrentPoseRelReq::_internal_relative_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.relative_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CalculateCurrentPoseRelReq::_internal_mutable_relative_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.relative_pos_;
}

// .IndyFramework.Protobuf.Shared.TaskBaseType base_type = 3;
inline void CalculateCurrentPoseRelReq::clear_base_type() {
  _impl_.base_type_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::TaskBaseType CalculateCurrentPoseRelReq::base_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.base_type)
  return _internal_base_type();
}
inline void CalculateCurrentPoseRelReq::set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value) {
  _internal_set_base_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelReq.base_type)
}
inline ::IndyFramework::Protobuf::Shared::TaskBaseType CalculateCurrentPoseRelReq::_internal_base_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::TaskBaseType>(_impl_.base_type_);
}
inline void CalculateCurrentPoseRelReq::_internal_set_base_type(::IndyFramework::Protobuf::Shared::TaskBaseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_type_ = value;
}

// -------------------------------------------------------------------

// CalculateCurrentPoseRelRes

// repeated float calculated_pos = 1;
inline int CalculateCurrentPoseRelRes::_internal_calculated_pos_size() const {
  return _internal_calculated_pos().size();
}
inline int CalculateCurrentPoseRelRes::calculated_pos_size() const {
  return _internal_calculated_pos_size();
}
inline void CalculateCurrentPoseRelRes::clear_calculated_pos() {
  _internal_mutable_calculated_pos()->Clear();
}
inline float CalculateCurrentPoseRelRes::calculated_pos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.calculated_pos)
  return _internal_calculated_pos().Get(index);
}
inline void CalculateCurrentPoseRelRes::set_calculated_pos(int index, float value) {
  _internal_mutable_calculated_pos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.calculated_pos)
}
inline void CalculateCurrentPoseRelRes::add_calculated_pos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_calculated_pos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.calculated_pos)
}
inline const ::google::protobuf::RepeatedField<float>& CalculateCurrentPoseRelRes::calculated_pos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.calculated_pos)
  return _internal_calculated_pos();
}
inline ::google::protobuf::RepeatedField<float>* CalculateCurrentPoseRelRes::mutable_calculated_pos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.calculated_pos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_calculated_pos();
}

inline const ::google::protobuf::RepeatedField<float>& CalculateCurrentPoseRelRes::_internal_calculated_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.calculated_pos_;
}
inline ::google::protobuf::RepeatedField<float>* CalculateCurrentPoseRelRes::_internal_mutable_calculated_pos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.calculated_pos_;
}

// string msg = 100;
inline void CalculateCurrentPoseRelRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CalculateCurrentPoseRelRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CalculateCurrentPoseRelRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.msg)
}
inline std::string* CalculateCurrentPoseRelRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.msg)
  return _s;
}
inline const std::string& CalculateCurrentPoseRelRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void CalculateCurrentPoseRelRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CalculateCurrentPoseRelRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* CalculateCurrentPoseRelRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.msg)
  return _impl_.msg_.Release();
}
inline void CalculateCurrentPoseRelRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.CalculateCurrentPoseRelRes.msg)
}

// -------------------------------------------------------------------

// DIConfig

// int32 function_code = 1;
inline void DIConfig::clear_function_code() {
  _impl_.function_code_ = 0;
}
inline ::int32_t DIConfig::function_code() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DIConfig.function_code)
  return _internal_function_code();
}
inline void DIConfig::set_function_code(::int32_t value) {
  _internal_set_function_code(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DIConfig.function_code)
}
inline ::int32_t DIConfig::_internal_function_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.function_code_;
}
inline void DIConfig::_internal_set_function_code(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.function_code_ = value;
}

// string function_name = 2;
inline void DIConfig::clear_function_name() {
  _impl_.function_name_.ClearToEmpty();
}
inline const std::string& DIConfig::function_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DIConfig.function_name)
  return _internal_function_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DIConfig::set_function_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.function_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DIConfig.function_name)
}
inline std::string* DIConfig::mutable_function_name() {
  std::string* _s = _internal_mutable_function_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DIConfig.function_name)
  return _s;
}
inline const std::string& DIConfig::_internal_function_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.function_name_.Get();
}
inline void DIConfig::_internal_set_function_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.function_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DIConfig::_internal_mutable_function_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.function_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DIConfig::release_function_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.DIConfig.function_name)
  return _impl_.function_name_.Release();
}
inline void DIConfig::set_allocated_function_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.function_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.function_name_.IsDefault()) {
          _impl_.function_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.DIConfig.function_name)
}

// repeated .Nrmk.IndyFramework.DigitalSignal triggerSignals = 3;
inline int DIConfig::_internal_triggersignals_size() const {
  return _internal_triggersignals().size();
}
inline int DIConfig::triggersignals_size() const {
  return _internal_triggersignals_size();
}
inline ::Nrmk::IndyFramework::DigitalSignal* DIConfig::mutable_triggersignals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DIConfig.triggerSignals)
  return _internal_mutable_triggersignals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
DIConfig::mutable_triggersignals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DIConfig.triggerSignals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_triggersignals();
}
inline const ::Nrmk::IndyFramework::DigitalSignal& DIConfig::triggersignals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DIConfig.triggerSignals)
    return _internal_triggersignals().Get(index);
}
inline ::Nrmk::IndyFramework::DigitalSignal* DIConfig::add_triggersignals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Nrmk::IndyFramework::DigitalSignal* _add = _internal_mutable_triggersignals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DIConfig.triggerSignals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
DIConfig::triggersignals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DIConfig.triggerSignals)
  return _internal_triggersignals();
}
inline const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>&
DIConfig::_internal_triggersignals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggersignals_;
}
inline ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>*
DIConfig::_internal_mutable_triggersignals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.triggersignals_;
}

// repeated .Nrmk.IndyFramework.DigitalSignal successSignals = 4;
inline int DIConfig::_internal_successsignals_size() const {
  return _internal_successsignals().size();
}
inline int DIConfig::successsignals_size() const {
  return _internal_successsignals_size();
}
inline ::Nrmk::IndyFramework::DigitalSignal* DIConfig::mutable_successsignals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DIConfig.successSignals)
  return _internal_mutable_successsignals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
DIConfig::mutable_successsignals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DIConfig.successSignals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_successsignals();
}
inline const ::Nrmk::IndyFramework::DigitalSignal& DIConfig::successsignals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DIConfig.successSignals)
    return _internal_successsignals().Get(index);
}
inline ::Nrmk::IndyFramework::DigitalSignal* DIConfig::add_successsignals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Nrmk::IndyFramework::DigitalSignal* _add = _internal_mutable_successsignals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DIConfig.successSignals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
DIConfig::successsignals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DIConfig.successSignals)
  return _internal_successsignals();
}
inline const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>&
DIConfig::_internal_successsignals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.successsignals_;
}
inline ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>*
DIConfig::_internal_mutable_successsignals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.successsignals_;
}

// repeated .Nrmk.IndyFramework.DigitalSignal failureSignals = 5;
inline int DIConfig::_internal_failuresignals_size() const {
  return _internal_failuresignals().size();
}
inline int DIConfig::failuresignals_size() const {
  return _internal_failuresignals_size();
}
inline ::Nrmk::IndyFramework::DigitalSignal* DIConfig::mutable_failuresignals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DIConfig.failureSignals)
  return _internal_mutable_failuresignals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
DIConfig::mutable_failuresignals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DIConfig.failureSignals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_failuresignals();
}
inline const ::Nrmk::IndyFramework::DigitalSignal& DIConfig::failuresignals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DIConfig.failureSignals)
    return _internal_failuresignals().Get(index);
}
inline ::Nrmk::IndyFramework::DigitalSignal* DIConfig::add_failuresignals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Nrmk::IndyFramework::DigitalSignal* _add = _internal_mutable_failuresignals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DIConfig.failureSignals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
DIConfig::failuresignals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DIConfig.failureSignals)
  return _internal_failuresignals();
}
inline const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>&
DIConfig::_internal_failuresignals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.failuresignals_;
}
inline ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>*
DIConfig::_internal_mutable_failuresignals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.failuresignals_;
}

// -------------------------------------------------------------------

// DIConfigList

// repeated .IndyFramework.Protobuf.HRI.DIConfig di_configs = 1;
inline int DIConfigList::_internal_di_configs_size() const {
  return _internal_di_configs().size();
}
inline int DIConfigList::di_configs_size() const {
  return _internal_di_configs_size();
}
inline void DIConfigList::clear_di_configs() {
  _internal_mutable_di_configs()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::DIConfig* DIConfigList::mutable_di_configs(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DIConfigList.di_configs)
  return _internal_mutable_di_configs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DIConfig >*
DIConfigList::mutable_di_configs() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DIConfigList.di_configs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_di_configs();
}
inline const ::IndyFramework::Protobuf::HRI::DIConfig& DIConfigList::di_configs(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DIConfigList.di_configs)
    return _internal_di_configs().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::DIConfig* DIConfigList::add_di_configs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::DIConfig* _add = _internal_mutable_di_configs()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DIConfigList.di_configs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DIConfig >&
DIConfigList::di_configs() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DIConfigList.di_configs)
  return _internal_di_configs();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DIConfig>&
DIConfigList::_internal_di_configs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.di_configs_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DIConfig>*
DIConfigList::_internal_mutable_di_configs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.di_configs_;
}

// -------------------------------------------------------------------

// DOConfig

// int32 state_code = 1;
inline void DOConfig::clear_state_code() {
  _impl_.state_code_ = 0;
}
inline ::int32_t DOConfig::state_code() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DOConfig.state_code)
  return _internal_state_code();
}
inline void DOConfig::set_state_code(::int32_t value) {
  _internal_set_state_code(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DOConfig.state_code)
}
inline ::int32_t DOConfig::_internal_state_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_code_;
}
inline void DOConfig::_internal_set_state_code(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_code_ = value;
}

// string state_name = 2;
inline void DOConfig::clear_state_name() {
  _impl_.state_name_.ClearToEmpty();
}
inline const std::string& DOConfig::state_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DOConfig.state_name)
  return _internal_state_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DOConfig::set_state_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DOConfig.state_name)
}
inline std::string* DOConfig::mutable_state_name() {
  std::string* _s = _internal_mutable_state_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DOConfig.state_name)
  return _s;
}
inline const std::string& DOConfig::_internal_state_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_name_.Get();
}
inline void DOConfig::_internal_set_state_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DOConfig::_internal_mutable_state_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.state_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DOConfig::release_state_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.DOConfig.state_name)
  return _impl_.state_name_.Release();
}
inline void DOConfig::set_allocated_state_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_name_.IsDefault()) {
          _impl_.state_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.DOConfig.state_name)
}

// repeated .Nrmk.IndyFramework.DigitalSignal onSignals = 3;
inline int DOConfig::_internal_onsignals_size() const {
  return _internal_onsignals().size();
}
inline int DOConfig::onsignals_size() const {
  return _internal_onsignals_size();
}
inline ::Nrmk::IndyFramework::DigitalSignal* DOConfig::mutable_onsignals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DOConfig.onSignals)
  return _internal_mutable_onsignals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
DOConfig::mutable_onsignals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DOConfig.onSignals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_onsignals();
}
inline const ::Nrmk::IndyFramework::DigitalSignal& DOConfig::onsignals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DOConfig.onSignals)
    return _internal_onsignals().Get(index);
}
inline ::Nrmk::IndyFramework::DigitalSignal* DOConfig::add_onsignals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Nrmk::IndyFramework::DigitalSignal* _add = _internal_mutable_onsignals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DOConfig.onSignals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
DOConfig::onsignals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DOConfig.onSignals)
  return _internal_onsignals();
}
inline const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>&
DOConfig::_internal_onsignals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.onsignals_;
}
inline ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>*
DOConfig::_internal_mutable_onsignals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.onsignals_;
}

// repeated .Nrmk.IndyFramework.DigitalSignal offSignals = 4;
inline int DOConfig::_internal_offsignals_size() const {
  return _internal_offsignals().size();
}
inline int DOConfig::offsignals_size() const {
  return _internal_offsignals_size();
}
inline ::Nrmk::IndyFramework::DigitalSignal* DOConfig::mutable_offsignals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DOConfig.offSignals)
  return _internal_mutable_offsignals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >*
DOConfig::mutable_offsignals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DOConfig.offSignals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_offsignals();
}
inline const ::Nrmk::IndyFramework::DigitalSignal& DOConfig::offsignals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DOConfig.offSignals)
    return _internal_offsignals().Get(index);
}
inline ::Nrmk::IndyFramework::DigitalSignal* DOConfig::add_offsignals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Nrmk::IndyFramework::DigitalSignal* _add = _internal_mutable_offsignals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DOConfig.offSignals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Nrmk::IndyFramework::DigitalSignal >&
DOConfig::offsignals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DOConfig.offSignals)
  return _internal_offsignals();
}
inline const ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>&
DOConfig::_internal_offsignals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offsignals_;
}
inline ::google::protobuf::RepeatedPtrField<::Nrmk::IndyFramework::DigitalSignal>*
DOConfig::_internal_mutable_offsignals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.offsignals_;
}

// -------------------------------------------------------------------

// DOConfigList

// repeated .IndyFramework.Protobuf.HRI.DOConfig do_configs = 1;
inline int DOConfigList::_internal_do_configs_size() const {
  return _internal_do_configs().size();
}
inline int DOConfigList::do_configs_size() const {
  return _internal_do_configs_size();
}
inline void DOConfigList::clear_do_configs() {
  _internal_mutable_do_configs()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::DOConfig* DOConfigList::mutable_do_configs(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DOConfigList.do_configs)
  return _internal_mutable_do_configs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DOConfig >*
DOConfigList::mutable_do_configs() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DOConfigList.do_configs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_do_configs();
}
inline const ::IndyFramework::Protobuf::HRI::DOConfig& DOConfigList::do_configs(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DOConfigList.do_configs)
    return _internal_do_configs().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::DOConfig* DOConfigList::add_do_configs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::DOConfig* _add = _internal_mutable_do_configs()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DOConfigList.do_configs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DOConfig >&
DOConfigList::do_configs() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DOConfigList.do_configs)
  return _internal_do_configs();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DOConfig>&
DOConfigList::_internal_do_configs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.do_configs_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DOConfig>*
DOConfigList::_internal_mutable_do_configs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.do_configs_;
}

// -------------------------------------------------------------------

// GetAutoModeConfigRes

// .IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.AutoModeConfig config = 1;
inline void GetAutoModeConfigRes::clear_config() {
  _impl_.config_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig GetAutoModeConfigRes::config() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.config)
  return _internal_config();
}
inline void GetAutoModeConfigRes::set_config(::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig value) {
  _internal_set_config(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.config)
}
inline ::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig GetAutoModeConfigRes::_internal_config() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig>(_impl_.config_);
}
inline void GetAutoModeConfigRes::_internal_set_config(::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_ = value;
}

// string msg = 100;
inline void GetAutoModeConfigRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetAutoModeConfigRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetAutoModeConfigRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.msg)
}
inline std::string* GetAutoModeConfigRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.msg)
  return _s;
}
inline const std::string& GetAutoModeConfigRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetAutoModeConfigRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetAutoModeConfigRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetAutoModeConfigRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.msg)
  return _impl_.msg_.Release();
}
inline void GetAutoModeConfigRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetAutoModeConfigRes.msg)
}

// -------------------------------------------------------------------

// SetAutoModeReq

// bool on = 1;
inline void SetAutoModeReq::clear_on() {
  _impl_.on_ = false;
}
inline bool SetAutoModeReq::on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetAutoModeReq.on)
  return _internal_on();
}
inline void SetAutoModeReq::set_on(bool value) {
  _internal_set_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetAutoModeReq.on)
}
inline bool SetAutoModeReq::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline void SetAutoModeReq::_internal_set_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.on_ = value;
}

// -------------------------------------------------------------------

// SetAutoModeRes

// string msg = 100;
inline void SetAutoModeRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetAutoModeRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetAutoModeRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetAutoModeRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetAutoModeRes.msg)
}
inline std::string* SetAutoModeRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetAutoModeRes.msg)
  return _s;
}
inline const std::string& SetAutoModeRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetAutoModeRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetAutoModeRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetAutoModeRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetAutoModeRes.msg)
  return _impl_.msg_.Release();
}
inline void SetAutoModeRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetAutoModeRes.msg)
}

// -------------------------------------------------------------------

// CheckAutoModeRes

// bool on = 1;
inline void CheckAutoModeRes::clear_on() {
  _impl_.on_ = false;
}
inline bool CheckAutoModeRes::on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAutoModeRes.on)
  return _internal_on();
}
inline void CheckAutoModeRes::set_on(bool value) {
  _internal_set_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAutoModeRes.on)
}
inline bool CheckAutoModeRes::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline void CheckAutoModeRes::_internal_set_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.on_ = value;
}

// string msg = 100;
inline void CheckAutoModeRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CheckAutoModeRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckAutoModeRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckAutoModeRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckAutoModeRes.msg)
}
inline std::string* CheckAutoModeRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.CheckAutoModeRes.msg)
  return _s;
}
inline const std::string& CheckAutoModeRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void CheckAutoModeRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CheckAutoModeRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* CheckAutoModeRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.CheckAutoModeRes.msg)
  return _impl_.msg_.Release();
}
inline void CheckAutoModeRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.CheckAutoModeRes.msg)
}

// -------------------------------------------------------------------

// CheckReducedModeRes

// bool on = 1;
inline void CheckReducedModeRes::clear_on() {
  _impl_.on_ = false;
}
inline bool CheckReducedModeRes::on() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckReducedModeRes.on)
  return _internal_on();
}
inline void CheckReducedModeRes::set_on(bool value) {
  _internal_set_on(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckReducedModeRes.on)
}
inline bool CheckReducedModeRes::_internal_on() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.on_;
}
inline void CheckReducedModeRes::_internal_set_on(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.on_ = value;
}

// string msg = 100;
inline void CheckReducedModeRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CheckReducedModeRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CheckReducedModeRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckReducedModeRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CheckReducedModeRes.msg)
}
inline std::string* CheckReducedModeRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.CheckReducedModeRes.msg)
  return _s;
}
inline const std::string& CheckReducedModeRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void CheckReducedModeRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CheckReducedModeRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* CheckReducedModeRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.CheckReducedModeRes.msg)
  return _impl_.msg_.Release();
}
inline void CheckReducedModeRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.CheckReducedModeRes.msg)
}

// -------------------------------------------------------------------

// GetReducedRatioRes

// float ratio = 1;
inline void GetReducedRatioRes::clear_ratio() {
  _impl_.ratio_ = 0;
}
inline float GetReducedRatioRes::ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetReducedRatioRes.ratio)
  return _internal_ratio();
}
inline void GetReducedRatioRes::set_ratio(float value) {
  _internal_set_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetReducedRatioRes.ratio)
}
inline float GetReducedRatioRes::_internal_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ratio_;
}
inline void GetReducedRatioRes::_internal_set_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ratio_ = value;
}

// string msg = 100;
inline void GetReducedRatioRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetReducedRatioRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetReducedRatioRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetReducedRatioRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetReducedRatioRes.msg)
}
inline std::string* GetReducedRatioRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetReducedRatioRes.msg)
  return _s;
}
inline const std::string& GetReducedRatioRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetReducedRatioRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetReducedRatioRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetReducedRatioRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetReducedRatioRes.msg)
  return _impl_.msg_.Release();
}
inline void GetReducedRatioRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetReducedRatioRes.msg)
}

// -------------------------------------------------------------------

// GetReducedSpeedRes

// float speed = 1;
inline void GetReducedSpeedRes::clear_speed() {
  _impl_.speed_ = 0;
}
inline float GetReducedSpeedRes::speed() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetReducedSpeedRes.speed)
  return _internal_speed();
}
inline void GetReducedSpeedRes::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetReducedSpeedRes.speed)
}
inline float GetReducedSpeedRes::_internal_speed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speed_;
}
inline void GetReducedSpeedRes::_internal_set_speed(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speed_ = value;
}

// string msg = 100;
inline void GetReducedSpeedRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetReducedSpeedRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetReducedSpeedRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetReducedSpeedRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetReducedSpeedRes.msg)
}
inline std::string* GetReducedSpeedRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetReducedSpeedRes.msg)
  return _s;
}
inline const std::string& GetReducedSpeedRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetReducedSpeedRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetReducedSpeedRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetReducedSpeedRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetReducedSpeedRes.msg)
  return _impl_.msg_.Release();
}
inline void GetReducedSpeedRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetReducedSpeedRes.msg)
}

// -------------------------------------------------------------------

// SetReducedSpeedReq

// float speed = 1;
inline void SetReducedSpeedReq::clear_speed() {
  _impl_.speed_ = 0;
}
inline float SetReducedSpeedReq::speed() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetReducedSpeedReq.speed)
  return _internal_speed();
}
inline void SetReducedSpeedReq::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetReducedSpeedReq.speed)
}
inline float SetReducedSpeedReq::_internal_speed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speed_;
}
inline void SetReducedSpeedReq::_internal_set_speed(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speed_ = value;
}

// -------------------------------------------------------------------

// StopState

// .IndyFramework.Protobuf.HRI.StopState.StopCategory category = 1;
inline void StopState::clear_category() {
  _impl_.category_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::StopState_StopCategory StopState::category() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.StopState.category)
  return _internal_category();
}
inline void StopState::set_category(::IndyFramework::Protobuf::HRI::StopState_StopCategory value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.StopState.category)
}
inline ::IndyFramework::Protobuf::HRI::StopState_StopCategory StopState::_internal_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::StopState_StopCategory>(_impl_.category_);
}
inline void StopState::_internal_set_category(::IndyFramework::Protobuf::HRI::StopState_StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_ = value;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool StopState::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void StopState::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& StopState::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& StopState::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.StopState.response)
  return _internal_response();
}
inline void StopState::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.StopState.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* StopState::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* StopState::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.StopState.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* StopState::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* StopState::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.StopState.response)
  return _msg;
}
inline void StopState::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.StopState.response)
}

// -------------------------------------------------------------------

// SafetyFunctionState

// uint32 id = 1;
inline void SafetyFunctionState::clear_id() {
  _impl_.id_ = 0u;
}
inline ::uint32_t SafetyFunctionState::id() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SafetyFunctionState.id)
  return _internal_id();
}
inline void SafetyFunctionState::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SafetyFunctionState.id)
}
inline ::uint32_t SafetyFunctionState::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SafetyFunctionState::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint32 state = 2;
inline void SafetyFunctionState::clear_state() {
  _impl_.state_ = 0u;
}
inline ::uint32_t SafetyFunctionState::state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SafetyFunctionState.state)
  return _internal_state();
}
inline void SafetyFunctionState::set_state(::uint32_t value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SafetyFunctionState.state)
}
inline ::uint32_t SafetyFunctionState::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void SafetyFunctionState::_internal_set_state(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_ = value;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool SafetyFunctionState::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void SafetyFunctionState::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& SafetyFunctionState::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& SafetyFunctionState::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SafetyFunctionState.response)
  return _internal_response();
}
inline void SafetyFunctionState::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.SafetyFunctionState.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* SafetyFunctionState::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* SafetyFunctionState::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SafetyFunctionState.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* SafetyFunctionState::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* SafetyFunctionState::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SafetyFunctionState.response)
  return _msg;
}
inline void SafetyFunctionState::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SafetyFunctionState.response)
}

// -------------------------------------------------------------------

// GetOnStartProgramConfigReq

// -------------------------------------------------------------------

// GetOnStartProgramConfigRes

// bool auto_run = 1;
inline void GetOnStartProgramConfigRes::clear_auto_run() {
  _impl_.auto_run_ = false;
}
inline bool GetOnStartProgramConfigRes::auto_run() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.auto_run)
  return _internal_auto_run();
}
inline void GetOnStartProgramConfigRes::set_auto_run(bool value) {
  _internal_set_auto_run(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.auto_run)
}
inline bool GetOnStartProgramConfigRes::_internal_auto_run() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auto_run_;
}
inline void GetOnStartProgramConfigRes::_internal_set_auto_run(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auto_run_ = value;
}

// int32 index = 2;
inline void GetOnStartProgramConfigRes::clear_index() {
  _impl_.index_ = 0;
}
inline ::int32_t GetOnStartProgramConfigRes::index() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.index)
  return _internal_index();
}
inline void GetOnStartProgramConfigRes::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.index)
}
inline ::int32_t GetOnStartProgramConfigRes::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void GetOnStartProgramConfigRes::_internal_set_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_ = value;
}

// string file_dir = 3;
inline void GetOnStartProgramConfigRes::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& GetOnStartProgramConfigRes::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOnStartProgramConfigRes::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.file_dir)
}
inline std::string* GetOnStartProgramConfigRes::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.file_dir)
  return _s;
}
inline const std::string& GetOnStartProgramConfigRes::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void GetOnStartProgramConfigRes::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* GetOnStartProgramConfigRes::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* GetOnStartProgramConfigRes::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.file_dir)
  return _impl_.file_dir_.Release();
}
inline void GetOnStartProgramConfigRes::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.file_dir)
}

// string msg = 100;
inline void GetOnStartProgramConfigRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetOnStartProgramConfigRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOnStartProgramConfigRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.msg)
}
inline std::string* GetOnStartProgramConfigRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.msg)
  return _s;
}
inline const std::string& GetOnStartProgramConfigRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetOnStartProgramConfigRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetOnStartProgramConfigRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetOnStartProgramConfigRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.msg)
  return _impl_.msg_.Release();
}
inline void GetOnStartProgramConfigRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetOnStartProgramConfigRes.msg)
}

// -------------------------------------------------------------------

// SetOnStartProgramConfigReq

// bool auto_run = 1;
inline void SetOnStartProgramConfigReq::clear_auto_run() {
  _impl_.auto_run_ = false;
}
inline bool SetOnStartProgramConfigReq::auto_run() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigReq.auto_run)
  return _internal_auto_run();
}
inline void SetOnStartProgramConfigReq::set_auto_run(bool value) {
  _internal_set_auto_run(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigReq.auto_run)
}
inline bool SetOnStartProgramConfigReq::_internal_auto_run() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auto_run_;
}
inline void SetOnStartProgramConfigReq::_internal_set_auto_run(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auto_run_ = value;
}

// int32 index = 2;
inline void SetOnStartProgramConfigReq::clear_index() {
  _impl_.index_ = 0;
}
inline ::int32_t SetOnStartProgramConfigReq::index() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigReq.index)
  return _internal_index();
}
inline void SetOnStartProgramConfigReq::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigReq.index)
}
inline ::int32_t SetOnStartProgramConfigReq::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void SetOnStartProgramConfigReq::_internal_set_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// SetOnStartProgramConfigRes

// string msg = 100;
inline void SetOnStartProgramConfigRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetOnStartProgramConfigRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetOnStartProgramConfigRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes.msg)
}
inline std::string* SetOnStartProgramConfigRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes.msg)
  return _s;
}
inline const std::string& SetOnStartProgramConfigRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetOnStartProgramConfigRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetOnStartProgramConfigRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetOnStartProgramConfigRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes.msg)
  return _impl_.msg_.Release();
}
inline void SetOnStartProgramConfigRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetOnStartProgramConfigRes.msg)
}

// -------------------------------------------------------------------

// GetSafetyLimitConfigReq

// -------------------------------------------------------------------

// GetSafetyLimitConfigRes

// float power_limit = 1;
inline void GetSafetyLimitConfigRes::clear_power_limit() {
  _impl_.power_limit_ = 0;
}
inline float GetSafetyLimitConfigRes::power_limit() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.power_limit)
  return _internal_power_limit();
}
inline void GetSafetyLimitConfigRes::set_power_limit(float value) {
  _internal_set_power_limit(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.power_limit)
}
inline float GetSafetyLimitConfigRes::_internal_power_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.power_limit_;
}
inline void GetSafetyLimitConfigRes::_internal_set_power_limit(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.power_limit_ = value;
}

// float power_limit_ratio = 2;
inline void GetSafetyLimitConfigRes::clear_power_limit_ratio() {
  _impl_.power_limit_ratio_ = 0;
}
inline float GetSafetyLimitConfigRes::power_limit_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.power_limit_ratio)
  return _internal_power_limit_ratio();
}
inline void GetSafetyLimitConfigRes::set_power_limit_ratio(float value) {
  _internal_set_power_limit_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.power_limit_ratio)
}
inline float GetSafetyLimitConfigRes::_internal_power_limit_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.power_limit_ratio_;
}
inline void GetSafetyLimitConfigRes::_internal_set_power_limit_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.power_limit_ratio_ = value;
}

// float tcp_force_limit = 3;
inline void GetSafetyLimitConfigRes::clear_tcp_force_limit() {
  _impl_.tcp_force_limit_ = 0;
}
inline float GetSafetyLimitConfigRes::tcp_force_limit() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_force_limit)
  return _internal_tcp_force_limit();
}
inline void GetSafetyLimitConfigRes::set_tcp_force_limit(float value) {
  _internal_set_tcp_force_limit(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_force_limit)
}
inline float GetSafetyLimitConfigRes::_internal_tcp_force_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_force_limit_;
}
inline void GetSafetyLimitConfigRes::_internal_set_tcp_force_limit(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_force_limit_ = value;
}

// float tcp_force_limit_ratio = 4;
inline void GetSafetyLimitConfigRes::clear_tcp_force_limit_ratio() {
  _impl_.tcp_force_limit_ratio_ = 0;
}
inline float GetSafetyLimitConfigRes::tcp_force_limit_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_force_limit_ratio)
  return _internal_tcp_force_limit_ratio();
}
inline void GetSafetyLimitConfigRes::set_tcp_force_limit_ratio(float value) {
  _internal_set_tcp_force_limit_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_force_limit_ratio)
}
inline float GetSafetyLimitConfigRes::_internal_tcp_force_limit_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_force_limit_ratio_;
}
inline void GetSafetyLimitConfigRes::_internal_set_tcp_force_limit_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_force_limit_ratio_ = value;
}

// float tcp_speed_limit = 5;
inline void GetSafetyLimitConfigRes::clear_tcp_speed_limit() {
  _impl_.tcp_speed_limit_ = 0;
}
inline float GetSafetyLimitConfigRes::tcp_speed_limit() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_speed_limit)
  return _internal_tcp_speed_limit();
}
inline void GetSafetyLimitConfigRes::set_tcp_speed_limit(float value) {
  _internal_set_tcp_speed_limit(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_speed_limit)
}
inline float GetSafetyLimitConfigRes::_internal_tcp_speed_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_speed_limit_;
}
inline void GetSafetyLimitConfigRes::_internal_set_tcp_speed_limit(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_speed_limit_ = value;
}

// float tcp_speed_limit_ratio = 6;
inline void GetSafetyLimitConfigRes::clear_tcp_speed_limit_ratio() {
  _impl_.tcp_speed_limit_ratio_ = 0;
}
inline float GetSafetyLimitConfigRes::tcp_speed_limit_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_speed_limit_ratio)
  return _internal_tcp_speed_limit_ratio();
}
inline void GetSafetyLimitConfigRes::set_tcp_speed_limit_ratio(float value) {
  _internal_set_tcp_speed_limit_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.tcp_speed_limit_ratio)
}
inline float GetSafetyLimitConfigRes::_internal_tcp_speed_limit_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_speed_limit_ratio_;
}
inline void GetSafetyLimitConfigRes::_internal_set_tcp_speed_limit_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_speed_limit_ratio_ = value;
}

// string msg = 100;
inline void GetSafetyLimitConfigRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetSafetyLimitConfigRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSafetyLimitConfigRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.msg)
}
inline std::string* GetSafetyLimitConfigRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.msg)
  return _s;
}
inline const std::string& GetSafetyLimitConfigRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetSafetyLimitConfigRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetSafetyLimitConfigRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetSafetyLimitConfigRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.msg)
  return _impl_.msg_.Release();
}
inline void GetSafetyLimitConfigRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetSafetyLimitConfigRes.msg)
}

// -------------------------------------------------------------------

// SetSafetyLimitConfigReq

// float power_limit = 1;
inline void SetSafetyLimitConfigReq::clear_power_limit() {
  _impl_.power_limit_ = 0;
}
inline float SetSafetyLimitConfigReq::power_limit() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.power_limit)
  return _internal_power_limit();
}
inline void SetSafetyLimitConfigReq::set_power_limit(float value) {
  _internal_set_power_limit(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.power_limit)
}
inline float SetSafetyLimitConfigReq::_internal_power_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.power_limit_;
}
inline void SetSafetyLimitConfigReq::_internal_set_power_limit(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.power_limit_ = value;
}

// float power_limit_ratio = 2;
inline void SetSafetyLimitConfigReq::clear_power_limit_ratio() {
  _impl_.power_limit_ratio_ = 0;
}
inline float SetSafetyLimitConfigReq::power_limit_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.power_limit_ratio)
  return _internal_power_limit_ratio();
}
inline void SetSafetyLimitConfigReq::set_power_limit_ratio(float value) {
  _internal_set_power_limit_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.power_limit_ratio)
}
inline float SetSafetyLimitConfigReq::_internal_power_limit_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.power_limit_ratio_;
}
inline void SetSafetyLimitConfigReq::_internal_set_power_limit_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.power_limit_ratio_ = value;
}

// float tcp_force_limit = 3;
inline void SetSafetyLimitConfigReq::clear_tcp_force_limit() {
  _impl_.tcp_force_limit_ = 0;
}
inline float SetSafetyLimitConfigReq::tcp_force_limit() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_force_limit)
  return _internal_tcp_force_limit();
}
inline void SetSafetyLimitConfigReq::set_tcp_force_limit(float value) {
  _internal_set_tcp_force_limit(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_force_limit)
}
inline float SetSafetyLimitConfigReq::_internal_tcp_force_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_force_limit_;
}
inline void SetSafetyLimitConfigReq::_internal_set_tcp_force_limit(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_force_limit_ = value;
}

// float tcp_force_limit_ratio = 4;
inline void SetSafetyLimitConfigReq::clear_tcp_force_limit_ratio() {
  _impl_.tcp_force_limit_ratio_ = 0;
}
inline float SetSafetyLimitConfigReq::tcp_force_limit_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_force_limit_ratio)
  return _internal_tcp_force_limit_ratio();
}
inline void SetSafetyLimitConfigReq::set_tcp_force_limit_ratio(float value) {
  _internal_set_tcp_force_limit_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_force_limit_ratio)
}
inline float SetSafetyLimitConfigReq::_internal_tcp_force_limit_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_force_limit_ratio_;
}
inline void SetSafetyLimitConfigReq::_internal_set_tcp_force_limit_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_force_limit_ratio_ = value;
}

// float tcp_speed_limit = 5;
inline void SetSafetyLimitConfigReq::clear_tcp_speed_limit() {
  _impl_.tcp_speed_limit_ = 0;
}
inline float SetSafetyLimitConfigReq::tcp_speed_limit() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_speed_limit)
  return _internal_tcp_speed_limit();
}
inline void SetSafetyLimitConfigReq::set_tcp_speed_limit(float value) {
  _internal_set_tcp_speed_limit(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_speed_limit)
}
inline float SetSafetyLimitConfigReq::_internal_tcp_speed_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_speed_limit_;
}
inline void SetSafetyLimitConfigReq::_internal_set_tcp_speed_limit(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_speed_limit_ = value;
}

// float tcp_speed_limit_ratio = 6;
inline void SetSafetyLimitConfigReq::clear_tcp_speed_limit_ratio() {
  _impl_.tcp_speed_limit_ratio_ = 0;
}
inline float SetSafetyLimitConfigReq::tcp_speed_limit_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_speed_limit_ratio)
  return _internal_tcp_speed_limit_ratio();
}
inline void SetSafetyLimitConfigReq::set_tcp_speed_limit_ratio(float value) {
  _internal_set_tcp_speed_limit_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigReq.tcp_speed_limit_ratio)
}
inline float SetSafetyLimitConfigReq::_internal_tcp_speed_limit_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tcp_speed_limit_ratio_;
}
inline void SetSafetyLimitConfigReq::_internal_set_tcp_speed_limit_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_speed_limit_ratio_ = value;
}

// -------------------------------------------------------------------

// SetSafetyLimitConfigRes

// string msg = 100;
inline void SetSafetyLimitConfigRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetSafetyLimitConfigRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetSafetyLimitConfigRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes.msg)
}
inline std::string* SetSafetyLimitConfigRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes.msg)
  return _s;
}
inline const std::string& SetSafetyLimitConfigRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetSafetyLimitConfigRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSafetyLimitConfigRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetSafetyLimitConfigRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes.msg)
  return _impl_.msg_.Release();
}
inline void SetSafetyLimitConfigRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetSafetyLimitConfigRes.msg)
}

// -------------------------------------------------------------------

// SetSafetyStopConfigReq

// .IndyFramework.Protobuf.Shared.StopCategory joint_position_limit_stop_cat = 1;
inline void SetSafetyStopConfigReq::clear_joint_position_limit_stop_cat() {
  _impl_.joint_position_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::joint_position_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.joint_position_limit_stop_cat)
  return _internal_joint_position_limit_stop_cat();
}
inline void SetSafetyStopConfigReq::set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_joint_position_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.joint_position_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::_internal_joint_position_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.joint_position_limit_stop_cat_);
}
inline void SetSafetyStopConfigReq::_internal_set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_position_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory joint_speed_limit_stop_cat = 2;
inline void SetSafetyStopConfigReq::clear_joint_speed_limit_stop_cat() {
  _impl_.joint_speed_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::joint_speed_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.joint_speed_limit_stop_cat)
  return _internal_joint_speed_limit_stop_cat();
}
inline void SetSafetyStopConfigReq::set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_joint_speed_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.joint_speed_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::_internal_joint_speed_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.joint_speed_limit_stop_cat_);
}
inline void SetSafetyStopConfigReq::_internal_set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_speed_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory joint_torque_limit_stop_cat = 3;
inline void SetSafetyStopConfigReq::clear_joint_torque_limit_stop_cat() {
  _impl_.joint_torque_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::joint_torque_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.joint_torque_limit_stop_cat)
  return _internal_joint_torque_limit_stop_cat();
}
inline void SetSafetyStopConfigReq::set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_joint_torque_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.joint_torque_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::_internal_joint_torque_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.joint_torque_limit_stop_cat_);
}
inline void SetSafetyStopConfigReq::_internal_set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_torque_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory tcp_speed_limit_stop_cat = 4;
inline void SetSafetyStopConfigReq::clear_tcp_speed_limit_stop_cat() {
  _impl_.tcp_speed_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::tcp_speed_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.tcp_speed_limit_stop_cat)
  return _internal_tcp_speed_limit_stop_cat();
}
inline void SetSafetyStopConfigReq::set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_tcp_speed_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.tcp_speed_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::_internal_tcp_speed_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.tcp_speed_limit_stop_cat_);
}
inline void SetSafetyStopConfigReq::_internal_set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_speed_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory tcp_force_limit_stop_cat = 5;
inline void SetSafetyStopConfigReq::clear_tcp_force_limit_stop_cat() {
  _impl_.tcp_force_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::tcp_force_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.tcp_force_limit_stop_cat)
  return _internal_tcp_force_limit_stop_cat();
}
inline void SetSafetyStopConfigReq::set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_tcp_force_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.tcp_force_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::_internal_tcp_force_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.tcp_force_limit_stop_cat_);
}
inline void SetSafetyStopConfigReq::_internal_set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_force_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory power_limit_stop_cat = 6;
inline void SetSafetyStopConfigReq::clear_power_limit_stop_cat() {
  _impl_.power_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::power_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.power_limit_stop_cat)
  return _internal_power_limit_stop_cat();
}
inline void SetSafetyStopConfigReq::set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_power_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyStopConfigReq.power_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory SetSafetyStopConfigReq::_internal_power_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.power_limit_stop_cat_);
}
inline void SetSafetyStopConfigReq::_internal_set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.power_limit_stop_cat_ = value;
}

// -------------------------------------------------------------------

// SetSafetyStopConfigRes

// string msg = 100;
inline void SetSafetyStopConfigRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SetSafetyStopConfigRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetSafetyStopConfigRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes.msg)
}
inline std::string* SetSafetyStopConfigRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes.msg)
  return _s;
}
inline const std::string& SetSafetyStopConfigRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void SetSafetyStopConfigRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSafetyStopConfigRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* SetSafetyStopConfigRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes.msg)
  return _impl_.msg_.Release();
}
inline void SetSafetyStopConfigRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SetSafetyStopConfigRes.msg)
}

// -------------------------------------------------------------------

// GetSafetyStopConfigReq

// -------------------------------------------------------------------

// GetSafetyStopConfigRes

// .IndyFramework.Protobuf.Shared.StopCategory joint_position_limit_stop_cat = 1;
inline void GetSafetyStopConfigRes::clear_joint_position_limit_stop_cat() {
  _impl_.joint_position_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::joint_position_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.joint_position_limit_stop_cat)
  return _internal_joint_position_limit_stop_cat();
}
inline void GetSafetyStopConfigRes::set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_joint_position_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.joint_position_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::_internal_joint_position_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.joint_position_limit_stop_cat_);
}
inline void GetSafetyStopConfigRes::_internal_set_joint_position_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_position_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory joint_speed_limit_stop_cat = 2;
inline void GetSafetyStopConfigRes::clear_joint_speed_limit_stop_cat() {
  _impl_.joint_speed_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::joint_speed_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.joint_speed_limit_stop_cat)
  return _internal_joint_speed_limit_stop_cat();
}
inline void GetSafetyStopConfigRes::set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_joint_speed_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.joint_speed_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::_internal_joint_speed_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.joint_speed_limit_stop_cat_);
}
inline void GetSafetyStopConfigRes::_internal_set_joint_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_speed_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory joint_torque_limit_stop_cat = 3;
inline void GetSafetyStopConfigRes::clear_joint_torque_limit_stop_cat() {
  _impl_.joint_torque_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::joint_torque_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.joint_torque_limit_stop_cat)
  return _internal_joint_torque_limit_stop_cat();
}
inline void GetSafetyStopConfigRes::set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_joint_torque_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.joint_torque_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::_internal_joint_torque_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.joint_torque_limit_stop_cat_);
}
inline void GetSafetyStopConfigRes::_internal_set_joint_torque_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_torque_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory tcp_speed_limit_stop_cat = 4;
inline void GetSafetyStopConfigRes::clear_tcp_speed_limit_stop_cat() {
  _impl_.tcp_speed_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::tcp_speed_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.tcp_speed_limit_stop_cat)
  return _internal_tcp_speed_limit_stop_cat();
}
inline void GetSafetyStopConfigRes::set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_tcp_speed_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.tcp_speed_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::_internal_tcp_speed_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.tcp_speed_limit_stop_cat_);
}
inline void GetSafetyStopConfigRes::_internal_set_tcp_speed_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_speed_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory tcp_force_limit_stop_cat = 5;
inline void GetSafetyStopConfigRes::clear_tcp_force_limit_stop_cat() {
  _impl_.tcp_force_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::tcp_force_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.tcp_force_limit_stop_cat)
  return _internal_tcp_force_limit_stop_cat();
}
inline void GetSafetyStopConfigRes::set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_tcp_force_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.tcp_force_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::_internal_tcp_force_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.tcp_force_limit_stop_cat_);
}
inline void GetSafetyStopConfigRes::_internal_set_tcp_force_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tcp_force_limit_stop_cat_ = value;
}

// .IndyFramework.Protobuf.Shared.StopCategory power_limit_stop_cat = 6;
inline void GetSafetyStopConfigRes::clear_power_limit_stop_cat() {
  _impl_.power_limit_stop_cat_ = 0;
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::power_limit_stop_cat() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.power_limit_stop_cat)
  return _internal_power_limit_stop_cat();
}
inline void GetSafetyStopConfigRes::set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  _internal_set_power_limit_stop_cat(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.power_limit_stop_cat)
}
inline ::IndyFramework::Protobuf::Shared::StopCategory GetSafetyStopConfigRes::_internal_power_limit_stop_cat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::Shared::StopCategory>(_impl_.power_limit_stop_cat_);
}
inline void GetSafetyStopConfigRes::_internal_set_power_limit_stop_cat(::IndyFramework::Protobuf::Shared::StopCategory value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.power_limit_stop_cat_ = value;
}

// string msg = 100;
inline void GetSafetyStopConfigRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetSafetyStopConfigRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSafetyStopConfigRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.msg)
}
inline std::string* GetSafetyStopConfigRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.msg)
  return _s;
}
inline const std::string& GetSafetyStopConfigRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetSafetyStopConfigRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetSafetyStopConfigRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetSafetyStopConfigRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.msg)
  return _impl_.msg_.Release();
}
inline void GetSafetyStopConfigRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetSafetyStopConfigRes.msg)
}

// -------------------------------------------------------------------

// GetSafetyConfigHashReq

// -------------------------------------------------------------------

// GetSafetyConfigHashRes

// string hash = 1;
inline void GetSafetyConfigHashRes::clear_hash() {
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& GetSafetyConfigHashRes::hash() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSafetyConfigHashRes::set_hash(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hash_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.hash)
}
inline std::string* GetSafetyConfigHashRes::mutable_hash() {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.hash)
  return _s;
}
inline const std::string& GetSafetyConfigHashRes::_internal_hash() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.hash_.Get();
}
inline void GetSafetyConfigHashRes::_internal_set_hash(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hash_.Set(value, GetArenaForAllocation());
}
inline std::string* GetSafetyConfigHashRes::_internal_mutable_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.hash_.Mutable( GetArenaForAllocation());
}
inline std::string* GetSafetyConfigHashRes::release_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.hash)
  return _impl_.hash_.Release();
}
inline void GetSafetyConfigHashRes::set_allocated_hash(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.hash_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_.IsDefault()) {
          _impl_.hash_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.hash)
}

// string msg = 100;
inline void GetSafetyConfigHashRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetSafetyConfigHashRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSafetyConfigHashRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.msg)
}
inline std::string* GetSafetyConfigHashRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.msg)
  return _s;
}
inline const std::string& GetSafetyConfigHashRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void GetSafetyConfigHashRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetSafetyConfigHashRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* GetSafetyConfigHashRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.msg)
  return _impl_.msg_.Release();
}
inline void GetSafetyConfigHashRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetSafetyConfigHashRes.msg)
}

// -------------------------------------------------------------------

// KinematicsParams_MDH

// float a = 1;
inline void KinematicsParams_MDH::clear_a() {
  _impl_.a_ = 0;
}
inline float KinematicsParams_MDH::a() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.a)
  return _internal_a();
}
inline void KinematicsParams_MDH::set_a(float value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.a)
}
inline float KinematicsParams_MDH::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_;
}
inline void KinematicsParams_MDH::_internal_set_a(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a_ = value;
}

// float alpha = 2;
inline void KinematicsParams_MDH::clear_alpha() {
  _impl_.alpha_ = 0;
}
inline float KinematicsParams_MDH::alpha() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.alpha)
  return _internal_alpha();
}
inline void KinematicsParams_MDH::set_alpha(float value) {
  _internal_set_alpha(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.alpha)
}
inline float KinematicsParams_MDH::_internal_alpha() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.alpha_;
}
inline void KinematicsParams_MDH::_internal_set_alpha(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.alpha_ = value;
}

// float d0 = 3;
inline void KinematicsParams_MDH::clear_d0() {
  _impl_.d0_ = 0;
}
inline float KinematicsParams_MDH::d0() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.d0)
  return _internal_d0();
}
inline void KinematicsParams_MDH::set_d0(float value) {
  _internal_set_d0(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.d0)
}
inline float KinematicsParams_MDH::_internal_d0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.d0_;
}
inline void KinematicsParams_MDH::_internal_set_d0(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.d0_ = value;
}

// float theta0 = 4;
inline void KinematicsParams_MDH::clear_theta0() {
  _impl_.theta0_ = 0;
}
inline float KinematicsParams_MDH::theta0() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.theta0)
  return _internal_theta0();
}
inline void KinematicsParams_MDH::set_theta0(float value) {
  _internal_set_theta0(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.theta0)
}
inline float KinematicsParams_MDH::_internal_theta0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.theta0_;
}
inline void KinematicsParams_MDH::_internal_set_theta0(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.theta0_ = value;
}

// .IndyFramework.Protobuf.HRI.KinematicsParams.JointType type = 5;
inline void KinematicsParams_MDH::clear_type() {
  _impl_.type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::KinematicsParams_JointType KinematicsParams_MDH::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.type)
  return _internal_type();
}
inline void KinematicsParams_MDH::set_type(::IndyFramework::Protobuf::HRI::KinematicsParams_JointType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.type)
}
inline ::IndyFramework::Protobuf::HRI::KinematicsParams_JointType KinematicsParams_MDH::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::KinematicsParams_JointType>(_impl_.type_);
}
inline void KinematicsParams_MDH::_internal_set_type(::IndyFramework::Protobuf::HRI::KinematicsParams_JointType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// int32 index = 10;
inline void KinematicsParams_MDH::clear_index() {
  _impl_.index_ = 0;
}
inline ::int32_t KinematicsParams_MDH::index() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.index)
  return _internal_index();
}
inline void KinematicsParams_MDH::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.index)
}
inline ::int32_t KinematicsParams_MDH::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void KinematicsParams_MDH::_internal_set_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_ = value;
}

// int32 parent = 11;
inline void KinematicsParams_MDH::clear_parent() {
  _impl_.parent_ = 0;
}
inline ::int32_t KinematicsParams_MDH::parent() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.parent)
  return _internal_parent();
}
inline void KinematicsParams_MDH::set_parent(::int32_t value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KinematicsParams.MDH.parent)
}
inline ::int32_t KinematicsParams_MDH::_internal_parent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parent_;
}
inline void KinematicsParams_MDH::_internal_set_parent(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_ = value;
}

// -------------------------------------------------------------------

// KinematicsParams

// repeated .IndyFramework.Protobuf.HRI.KinematicsParams.MDH mdh = 1;
inline int KinematicsParams::_internal_mdh_size() const {
  return _internal_mdh().size();
}
inline int KinematicsParams::mdh_size() const {
  return _internal_mdh_size();
}
inline void KinematicsParams::clear_mdh() {
  _internal_mutable_mdh()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH* KinematicsParams::mutable_mdh(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.KinematicsParams.mdh)
  return _internal_mutable_mdh()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH >*
KinematicsParams::mutable_mdh() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.KinematicsParams.mdh)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_mdh();
}
inline const ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH& KinematicsParams::mdh(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KinematicsParams.mdh)
    return _internal_mdh().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH* KinematicsParams::add_mdh() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH* _add = _internal_mutable_mdh()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.KinematicsParams.mdh)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::KinematicsParams_MDH >&
KinematicsParams::mdh() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.KinematicsParams.mdh)
  return _internal_mdh();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::KinematicsParams_MDH>&
KinematicsParams::_internal_mdh() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mdh_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::KinematicsParams_MDH>*
KinematicsParams::_internal_mutable_mdh() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.mdh_;
}

// -------------------------------------------------------------------

// KeyInitReq

// -------------------------------------------------------------------

// KeyInitRes

// string msg = 100;
inline void KeyInitRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& KeyInitRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KeyInitRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KeyInitRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KeyInitRes.msg)
}
inline std::string* KeyInitRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.KeyInitRes.msg)
  return _s;
}
inline const std::string& KeyInitRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void KeyInitRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* KeyInitRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* KeyInitRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.KeyInitRes.msg)
  return _impl_.msg_.Release();
}
inline void KeyInitRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.KeyInitRes.msg)
}

// -------------------------------------------------------------------

// KeyDataReq

// -------------------------------------------------------------------

// KeyDataRes

// repeated int32 indices = 1;
inline int KeyDataRes::_internal_indices_size() const {
  return _internal_indices().size();
}
inline int KeyDataRes::indices_size() const {
  return _internal_indices_size();
}
inline void KeyDataRes::clear_indices() {
  _internal_mutable_indices()->Clear();
}
inline ::int32_t KeyDataRes::indices(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KeyDataRes.indices)
  return _internal_indices().Get(index);
}
inline void KeyDataRes::set_indices(int index, ::int32_t value) {
  _internal_mutable_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KeyDataRes.indices)
}
inline void KeyDataRes::add_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_indices()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.KeyDataRes.indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& KeyDataRes::indices() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.KeyDataRes.indices)
  return _internal_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* KeyDataRes::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.KeyDataRes.indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_indices();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& KeyDataRes::_internal_indices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* KeyDataRes::_internal_mutable_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.indices_;
}

// string msg = 100;
inline void KeyDataRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& KeyDataRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.KeyDataRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KeyDataRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.KeyDataRes.msg)
}
inline std::string* KeyDataRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.KeyDataRes.msg)
  return _s;
}
inline const std::string& KeyDataRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void KeyDataRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* KeyDataRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* KeyDataRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.KeyDataRes.msg)
  return _impl_.msg_.Release();
}
inline void KeyDataRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.KeyDataRes.msg)
}

// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// Name

// string name = 1;
inline void Name::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Name::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Name.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Name::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Name.name)
}
inline std::string* Name::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Name.name)
  return _s;
}
inline const std::string& Name::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Name::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Name::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* Name::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Name.name)
  return _impl_.name_.Release();
}
inline void Name::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Name.name)
}

// -------------------------------------------------------------------

// Float

// float value = 1;
inline void Float::clear_value() {
  _impl_.value_ = 0;
}
inline float Float::value() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Float.value)
  return _internal_value();
}
inline void Float::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Float.value)
}
inline float Float::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void Float::_internal_set_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// State

// bool enable = 1;
inline void State::clear_enable() {
  _impl_.enable_ = false;
}
inline bool State::enable() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.State.enable)
  return _internal_enable();
}
inline void State::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.State.enable)
}
inline bool State::_internal_enable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enable_;
}
inline void State::_internal_set_enable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enable_ = value;
}

// -------------------------------------------------------------------

// IntMode

// uint64 mode = 1;
inline void IntMode::clear_mode() {
  _impl_.mode_ = ::uint64_t{0u};
}
inline ::uint64_t IntMode::mode() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.IntMode.mode)
  return _internal_mode();
}
inline void IntMode::set_mode(::uint64_t value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.IntMode.mode)
}
inline ::uint64_t IntMode::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mode_;
}
inline void IntMode::_internal_set_mode(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// Response

// int64 code = 1;
inline void Response::clear_code() {
  _impl_.code_ = ::int64_t{0};
}
inline ::int64_t Response::code() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Response.code)
  return _internal_code();
}
inline void Response::set_code(::int64_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Response.code)
}
inline ::int64_t Response::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_;
}
inline void Response::_internal_set_code(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// string msg = 2;
inline void Response::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& Response::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Response.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Response::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Response.msg)
}
inline std::string* Response::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Response.msg)
  return _s;
}
inline const std::string& Response::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void Response::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* Response::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* Response::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Response.msg)
  return _impl_.msg_.Release();
}
inline void Response::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Response.msg)
}

// -------------------------------------------------------------------

// Servo

// uint32 index = 1;
inline void Servo::clear_index() {
  _impl_.index_ = 0u;
}
inline ::uint32_t Servo::index() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Servo.index)
  return _internal_index();
}
inline void Servo::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Servo.index)
}
inline ::uint32_t Servo::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void Servo::_internal_set_index(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_ = value;
}

// bool enable = 2;
inline void Servo::clear_enable() {
  _impl_.enable_ = false;
}
inline bool Servo::enable() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Servo.enable)
  return _internal_enable();
}
inline void Servo::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Servo.enable)
}
inline bool Servo::_internal_enable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enable_;
}
inline void Servo::_internal_set_enable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enable_ = value;
}

// -------------------------------------------------------------------

// JogJTar

// int32 joint_num = 1;
inline void JogJTar::clear_joint_num() {
  _impl_.joint_num_ = 0;
}
inline ::int32_t JogJTar::joint_num() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogJTar.joint_num)
  return _internal_joint_num();
}
inline void JogJTar::set_joint_num(::int32_t value) {
  _internal_set_joint_num(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogJTar.joint_num)
}
inline ::int32_t JogJTar::_internal_joint_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joint_num_;
}
inline void JogJTar::_internal_set_joint_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joint_num_ = value;
}

// int32 vel_level = 2;
inline void JogJTar::clear_vel_level() {
  _impl_.vel_level_ = 0;
}
inline ::int32_t JogJTar::vel_level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogJTar.vel_level)
  return _internal_vel_level();
}
inline void JogJTar::set_vel_level(::int32_t value) {
  _internal_set_vel_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogJTar.vel_level)
}
inline ::int32_t JogJTar::_internal_vel_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_;
}
inline void JogJTar::_internal_set_vel_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_ = value;
}

// float distance = 3;
inline void JogJTar::clear_distance() {
  _impl_.distance_ = 0;
}
inline float JogJTar::distance() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.JogJTar.distance)
  return _internal_distance();
}
inline void JogJTar::set_distance(float value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.JogJTar.distance)
}
inline float JogJTar::_internal_distance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_;
}
inline void JogJTar::_internal_set_distance(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_ = value;
}

// -------------------------------------------------------------------

// PlayTuningReq

// string file_dir = 1;
inline void PlayTuningReq::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& PlayTuningReq::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PlayTuningReq.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayTuningReq::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PlayTuningReq.file_dir)
}
inline std::string* PlayTuningReq::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.PlayTuningReq.file_dir)
  return _s;
}
inline const std::string& PlayTuningReq::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void PlayTuningReq::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayTuningReq::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayTuningReq::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.PlayTuningReq.file_dir)
  return _impl_.file_dir_.Release();
}
inline void PlayTuningReq::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.PlayTuningReq.file_dir)
}

// -------------------------------------------------------------------

// TuningProgram

// string file_dir = 1;
inline void TuningProgram::clear_file_dir() {
  _impl_.file_dir_.ClearToEmpty();
}
inline const std::string& TuningProgram::file_dir() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TuningProgram.file_dir)
  return _internal_file_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TuningProgram::set_file_dir(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TuningProgram.file_dir)
}
inline std::string* TuningProgram::mutable_file_dir() {
  std::string* _s = _internal_mutable_file_dir();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.TuningProgram.file_dir)
  return _s;
}
inline const std::string& TuningProgram::_internal_file_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_dir_.Get();
}
inline void TuningProgram::_internal_set_file_dir(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_dir_.Set(value, GetArenaForAllocation());
}
inline std::string* TuningProgram::_internal_mutable_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.file_dir_.Mutable( GetArenaForAllocation());
}
inline std::string* TuningProgram::release_file_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.TuningProgram.file_dir)
  return _impl_.file_dir_.Release();
}
inline void TuningProgram::set_allocated_file_dir(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.file_dir_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_dir_.IsDefault()) {
          _impl_.file_dir_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.TuningProgram.file_dir)
}

// .Nrmk.IndyFramework.TuningSpace tuning_space = 2;
inline void TuningProgram::clear_tuning_space() {
  _impl_.tuning_space_ = 0;
}
inline ::Nrmk::IndyFramework::TuningSpace TuningProgram::tuning_space() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TuningProgram.tuning_space)
  return _internal_tuning_space();
}
inline void TuningProgram::set_tuning_space(::Nrmk::IndyFramework::TuningSpace value) {
  _internal_set_tuning_space(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TuningProgram.tuning_space)
}
inline ::Nrmk::IndyFramework::TuningSpace TuningProgram::_internal_tuning_space() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Nrmk::IndyFramework::TuningSpace>(_impl_.tuning_space_);
}
inline void TuningProgram::_internal_set_tuning_space(::Nrmk::IndyFramework::TuningSpace value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tuning_space_ = value;
}

// .Nrmk.IndyFramework.TuningPrecision precision = 3;
inline void TuningProgram::clear_precision() {
  _impl_.precision_ = 0;
}
inline ::Nrmk::IndyFramework::TuningPrecision TuningProgram::precision() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TuningProgram.precision)
  return _internal_precision();
}
inline void TuningProgram::set_precision(::Nrmk::IndyFramework::TuningPrecision value) {
  _internal_set_precision(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TuningProgram.precision)
}
inline ::Nrmk::IndyFramework::TuningPrecision TuningProgram::_internal_precision() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Nrmk::IndyFramework::TuningPrecision>(_impl_.precision_);
}
inline void TuningProgram::_internal_set_precision(::Nrmk::IndyFramework::TuningPrecision value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.precision_ = value;
}

// uint32 vel_level_max = 4;
inline void TuningProgram::clear_vel_level_max() {
  _impl_.vel_level_max_ = 0u;
}
inline ::uint32_t TuningProgram::vel_level_max() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TuningProgram.vel_level_max)
  return _internal_vel_level_max();
}
inline void TuningProgram::set_vel_level_max(::uint32_t value) {
  _internal_set_vel_level_max(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TuningProgram.vel_level_max)
}
inline ::uint32_t TuningProgram::_internal_vel_level_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_level_max_;
}
inline void TuningProgram::_internal_set_vel_level_max(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_level_max_ = value;
}

// -------------------------------------------------------------------

// CollisionSensLevel

// uint32 level = 1;
inline void CollisionSensLevel::clear_level() {
  _impl_.level_ = 0u;
}
inline ::uint32_t CollisionSensLevel::level() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionSensLevel.level)
  return _internal_level();
}
inline void CollisionSensLevel::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionSensLevel.level)
}
inline ::uint32_t CollisionSensLevel::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_;
}
inline void CollisionSensLevel::_internal_set_level(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// CollisionPolicy

// .IndyFramework.Protobuf.HRI.CollisionPolicyType policy = 1;
inline void CollisionPolicy::clear_policy() {
  _impl_.policy_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::CollisionPolicyType CollisionPolicy::policy() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionPolicy.policy)
  return _internal_policy();
}
inline void CollisionPolicy::set_policy(::IndyFramework::Protobuf::HRI::CollisionPolicyType value) {
  _internal_set_policy(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionPolicy.policy)
}
inline ::IndyFramework::Protobuf::HRI::CollisionPolicyType CollisionPolicy::_internal_policy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::CollisionPolicyType>(_impl_.policy_);
}
inline void CollisionPolicy::_internal_set_policy(::IndyFramework::Protobuf::HRI::CollisionPolicyType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.policy_ = value;
}

// float sleep_time = 2;
inline void CollisionPolicy::clear_sleep_time() {
  _impl_.sleep_time_ = 0;
}
inline float CollisionPolicy::sleep_time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionPolicy.sleep_time)
  return _internal_sleep_time();
}
inline void CollisionPolicy::set_sleep_time(float value) {
  _internal_set_sleep_time(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionPolicy.sleep_time)
}
inline float CollisionPolicy::_internal_sleep_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sleep_time_;
}
inline void CollisionPolicy::_internal_set_sleep_time(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sleep_time_ = value;
}

// -------------------------------------------------------------------

// CollisionThresholds

// repeated float j_torque_bases = 1;
inline int CollisionThresholds::_internal_j_torque_bases_size() const {
  return _internal_j_torque_bases().size();
}
inline int CollisionThresholds::j_torque_bases_size() const {
  return _internal_j_torque_bases_size();
}
inline void CollisionThresholds::clear_j_torque_bases() {
  _internal_mutable_j_torque_bases()->Clear();
}
inline float CollisionThresholds::j_torque_bases(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_bases)
  return _internal_j_torque_bases().Get(index);
}
inline void CollisionThresholds::set_j_torque_bases(int index, float value) {
  _internal_mutable_j_torque_bases()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_bases)
}
inline void CollisionThresholds::add_j_torque_bases(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_j_torque_bases()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_bases)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::j_torque_bases() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_bases)
  return _internal_j_torque_bases();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_j_torque_bases() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_bases)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_j_torque_bases();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_j_torque_bases() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.j_torque_bases_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_j_torque_bases() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.j_torque_bases_;
}

// repeated float j_torque_tangents = 2;
inline int CollisionThresholds::_internal_j_torque_tangents_size() const {
  return _internal_j_torque_tangents().size();
}
inline int CollisionThresholds::j_torque_tangents_size() const {
  return _internal_j_torque_tangents_size();
}
inline void CollisionThresholds::clear_j_torque_tangents() {
  _internal_mutable_j_torque_tangents()->Clear();
}
inline float CollisionThresholds::j_torque_tangents(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_tangents)
  return _internal_j_torque_tangents().Get(index);
}
inline void CollisionThresholds::set_j_torque_tangents(int index, float value) {
  _internal_mutable_j_torque_tangents()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_tangents)
}
inline void CollisionThresholds::add_j_torque_tangents(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_j_torque_tangents()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_tangents)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::j_torque_tangents() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_tangents)
  return _internal_j_torque_tangents();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_j_torque_tangents() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.j_torque_tangents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_j_torque_tangents();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_j_torque_tangents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.j_torque_tangents_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_j_torque_tangents() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.j_torque_tangents_;
}

// repeated float t_torque_bases = 3;
inline int CollisionThresholds::_internal_t_torque_bases_size() const {
  return _internal_t_torque_bases().size();
}
inline int CollisionThresholds::t_torque_bases_size() const {
  return _internal_t_torque_bases_size();
}
inline void CollisionThresholds::clear_t_torque_bases() {
  _internal_mutable_t_torque_bases()->Clear();
}
inline float CollisionThresholds::t_torque_bases(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_bases)
  return _internal_t_torque_bases().Get(index);
}
inline void CollisionThresholds::set_t_torque_bases(int index, float value) {
  _internal_mutable_t_torque_bases()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_bases)
}
inline void CollisionThresholds::add_t_torque_bases(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_torque_bases()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_bases)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::t_torque_bases() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_bases)
  return _internal_t_torque_bases();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_t_torque_bases() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_bases)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_torque_bases();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_t_torque_bases() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_torque_bases_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_t_torque_bases() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_torque_bases_;
}

// repeated float t_torque_tangents = 4;
inline int CollisionThresholds::_internal_t_torque_tangents_size() const {
  return _internal_t_torque_tangents().size();
}
inline int CollisionThresholds::t_torque_tangents_size() const {
  return _internal_t_torque_tangents_size();
}
inline void CollisionThresholds::clear_t_torque_tangents() {
  _internal_mutable_t_torque_tangents()->Clear();
}
inline float CollisionThresholds::t_torque_tangents(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_tangents)
  return _internal_t_torque_tangents().Get(index);
}
inline void CollisionThresholds::set_t_torque_tangents(int index, float value) {
  _internal_mutable_t_torque_tangents()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_tangents)
}
inline void CollisionThresholds::add_t_torque_tangents(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_torque_tangents()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_tangents)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::t_torque_tangents() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_tangents)
  return _internal_t_torque_tangents();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_t_torque_tangents() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_torque_tangents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_torque_tangents();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_t_torque_tangents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_torque_tangents_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_t_torque_tangents() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_torque_tangents_;
}

// repeated float error_bases = 5;
inline int CollisionThresholds::_internal_error_bases_size() const {
  return _internal_error_bases().size();
}
inline int CollisionThresholds::error_bases_size() const {
  return _internal_error_bases_size();
}
inline void CollisionThresholds::clear_error_bases() {
  _internal_mutable_error_bases()->Clear();
}
inline float CollisionThresholds::error_bases(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.error_bases)
  return _internal_error_bases().Get(index);
}
inline void CollisionThresholds::set_error_bases(int index, float value) {
  _internal_mutable_error_bases()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.error_bases)
}
inline void CollisionThresholds::add_error_bases(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_error_bases()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.error_bases)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::error_bases() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.error_bases)
  return _internal_error_bases();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_error_bases() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.error_bases)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_error_bases();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_error_bases() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_bases_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_error_bases() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.error_bases_;
}

// repeated float error_tangents = 6;
inline int CollisionThresholds::_internal_error_tangents_size() const {
  return _internal_error_tangents().size();
}
inline int CollisionThresholds::error_tangents_size() const {
  return _internal_error_tangents_size();
}
inline void CollisionThresholds::clear_error_tangents() {
  _internal_mutable_error_tangents()->Clear();
}
inline float CollisionThresholds::error_tangents(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.error_tangents)
  return _internal_error_tangents().Get(index);
}
inline void CollisionThresholds::set_error_tangents(int index, float value) {
  _internal_mutable_error_tangents()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.error_tangents)
}
inline void CollisionThresholds::add_error_tangents(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_error_tangents()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.error_tangents)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::error_tangents() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.error_tangents)
  return _internal_error_tangents();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_error_tangents() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.error_tangents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_error_tangents();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_error_tangents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_tangents_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_error_tangents() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.error_tangents_;
}

// repeated float t_constvel_torque_bases = 7;
inline int CollisionThresholds::_internal_t_constvel_torque_bases_size() const {
  return _internal_t_constvel_torque_bases().size();
}
inline int CollisionThresholds::t_constvel_torque_bases_size() const {
  return _internal_t_constvel_torque_bases_size();
}
inline void CollisionThresholds::clear_t_constvel_torque_bases() {
  _internal_mutable_t_constvel_torque_bases()->Clear();
}
inline float CollisionThresholds::t_constvel_torque_bases(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_bases)
  return _internal_t_constvel_torque_bases().Get(index);
}
inline void CollisionThresholds::set_t_constvel_torque_bases(int index, float value) {
  _internal_mutable_t_constvel_torque_bases()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_bases)
}
inline void CollisionThresholds::add_t_constvel_torque_bases(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_constvel_torque_bases()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_bases)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::t_constvel_torque_bases() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_bases)
  return _internal_t_constvel_torque_bases();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_t_constvel_torque_bases() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_bases)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_constvel_torque_bases();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_t_constvel_torque_bases() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_constvel_torque_bases_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_t_constvel_torque_bases() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_constvel_torque_bases_;
}

// repeated float t_constvel_torque_tangents = 8;
inline int CollisionThresholds::_internal_t_constvel_torque_tangents_size() const {
  return _internal_t_constvel_torque_tangents().size();
}
inline int CollisionThresholds::t_constvel_torque_tangents_size() const {
  return _internal_t_constvel_torque_tangents_size();
}
inline void CollisionThresholds::clear_t_constvel_torque_tangents() {
  _internal_mutable_t_constvel_torque_tangents()->Clear();
}
inline float CollisionThresholds::t_constvel_torque_tangents(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_tangents)
  return _internal_t_constvel_torque_tangents().Get(index);
}
inline void CollisionThresholds::set_t_constvel_torque_tangents(int index, float value) {
  _internal_mutable_t_constvel_torque_tangents()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_tangents)
}
inline void CollisionThresholds::add_t_constvel_torque_tangents(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_constvel_torque_tangents()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_tangents)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::t_constvel_torque_tangents() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_tangents)
  return _internal_t_constvel_torque_tangents();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_t_constvel_torque_tangents() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_constvel_torque_tangents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_constvel_torque_tangents();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_t_constvel_torque_tangents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_constvel_torque_tangents_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_t_constvel_torque_tangents() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_constvel_torque_tangents_;
}

// repeated float t_conveyor_torque_bases = 9;
inline int CollisionThresholds::_internal_t_conveyor_torque_bases_size() const {
  return _internal_t_conveyor_torque_bases().size();
}
inline int CollisionThresholds::t_conveyor_torque_bases_size() const {
  return _internal_t_conveyor_torque_bases_size();
}
inline void CollisionThresholds::clear_t_conveyor_torque_bases() {
  _internal_mutable_t_conveyor_torque_bases()->Clear();
}
inline float CollisionThresholds::t_conveyor_torque_bases(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_bases)
  return _internal_t_conveyor_torque_bases().Get(index);
}
inline void CollisionThresholds::set_t_conveyor_torque_bases(int index, float value) {
  _internal_mutable_t_conveyor_torque_bases()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_bases)
}
inline void CollisionThresholds::add_t_conveyor_torque_bases(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_conveyor_torque_bases()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_bases)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::t_conveyor_torque_bases() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_bases)
  return _internal_t_conveyor_torque_bases();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_t_conveyor_torque_bases() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_bases)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_conveyor_torque_bases();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_t_conveyor_torque_bases() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_conveyor_torque_bases_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_t_conveyor_torque_bases() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_conveyor_torque_bases_;
}

// repeated float t_conveyor_torque_tangents = 10;
inline int CollisionThresholds::_internal_t_conveyor_torque_tangents_size() const {
  return _internal_t_conveyor_torque_tangents().size();
}
inline int CollisionThresholds::t_conveyor_torque_tangents_size() const {
  return _internal_t_conveyor_torque_tangents_size();
}
inline void CollisionThresholds::clear_t_conveyor_torque_tangents() {
  _internal_mutable_t_conveyor_torque_tangents()->Clear();
}
inline float CollisionThresholds::t_conveyor_torque_tangents(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_tangents)
  return _internal_t_conveyor_torque_tangents().Get(index);
}
inline void CollisionThresholds::set_t_conveyor_torque_tangents(int index, float value) {
  _internal_mutable_t_conveyor_torque_tangents()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_tangents)
}
inline void CollisionThresholds::add_t_conveyor_torque_tangents(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_t_conveyor_torque_tangents()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_tangents)
}
inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::t_conveyor_torque_tangents() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_tangents)
  return _internal_t_conveyor_torque_tangents();
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::mutable_t_conveyor_torque_tangents() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.CollisionThresholds.t_conveyor_torque_tangents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_t_conveyor_torque_tangents();
}

inline const ::google::protobuf::RepeatedField<float>& CollisionThresholds::_internal_t_conveyor_torque_tangents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.t_conveyor_torque_tangents_;
}
inline ::google::protobuf::RepeatedField<float>* CollisionThresholds::_internal_mutable_t_conveyor_torque_tangents() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.t_conveyor_torque_tangents_;
}

// -------------------------------------------------------------------

// DigitalSignal

// int32 address = 1;
inline void DigitalSignal::clear_address() {
  _impl_.address_ = 0;
}
inline ::int32_t DigitalSignal::address() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DigitalSignal.address)
  return _internal_address();
}
inline void DigitalSignal::set_address(::int32_t value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DigitalSignal.address)
}
inline ::int32_t DigitalSignal::_internal_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.address_;
}
inline void DigitalSignal::_internal_set_address(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_ = value;
}

// int32 state = 2;
inline void DigitalSignal::clear_state() {
  _impl_.state_ = 0;
}
inline ::int32_t DigitalSignal::state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DigitalSignal.state)
  return _internal_state();
}
inline void DigitalSignal::set_state(::int32_t value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DigitalSignal.state)
}
inline ::int32_t DigitalSignal::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void DigitalSignal::_internal_set_state(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_ = value;
}

// -------------------------------------------------------------------

// AnalogSignal

// int32 address = 1;
inline void AnalogSignal::clear_address() {
  _impl_.address_ = 0;
}
inline ::int32_t AnalogSignal::address() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AnalogSignal.address)
  return _internal_address();
}
inline void AnalogSignal::set_address(::int32_t value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AnalogSignal.address)
}
inline ::int32_t AnalogSignal::_internal_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.address_;
}
inline void AnalogSignal::_internal_set_address(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_ = value;
}

// int32 voltage = 2;
inline void AnalogSignal::clear_voltage() {
  _impl_.voltage_ = 0;
}
inline ::int32_t AnalogSignal::voltage() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AnalogSignal.voltage)
  return _internal_voltage();
}
inline void AnalogSignal::set_voltage(::int32_t value) {
  _internal_set_voltage(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AnalogSignal.voltage)
}
inline ::int32_t AnalogSignal::_internal_voltage() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.voltage_;
}
inline void AnalogSignal::_internal_set_voltage(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.voltage_ = value;
}

// -------------------------------------------------------------------

// DOSignals

// repeated .IndyFramework.Protobuf.HRI.DigitalSignal signals = 1;
inline int DOSignals::_internal_signals_size() const {
  return _internal_signals().size();
}
inline int DOSignals::signals_size() const {
  return _internal_signals_size();
}
inline void DOSignals::clear_signals() {
  _internal_mutable_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* DOSignals::mutable_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.DOSignals.signals)
  return _internal_mutable_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
DOSignals::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.DOSignals.signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_signals();
}
inline const ::IndyFramework::Protobuf::HRI::DigitalSignal& DOSignals::signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DOSignals.signals)
    return _internal_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* DOSignals::add_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::DigitalSignal* _add = _internal_mutable_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.DOSignals.signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
DOSignals::signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.DOSignals.signals)
  return _internal_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>&
DOSignals::_internal_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>*
DOSignals::_internal_mutable_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.signals_;
}

// -------------------------------------------------------------------

// AOSignals

// repeated .IndyFramework.Protobuf.HRI.AnalogSignal signals = 1;
inline int AOSignals::_internal_signals_size() const {
  return _internal_signals().size();
}
inline int AOSignals::signals_size() const {
  return _internal_signals_size();
}
inline void AOSignals::clear_signals() {
  _internal_mutable_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::AnalogSignal* AOSignals::mutable_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.AOSignals.signals)
  return _internal_mutable_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >*
AOSignals::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.AOSignals.signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_signals();
}
inline const ::IndyFramework::Protobuf::HRI::AnalogSignal& AOSignals::signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AOSignals.signals)
    return _internal_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::AnalogSignal* AOSignals::add_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::AnalogSignal* _add = _internal_mutable_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.AOSignals.signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >&
AOSignals::signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.AOSignals.signals)
  return _internal_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>&
AOSignals::_internal_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>*
AOSignals::_internal_mutable_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.signals_;
}

// -------------------------------------------------------------------

// EndtoolSignal

// string port = 1;
inline void EndtoolSignal::clear_port() {
  _impl_.port_.ClearToEmpty();
}
inline const std::string& EndtoolSignal::port() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.EndtoolSignal.port)
  return _internal_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EndtoolSignal::set_port(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.EndtoolSignal.port)
}
inline std::string* EndtoolSignal::mutable_port() {
  std::string* _s = _internal_mutable_port();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.EndtoolSignal.port)
  return _s;
}
inline const std::string& EndtoolSignal::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_.Get();
}
inline void EndtoolSignal::_internal_set_port(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(value, GetArenaForAllocation());
}
inline std::string* EndtoolSignal::_internal_mutable_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.port_.Mutable( GetArenaForAllocation());
}
inline std::string* EndtoolSignal::release_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.EndtoolSignal.port)
  return _impl_.port_.Release();
}
inline void EndtoolSignal::set_allocated_port(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.port_.IsDefault()) {
          _impl_.port_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.EndtoolSignal.port)
}

// repeated .IndyFramework.Protobuf.HRI.EndtoolState states = 2;
inline int EndtoolSignal::_internal_states_size() const {
  return _internal_states().size();
}
inline int EndtoolSignal::states_size() const {
  return _internal_states_size();
}
inline void EndtoolSignal::clear_states() {
  _internal_mutable_states()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::EndtoolState EndtoolSignal::states(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.EndtoolSignal.states)
  return static_cast<::IndyFramework::Protobuf::HRI::EndtoolState>(_internal_states().Get(index));
}
inline void EndtoolSignal::set_states(int index, ::IndyFramework::Protobuf::HRI::EndtoolState value) {
  _internal_mutable_states()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.EndtoolSignal.states)
}
inline void EndtoolSignal::add_states(::IndyFramework::Protobuf::HRI::EndtoolState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_states()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.EndtoolSignal.states)
}
inline const ::google::protobuf::RepeatedField<int>& EndtoolSignal::states() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.EndtoolSignal.states)
  return _internal_states();
}
inline ::google::protobuf::RepeatedField<int>* EndtoolSignal::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.EndtoolSignal.states)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_states();
}
inline const ::google::protobuf::RepeatedField<int>& EndtoolSignal::_internal_states() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.states_;
}
inline ::google::protobuf::RepeatedField<int>* EndtoolSignal::_internal_mutable_states() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.states_;
}

// -------------------------------------------------------------------

// EndtoolSignalList

// repeated .IndyFramework.Protobuf.HRI.EndtoolSignal signals = 1;
inline int EndtoolSignalList::_internal_signals_size() const {
  return _internal_signals().size();
}
inline int EndtoolSignalList::signals_size() const {
  return _internal_signals_size();
}
inline void EndtoolSignalList::clear_signals() {
  _internal_mutable_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* EndtoolSignalList::mutable_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.EndtoolSignalList.signals)
  return _internal_mutable_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
EndtoolSignalList::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.EndtoolSignalList.signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_signals();
}
inline const ::IndyFramework::Protobuf::HRI::EndtoolSignal& EndtoolSignalList::signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.EndtoolSignalList.signals)
    return _internal_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* EndtoolSignalList::add_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* _add = _internal_mutable_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.EndtoolSignalList.signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
EndtoolSignalList::signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.EndtoolSignalList.signals)
  return _internal_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>&
EndtoolSignalList::_internal_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>*
EndtoolSignalList::_internal_mutable_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.signals_;
}

// -------------------------------------------------------------------

// ModbusCommand

// string server = 1;
inline void ModbusCommand::clear_server() {
  _impl_.server_.ClearToEmpty();
}
inline const std::string& ModbusCommand::server() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ModbusCommand.server)
  return _internal_server();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModbusCommand::set_server(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ModbusCommand.server)
}
inline std::string* ModbusCommand::mutable_server() {
  std::string* _s = _internal_mutable_server();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ModbusCommand.server)
  return _s;
}
inline const std::string& ModbusCommand::_internal_server() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.server_.Get();
}
inline void ModbusCommand::_internal_set_server(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_.Set(value, GetArenaForAllocation());
}
inline std::string* ModbusCommand::_internal_mutable_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.server_.Mutable( GetArenaForAllocation());
}
inline std::string* ModbusCommand::release_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.ModbusCommand.server)
  return _impl_.server_.Release();
}
inline void ModbusCommand::set_allocated_server(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.server_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.server_.IsDefault()) {
          _impl_.server_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.ModbusCommand.server)
}

// repeated .IndyFramework.Protobuf.HRI.ModbusSignal signals = 2;
inline int ModbusCommand::_internal_signals_size() const {
  return _internal_signals().size();
}
inline int ModbusCommand::signals_size() const {
  return _internal_signals_size();
}
inline void ModbusCommand::clear_signals() {
  _internal_mutable_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::ModbusSignal* ModbusCommand::mutable_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ModbusCommand.signals)
  return _internal_mutable_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusSignal >*
ModbusCommand::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ModbusCommand.signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_signals();
}
inline const ::IndyFramework::Protobuf::HRI::ModbusSignal& ModbusCommand::signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ModbusCommand.signals)
    return _internal_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::ModbusSignal* ModbusCommand::add_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::ModbusSignal* _add = _internal_mutable_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ModbusCommand.signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusSignal >&
ModbusCommand::signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ModbusCommand.signals)
  return _internal_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusSignal>&
ModbusCommand::_internal_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusSignal>*
ModbusCommand::_internal_mutable_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.signals_;
}

// -------------------------------------------------------------------

// ModbusSignal

// int32 addr = 1;
inline void ModbusSignal::clear_addr() {
  _impl_.addr_ = 0;
}
inline ::int32_t ModbusSignal::addr() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ModbusSignal.addr)
  return _internal_addr();
}
inline void ModbusSignal::set_addr(::int32_t value) {
  _internal_set_addr(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ModbusSignal.addr)
}
inline ::int32_t ModbusSignal::_internal_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr_;
}
inline void ModbusSignal::_internal_set_addr(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_ = value;
}

// int32 value = 2;
inline void ModbusSignal::clear_value() {
  _impl_.value_ = 0;
}
inline ::int32_t ModbusSignal::value() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ModbusSignal.value)
  return _internal_value();
}
inline void ModbusSignal::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ModbusSignal.value)
}
inline ::int32_t ModbusSignal::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void ModbusSignal::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// Tool

// string name = 1;
inline void Tool::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Tool::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Tool::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Tool.name)
}
inline std::string* Tool::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.name)
  return _s;
}
inline const std::string& Tool::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Tool::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Tool::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* Tool::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Tool.name)
  return _impl_.name_.Release();
}
inline void Tool::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Tool.name)
}

// float execute_time = 2;
inline void Tool::clear_execute_time() {
  _impl_.execute_time_ = 0;
}
inline float Tool::execute_time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.execute_time)
  return _internal_execute_time();
}
inline void Tool::set_execute_time(float value) {
  _internal_set_execute_time(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Tool.execute_time)
}
inline float Tool::_internal_execute_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execute_time_;
}
inline void Tool::_internal_set_execute_time(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execute_time_ = value;
}

// repeated .IndyFramework.Protobuf.HRI.DigitalSignal do_signals = 3;
inline int Tool::_internal_do_signals_size() const {
  return _internal_do_signals().size();
}
inline int Tool::do_signals_size() const {
  return _internal_do_signals_size();
}
inline void Tool::clear_do_signals() {
  _internal_mutable_do_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* Tool::mutable_do_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.do_signals)
  return _internal_mutable_do_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >*
Tool::mutable_do_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.Tool.do_signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_do_signals();
}
inline const ::IndyFramework::Protobuf::HRI::DigitalSignal& Tool::do_signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.do_signals)
    return _internal_do_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::DigitalSignal* Tool::add_do_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::DigitalSignal* _add = _internal_mutable_do_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.do_signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::DigitalSignal >&
Tool::do_signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.Tool.do_signals)
  return _internal_do_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>&
Tool::_internal_do_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.do_signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::DigitalSignal>*
Tool::_internal_mutable_do_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.do_signals_;
}

// repeated .IndyFramework.Protobuf.HRI.EndtoolSignal enddo_signals = 4;
inline int Tool::_internal_enddo_signals_size() const {
  return _internal_enddo_signals().size();
}
inline int Tool::enddo_signals_size() const {
  return _internal_enddo_signals_size();
}
inline void Tool::clear_enddo_signals() {
  _internal_mutable_enddo_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* Tool::mutable_enddo_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.enddo_signals)
  return _internal_mutable_enddo_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >*
Tool::mutable_enddo_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.Tool.enddo_signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_enddo_signals();
}
inline const ::IndyFramework::Protobuf::HRI::EndtoolSignal& Tool::enddo_signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.enddo_signals)
    return _internal_enddo_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::EndtoolSignal* Tool::add_enddo_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::EndtoolSignal* _add = _internal_mutable_enddo_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.enddo_signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::EndtoolSignal >&
Tool::enddo_signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.Tool.enddo_signals)
  return _internal_enddo_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>&
Tool::_internal_enddo_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enddo_signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::EndtoolSignal>*
Tool::_internal_mutable_enddo_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.enddo_signals_;
}

// repeated .IndyFramework.Protobuf.HRI.AnalogSignal ao_signals = 5;
inline int Tool::_internal_ao_signals_size() const {
  return _internal_ao_signals().size();
}
inline int Tool::ao_signals_size() const {
  return _internal_ao_signals_size();
}
inline void Tool::clear_ao_signals() {
  _internal_mutable_ao_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::AnalogSignal* Tool::mutable_ao_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.ao_signals)
  return _internal_mutable_ao_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >*
Tool::mutable_ao_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.Tool.ao_signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ao_signals();
}
inline const ::IndyFramework::Protobuf::HRI::AnalogSignal& Tool::ao_signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.ao_signals)
    return _internal_ao_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::AnalogSignal* Tool::add_ao_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::AnalogSignal* _add = _internal_mutable_ao_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.ao_signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >&
Tool::ao_signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.Tool.ao_signals)
  return _internal_ao_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>&
Tool::_internal_ao_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ao_signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>*
Tool::_internal_mutable_ao_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ao_signals_;
}

// repeated .IndyFramework.Protobuf.HRI.AnalogSignal endao_signals = 6;
inline int Tool::_internal_endao_signals_size() const {
  return _internal_endao_signals().size();
}
inline int Tool::endao_signals_size() const {
  return _internal_endao_signals_size();
}
inline void Tool::clear_endao_signals() {
  _internal_mutable_endao_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::AnalogSignal* Tool::mutable_endao_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.endao_signals)
  return _internal_mutable_endao_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >*
Tool::mutable_endao_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.Tool.endao_signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_endao_signals();
}
inline const ::IndyFramework::Protobuf::HRI::AnalogSignal& Tool::endao_signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.endao_signals)
    return _internal_endao_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::AnalogSignal* Tool::add_endao_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::AnalogSignal* _add = _internal_mutable_endao_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.endao_signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::AnalogSignal >&
Tool::endao_signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.Tool.endao_signals)
  return _internal_endao_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>&
Tool::_internal_endao_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.endao_signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::AnalogSignal>*
Tool::_internal_mutable_endao_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.endao_signals_;
}

// repeated string expression = 7;
inline int Tool::_internal_expression_size() const {
  return _internal_expression().size();
}
inline int Tool::expression_size() const {
  return _internal_expression_size();
}
inline void Tool::clear_expression() {
  _internal_mutable_expression()->Clear();
}
inline std::string* Tool::add_expression() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_expression()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.Tool.expression)
  return _s;
}
inline const std::string& Tool::expression(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.expression)
  return _internal_expression().Get(index);
}
inline std::string* Tool::mutable_expression(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.expression)
  return _internal_mutable_expression()->Mutable(index);
}
inline void Tool::set_expression(int index, const std::string& value) {
  _internal_mutable_expression()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::set_expression(int index, std::string&& value) {
  _internal_mutable_expression()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::set_expression(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_expression()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::set_expression(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_expression()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::set_expression(int index, absl::string_view value) {
  _internal_mutable_expression()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::add_expression(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_expression()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::add_expression(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_expression()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::add_expression(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_expression()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::add_expression(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_expression()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline void Tool::add_expression(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_expression()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.Tool.expression)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Tool::expression() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.Tool.expression)
  return _internal_expression();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* Tool::mutable_expression() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.Tool.expression)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_expression();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Tool::_internal_expression() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.expression_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Tool::_internal_mutable_expression() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.expression_;
}

// repeated .IndyFramework.Protobuf.HRI.GripperCommand gripper_signals = 8;
inline int Tool::_internal_gripper_signals_size() const {
  return _internal_gripper_signals().size();
}
inline int Tool::gripper_signals_size() const {
  return _internal_gripper_signals_size();
}
inline void Tool::clear_gripper_signals() {
  _internal_mutable_gripper_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::GripperCommand* Tool::mutable_gripper_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.gripper_signals)
  return _internal_mutable_gripper_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GripperCommand >*
Tool::mutable_gripper_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.Tool.gripper_signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gripper_signals();
}
inline const ::IndyFramework::Protobuf::HRI::GripperCommand& Tool::gripper_signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.gripper_signals)
    return _internal_gripper_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::GripperCommand* Tool::add_gripper_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::GripperCommand* _add = _internal_mutable_gripper_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.gripper_signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::GripperCommand >&
Tool::gripper_signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.Tool.gripper_signals)
  return _internal_gripper_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GripperCommand>&
Tool::_internal_gripper_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gripper_signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::GripperCommand>*
Tool::_internal_mutable_gripper_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gripper_signals_;
}

// repeated .IndyFramework.Protobuf.HRI.ModbusCommand modbus_signals = 9;
inline int Tool::_internal_modbus_signals_size() const {
  return _internal_modbus_signals().size();
}
inline int Tool::modbus_signals_size() const {
  return _internal_modbus_signals_size();
}
inline void Tool::clear_modbus_signals() {
  _internal_mutable_modbus_signals()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::ModbusCommand* Tool::mutable_modbus_signals(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Tool.modbus_signals)
  return _internal_mutable_modbus_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusCommand >*
Tool::mutable_modbus_signals() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.Tool.modbus_signals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_modbus_signals();
}
inline const ::IndyFramework::Protobuf::HRI::ModbusCommand& Tool::modbus_signals(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Tool.modbus_signals)
    return _internal_modbus_signals().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::ModbusCommand* Tool::add_modbus_signals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::ModbusCommand* _add = _internal_mutable_modbus_signals()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.Tool.modbus_signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::ModbusCommand >&
Tool::modbus_signals() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.Tool.modbus_signals)
  return _internal_modbus_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusCommand>&
Tool::_internal_modbus_signals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.modbus_signals_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::ModbusCommand>*
Tool::_internal_mutable_modbus_signals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.modbus_signals_;
}

// -------------------------------------------------------------------

// ToolList

// repeated .IndyFramework.Protobuf.HRI.Tool tools = 1;
inline int ToolList::_internal_tools_size() const {
  return _internal_tools().size();
}
inline int ToolList::tools_size() const {
  return _internal_tools_size();
}
inline void ToolList::clear_tools() {
  _internal_mutable_tools()->Clear();
}
inline ::IndyFramework::Protobuf::HRI::Tool* ToolList::mutable_tools(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.ToolList.tools)
  return _internal_mutable_tools()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Tool >*
ToolList::mutable_tools() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.ToolList.tools)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tools();
}
inline const ::IndyFramework::Protobuf::HRI::Tool& ToolList::tools(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ToolList.tools)
    return _internal_tools().Get(index);
}
inline ::IndyFramework::Protobuf::HRI::Tool* ToolList::add_tools() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::IndyFramework::Protobuf::HRI::Tool* _add = _internal_mutable_tools()->Add();
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.ToolList.tools)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::IndyFramework::Protobuf::HRI::Tool >&
ToolList::tools() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.ToolList.tools)
  return _internal_tools();
}
inline const ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Tool>&
ToolList::_internal_tools() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tools_;
}
inline ::google::protobuf::RepeatedPtrField<::IndyFramework::Protobuf::HRI::Tool>*
ToolList::_internal_mutable_tools() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tools_;
}

// -------------------------------------------------------------------

// TeleOpDevice

// string name = 1;
inline void TeleOpDevice::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TeleOpDevice::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpDevice.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TeleOpDevice::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpDevice.name)
}
inline std::string* TeleOpDevice::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.TeleOpDevice.name)
  return _s;
}
inline const std::string& TeleOpDevice::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void TeleOpDevice::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* TeleOpDevice::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* TeleOpDevice::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.TeleOpDevice.name)
  return _impl_.name_.Release();
}
inline void TeleOpDevice::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.TeleOpDevice.name)
}

// .IndyFramework.Protobuf.HRI.TeleOpDevice.TeleOpDeviceType type = 2;
inline void TeleOpDevice::clear_type() {
  _impl_.type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType TeleOpDevice::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpDevice.type)
  return _internal_type();
}
inline void TeleOpDevice::set_type(::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpDevice.type)
}
inline ::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType TeleOpDevice::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType>(_impl_.type_);
}
inline void TeleOpDevice::_internal_set_type(::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// string ip = 3;
inline void TeleOpDevice::clear_ip() {
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& TeleOpDevice::ip() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpDevice.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TeleOpDevice::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpDevice.ip)
}
inline std::string* TeleOpDevice::mutable_ip() {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.TeleOpDevice.ip)
  return _s;
}
inline const std::string& TeleOpDevice::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void TeleOpDevice::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArenaForAllocation());
}
inline std::string* TeleOpDevice::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArenaForAllocation());
}
inline std::string* TeleOpDevice::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.TeleOpDevice.ip)
  return _impl_.ip_.Release();
}
inline void TeleOpDevice::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.TeleOpDevice.ip)
}

// uint32 port = 4;
inline void TeleOpDevice::clear_port() {
  _impl_.port_ = 0u;
}
inline ::uint32_t TeleOpDevice::port() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpDevice.port)
  return _internal_port();
}
inline void TeleOpDevice::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpDevice.port)
}
inline ::uint32_t TeleOpDevice::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_;
}
inline void TeleOpDevice::_internal_set_port(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_ = value;
}

// bool connected = 5;
inline void TeleOpDevice::clear_connected() {
  _impl_.connected_ = false;
}
inline bool TeleOpDevice::connected() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpDevice.connected)
  return _internal_connected();
}
inline void TeleOpDevice::set_connected(bool value) {
  _internal_set_connected(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpDevice.connected)
}
inline bool TeleOpDevice::_internal_connected() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.connected_;
}
inline void TeleOpDevice::_internal_set_connected(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.connected_ = value;
}

// -------------------------------------------------------------------

// TeleOpState

// .IndyFramework.Protobuf.HRI.TeleMode mode = 1;
inline void TeleOpState::clear_mode() {
  _impl_.mode_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::TeleMode TeleOpState::mode() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpState.mode)
  return _internal_mode();
}
inline void TeleOpState::set_mode(::IndyFramework::Protobuf::HRI::TeleMode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpState.mode)
}
inline ::IndyFramework::Protobuf::HRI::TeleMode TeleOpState::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::TeleMode>(_impl_.mode_);
}
inline void TeleOpState::_internal_set_mode(::IndyFramework::Protobuf::HRI::TeleMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_ = value;
}

// .IndyFramework.Protobuf.HRI.TeleMethod method = 2;
inline void TeleOpState::clear_method() {
  _impl_.method_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::TeleMethod TeleOpState::method() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpState.method)
  return _internal_method();
}
inline void TeleOpState::set_method(::IndyFramework::Protobuf::HRI::TeleMethod value) {
  _internal_set_method(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpState.method)
}
inline ::IndyFramework::Protobuf::HRI::TeleMethod TeleOpState::_internal_method() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::TeleMethod>(_impl_.method_);
}
inline void TeleOpState::_internal_set_method(::IndyFramework::Protobuf::HRI::TeleMethod value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.method_ = value;
}

// -------------------------------------------------------------------

// TeleP

// repeated float tpos = 1;
inline int TeleP::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int TeleP::tpos_size() const {
  return _internal_tpos_size();
}
inline void TeleP::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float TeleP::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleP.tpos)
  return _internal_tpos().Get(index);
}
inline void TeleP::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleP.tpos)
}
inline void TeleP::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.TeleP.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& TeleP::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.TeleP.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* TeleP::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.TeleP.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& TeleP::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* TeleP::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool TeleP::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void TeleP::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& TeleP::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& TeleP::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleP.response)
  return _internal_response();
}
inline void TeleP::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.TeleP.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleP::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleP::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.TeleP.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleP::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleP::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.TeleP.response)
  return _msg;
}
inline void TeleP::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.TeleP.response)
}

// -------------------------------------------------------------------

// TeleOpFileList

// repeated string files = 1;
inline int TeleOpFileList::_internal_files_size() const {
  return _internal_files().size();
}
inline int TeleOpFileList::files_size() const {
  return _internal_files_size();
}
inline void TeleOpFileList::clear_files() {
  _internal_mutable_files()->Clear();
}
inline std::string* TeleOpFileList::add_files() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
  return _s;
}
inline const std::string& TeleOpFileList::files(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
  return _internal_files().Get(index);
}
inline std::string* TeleOpFileList::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
  return _internal_mutable_files()->Mutable(index);
}
inline void TeleOpFileList::set_files(int index, const std::string& value) {
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::set_files(int index, std::string&& value) {
  _internal_mutable_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::set_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::set_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::set_files(int index, absl::string_view value) {
  _internal_mutable_files()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::add_files(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::add_files(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::add_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::add_files(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline void TeleOpFileList::add_files(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_files()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TeleOpFileList::files() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
  return _internal_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* TeleOpFileList::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.TeleOpFileList.files)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TeleOpFileList::_internal_files() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TeleOpFileList::_internal_mutable_files() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.files_;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool TeleOpFileList::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void TeleOpFileList::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& TeleOpFileList::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& TeleOpFileList::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpFileList.response)
  return _internal_response();
}
inline void TeleOpFileList::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.TeleOpFileList.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleOpFileList::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleOpFileList::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.TeleOpFileList.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleOpFileList::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* TeleOpFileList::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.TeleOpFileList.response)
  return _msg;
}
inline void TeleOpFileList::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.TeleOpFileList.response)
}

// -------------------------------------------------------------------

// TeleFileReq

// string name = 1;
inline void TeleFileReq::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TeleFileReq::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleFileReq.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TeleFileReq::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleFileReq.name)
}
inline std::string* TeleFileReq::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.TeleFileReq.name)
  return _s;
}
inline const std::string& TeleFileReq::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void TeleFileReq::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* TeleFileReq::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* TeleFileReq::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.TeleFileReq.name)
  return _impl_.name_.Release();
}
inline void TeleFileReq::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.TeleFileReq.name)
}

// -------------------------------------------------------------------

// TelePlayRate

// float rate = 1;
inline void TelePlayRate::clear_rate() {
  _impl_.rate_ = 0;
}
inline float TelePlayRate::rate() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TelePlayRate.rate)
  return _internal_rate();
}
inline void TelePlayRate::set_rate(float value) {
  _internal_set_rate(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TelePlayRate.rate)
}
inline float TelePlayRate::_internal_rate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rate_;
}
inline void TelePlayRate::_internal_set_rate(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rate_ = value;
}

// -------------------------------------------------------------------

// MoveTeleJReq

// repeated float jpos = 1;
inline int MoveTeleJReq::_internal_jpos_size() const {
  return _internal_jpos().size();
}
inline int MoveTeleJReq::jpos_size() const {
  return _internal_jpos_size();
}
inline void MoveTeleJReq::clear_jpos() {
  _internal_mutable_jpos()->Clear();
}
inline float MoveTeleJReq::jpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveTeleJReq.jpos)
  return _internal_jpos().Get(index);
}
inline void MoveTeleJReq::set_jpos(int index, float value) {
  _internal_mutable_jpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveTeleJReq.jpos)
}
inline void MoveTeleJReq::add_jpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.MoveTeleJReq.jpos)
}
inline const ::google::protobuf::RepeatedField<float>& MoveTeleJReq::jpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.MoveTeleJReq.jpos)
  return _internal_jpos();
}
inline ::google::protobuf::RepeatedField<float>* MoveTeleJReq::mutable_jpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.MoveTeleJReq.jpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jpos();
}

inline const ::google::protobuf::RepeatedField<float>& MoveTeleJReq::_internal_jpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jpos_;
}
inline ::google::protobuf::RepeatedField<float>* MoveTeleJReq::_internal_mutable_jpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jpos_;
}

// float vel_ratio = 2;
inline void MoveTeleJReq::clear_vel_ratio() {
  _impl_.vel_ratio_ = 0;
}
inline float MoveTeleJReq::vel_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveTeleJReq.vel_ratio)
  return _internal_vel_ratio();
}
inline void MoveTeleJReq::set_vel_ratio(float value) {
  _internal_set_vel_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveTeleJReq.vel_ratio)
}
inline float MoveTeleJReq::_internal_vel_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_ratio_;
}
inline void MoveTeleJReq::_internal_set_vel_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_ratio_ = value;
}

// float acc_ratio = 3;
inline void MoveTeleJReq::clear_acc_ratio() {
  _impl_.acc_ratio_ = 0;
}
inline float MoveTeleJReq::acc_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveTeleJReq.acc_ratio)
  return _internal_acc_ratio();
}
inline void MoveTeleJReq::set_acc_ratio(float value) {
  _internal_set_acc_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveTeleJReq.acc_ratio)
}
inline float MoveTeleJReq::_internal_acc_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.acc_ratio_;
}
inline void MoveTeleJReq::_internal_set_acc_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.acc_ratio_ = value;
}

// -------------------------------------------------------------------

// MoveTeleLReq

// repeated float tpos = 1;
inline int MoveTeleLReq::_internal_tpos_size() const {
  return _internal_tpos().size();
}
inline int MoveTeleLReq::tpos_size() const {
  return _internal_tpos_size();
}
inline void MoveTeleLReq::clear_tpos() {
  _internal_mutable_tpos()->Clear();
}
inline float MoveTeleLReq::tpos(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveTeleLReq.tpos)
  return _internal_tpos().Get(index);
}
inline void MoveTeleLReq::set_tpos(int index, float value) {
  _internal_mutable_tpos()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveTeleLReq.tpos)
}
inline void MoveTeleLReq::add_tpos(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tpos()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.MoveTeleLReq.tpos)
}
inline const ::google::protobuf::RepeatedField<float>& MoveTeleLReq::tpos() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.MoveTeleLReq.tpos)
  return _internal_tpos();
}
inline ::google::protobuf::RepeatedField<float>* MoveTeleLReq::mutable_tpos() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.MoveTeleLReq.tpos)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tpos();
}

inline const ::google::protobuf::RepeatedField<float>& MoveTeleLReq::_internal_tpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tpos_;
}
inline ::google::protobuf::RepeatedField<float>* MoveTeleLReq::_internal_mutable_tpos() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tpos_;
}

// float vel_ratio = 2;
inline void MoveTeleLReq::clear_vel_ratio() {
  _impl_.vel_ratio_ = 0;
}
inline float MoveTeleLReq::vel_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveTeleLReq.vel_ratio)
  return _internal_vel_ratio();
}
inline void MoveTeleLReq::set_vel_ratio(float value) {
  _internal_set_vel_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveTeleLReq.vel_ratio)
}
inline float MoveTeleLReq::_internal_vel_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_ratio_;
}
inline void MoveTeleLReq::_internal_set_vel_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_ratio_ = value;
}

// float acc_ratio = 3;
inline void MoveTeleLReq::clear_acc_ratio() {
  _impl_.acc_ratio_ = 0;
}
inline float MoveTeleLReq::acc_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.MoveTeleLReq.acc_ratio)
  return _internal_acc_ratio();
}
inline void MoveTeleLReq::set_acc_ratio(float value) {
  _internal_set_acc_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.MoveTeleLReq.acc_ratio)
}
inline float MoveTeleLReq::_internal_acc_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.acc_ratio_;
}
inline void MoveTeleLReq::_internal_set_acc_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.acc_ratio_ = value;
}

// -------------------------------------------------------------------

// TeleOpParams

// float smooth_factor = 1;
inline void TeleOpParams::clear_smooth_factor() {
  _impl_.smooth_factor_ = 0;
}
inline float TeleOpParams::smooth_factor() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpParams.smooth_factor)
  return _internal_smooth_factor();
}
inline void TeleOpParams::set_smooth_factor(float value) {
  _internal_set_smooth_factor(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpParams.smooth_factor)
}
inline float TeleOpParams::_internal_smooth_factor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.smooth_factor_;
}
inline void TeleOpParams::_internal_set_smooth_factor(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.smooth_factor_ = value;
}

// float cutoff_freq = 2;
inline void TeleOpParams::clear_cutoff_freq() {
  _impl_.cutoff_freq_ = 0;
}
inline float TeleOpParams::cutoff_freq() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpParams.cutoff_freq)
  return _internal_cutoff_freq();
}
inline void TeleOpParams::set_cutoff_freq(float value) {
  _internal_set_cutoff_freq(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpParams.cutoff_freq)
}
inline float TeleOpParams::_internal_cutoff_freq() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cutoff_freq_;
}
inline void TeleOpParams::_internal_set_cutoff_freq(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cutoff_freq_ = value;
}

// float error_gain = 3;
inline void TeleOpParams::clear_error_gain() {
  _impl_.error_gain_ = 0;
}
inline float TeleOpParams::error_gain() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TeleOpParams.error_gain)
  return _internal_error_gain();
}
inline void TeleOpParams::set_error_gain(float value) {
  _internal_set_error_gain(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TeleOpParams.error_gain)
}
inline float TeleOpParams::_internal_error_gain() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_gain_;
}
inline void TeleOpParams::_internal_set_error_gain(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_gain_ = value;
}

// -------------------------------------------------------------------

// FTSensorDevice

// .IndyFramework.Protobuf.HRI.FTSensorDevice.FTSensorDeviceType dev_type = 1;
inline void FTSensorDevice::clear_dev_type() {
  _impl_.dev_type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType FTSensorDevice::dev_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.dev_type)
  return _internal_dev_type();
}
inline void FTSensorDevice::set_dev_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType value) {
  _internal_set_dev_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.dev_type)
}
inline ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType FTSensorDevice::_internal_dev_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType>(_impl_.dev_type_);
}
inline void FTSensorDevice::_internal_set_dev_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dev_type_ = value;
}

// .IndyFramework.Protobuf.HRI.FTSensorDevice.FTSensorDeviceComType com_type = 2;
inline void FTSensorDevice::clear_com_type() {
  _impl_.com_type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType FTSensorDevice::com_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.com_type)
  return _internal_com_type();
}
inline void FTSensorDevice::set_com_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType value) {
  _internal_set_com_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.com_type)
}
inline ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType FTSensorDevice::_internal_com_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType>(_impl_.com_type_);
}
inline void FTSensorDevice::_internal_set_com_type(::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.com_type_ = value;
}

// string ip_address = 3;
inline void FTSensorDevice::clear_ip_address() {
  _impl_.ip_address_.ClearToEmpty();
}
inline const std::string& FTSensorDevice::ip_address() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.ip_address)
  return _internal_ip_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FTSensorDevice::set_ip_address(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.ip_address)
}
inline std::string* FTSensorDevice::mutable_ip_address() {
  std::string* _s = _internal_mutable_ip_address();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.FTSensorDevice.ip_address)
  return _s;
}
inline const std::string& FTSensorDevice::_internal_ip_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_address_.Get();
}
inline void FTSensorDevice::_internal_set_ip_address(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_address_.Set(value, GetArenaForAllocation());
}
inline std::string* FTSensorDevice::_internal_mutable_ip_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_address_.Mutable( GetArenaForAllocation());
}
inline std::string* FTSensorDevice::release_ip_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.FTSensorDevice.ip_address)
  return _impl_.ip_address_.Release();
}
inline void FTSensorDevice::set_allocated_ip_address(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_address_.IsDefault()) {
          _impl_.ip_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.FTSensorDevice.ip_address)
}

// float ft_frame_translation_offset_x = 11;
inline void FTSensorDevice::clear_ft_frame_translation_offset_x() {
  _impl_.ft_frame_translation_offset_x_ = 0;
}
inline float FTSensorDevice::ft_frame_translation_offset_x() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_translation_offset_x)
  return _internal_ft_frame_translation_offset_x();
}
inline void FTSensorDevice::set_ft_frame_translation_offset_x(float value) {
  _internal_set_ft_frame_translation_offset_x(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_translation_offset_x)
}
inline float FTSensorDevice::_internal_ft_frame_translation_offset_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_frame_translation_offset_x_;
}
inline void FTSensorDevice::_internal_set_ft_frame_translation_offset_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_frame_translation_offset_x_ = value;
}

// float ft_frame_translation_offset_y = 12;
inline void FTSensorDevice::clear_ft_frame_translation_offset_y() {
  _impl_.ft_frame_translation_offset_y_ = 0;
}
inline float FTSensorDevice::ft_frame_translation_offset_y() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_translation_offset_y)
  return _internal_ft_frame_translation_offset_y();
}
inline void FTSensorDevice::set_ft_frame_translation_offset_y(float value) {
  _internal_set_ft_frame_translation_offset_y(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_translation_offset_y)
}
inline float FTSensorDevice::_internal_ft_frame_translation_offset_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_frame_translation_offset_y_;
}
inline void FTSensorDevice::_internal_set_ft_frame_translation_offset_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_frame_translation_offset_y_ = value;
}

// float ft_frame_translation_offset_z = 13;
inline void FTSensorDevice::clear_ft_frame_translation_offset_z() {
  _impl_.ft_frame_translation_offset_z_ = 0;
}
inline float FTSensorDevice::ft_frame_translation_offset_z() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_translation_offset_z)
  return _internal_ft_frame_translation_offset_z();
}
inline void FTSensorDevice::set_ft_frame_translation_offset_z(float value) {
  _internal_set_ft_frame_translation_offset_z(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_translation_offset_z)
}
inline float FTSensorDevice::_internal_ft_frame_translation_offset_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_frame_translation_offset_z_;
}
inline void FTSensorDevice::_internal_set_ft_frame_translation_offset_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_frame_translation_offset_z_ = value;
}

// float ft_frame_rotation_offset_r = 14;
inline void FTSensorDevice::clear_ft_frame_rotation_offset_r() {
  _impl_.ft_frame_rotation_offset_r_ = 0;
}
inline float FTSensorDevice::ft_frame_rotation_offset_r() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_rotation_offset_r)
  return _internal_ft_frame_rotation_offset_r();
}
inline void FTSensorDevice::set_ft_frame_rotation_offset_r(float value) {
  _internal_set_ft_frame_rotation_offset_r(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_rotation_offset_r)
}
inline float FTSensorDevice::_internal_ft_frame_rotation_offset_r() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_frame_rotation_offset_r_;
}
inline void FTSensorDevice::_internal_set_ft_frame_rotation_offset_r(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_frame_rotation_offset_r_ = value;
}

// float ft_frame_rotation_offset_p = 15;
inline void FTSensorDevice::clear_ft_frame_rotation_offset_p() {
  _impl_.ft_frame_rotation_offset_p_ = 0;
}
inline float FTSensorDevice::ft_frame_rotation_offset_p() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_rotation_offset_p)
  return _internal_ft_frame_rotation_offset_p();
}
inline void FTSensorDevice::set_ft_frame_rotation_offset_p(float value) {
  _internal_set_ft_frame_rotation_offset_p(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_rotation_offset_p)
}
inline float FTSensorDevice::_internal_ft_frame_rotation_offset_p() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_frame_rotation_offset_p_;
}
inline void FTSensorDevice::_internal_set_ft_frame_rotation_offset_p(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_frame_rotation_offset_p_ = value;
}

// float ft_frame_rotation_offset_y = 16;
inline void FTSensorDevice::clear_ft_frame_rotation_offset_y() {
  _impl_.ft_frame_rotation_offset_y_ = 0;
}
inline float FTSensorDevice::ft_frame_rotation_offset_y() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_rotation_offset_y)
  return _internal_ft_frame_rotation_offset_y();
}
inline void FTSensorDevice::set_ft_frame_rotation_offset_y(float value) {
  _internal_set_ft_frame_rotation_offset_y(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDevice.ft_frame_rotation_offset_y)
}
inline float FTSensorDevice::_internal_ft_frame_rotation_offset_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_frame_rotation_offset_y_;
}
inline void FTSensorDevice::_internal_set_ft_frame_rotation_offset_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_frame_rotation_offset_y_ = value;
}

// -------------------------------------------------------------------

// FTSensorDeviceRes

// string msg = 100;
inline void FTSensorDeviceRes::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& FTSensorDeviceRes::msg() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorDeviceRes.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FTSensorDeviceRes::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorDeviceRes.msg)
}
inline std::string* FTSensorDeviceRes::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.FTSensorDeviceRes.msg)
  return _s;
}
inline const std::string& FTSensorDeviceRes::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void FTSensorDeviceRes::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* FTSensorDeviceRes::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* FTSensorDeviceRes::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.FTSensorDeviceRes.msg)
  return _impl_.msg_.Release();
}
inline void FTSensorDeviceRes::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.FTSensorDeviceRes.msg)
}

// -------------------------------------------------------------------

// FTSensorData

// float ft_Fx = 1;
inline void FTSensorData::clear_ft_fx() {
  _impl_.ft_fx_ = 0;
}
inline float FTSensorData::ft_fx() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorData.ft_Fx)
  return _internal_ft_fx();
}
inline void FTSensorData::set_ft_fx(float value) {
  _internal_set_ft_fx(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorData.ft_Fx)
}
inline float FTSensorData::_internal_ft_fx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_fx_;
}
inline void FTSensorData::_internal_set_ft_fx(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_fx_ = value;
}

// float ft_Fy = 2;
inline void FTSensorData::clear_ft_fy() {
  _impl_.ft_fy_ = 0;
}
inline float FTSensorData::ft_fy() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorData.ft_Fy)
  return _internal_ft_fy();
}
inline void FTSensorData::set_ft_fy(float value) {
  _internal_set_ft_fy(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorData.ft_Fy)
}
inline float FTSensorData::_internal_ft_fy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_fy_;
}
inline void FTSensorData::_internal_set_ft_fy(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_fy_ = value;
}

// float ft_Fz = 3;
inline void FTSensorData::clear_ft_fz() {
  _impl_.ft_fz_ = 0;
}
inline float FTSensorData::ft_fz() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorData.ft_Fz)
  return _internal_ft_fz();
}
inline void FTSensorData::set_ft_fz(float value) {
  _internal_set_ft_fz(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorData.ft_Fz)
}
inline float FTSensorData::_internal_ft_fz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_fz_;
}
inline void FTSensorData::_internal_set_ft_fz(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_fz_ = value;
}

// float ft_Tx = 4;
inline void FTSensorData::clear_ft_tx() {
  _impl_.ft_tx_ = 0;
}
inline float FTSensorData::ft_tx() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorData.ft_Tx)
  return _internal_ft_tx();
}
inline void FTSensorData::set_ft_tx(float value) {
  _internal_set_ft_tx(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorData.ft_Tx)
}
inline float FTSensorData::_internal_ft_tx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_tx_;
}
inline void FTSensorData::_internal_set_ft_tx(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_tx_ = value;
}

// float ft_Ty = 5;
inline void FTSensorData::clear_ft_ty() {
  _impl_.ft_ty_ = 0;
}
inline float FTSensorData::ft_ty() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorData.ft_Ty)
  return _internal_ft_ty();
}
inline void FTSensorData::set_ft_ty(float value) {
  _internal_set_ft_ty(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorData.ft_Ty)
}
inline float FTSensorData::_internal_ft_ty() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_ty_;
}
inline void FTSensorData::_internal_set_ft_ty(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_ty_ = value;
}

// float ft_Tz = 6;
inline void FTSensorData::clear_ft_tz() {
  _impl_.ft_tz_ = 0;
}
inline float FTSensorData::ft_tz() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorData.ft_Tz)
  return _internal_ft_tz();
}
inline void FTSensorData::set_ft_tz(float value) {
  _internal_set_ft_tz(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.FTSensorData.ft_Tz)
}
inline float FTSensorData::_internal_ft_tz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ft_tz_;
}
inline void FTSensorData::_internal_set_ft_tz(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ft_tz_ = value;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool FTSensorData::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void FTSensorData::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& FTSensorData::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& FTSensorData::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.FTSensorData.response)
  return _internal_response();
}
inline void FTSensorData::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.FTSensorData.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* FTSensorData::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* FTSensorData::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.FTSensorData.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* FTSensorData::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* FTSensorData::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.FTSensorData.response)
  return _msg;
}
inline void FTSensorData::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.FTSensorData.response)
}

// -------------------------------------------------------------------

// GetLoadFactorsRes

// repeated int32 percents = 1;
inline int GetLoadFactorsRes::_internal_percents_size() const {
  return _internal_percents().size();
}
inline int GetLoadFactorsRes::percents_size() const {
  return _internal_percents_size();
}
inline void GetLoadFactorsRes::clear_percents() {
  _internal_mutable_percents()->Clear();
}
inline ::int32_t GetLoadFactorsRes::percents(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.percents)
  return _internal_percents().Get(index);
}
inline void GetLoadFactorsRes::set_percents(int index, ::int32_t value) {
  _internal_mutable_percents()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.percents)
}
inline void GetLoadFactorsRes::add_percents(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_percents()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.percents)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GetLoadFactorsRes::percents() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.percents)
  return _internal_percents();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetLoadFactorsRes::mutable_percents() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.percents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_percents();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GetLoadFactorsRes::_internal_percents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.percents_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetLoadFactorsRes::_internal_mutable_percents() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.percents_;
}

// repeated float torques = 2;
inline int GetLoadFactorsRes::_internal_torques_size() const {
  return _internal_torques().size();
}
inline int GetLoadFactorsRes::torques_size() const {
  return _internal_torques_size();
}
inline void GetLoadFactorsRes::clear_torques() {
  _internal_mutable_torques()->Clear();
}
inline float GetLoadFactorsRes::torques(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.torques)
  return _internal_torques().Get(index);
}
inline void GetLoadFactorsRes::set_torques(int index, float value) {
  _internal_mutable_torques()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.torques)
}
inline void GetLoadFactorsRes::add_torques(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_torques()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.torques)
}
inline const ::google::protobuf::RepeatedField<float>& GetLoadFactorsRes::torques() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.torques)
  return _internal_torques();
}
inline ::google::protobuf::RepeatedField<float>* GetLoadFactorsRes::mutable_torques() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.torques)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_torques();
}

inline const ::google::protobuf::RepeatedField<float>& GetLoadFactorsRes::_internal_torques() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.torques_;
}
inline ::google::protobuf::RepeatedField<float>* GetLoadFactorsRes::_internal_mutable_torques() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.torques_;
}

// .IndyFramework.Protobuf.HRI.Response response = 100;
inline bool GetLoadFactorsRes::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void GetLoadFactorsRes::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Response& GetLoadFactorsRes::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Response* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Response&>(::IndyFramework::Protobuf::HRI::_Response_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Response& GetLoadFactorsRes::response() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.response)
  return _internal_response();
}
inline void GetLoadFactorsRes::unsafe_arena_set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.response)
}
inline ::IndyFramework::Protobuf::HRI::Response* GetLoadFactorsRes::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* released = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Response* GetLoadFactorsRes::unsafe_arena_release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Response* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Response* GetLoadFactorsRes::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Response>(GetArenaForAllocation());
    _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(p);
  }
  return _impl_.response_;
}
inline ::IndyFramework::Protobuf::HRI::Response* GetLoadFactorsRes::mutable_response() {
  ::IndyFramework::Protobuf::HRI::Response* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.response)
  return _msg;
}
inline void GetLoadFactorsRes::set_allocated_response(::IndyFramework::Protobuf::HRI::Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.GetLoadFactorsRes.response)
}

// -------------------------------------------------------------------

// SandingStopConditionState

// bool enable = 1;
inline void SandingStopConditionState::clear_enable() {
  _impl_.enable_ = false;
}
inline bool SandingStopConditionState::enable() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SandingStopConditionState.enable)
  return _internal_enable();
}
inline void SandingStopConditionState::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SandingStopConditionState.enable)
}
inline bool SandingStopConditionState::_internal_enable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enable_;
}
inline void SandingStopConditionState::_internal_set_enable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enable_ = value;
}

// float fx_lim = 2;
inline void SandingStopConditionState::clear_fx_lim() {
  _impl_.fx_lim_ = 0;
}
inline float SandingStopConditionState::fx_lim() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SandingStopConditionState.fx_lim)
  return _internal_fx_lim();
}
inline void SandingStopConditionState::set_fx_lim(float value) {
  _internal_set_fx_lim(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SandingStopConditionState.fx_lim)
}
inline float SandingStopConditionState::_internal_fx_lim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fx_lim_;
}
inline void SandingStopConditionState::_internal_set_fx_lim(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fx_lim_ = value;
}

// float fy_lim = 3;
inline void SandingStopConditionState::clear_fy_lim() {
  _impl_.fy_lim_ = 0;
}
inline float SandingStopConditionState::fy_lim() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SandingStopConditionState.fy_lim)
  return _internal_fy_lim();
}
inline void SandingStopConditionState::set_fy_lim(float value) {
  _internal_set_fy_lim(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SandingStopConditionState.fy_lim)
}
inline float SandingStopConditionState::_internal_fy_lim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fy_lim_;
}
inline void SandingStopConditionState::_internal_set_fy_lim(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fy_lim_ = value;
}

// float fz_lim = 4;
inline void SandingStopConditionState::clear_fz_lim() {
  _impl_.fz_lim_ = 0;
}
inline float SandingStopConditionState::fz_lim() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SandingStopConditionState.fz_lim)
  return _internal_fz_lim();
}
inline void SandingStopConditionState::set_fz_lim(float value) {
  _internal_set_fz_lim(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SandingStopConditionState.fz_lim)
}
inline float SandingStopConditionState::_internal_fz_lim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fz_lim_;
}
inline void SandingStopConditionState::_internal_set_fz_lim(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fz_lim_ = value;
}

// float tx_lim = 5;
inline void SandingStopConditionState::clear_tx_lim() {
  _impl_.tx_lim_ = 0;
}
inline float SandingStopConditionState::tx_lim() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SandingStopConditionState.tx_lim)
  return _internal_tx_lim();
}
inline void SandingStopConditionState::set_tx_lim(float value) {
  _internal_set_tx_lim(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SandingStopConditionState.tx_lim)
}
inline float SandingStopConditionState::_internal_tx_lim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tx_lim_;
}
inline void SandingStopConditionState::_internal_set_tx_lim(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tx_lim_ = value;
}

// float ty_lim = 6;
inline void SandingStopConditionState::clear_ty_lim() {
  _impl_.ty_lim_ = 0;
}
inline float SandingStopConditionState::ty_lim() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SandingStopConditionState.ty_lim)
  return _internal_ty_lim();
}
inline void SandingStopConditionState::set_ty_lim(float value) {
  _internal_set_ty_lim(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SandingStopConditionState.ty_lim)
}
inline float SandingStopConditionState::_internal_ty_lim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ty_lim_;
}
inline void SandingStopConditionState::_internal_set_ty_lim(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ty_lim_ = value;
}

// float tz_lim = 7;
inline void SandingStopConditionState::clear_tz_lim() {
  _impl_.tz_lim_ = 0;
}
inline float SandingStopConditionState::tz_lim() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SandingStopConditionState.tz_lim)
  return _internal_tz_lim();
}
inline void SandingStopConditionState::set_tz_lim(float value) {
  _internal_set_tz_lim(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SandingStopConditionState.tz_lim)
}
inline float SandingStopConditionState::_internal_tz_lim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tz_lim_;
}
inline void SandingStopConditionState::_internal_set_tz_lim(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tz_lim_ = value;
}

// -------------------------------------------------------------------

// SanderCommand

// .IndyFramework.Protobuf.HRI.SanderCommand.SanderType type = 1;
inline void SanderCommand::clear_type() {
  _impl_.type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::SanderCommand_SanderType SanderCommand::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SanderCommand.type)
  return _internal_type();
}
inline void SanderCommand::set_type(::IndyFramework::Protobuf::HRI::SanderCommand_SanderType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SanderCommand.type)
}
inline ::IndyFramework::Protobuf::HRI::SanderCommand_SanderType SanderCommand::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::SanderCommand_SanderType>(_impl_.type_);
}
inline void SanderCommand::_internal_set_type(::IndyFramework::Protobuf::HRI::SanderCommand_SanderType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// string ip = 2;
inline void SanderCommand::clear_ip() {
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& SanderCommand::ip() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SanderCommand.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SanderCommand::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SanderCommand.ip)
}
inline std::string* SanderCommand::mutable_ip() {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SanderCommand.ip)
  return _s;
}
inline const std::string& SanderCommand::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void SanderCommand::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArenaForAllocation());
}
inline std::string* SanderCommand::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArenaForAllocation());
}
inline std::string* SanderCommand::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SanderCommand.ip)
  return _impl_.ip_.Release();
}
inline void SanderCommand::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SanderCommand.ip)
}

// float speed = 3;
inline void SanderCommand::clear_speed() {
  _impl_.speed_ = 0;
}
inline float SanderCommand::speed() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SanderCommand.speed)
  return _internal_speed();
}
inline void SanderCommand::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SanderCommand.speed)
}
inline float SanderCommand::_internal_speed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speed_;
}
inline void SanderCommand::_internal_set_speed(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speed_ = value;
}

// bool state = 10;
inline void SanderCommand::clear_state() {
  _impl_.state_ = false;
}
inline bool SanderCommand::state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SanderCommand.state)
  return _internal_state();
}
inline void SanderCommand::set_state(bool value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SanderCommand.state)
}
inline bool SanderCommand::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void SanderCommand::_internal_set_state(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_ = value;
}

// -------------------------------------------------------------------

// PosePair

// repeated float q = 1;
inline int PosePair::_internal_q_size() const {
  return _internal_q().size();
}
inline int PosePair::q_size() const {
  return _internal_q_size();
}
inline void PosePair::clear_q() {
  _internal_mutable_q()->Clear();
}
inline float PosePair::q(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PosePair.q)
  return _internal_q().Get(index);
}
inline void PosePair::set_q(int index, float value) {
  _internal_mutable_q()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PosePair.q)
}
inline void PosePair::add_q(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_q()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PosePair.q)
}
inline const ::google::protobuf::RepeatedField<float>& PosePair::q() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PosePair.q)
  return _internal_q();
}
inline ::google::protobuf::RepeatedField<float>* PosePair::mutable_q() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PosePair.q)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_q();
}

inline const ::google::protobuf::RepeatedField<float>& PosePair::_internal_q() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.q_;
}
inline ::google::protobuf::RepeatedField<float>* PosePair::_internal_mutable_q() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.q_;
}

// repeated float p = 2;
inline int PosePair::_internal_p_size() const {
  return _internal_p().size();
}
inline int PosePair::p_size() const {
  return _internal_p_size();
}
inline void PosePair::clear_p() {
  _internal_mutable_p()->Clear();
}
inline float PosePair::p(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.PosePair.p)
  return _internal_p().Get(index);
}
inline void PosePair::set_p(int index, float value) {
  _internal_mutable_p()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.PosePair.p)
}
inline void PosePair::add_p(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_p()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.PosePair.p)
}
inline const ::google::protobuf::RepeatedField<float>& PosePair::p() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.PosePair.p)
  return _internal_p();
}
inline ::google::protobuf::RepeatedField<float>* PosePair::mutable_p() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.PosePair.p)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_p();
}

inline const ::google::protobuf::RepeatedField<float>& PosePair::_internal_p() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.p_;
}
inline ::google::protobuf::RepeatedField<float>* PosePair::_internal_mutable_p() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.p_;
}

// -------------------------------------------------------------------

// Encoder

// .IndyFramework.Protobuf.HRI.Encoder.EncoderType type = 1;
inline void Encoder::clear_type() {
  _impl_.type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::Encoder_EncoderType Encoder::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Encoder.type)
  return _internal_type();
}
inline void Encoder::set_type(::IndyFramework::Protobuf::HRI::Encoder_EncoderType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Encoder.type)
}
inline ::IndyFramework::Protobuf::HRI::Encoder_EncoderType Encoder::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::Encoder_EncoderType>(_impl_.type_);
}
inline void Encoder::_internal_set_type(::IndyFramework::Protobuf::HRI::Encoder_EncoderType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// int64 channel1 = 2;
inline void Encoder::clear_channel1() {
  _impl_.channel1_ = ::int64_t{0};
}
inline ::int64_t Encoder::channel1() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Encoder.channel1)
  return _internal_channel1();
}
inline void Encoder::set_channel1(::int64_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Encoder.channel1)
}
inline ::int64_t Encoder::_internal_channel1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channel1_;
}
inline void Encoder::_internal_set_channel1(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.channel1_ = value;
}

// int64 channel2 = 3;
inline void Encoder::clear_channel2() {
  _impl_.channel2_ = ::int64_t{0};
}
inline ::int64_t Encoder::channel2() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Encoder.channel2)
  return _internal_channel2();
}
inline void Encoder::set_channel2(::int64_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Encoder.channel2)
}
inline ::int64_t Encoder::_internal_channel2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channel2_;
}
inline void Encoder::_internal_set_channel2(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.channel2_ = value;
}

// int64 sample_num = 4;
inline void Encoder::clear_sample_num() {
  _impl_.sample_num_ = ::int64_t{0};
}
inline ::int64_t Encoder::sample_num() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Encoder.sample_num)
  return _internal_sample_num();
}
inline void Encoder::set_sample_num(::int64_t value) {
  _internal_set_sample_num(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Encoder.sample_num)
}
inline ::int64_t Encoder::_internal_sample_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sample_num_;
}
inline void Encoder::_internal_set_sample_num(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sample_num_ = value;
}

// float mm_per_tick = 5;
inline void Encoder::clear_mm_per_tick() {
  _impl_.mm_per_tick_ = 0;
}
inline float Encoder::mm_per_tick() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Encoder.mm_per_tick)
  return _internal_mm_per_tick();
}
inline void Encoder::set_mm_per_tick(float value) {
  _internal_set_mm_per_tick(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Encoder.mm_per_tick)
}
inline float Encoder::_internal_mm_per_tick() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mm_per_tick_;
}
inline void Encoder::_internal_set_mm_per_tick(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mm_per_tick_ = value;
}

// float vel_const_mmps = 6;
inline void Encoder::clear_vel_const_mmps() {
  _impl_.vel_const_mmps_ = 0;
}
inline float Encoder::vel_const_mmps() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Encoder.vel_const_mmps)
  return _internal_vel_const_mmps();
}
inline void Encoder::set_vel_const_mmps(float value) {
  _internal_set_vel_const_mmps(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Encoder.vel_const_mmps)
}
inline float Encoder::_internal_vel_const_mmps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vel_const_mmps_;
}
inline void Encoder::_internal_set_vel_const_mmps(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vel_const_mmps_ = value;
}

// bool reversed = 7;
inline void Encoder::clear_reversed() {
  _impl_.reversed_ = false;
}
inline bool Encoder::reversed() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Encoder.reversed)
  return _internal_reversed();
}
inline void Encoder::set_reversed(bool value) {
  _internal_set_reversed(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Encoder.reversed)
}
inline bool Encoder::_internal_reversed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reversed_;
}
inline void Encoder::_internal_set_reversed(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reversed_ = value;
}

// -------------------------------------------------------------------

// Trigger

// .IndyFramework.Protobuf.HRI.Trigger.TriggerType type = 1;
inline void Trigger::clear_type() {
  _impl_.type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::Trigger_TriggerType Trigger::type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Trigger.type)
  return _internal_type();
}
inline void Trigger::set_type(::IndyFramework::Protobuf::HRI::Trigger_TriggerType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Trigger.type)
}
inline ::IndyFramework::Protobuf::HRI::Trigger_TriggerType Trigger::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::Trigger_TriggerType>(_impl_.type_);
}
inline void Trigger::_internal_set_type(::IndyFramework::Protobuf::HRI::Trigger_TriggerType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// int64 channel = 2;
inline void Trigger::clear_channel() {
  _impl_.channel_ = ::int64_t{0};
}
inline ::int64_t Trigger::channel() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Trigger.channel)
  return _internal_channel();
}
inline void Trigger::set_channel(::int64_t value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Trigger.channel)
}
inline ::int64_t Trigger::_internal_channel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channel_;
}
inline void Trigger::_internal_set_channel(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.channel_ = value;
}

// bool detect_rise = 3;
inline void Trigger::clear_detect_rise() {
  _impl_.detect_rise_ = false;
}
inline bool Trigger::detect_rise() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Trigger.detect_rise)
  return _internal_detect_rise();
}
inline void Trigger::set_detect_rise(bool value) {
  _internal_set_detect_rise(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Trigger.detect_rise)
}
inline bool Trigger::_internal_detect_rise() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detect_rise_;
}
inline void Trigger::_internal_set_detect_rise(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detect_rise_ = value;
}

// -------------------------------------------------------------------

// Conveyor

// string name = 1;
inline void Conveyor::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Conveyor::name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Conveyor::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Conveyor.name)
}
inline std::string* Conveyor::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Conveyor.name)
  return _s;
}
inline const std::string& Conveyor::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Conveyor::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Conveyor::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* Conveyor::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Conveyor.name)
  return _impl_.name_.Release();
}
inline void Conveyor::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.name)
}

// .IndyFramework.Protobuf.HRI.Encoder encoder = 2;
inline bool Conveyor::has_encoder() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.encoder_ != nullptr);
  return value;
}
inline void Conveyor::clear_encoder() {
  if (_impl_.encoder_ != nullptr) _impl_.encoder_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::IndyFramework::Protobuf::HRI::Encoder& Conveyor::_internal_encoder() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Encoder* p = _impl_.encoder_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Encoder&>(::IndyFramework::Protobuf::HRI::_Encoder_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Encoder& Conveyor::encoder() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.encoder)
  return _internal_encoder();
}
inline void Conveyor::unsafe_arena_set_allocated_encoder(::IndyFramework::Protobuf::HRI::Encoder* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.encoder_);
  }
  _impl_.encoder_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Encoder*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.encoder)
}
inline ::IndyFramework::Protobuf::HRI::Encoder* Conveyor::release_encoder() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Encoder* released = _impl_.encoder_;
  _impl_.encoder_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Encoder* Conveyor::unsafe_arena_release_encoder() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Conveyor.encoder)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::IndyFramework::Protobuf::HRI::Encoder* temp = _impl_.encoder_;
  _impl_.encoder_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Encoder* Conveyor::_internal_mutable_encoder() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.encoder_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Encoder>(GetArenaForAllocation());
    _impl_.encoder_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Encoder*>(p);
  }
  return _impl_.encoder_;
}
inline ::IndyFramework::Protobuf::HRI::Encoder* Conveyor::mutable_encoder() {
  ::IndyFramework::Protobuf::HRI::Encoder* _msg = _internal_mutable_encoder();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Conveyor.encoder)
  return _msg;
}
inline void Conveyor::set_allocated_encoder(::IndyFramework::Protobuf::HRI::Encoder* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Encoder*>(_impl_.encoder_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Encoder*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.encoder_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Encoder*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.encoder)
}

// .IndyFramework.Protobuf.HRI.Trigger trigger = 3;
inline bool Conveyor::has_trigger() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trigger_ != nullptr);
  return value;
}
inline void Conveyor::clear_trigger() {
  if (_impl_.trigger_ != nullptr) _impl_.trigger_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::IndyFramework::Protobuf::HRI::Trigger& Conveyor::_internal_trigger() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::Trigger* p = _impl_.trigger_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::Trigger&>(::IndyFramework::Protobuf::HRI::_Trigger_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::Trigger& Conveyor::trigger() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.trigger)
  return _internal_trigger();
}
inline void Conveyor::unsafe_arena_set_allocated_trigger(::IndyFramework::Protobuf::HRI::Trigger* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trigger_);
  }
  _impl_.trigger_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Trigger*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.trigger)
}
inline ::IndyFramework::Protobuf::HRI::Trigger* Conveyor::release_trigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::IndyFramework::Protobuf::HRI::Trigger* released = _impl_.trigger_;
  _impl_.trigger_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::Trigger* Conveyor::unsafe_arena_release_trigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Conveyor.trigger)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::IndyFramework::Protobuf::HRI::Trigger* temp = _impl_.trigger_;
  _impl_.trigger_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::Trigger* Conveyor::_internal_mutable_trigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.trigger_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::Trigger>(GetArenaForAllocation());
    _impl_.trigger_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Trigger*>(p);
  }
  return _impl_.trigger_;
}
inline ::IndyFramework::Protobuf::HRI::Trigger* Conveyor::mutable_trigger() {
  ::IndyFramework::Protobuf::HRI::Trigger* _msg = _internal_mutable_trigger();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Conveyor.trigger)
  return _msg;
}
inline void Conveyor::set_allocated_trigger(::IndyFramework::Protobuf::HRI::Trigger* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::Trigger*>(_impl_.trigger_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::Trigger*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.trigger_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::Trigger*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.trigger)
}

// float offset_dist = 4;
inline void Conveyor::clear_offset_dist() {
  _impl_.offset_dist_ = 0;
}
inline float Conveyor::offset_dist() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.offset_dist)
  return _internal_offset_dist();
}
inline void Conveyor::set_offset_dist(float value) {
  _internal_set_offset_dist(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Conveyor.offset_dist)
}
inline float Conveyor::_internal_offset_dist() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_dist_;
}
inline void Conveyor::_internal_set_offset_dist(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_dist_ = value;
}

// float working_dist = 5;
inline void Conveyor::clear_working_dist() {
  _impl_.working_dist_ = 0;
}
inline float Conveyor::working_dist() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.working_dist)
  return _internal_working_dist();
}
inline void Conveyor::set_working_dist(float value) {
  _internal_set_working_dist(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.Conveyor.working_dist)
}
inline float Conveyor::_internal_working_dist() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.working_dist_;
}
inline void Conveyor::_internal_set_working_dist(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.working_dist_ = value;
}

// .Nrmk.IndyFramework.Vector direction = 6;
inline bool Conveyor::has_direction() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.direction_ != nullptr);
  return value;
}
inline const ::Nrmk::IndyFramework::Vector& Conveyor::_internal_direction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Nrmk::IndyFramework::Vector* p = _impl_.direction_;
  return p != nullptr ? *p : reinterpret_cast<const ::Nrmk::IndyFramework::Vector&>(::Nrmk::IndyFramework::_Vector_default_instance_);
}
inline const ::Nrmk::IndyFramework::Vector& Conveyor::direction() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.direction)
  return _internal_direction();
}
inline void Conveyor::unsafe_arena_set_allocated_direction(::Nrmk::IndyFramework::Vector* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.direction_);
  }
  _impl_.direction_ = reinterpret_cast<::Nrmk::IndyFramework::Vector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.direction)
}
inline ::Nrmk::IndyFramework::Vector* Conveyor::release_direction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Nrmk::IndyFramework::Vector* released = _impl_.direction_;
  _impl_.direction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Nrmk::IndyFramework::Vector* Conveyor::unsafe_arena_release_direction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Conveyor.direction)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Nrmk::IndyFramework::Vector* temp = _impl_.direction_;
  _impl_.direction_ = nullptr;
  return temp;
}
inline ::Nrmk::IndyFramework::Vector* Conveyor::_internal_mutable_direction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.direction_ == nullptr) {
    auto* p = CreateMaybeMessage<::Nrmk::IndyFramework::Vector>(GetArenaForAllocation());
    _impl_.direction_ = reinterpret_cast<::Nrmk::IndyFramework::Vector*>(p);
  }
  return _impl_.direction_;
}
inline ::Nrmk::IndyFramework::Vector* Conveyor::mutable_direction() {
  ::Nrmk::IndyFramework::Vector* _msg = _internal_mutable_direction();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Conveyor.direction)
  return _msg;
}
inline void Conveyor::set_allocated_direction(::Nrmk::IndyFramework::Vector* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.direction_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.direction_ = reinterpret_cast<::Nrmk::IndyFramework::Vector*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.direction)
}

// .IndyFramework.Protobuf.HRI.PosePair starting_pose = 10;
inline bool Conveyor::has_starting_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.starting_pose_ != nullptr);
  return value;
}
inline void Conveyor::clear_starting_pose() {
  if (_impl_.starting_pose_ != nullptr) _impl_.starting_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::IndyFramework::Protobuf::HRI::PosePair& Conveyor::_internal_starting_pose() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::PosePair* p = _impl_.starting_pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::PosePair&>(::IndyFramework::Protobuf::HRI::_PosePair_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::PosePair& Conveyor::starting_pose() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.starting_pose)
  return _internal_starting_pose();
}
inline void Conveyor::unsafe_arena_set_allocated_starting_pose(::IndyFramework::Protobuf::HRI::PosePair* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.starting_pose_);
  }
  _impl_.starting_pose_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.starting_pose)
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::release_starting_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::IndyFramework::Protobuf::HRI::PosePair* released = _impl_.starting_pose_;
  _impl_.starting_pose_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::unsafe_arena_release_starting_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Conveyor.starting_pose)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::IndyFramework::Protobuf::HRI::PosePair* temp = _impl_.starting_pose_;
  _impl_.starting_pose_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::_internal_mutable_starting_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.starting_pose_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::PosePair>(GetArenaForAllocation());
    _impl_.starting_pose_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(p);
  }
  return _impl_.starting_pose_;
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::mutable_starting_pose() {
  ::IndyFramework::Protobuf::HRI::PosePair* _msg = _internal_mutable_starting_pose();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Conveyor.starting_pose)
  return _msg;
}
inline void Conveyor::set_allocated_starting_pose(::IndyFramework::Protobuf::HRI::PosePair* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(_impl_.starting_pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.starting_pose_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.starting_pose)
}

// .IndyFramework.Protobuf.HRI.PosePair terminal_pose = 11;
inline bool Conveyor::has_terminal_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.terminal_pose_ != nullptr);
  return value;
}
inline void Conveyor::clear_terminal_pose() {
  if (_impl_.terminal_pose_ != nullptr) _impl_.terminal_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::IndyFramework::Protobuf::HRI::PosePair& Conveyor::_internal_terminal_pose() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::IndyFramework::Protobuf::HRI::PosePair* p = _impl_.terminal_pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::IndyFramework::Protobuf::HRI::PosePair&>(::IndyFramework::Protobuf::HRI::_PosePair_default_instance_);
}
inline const ::IndyFramework::Protobuf::HRI::PosePair& Conveyor::terminal_pose() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.Conveyor.terminal_pose)
  return _internal_terminal_pose();
}
inline void Conveyor::unsafe_arena_set_allocated_terminal_pose(::IndyFramework::Protobuf::HRI::PosePair* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.terminal_pose_);
  }
  _impl_.terminal_pose_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.terminal_pose)
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::release_terminal_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::IndyFramework::Protobuf::HRI::PosePair* released = _impl_.terminal_pose_;
  _impl_.terminal_pose_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::unsafe_arena_release_terminal_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.Conveyor.terminal_pose)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::IndyFramework::Protobuf::HRI::PosePair* temp = _impl_.terminal_pose_;
  _impl_.terminal_pose_ = nullptr;
  return temp;
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::_internal_mutable_terminal_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.terminal_pose_ == nullptr) {
    auto* p = CreateMaybeMessage<::IndyFramework::Protobuf::HRI::PosePair>(GetArenaForAllocation());
    _impl_.terminal_pose_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(p);
  }
  return _impl_.terminal_pose_;
}
inline ::IndyFramework::Protobuf::HRI::PosePair* Conveyor::mutable_terminal_pose() {
  ::IndyFramework::Protobuf::HRI::PosePair* _msg = _internal_mutable_terminal_pose();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.Conveyor.terminal_pose)
  return _msg;
}
inline void Conveyor::set_allocated_terminal_pose(::IndyFramework::Protobuf::HRI::PosePair* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(_impl_.terminal_pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.terminal_pose_ = reinterpret_cast<::IndyFramework::Protobuf::HRI::PosePair*>(value);
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.Conveyor.terminal_pose)
}

// -------------------------------------------------------------------

// ConveyorState

// float velocity = 1;
inline void ConveyorState::clear_velocity() {
  _impl_.velocity_ = 0;
}
inline float ConveyorState::velocity() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ConveyorState.velocity)
  return _internal_velocity();
}
inline void ConveyorState::set_velocity(float value) {
  _internal_set_velocity(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ConveyorState.velocity)
}
inline float ConveyorState::_internal_velocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.velocity_;
}
inline void ConveyorState::_internal_set_velocity(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.velocity_ = value;
}

// float triggered = 2;
inline void ConveyorState::clear_triggered() {
  _impl_.triggered_ = 0;
}
inline float ConveyorState::triggered() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.ConveyorState.triggered)
  return _internal_triggered();
}
inline void ConveyorState::set_triggered(float value) {
  _internal_set_triggered(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.ConveyorState.triggered)
}
inline float ConveyorState::_internal_triggered() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggered_;
}
inline void ConveyorState::_internal_set_triggered(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.triggered_ = value;
}

// -------------------------------------------------------------------

// HoldToMoveConveyorReq

// bool bypass_singular = 1;
inline void HoldToMoveConveyorReq::clear_bypass_singular() {
  _impl_.bypass_singular_ = false;
}
inline bool HoldToMoveConveyorReq::bypass_singular() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.HoldToMoveConveyorReq.bypass_singular)
  return _internal_bypass_singular();
}
inline void HoldToMoveConveyorReq::set_bypass_singular(bool value) {
  _internal_set_bypass_singular(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.HoldToMoveConveyorReq.bypass_singular)
}
inline bool HoldToMoveConveyorReq::_internal_bypass_singular() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bypass_singular_;
}
inline void HoldToMoveConveyorReq::_internal_set_bypass_singular(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bypass_singular_ = value;
}

// float acc_ratio = 2;
inline void HoldToMoveConveyorReq::clear_acc_ratio() {
  _impl_.acc_ratio_ = 0;
}
inline float HoldToMoveConveyorReq::acc_ratio() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.HoldToMoveConveyorReq.acc_ratio)
  return _internal_acc_ratio();
}
inline void HoldToMoveConveyorReq::set_acc_ratio(float value) {
  _internal_set_acc_ratio(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.HoldToMoveConveyorReq.acc_ratio)
}
inline float HoldToMoveConveyorReq::_internal_acc_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.acc_ratio_;
}
inline void HoldToMoveConveyorReq::_internal_set_acc_ratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.acc_ratio_ = value;
}

// -------------------------------------------------------------------

// GripperData

// .IndyFramework.Protobuf.HRI.GripperType gripper_type = 1;
inline void GripperData::clear_gripper_type() {
  _impl_.gripper_type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::GripperType GripperData::gripper_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GripperData.gripper_type)
  return _internal_gripper_type();
}
inline void GripperData::set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value) {
  _internal_set_gripper_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GripperData.gripper_type)
}
inline ::IndyFramework::Protobuf::HRI::GripperType GripperData::_internal_gripper_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::GripperType>(_impl_.gripper_type_);
}
inline void GripperData::_internal_set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gripper_type_ = value;
}

// int32 gripper_position = 2;
inline void GripperData::clear_gripper_position() {
  _impl_.gripper_position_ = 0;
}
inline ::int32_t GripperData::gripper_position() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GripperData.gripper_position)
  return _internal_gripper_position();
}
inline void GripperData::set_gripper_position(::int32_t value) {
  _internal_set_gripper_position(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GripperData.gripper_position)
}
inline ::int32_t GripperData::_internal_gripper_position() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gripper_position_;
}
inline void GripperData::_internal_set_gripper_position(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gripper_position_ = value;
}

// int32 gripper_state = 3;
inline void GripperData::clear_gripper_state() {
  _impl_.gripper_state_ = 0;
}
inline ::int32_t GripperData::gripper_state() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GripperData.gripper_state)
  return _internal_gripper_state();
}
inline void GripperData::set_gripper_state(::int32_t value) {
  _internal_set_gripper_state(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GripperData.gripper_state)
}
inline ::int32_t GripperData::_internal_gripper_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gripper_state_;
}
inline void GripperData::_internal_set_gripper_state(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gripper_state_ = value;
}

// -------------------------------------------------------------------

// GripperCommand

// .IndyFramework.Protobuf.HRI.GripperCommand.GripperCommandType gripper_command = 1;
inline void GripperCommand::clear_gripper_command() {
  _impl_.gripper_command_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType GripperCommand::gripper_command() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GripperCommand.gripper_command)
  return _internal_gripper_command();
}
inline void GripperCommand::set_gripper_command(::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType value) {
  _internal_set_gripper_command(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GripperCommand.gripper_command)
}
inline ::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType GripperCommand::_internal_gripper_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType>(_impl_.gripper_command_);
}
inline void GripperCommand::_internal_set_gripper_command(::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gripper_command_ = value;
}

// .IndyFramework.Protobuf.HRI.GripperType gripper_type = 2;
inline void GripperCommand::clear_gripper_type() {
  _impl_.gripper_type_ = 0;
}
inline ::IndyFramework::Protobuf::HRI::GripperType GripperCommand::gripper_type() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GripperCommand.gripper_type)
  return _internal_gripper_type();
}
inline void GripperCommand::set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value) {
  _internal_set_gripper_type(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GripperCommand.gripper_type)
}
inline ::IndyFramework::Protobuf::HRI::GripperType GripperCommand::_internal_gripper_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::IndyFramework::Protobuf::HRI::GripperType>(_impl_.gripper_type_);
}
inline void GripperCommand::_internal_set_gripper_type(::IndyFramework::Protobuf::HRI::GripperType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gripper_type_ = value;
}

// repeated int32 gripper_pvt_data = 3;
inline int GripperCommand::_internal_gripper_pvt_data_size() const {
  return _internal_gripper_pvt_data().size();
}
inline int GripperCommand::gripper_pvt_data_size() const {
  return _internal_gripper_pvt_data_size();
}
inline void GripperCommand::clear_gripper_pvt_data() {
  _internal_mutable_gripper_pvt_data()->Clear();
}
inline ::int32_t GripperCommand::gripper_pvt_data(int index) const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.GripperCommand.gripper_pvt_data)
  return _internal_gripper_pvt_data().Get(index);
}
inline void GripperCommand::set_gripper_pvt_data(int index, ::int32_t value) {
  _internal_mutable_gripper_pvt_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.GripperCommand.gripper_pvt_data)
}
inline void GripperCommand::add_gripper_pvt_data(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gripper_pvt_data()->Add(value);
  // @@protoc_insertion_point(field_add:IndyFramework.Protobuf.HRI.GripperCommand.gripper_pvt_data)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GripperCommand::gripper_pvt_data() const {
  // @@protoc_insertion_point(field_list:IndyFramework.Protobuf.HRI.GripperCommand.gripper_pvt_data)
  return _internal_gripper_pvt_data();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GripperCommand::mutable_gripper_pvt_data() {
  // @@protoc_insertion_point(field_mutable_list:IndyFramework.Protobuf.HRI.GripperCommand.gripper_pvt_data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gripper_pvt_data();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GripperCommand::_internal_gripper_pvt_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gripper_pvt_data_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GripperCommand::_internal_mutable_gripper_pvt_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gripper_pvt_data_;
}

// -------------------------------------------------------------------

// SFDAccount

// string email = 1;
inline void SFDAccount::clear_email() {
  _impl_.email_.ClearToEmpty();
}
inline const std::string& SFDAccount::email() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDAccount.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFDAccount::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDAccount.email)
}
inline std::string* SFDAccount::mutable_email() {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SFDAccount.email)
  return _s;
}
inline const std::string& SFDAccount::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void SFDAccount::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArenaForAllocation());
}
inline std::string* SFDAccount::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArenaForAllocation());
}
inline std::string* SFDAccount::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SFDAccount.email)
  return _impl_.email_.Release();
}
inline void SFDAccount::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SFDAccount.email)
}

// string token = 2;
inline void SFDAccount::clear_token() {
  _impl_.token_.ClearToEmpty();
}
inline const std::string& SFDAccount::token() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDAccount.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFDAccount::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDAccount.token)
}
inline std::string* SFDAccount::mutable_token() {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SFDAccount.token)
  return _s;
}
inline const std::string& SFDAccount::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void SFDAccount::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArenaForAllocation());
}
inline std::string* SFDAccount::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArenaForAllocation());
}
inline std::string* SFDAccount::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SFDAccount.token)
  return _impl_.token_.Release();
}
inline void SFDAccount::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SFDAccount.token)
}

// -------------------------------------------------------------------

// SFDCriTarget

// string pn = 1;
inline void SFDCriTarget::clear_pn() {
  _impl_.pn_.ClearToEmpty();
}
inline const std::string& SFDCriTarget::pn() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDCriTarget.pn)
  return _internal_pn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFDCriTarget::set_pn(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pn_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDCriTarget.pn)
}
inline std::string* SFDCriTarget::mutable_pn() {
  std::string* _s = _internal_mutable_pn();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SFDCriTarget.pn)
  return _s;
}
inline const std::string& SFDCriTarget::_internal_pn() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pn_.Get();
}
inline void SFDCriTarget::_internal_set_pn(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pn_.Set(value, GetArenaForAllocation());
}
inline std::string* SFDCriTarget::_internal_mutable_pn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pn_.Mutable( GetArenaForAllocation());
}
inline std::string* SFDCriTarget::release_pn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SFDCriTarget.pn)
  return _impl_.pn_.Release();
}
inline void SFDCriTarget::set_allocated_pn(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pn_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pn_.IsDefault()) {
          _impl_.pn_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SFDCriTarget.pn)
}

// string fn = 2;
inline void SFDCriTarget::clear_fn() {
  _impl_.fn_.ClearToEmpty();
}
inline const std::string& SFDCriTarget::fn() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDCriTarget.fn)
  return _internal_fn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFDCriTarget::set_fn(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fn_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDCriTarget.fn)
}
inline std::string* SFDCriTarget::mutable_fn() {
  std::string* _s = _internal_mutable_fn();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SFDCriTarget.fn)
  return _s;
}
inline const std::string& SFDCriTarget::_internal_fn() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fn_.Get();
}
inline void SFDCriTarget::_internal_set_fn(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fn_.Set(value, GetArenaForAllocation());
}
inline std::string* SFDCriTarget::_internal_mutable_fn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.fn_.Mutable( GetArenaForAllocation());
}
inline std::string* SFDCriTarget::release_fn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SFDCriTarget.fn)
  return _impl_.fn_.Release();
}
inline void SFDCriTarget::set_allocated_fn(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fn_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fn_.IsDefault()) {
          _impl_.fn_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SFDCriTarget.fn)
}

// string rn = 3;
inline void SFDCriTarget::clear_rn() {
  _impl_.rn_.ClearToEmpty();
}
inline const std::string& SFDCriTarget::rn() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDCriTarget.rn)
  return _internal_rn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFDCriTarget::set_rn(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rn_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDCriTarget.rn)
}
inline std::string* SFDCriTarget::mutable_rn() {
  std::string* _s = _internal_mutable_rn();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SFDCriTarget.rn)
  return _s;
}
inline const std::string& SFDCriTarget::_internal_rn() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rn_.Get();
}
inline void SFDCriTarget::_internal_set_rn(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rn_.Set(value, GetArenaForAllocation());
}
inline std::string* SFDCriTarget::_internal_mutable_rn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.rn_.Mutable( GetArenaForAllocation());
}
inline std::string* SFDCriTarget::release_rn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SFDCriTarget.rn)
  return _impl_.rn_.Release();
}
inline void SFDCriTarget::set_allocated_rn(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rn_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rn_.IsDefault()) {
          _impl_.rn_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SFDCriTarget.rn)
}

// bool iso = 4;
inline void SFDCriTarget::clear_iso() {
  _impl_.iso_ = false;
}
inline bool SFDCriTarget::iso() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDCriTarget.iso)
  return _internal_iso();
}
inline void SFDCriTarget::set_iso(bool value) {
  _internal_set_iso(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDCriTarget.iso)
}
inline bool SFDCriTarget::_internal_iso() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iso_;
}
inline void SFDCriTarget::_internal_set_iso(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iso_ = value;
}

// -------------------------------------------------------------------

// SFDCriData

// double time = 1;
inline void SFDCriData::clear_time() {
  _impl_.time_ = 0;
}
inline double SFDCriData::time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDCriData.time)
  return _internal_time();
}
inline void SFDCriData::set_time(double value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDCriData.time)
}
inline double SFDCriData::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void SFDCriData::_internal_set_time(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_ = value;
}

// double cri = 2;
inline void SFDCriData::clear_cri() {
  _impl_.cri_ = 0;
}
inline double SFDCriData::cri() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDCriData.cri)
  return _internal_cri();
}
inline void SFDCriData::set_cri(double value) {
  _internal_set_cri(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDCriData.cri)
}
inline double SFDCriData::_internal_cri() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cri_;
}
inline void SFDCriData::_internal_set_cri(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cri_ = value;
}

// -------------------------------------------------------------------

// SFDProjectList

// string list = 1;
inline void SFDProjectList::clear_list() {
  _impl_.list_.ClearToEmpty();
}
inline const std::string& SFDProjectList::list() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.SFDProjectList.list)
  return _internal_list();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFDProjectList::set_list(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.list_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.SFDProjectList.list)
}
inline std::string* SFDProjectList::mutable_list() {
  std::string* _s = _internal_mutable_list();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.SFDProjectList.list)
  return _s;
}
inline const std::string& SFDProjectList::_internal_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.list_.Get();
}
inline void SFDProjectList::_internal_set_list(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.list_.Set(value, GetArenaForAllocation());
}
inline std::string* SFDProjectList::_internal_mutable_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.list_.Mutable( GetArenaForAllocation());
}
inline std::string* SFDProjectList::release_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.SFDProjectList.list)
  return _impl_.list_.Release();
}
inline void SFDProjectList::set_allocated_list(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.list_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.list_.IsDefault()) {
          _impl_.list_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.SFDProjectList.list)
}

// -------------------------------------------------------------------

// DateTime

// uint32 year = 1;
inline void DateTime::clear_year() {
  _impl_.year_ = 0u;
}
inline ::uint32_t DateTime::year() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DateTime.year)
  return _internal_year();
}
inline void DateTime::set_year(::uint32_t value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DateTime.year)
}
inline ::uint32_t DateTime::_internal_year() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.year_;
}
inline void DateTime::_internal_set_year(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.year_ = value;
}

// uint32 month = 2;
inline void DateTime::clear_month() {
  _impl_.month_ = 0u;
}
inline ::uint32_t DateTime::month() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DateTime.month)
  return _internal_month();
}
inline void DateTime::set_month(::uint32_t value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DateTime.month)
}
inline ::uint32_t DateTime::_internal_month() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.month_;
}
inline void DateTime::_internal_set_month(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.month_ = value;
}

// uint32 day = 3;
inline void DateTime::clear_day() {
  _impl_.day_ = 0u;
}
inline ::uint32_t DateTime::day() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DateTime.day)
  return _internal_day();
}
inline void DateTime::set_day(::uint32_t value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DateTime.day)
}
inline ::uint32_t DateTime::_internal_day() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.day_;
}
inline void DateTime::_internal_set_day(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.day_ = value;
}

// uint32 hour = 4;
inline void DateTime::clear_hour() {
  _impl_.hour_ = 0u;
}
inline ::uint32_t DateTime::hour() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DateTime.hour)
  return _internal_hour();
}
inline void DateTime::set_hour(::uint32_t value) {
  _internal_set_hour(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DateTime.hour)
}
inline ::uint32_t DateTime::_internal_hour() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.hour_;
}
inline void DateTime::_internal_set_hour(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hour_ = value;
}

// uint32 minute = 5;
inline void DateTime::clear_minute() {
  _impl_.minute_ = 0u;
}
inline ::uint32_t DateTime::minute() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DateTime.minute)
  return _internal_minute();
}
inline void DateTime::set_minute(::uint32_t value) {
  _internal_set_minute(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DateTime.minute)
}
inline ::uint32_t DateTime::_internal_minute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minute_;
}
inline void DateTime::_internal_set_minute(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minute_ = value;
}

// uint32 second = 6;
inline void DateTime::clear_second() {
  _impl_.second_ = 0u;
}
inline ::uint32_t DateTime::second() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.DateTime.second)
  return _internal_second();
}
inline void DateTime::set_second(::uint32_t value) {
  _internal_set_second(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.DateTime.second)
}
inline ::uint32_t DateTime::_internal_second() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.second_;
}
inline void DateTime::_internal_set_second(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.second_ = value;
}

// -------------------------------------------------------------------

// TactTime

// float tact_time = 1;
inline void TactTime::clear_tact_time() {
  _impl_.tact_time_ = 0;
}
inline float TactTime::tact_time() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.TactTime.tact_time)
  return _internal_tact_time();
}
inline void TactTime::set_tact_time(float value) {
  _internal_set_tact_time(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.TactTime.tact_time)
}
inline float TactTime::_internal_tact_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tact_time_;
}
inline void TactTime::_internal_set_tact_time(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tact_time_ = value;
}

// -------------------------------------------------------------------

// AddPhotoneoCalibPointReq

// string vision_name = 1;
inline void AddPhotoneoCalibPointReq::clear_vision_name() {
  _impl_.vision_name_.ClearToEmpty();
}
inline const std::string& AddPhotoneoCalibPointReq::vision_name() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.vision_name)
  return _internal_vision_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddPhotoneoCalibPointReq::set_vision_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vision_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.vision_name)
}
inline std::string* AddPhotoneoCalibPointReq::mutable_vision_name() {
  std::string* _s = _internal_mutable_vision_name();
  // @@protoc_insertion_point(field_mutable:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.vision_name)
  return _s;
}
inline const std::string& AddPhotoneoCalibPointReq::_internal_vision_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vision_name_.Get();
}
inline void AddPhotoneoCalibPointReq::_internal_set_vision_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vision_name_.Set(value, GetArenaForAllocation());
}
inline std::string* AddPhotoneoCalibPointReq::_internal_mutable_vision_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.vision_name_.Mutable( GetArenaForAllocation());
}
inline std::string* AddPhotoneoCalibPointReq::release_vision_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.vision_name)
  return _impl_.vision_name_.Release();
}
inline void AddPhotoneoCalibPointReq::set_allocated_vision_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vision_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.vision_name_.IsDefault()) {
          _impl_.vision_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.vision_name)
}

// double px = 2;
inline void AddPhotoneoCalibPointReq::clear_px() {
  _impl_.px_ = 0;
}
inline double AddPhotoneoCalibPointReq::px() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.px)
  return _internal_px();
}
inline void AddPhotoneoCalibPointReq::set_px(double value) {
  _internal_set_px(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.px)
}
inline double AddPhotoneoCalibPointReq::_internal_px() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.px_;
}
inline void AddPhotoneoCalibPointReq::_internal_set_px(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.px_ = value;
}

// double py = 3;
inline void AddPhotoneoCalibPointReq::clear_py() {
  _impl_.py_ = 0;
}
inline double AddPhotoneoCalibPointReq::py() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.py)
  return _internal_py();
}
inline void AddPhotoneoCalibPointReq::set_py(double value) {
  _internal_set_py(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.py)
}
inline double AddPhotoneoCalibPointReq::_internal_py() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.py_;
}
inline void AddPhotoneoCalibPointReq::_internal_set_py(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.py_ = value;
}

// double pz = 4;
inline void AddPhotoneoCalibPointReq::clear_pz() {
  _impl_.pz_ = 0;
}
inline double AddPhotoneoCalibPointReq::pz() const {
  // @@protoc_insertion_point(field_get:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.pz)
  return _internal_pz();
}
inline void AddPhotoneoCalibPointReq::set_pz(double value) {
  _internal_set_pz(value);
  // @@protoc_insertion_point(field_set:IndyFramework.Protobuf.HRI.AddPhotoneoCalibPointReq.pz)
}
inline double AddPhotoneoCalibPointReq::_internal_pz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pz_;
}
inline void AddPhotoneoCalibPointReq::_internal_set_pz(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pz_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace HRI
}  // namespace Protobuf
}  // namespace IndyFramework


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern>() {
  return ::IndyFramework::Protobuf::HRI::PalletMaker_PalletPattern_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle>() {
  return ::IndyFramework::Protobuf::HRI::BrakeControlStyle_ControlStyle_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig>() {
  return ::IndyFramework::Protobuf::HRI::GetAutoModeConfigRes_AutoModeConfig_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::StopState_StopCategory> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::StopState_StopCategory>() {
  return ::IndyFramework::Protobuf::HRI::StopState_StopCategory_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::KinematicsParams_JointType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::KinematicsParams_JointType>() {
  return ::IndyFramework::Protobuf::HRI::KinematicsParams_JointType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType>() {
  return ::IndyFramework::Protobuf::HRI::TeleOpDevice_TeleOpDeviceType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType>() {
  return ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType>() {
  return ::IndyFramework::Protobuf::HRI::FTSensorDevice_FTSensorDeviceComType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::SanderCommand_SanderType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::SanderCommand_SanderType>() {
  return ::IndyFramework::Protobuf::HRI::SanderCommand_SanderType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::Encoder_EncoderType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::Encoder_EncoderType>() {
  return ::IndyFramework::Protobuf::HRI::Encoder_EncoderType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::Trigger_TriggerType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::Trigger_TriggerType>() {
  return ::IndyFramework::Protobuf::HRI::Trigger_TriggerType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType>() {
  return ::IndyFramework::Protobuf::HRI::GripperCommand_GripperCommandType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::JointBaseType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::JointBaseType>() {
  return ::IndyFramework::Protobuf::HRI::JointBaseType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::TaskBaseType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::TaskBaseType>() {
  return ::IndyFramework::Protobuf::HRI::TaskBaseType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::CollisionPolicyType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::CollisionPolicyType>() {
  return ::IndyFramework::Protobuf::HRI::CollisionPolicyType_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::EndtoolState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::EndtoolState>() {
  return ::IndyFramework::Protobuf::HRI::EndtoolState_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::TeleMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::TeleMode>() {
  return ::IndyFramework::Protobuf::HRI::TeleMode_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::TeleMethod> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::TeleMethod>() {
  return ::IndyFramework::Protobuf::HRI::TeleMethod_descriptor();
}
template <>
struct is_proto_enum<::IndyFramework::Protobuf::HRI::GripperType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::IndyFramework::Protobuf::HRI::GripperType>() {
  return ::IndyFramework::Protobuf::HRI::GripperType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_hri_5fmsgs_2eproto_2epb_2eh
