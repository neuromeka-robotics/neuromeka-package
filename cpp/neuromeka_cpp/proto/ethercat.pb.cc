// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ethercat.proto

#include "ethercat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Nrmk {
namespace IndyFramework {
}  // namespace IndyFramework
}  // namespace Nrmk
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_ethercat_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ethercat_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ethercat_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ethercat_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ethercat_2eproto[] =
  "\n\016ethercat.proto\022\022Nrmk.IndyFramework\032\023et"
  "hercat_msgs.proto\032\021common_msgs.proto2\201\034\n"
  "\010EtherCAT\022P\n\017GetMasterStatus\022\031.Nrmk.Indy"
  "Framework.Empty\032 .Nrmk.IndyFramework.Mas"
  "terStatus\"\000\022N\n\016GetSlaveStatus\022\031.Nrmk.Ind"
  "yFramework.Empty\032\037.Nrmk.IndyFramework.Sl"
  "aveStatus\"\000\022V\n\021GetRxDomainStatus\022\031.Nrmk."
  "IndyFramework.Empty\032$.Nrmk.IndyFramework"
  ".EcatDomainStatus\"\000\022V\n\021GetTxDomainStatus"
  "\022\031.Nrmk.IndyFramework.Empty\032$.Nrmk.IndyF"
  "ramework.EcatDomainStatus\"\000\022Q\n\rIsSystemR"
  "eady\022\031.Nrmk.IndyFramework.Empty\032#.Nrmk.I"
  "ndyFramework.EcatSystemReady\"\000\022I\n\tIsServ"
  "oOn\022\031.Nrmk.IndyFramework.Empty\032\037.Nrmk.In"
  "dyFramework.EcatServoOn\"\000\022P\n\017GetSlaveTyp"
  "eNum\022\031.Nrmk.IndyFramework.Empty\032 .Nrmk.I"
  "ndyFramework.SlaveTypeNum\"\000\022L\n\022ResetOver"
  "flowCount\022\031.Nrmk.IndyFramework.Empty\032\031.N"
  "rmk.IndyFramework.Empty\"\000\022K\n\nSetServoRx\022"
  " .Nrmk.IndyFramework.ServoRxIndex\032\031.Nrmk"
  ".IndyFramework.Empty\"\000\022K\n\nGetServoRx\022\036.N"
  "rmk.IndyFramework.ServoIndex\032\033.Nrmk.Indy"
  "Framework.ServoRx\"\000\022K\n\nGetServoTx\022\036.Nrmk"
  ".IndyFramework.ServoIndex\032\033.Nrmk.IndyFra"
  "mework.ServoTx\"\000\022S\n\016SetServoRxKeba\022$.Nrm"
  "k.IndyFramework.ServoRxIndexKeba\032\031.Nrmk."
  "IndyFramework.Empty\"\000\022S\n\016GetServoRxKeba\022"
  "\036.Nrmk.IndyFramework.ServoIndex\032\037.Nrmk.I"
  "ndyFramework.ServoRxKeba\"\000\022S\n\016GetServoTx"
  "Keba\022\036.Nrmk.IndyFramework.ServoIndex\032\037.N"
  "rmk.IndyFramework.ServoTxKeba\"\000\022I\n\nSetSe"
  "rvoOn\022\036.Nrmk.IndyFramework.ServoIndex\032\031."
  "Nrmk.IndyFramework.Empty\"\000\022J\n\013SetServoOf"
  "f\022\036.Nrmk.IndyFramework.ServoIndex\032\031.Nrmk"
  ".IndyFramework.Empty\"\000\022V\n\023GetServoTemper"
  "ature\022\036.Nrmk.IndyFramework.ServoIndex\032\035."
  "Nrmk.IndyFramework.ServoTemp\"\000\022U\n\021GetSer"
  "voErrorCode\022\036.Nrmk.IndyFramework.ServoIn"
  "dex\032\036.Nrmk.IndyFramework.ServoError\"\000\022I\n"
  "\nResetServo\022\036.Nrmk.IndyFramework.ServoIn"
  "dex\032\031.Nrmk.IndyFramework.Empty\"\000\022Q\n\022SetC"
  "OREManualBrake\022\036.Nrmk.IndyFramework.Serv"
  "oBrake\032\031.Nrmk.IndyFramework.Empty\"\000\022J\n\014S"
  "etEndtoolRx\022\035.Nrmk.IndyFramework.Endtool"
  "Rx\032\031.Nrmk.IndyFramework.Empty\"\000\022J\n\014GetEn"
  "dtoolRx\022\031.Nrmk.IndyFramework.Empty\032\035.Nrm"
  "k.IndyFramework.EndtoolRx\"\000\022J\n\014GetEndtoo"
  "lTx\022\031.Nrmk.IndyFramework.Empty\032\035.Nrmk.In"
  "dyFramework.EndtoolTx\"\000\022X\n\023GetEndtoolDoc"
  "kingTx\022\031.Nrmk.IndyFramework.Empty\032$.Nrmk"
  ".IndyFramework.EndtoolDockingTx\"\000\022T\n\021Set"
  "EndtoolRS485Rx\022\".Nrmk.IndyFramework.Endt"
  "oolRS485Rx\032\031.Nrmk.IndyFramework.Empty\"\000\022"
  "T\n\021GetEndtoolRS485Rx\022\031.Nrmk.IndyFramewor"
  "k.Empty\032\".Nrmk.IndyFramework.EndtoolRS48"
  "5Rx\"\000\022T\n\021GetEndtoolRS485Tx\022\031.Nrmk.IndyFr"
  "amework.Empty\032\".Nrmk.IndyFramework.Endto"
  "olRS485Tx\"\000\022K\n\020SetEndtoolLedDim\022\032.Nrmk.I"
  "ndyFramework.LedDim\032\031.Nrmk.IndyFramework"
  ".Empty\"\000\022J\n\014SetIOBoardRx\022\035.Nrmk.IndyFram"
  "ework.IOBoardRx\032\031.Nrmk.IndyFramework.Emp"
  "ty\"\000\022J\n\014GetIOBoardTx\022\031.Nrmk.IndyFramewor"
  "k.Empty\032\035.Nrmk.IndyFramework.IOBoardTx\"\000"
  "\022J\n\014GetIOBoardRx\022\031.Nrmk.IndyFramework.Em"
  "pty\032\035.Nrmk.IndyFramework.IOBoardRx\"\000\022L\n\005"
  "GetDI\022\034.Nrmk.IndyFramework.DIOIndex\032#.Nr"
  "mk.IndyFramework.DIODigitalInput\"\000\022M\n\005Ge"
  "tDO\022\034.Nrmk.IndyFramework.DIOIndex\032$.Nrmk"
  ".IndyFramework.DIODigitalOutput\"\000\022J\n\005Set"
  "DO\022$.Nrmk.IndyFramework.DIODigitalOutput"
  "\032\031.Nrmk.IndyFramework.Empty\"\000\022Q\n\017GetMaxT"
  "orqueSDO\022\035.Nrmk.IndyFramework.EcatIndex\032"
  "\035.Nrmk.IndyFramework.SDOIntVal\"\000\022R\n\020GetP"
  "rofileVelSDO\022\035.Nrmk.IndyFramework.EcatIn"
  "dex\032\035.Nrmk.IndyFramework.SDOIntVal\"\000\022R\n\020"
  "GetProfileAccSDO\022\035.Nrmk.IndyFramework.Ec"
  "atIndex\032\035.Nrmk.IndyFramework.SDOIntVal\"\000"
  "\022R\n\020GetProfileDecSDO\022\035.Nrmk.IndyFramewor"
  "k.EcatIndex\032\035.Nrmk.IndyFramework.SDOIntV"
  "al\"\000\022N\n\017SetMaxTorqueSDO\022\036.Nrmk.IndyFrame"
  "work.ServoParam\032\031.Nrmk.IndyFramework.Emp"
  "ty\"\000\022O\n\020SetProfileVelSDO\022\036.Nrmk.IndyFram"
  "ework.ServoParam\032\031.Nrmk.IndyFramework.Em"
  "pty\"\000\022O\n\020SetProfileAccSDO\022\036.Nrmk.IndyFra"
  "mework.ServoParam\032\031.Nrmk.IndyFramework.E"
  "mpty\"\000\022O\n\020SetProfileDecSDO\022\036.Nrmk.IndyFr"
  "amework.ServoParam\032\031.Nrmk.IndyFramework."
  "Empty\"\000\022Y\n\021GetRobotZeroCount\022\036.Nrmk.Indy"
  "Framework.ServoIndex\032\".Nrmk.IndyFramewor"
  "k.RobotZeroCount\"\000\022T\n\025SetRobotZeroAsCurr"
  "ent\022\036.Nrmk.IndyFramework.ServoIndex\032\031.Nr"
  "mk.IndyFramework.Empty\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ethercat_2eproto_deps[2] = {
  &::descriptor_table_common_5fmsgs_2eproto,
  &::descriptor_table_ethercat_5fmsgs_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ethercat_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ethercat_2eproto_once;
static bool descriptor_table_ethercat_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ethercat_2eproto = {
  &descriptor_table_ethercat_2eproto_initialized, descriptor_table_protodef_ethercat_2eproto, "ethercat.proto", 3672,
  &descriptor_table_ethercat_2eproto_once, descriptor_table_ethercat_2eproto_sccs, descriptor_table_ethercat_2eproto_deps, 0, 2,
  schemas, file_default_instances, TableStruct_ethercat_2eproto::offsets,
  file_level_metadata_ethercat_2eproto, 0, file_level_enum_descriptors_ethercat_2eproto, file_level_service_descriptors_ethercat_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ethercat_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ethercat_2eproto), true);
namespace Nrmk {
namespace IndyFramework {

// @@protoc_insertion_point(namespace_scope)
}  // namespace IndyFramework
}  // namespace Nrmk
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
