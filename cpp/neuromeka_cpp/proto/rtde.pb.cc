// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtde.proto

#include "rtde.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Nrmk {
namespace IndyFramework {
}  // namespace IndyFramework
}  // namespace Nrmk
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_rtde_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_rtde_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rtde_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_rtde_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_rtde_2eproto[] =
  "\n\nrtde.proto\022\022Nrmk.IndyFramework\032\017rtde_m"
  "sgs.proto\032\021common_msgs.proto2\273\006\n\016RTDataE"
  "xchange\022L\n\rGetMotionData\022\031.Nrmk.IndyFram"
  "ework.Empty\032\036.Nrmk.IndyFramework.MotionD"
  "ata\"\000\022N\n\016GetControlData\022\031.Nrmk.IndyFrame"
  "work.Empty\032\037.Nrmk.IndyFramework.ControlD"
  "ata\"\000\022P\n\017GetControlState\022\031.Nrmk.IndyFram"
  "ework.Empty\032 .Nrmk.IndyFramework.Control"
  "Data2\"\000\022D\n\tGetIOData\022\031.Nrmk.IndyFramewor"
  "k.Empty\032\032.Nrmk.IndyFramework.IOData\"\000\022J\n"
  "\014GetServoData\022\031.Nrmk.IndyFramework.Empty"
  "\032\035.Nrmk.IndyFramework.ServoData\"\000\022R\n\020Get"
  "ViolationData\022\031.Nrmk.IndyFramework.Empty"
  "\032!.Nrmk.IndyFramework.ViolationData\"\000\022b\n"
  "\030GetViolationMessageQueue\022\031.Nrmk.IndyFra"
  "mework.Empty\032).Nrmk.IndyFramework.Violat"
  "ionMessageQueue\"\000\022N\n\016GetProgramData\022\031.Nr"
  "mk.IndyFramework.Empty\032\037.Nrmk.IndyFramew"
  "ork.ProgramData\"\000\022J\n\014GetStopState\022\031.Nrmk"
  ".IndyFramework.Empty\032\035.Nrmk.IndyFramewor"
  "k.StopState\"\000\022S\n\014TestFunction\022\037.Nrmk.Ind"
  "yFramework.TestRequest\032 .Nrmk.IndyFramew"
  "ork.TestResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_rtde_2eproto_deps[2] = {
  &::descriptor_table_common_5fmsgs_2eproto,
  &::descriptor_table_rtde_5fmsgs_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_rtde_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rtde_2eproto_once;
static bool descriptor_table_rtde_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rtde_2eproto = {
  &descriptor_table_rtde_2eproto_initialized, descriptor_table_protodef_rtde_2eproto, "rtde.proto", 906,
  &descriptor_table_rtde_2eproto_once, descriptor_table_rtde_2eproto_sccs, descriptor_table_rtde_2eproto_deps, 0, 2,
  schemas, file_default_instances, TableStruct_rtde_2eproto::offsets,
  file_level_metadata_rtde_2eproto, 0, file_level_enum_descriptors_rtde_2eproto, file_level_service_descriptors_rtde_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rtde_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_rtde_2eproto), true);
namespace Nrmk {
namespace IndyFramework {

// @@protoc_insertion_point(namespace_scope)
}  // namespace IndyFramework
}  // namespace Nrmk
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
